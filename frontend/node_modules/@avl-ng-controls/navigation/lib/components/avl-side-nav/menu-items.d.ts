export declare class Paragraph {
    /**
     * Id/fragment of the paragraph header in the page.
     */
    readonly id: string;
    /**
     * Label of the paragraph shown in the side nav.
     */
    readonly label: string;
    constructor(
    /**
     * Id/fragment of the paragraph header in the page.
     */
    id: string, 
    /**
     * Label of the paragraph shown in the side nav.
     */
    label: string);
}
export declare class Params {
    /**
     * Name of the query parameter.
     */
    readonly name: string;
    /**
     * Value of the query parameter.
     */
    readonly value: string;
    constructor(
    /**
     * Name of the query parameter.
     */
    name: string, 
    /**
     * Value of the query parameter.
     */
    value: string);
}
export declare class Page {
    /**
     * Label of the page shown in the side nav.
     */
    readonly label: string;
    /**
     * Route to the page.
     */
    readonly route: string;
    /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
    readonly paragraphs?: Paragraph[];
    /**
     * Query parameters of the page.
     */
    readonly params?: Params[];
    readonly expanded?: boolean;
    constructor(
    /**
     * Label of the page shown in the side nav.
     */
    label: string, 
    /**
     * Route to the page.
     */
    route: string, 
    /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
    paragraphs?: Paragraph[], 
    /**
     * Query parameters of the page.
     */
    params?: Params[], expanded?: boolean);
}
export declare class TopLevelPage extends Page {
    /**
     * Material icon name for the icon to show next to the label.
     * https://material.io/tools/icons
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    readonly icon?: string;
    /**
     * URL to the icon image to show next to the label.
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    readonly iconUrl?: string;
    /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
    readonly paragraphs?: Paragraph[];
    /**
     * Query parameters of the page.
     */
    readonly params?: Params[];
    /**
     * Sub pages of the top level page.
     */
    readonly subItems?: Page[];
    constructor(
    /**
     * Label of the page shown in the side nav.
     */
    label: string, 
    /**
     * Route to the page.
     */
    route: string, 
    /**
     * Material icon name for the icon to show next to the label.
     * https://material.io/tools/icons
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    icon?: string, 
    /**
     * URL to the icon image to show next to the label.
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    iconUrl?: string, 
    /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
    paragraphs?: Paragraph[], 
    /**
     * Query parameters of the page.
     */
    params?: Params[], 
    /**
     * Sub pages of the top level page.
     */
    subItems?: Page[], expanded?: boolean);
}
export declare class Group extends Page {
    /**
     * Material icon name for the icon to show next to the label.
     * https://material.io/tools/icons
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    readonly icon?: string;
    /**
     * URL to the icon image to show next to the label.
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    readonly iconUrl?: string;
    /**
     * Sub pages of the group.
     */
    readonly subItems?: Page[];
    constructor(
    /**
     * Label of the Group shown in the side nav.
     */
    label: string, 
    /**
     * Material icon name for the icon to show next to the label.
     * https://material.io/tools/icons
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    icon?: string, 
    /**
     * URL to the icon image to show next to the label.
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    iconUrl?: string, 
    /**
     * Sub pages of the group.
     */
    subItems?: Page[], 
    /**
     * Route to the page.
     */
    route?: string, 
    /**
 * Paragraphs of the long page.
 * It's a regular page if no paragraphs are defined.
 */
    paragraphs?: Paragraph[], params?: Params[], expanded?: boolean);
}
