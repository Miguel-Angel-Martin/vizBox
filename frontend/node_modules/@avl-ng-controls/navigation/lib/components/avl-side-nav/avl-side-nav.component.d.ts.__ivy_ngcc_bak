import { EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';
import { TopLevelPage, Group, Page, Params } from './menu-items';
import { Router, ActivatedRoute } from '@angular/router';
import '@avl-controls/core/dist/avl-icon/avl-icon';
export declare class AvlSideNavComponent implements OnDestroy, OnChanges {
    private router;
    activeRoute: ActivatedRoute;
    /**
     *
     * ### Styling
     * The following custom properties are available for styling:
     *
     * Custom property                          | Description                                                                                           | Default
     * :----------------------------------------|:------------------------------------------------------------------------------------------------------|:---------
     * `--avl-app-bar-height`                   | Height of the toolbar. Needed so that the avl-side-nav can be correctly positioned below the toolbar. | `56px`
     * `--avl-side-nav-product-color`           | Used for selected color                                                                               | `--avl-product-selected`
     * `--avl-side-nav-product-color-hover`     | Used for hover color.                                                                                 | `--avl-product-hover`
     * `--avl-side-nav-text-color`              | Color of the text                                                                                     | `--avl-emphasis-high-color`
     * `--avl-side-nav-icons-color`             | Color of icons                                                                                        | `--avl-emphasis-medium-color`
     * `--avl-side-nav-background-color`        | Background color of the avl-side-nav                                                                  | `--avl-side-nav-color`
     * `--avl-side-nav-open-width`              | Width of the avl-side-nav in the open state.                                                          | `256px`
     *
     */
    _styling: any;
    private openValue;
    /**
     * Can be set to open or close the side nav.
     * Returns the current state of the side nav.
     */
    get open(): boolean;
    /**
     * Items that are shown in the side nav.
     */
    menuItems: Array<TopLevelPage | Group>;
    /**
     * Boolean to toggle responsive features
     * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout
     */
    responsive: boolean;
    /**
     * Boolean to set only mobile features on
     * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout
     */
    mobile: boolean;
    /**
     * Emitted when the open property changes.
     */
    openChange: EventEmitter<boolean>;
    set open(val: boolean);
    private subscription;
    /**
     * @hidden
     */
    selectedGroup: Group;
    /**
     * @hidden
     */
    selectedPage: Page;
    /**
     * @hidden
     */
    selectedParagraph: string;
    private selectedParagraphIndex;
    private params;
    constructor(router: Router, activeRoute: ActivatedRoute);
    /**
     * @hidden
     */
    toggleOpen(): void;
    private manuallyOpened;
    /**
     * @hidden
     */
    arrowToggleOpen(): void;
    /**
     * @hidden
     */
    mobileClose(): void;
    /**
     * @hidden
     */
    groupClicked(item: any): void;
    /**
     * @hidden
     */
    getScrubberStyle(): {
        height: string;
        top: string;
    };
    /**
    * @hidden
    */
    trimSlash(str: string): string;
    private selectItems;
    /**
    * @hidden
    */
    ngOnChanges(changes: SimpleChanges): void;
    /**
    * @hidden
    */
    ngOnDestroy(): void;
    /**
    * @hidden
    */
    getParams(params: Params[]): {};
    /**
    * @hidden
    */
    getUrlParams(params: Params[]): string;
}
