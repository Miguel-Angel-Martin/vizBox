var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Output, EventEmitter, Input, HostBinding } from '@angular/core';
import { trigger, style, animate, transition } from '@angular/animations';
import { Router, ActivationEnd, ActivatedRoute } from '@angular/router';
import { filter } from 'rxjs/operators';
import '@avl-controls/core/dist/avl-icon/avl-icon';
var rowHeightPx = 48;
var AvlSideNavComponent = /** @class */ (function () {
    function AvlSideNavComponent(router, activeRoute) {
        var _this = this;
        this.router = router;
        this.activeRoute = activeRoute;
        this.openValue = false;
        /**
         * Emitted when the open property changes.
         */
        this.openChange = new EventEmitter();
        activeRoute.queryParams.subscribe(function (p) {
            _this.params = p;
        });
        this.subscription = this.router.events
            .pipe(filter(function (event) { return event instanceof ActivationEnd; }))
            .subscribe(function (event) {
            _this.selectItems();
        });
    }
    Object.defineProperty(AvlSideNavComponent.prototype, "open", {
        /**
         * Can be set to open or close the side nav.
         * Returns the current state of the side nav.
         */
        get: function () {
            return this.openValue;
        },
        set: function (val) {
            this.openValue = val;
            this.openChange.next(val);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    AvlSideNavComponent.prototype.toggleOpen = function () {
        if (!this.manuallyOpened) {
            this.open = !this.open;
        }
    };
    /**
     * @hidden
     */
    AvlSideNavComponent.prototype.arrowToggleOpen = function () {
        this.manuallyOpened = !this.open;
        this.open = !this.open;
    };
    /**
     * @hidden
     */
    AvlSideNavComponent.prototype.mobileClose = function () {
        if (Math.max(document.documentElement.clientWidth, window.innerWidth) < 960) {
            this.open = false;
        }
    };
    /**
     * @hidden
     */
    AvlSideNavComponent.prototype.groupClicked = function (item) {
        if (!this.open) {
            this.open = true;
            if (!item.expanded) {
                item.expanded = true;
            }
        }
        else {
            item.expanded = !item.expanded;
        }
    };
    /**
     * @hidden
     */
    AvlSideNavComponent.prototype.getScrubberStyle = function () {
        return {
            height: this.selectedParagraph ? '14px' : '0px',
            top: this.selectedParagraphIndex * rowHeightPx + "px"
        };
    };
    /**
    * @hidden
    */
    AvlSideNavComponent.prototype.trimSlash = function (str) {
        if (str[0] === '/') {
            str = str.substring(1, str.length);
        }
        if (str[str.length - 1] === '/') {
            str = str.substring(0, str.length - 1);
        }
        return str;
    };
    AvlSideNavComponent.prototype.selectItems = function () {
        if (!this.menuItems) {
            return;
        }
        var fragment = this.router.parseUrl(this.router.url).fragment;
        var url = this.router.url.split('#')[0];
        var queue = this.menuItems.slice();
        var currentGroup;
        this.selectedGroup = undefined;
        this.selectedPage = undefined;
        this.selectedParagraph = undefined;
        var fallbackSelectedPage;
        var _loop_1 = function () {
            var item = queue.pop();
            if (isGroup(item)) {
                currentGroup = item;
                item.subItems.map(function (subitem) { queue.push(subitem); });
            }
            else {
                if (fallbackSelectedPage == null && this_1.trimSlash(url).startsWith(this_1.trimSlash(item.route))) {
                    fallbackSelectedPage = item;
                }
                if (item.route && this_1.trimSlash(url).endsWith(this_1.trimSlash(item.route + this_1.getUrlParams(item.params)))) {
                    if (this_1.selectedPage && this_1.selectedPage.route && this_1.selectedPage.route.length > item.route.length) {
                        return "continue";
                    }
                    if (item.params && item.params.length > 0) {
                        var object_1 = new Object();
                        item.params.forEach(function (i) {
                            object_1[i.name] = i.value;
                        });
                        if (JSON.stringify(this_1.params) === JSON.stringify(object_1)) {
                            this_1.selectedPage = item;
                        }
                    }
                    else {
                        this_1.selectedPage = item;
                    }
                    if (isTopLevelPage(item)) {
                        this_1.selectedGroup = undefined;
                    }
                    else {
                        this_1.selectedGroup = currentGroup;
                    }
                    if (item.paragraphs && item.paragraphs.length > 0) {
                        var paragraphIndex = item.paragraphs.findIndex(function (p) { return p.id === fragment; });
                        if (fragment && item.paragraphs && paragraphIndex !== -1) {
                            this_1.selectedParagraph = fragment;
                            this_1.selectedParagraphIndex = paragraphIndex;
                        }
                    }
                }
            }
        };
        var this_1 = this;
        while (queue.length) {
            _loop_1();
        }
        if (this.selectedPage == null) {
            this.selectedPage = fallbackSelectedPage;
        }
    };
    /**
    * @hidden
    */
    AvlSideNavComponent.prototype.ngOnChanges = function (changes) {
        if (changes['menuItems']) {
            this.selectItems();
        }
    };
    /**
    * @hidden
    */
    AvlSideNavComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    /**
    * @hidden
    */
    AvlSideNavComponent.prototype.getParams = function (params) {
        if (params && params.length > 0) {
            var object_2 = {};
            params.forEach(function (param) {
                object_2[param.name] = param.value;
            });
            return object_2;
        }
        else {
            return null;
        }
    };
    /**
    * @hidden
    */
    AvlSideNavComponent.prototype.getUrlParams = function (params) {
        if (params && params.length > 0) {
            var url_1 = '?';
            params.forEach(function (param) {
                url_1 += param.name + '=' + param.value + '&';
            });
            return url_1.slice(0, -1);
        }
        else {
            return '';
        }
    };
    AvlSideNavComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute }
    ]; };
    __decorate([
        Input(),
        HostBinding('class.open'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], AvlSideNavComponent.prototype, "open", null);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], AvlSideNavComponent.prototype, "menuItems", void 0);
    __decorate([
        Input(),
        HostBinding('class.responsive'),
        __metadata("design:type", Boolean)
    ], AvlSideNavComponent.prototype, "responsive", void 0);
    __decorate([
        Input(),
        HostBinding('class.mobile'),
        __metadata("design:type", Boolean)
    ], AvlSideNavComponent.prototype, "mobile", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlSideNavComponent.prototype, "openChange", void 0);
    AvlSideNavComponent = __decorate([
        Component({
            selector: 'avl-side-nav',
            template: "<div #outerContainer [class.closed]=\"!open\" class=\"outer-container toolbar-spacing\">\r\n  <div class=\"item-scroll\">\r\n    <div #innerContainer class=\"inner-container\">\r\n      <ng-template ngFor let-item [ngForOf]=\"menuItems\">\r\n        <!-- Top level page -->\r\n        <a *ngIf=\"!item.subItems\" tabindex=\"0\" class=\"item top-level-page\" routerLink={{item.route}} [queryParams]=\"getParams(item.params)\" [class.selected]=\"item === selectedPage\" (click)=\"mobileClose()\">\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{item.icon}}\"></avl-icon>\r\n            <img *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\">\r\n          </div>\r\n          <div class=\"label-div\">{{item.label}}</div>\r\n          <div class=\"item-overlay\"></div>\r\n        </a>\r\n        <!-- Paragraphs of a top level page -->\r\n        <div class=\"child-container\" *ngIf=\"open && item.paragraphs && item.paragraphs.length > 0 && item === selectedPage\" [@expandCollapse]>\r\n          <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n          <div>\r\n            <a *ngFor=\"let paragraph of item.paragraphs\" class=\"item top-level-paragraph\"\r\n              href=\"{{trimSlash(item.route + getUrlParams(item.params) + '#' + paragraph.id)}}\" [class.selected]=\"paragraph.id === selectedParagraph\" (click)=\"mobileClose()\">\r\n              <div class=\"label-div\">{{paragraph.label}}</div>\r\n            </a>\r\n          </div>\r\n          <div class=\"page-progress-bar\">\r\n            <div class=\"page-progress-bar-background\"></div>\r\n            <div class=\"page-progress-bar-scrubber\" [ngStyle]=\"getScrubberStyle()\"></div>\r\n          </div>\r\n        </div>\r\n        <!-- Group -->\r\n        <div *ngIf=\"item.subItems\" tabindex=\"0\" class=\"item group\" [class.expanded]=\"item.expanded\" (click)=\"groupClicked(item)\"\r\n          [class.selected]=\"!open && item === selectedGroup\">\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{item.icon}}\"></avl-icon>\r\n            <img *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\">\r\n          </div>\r\n          <div class=\"label-div group\">{{item.label}}</div>\r\n          <avl-icon class=\"group-arrow\" icon=\"arrow-drop-down\"></avl-icon>\r\n          <div class=\"item-overlay\"></div>\r\n        </div>\r\n        <!-- Subpages -->\r\n        <div class=\"child-container\" *ngIf=\"open && item.subItems && item.subItems.length > 0 && item.expanded\" [@expandCollapse] (click)=\"toggleOpen()\">\r\n          <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n          <div>\r\n            <ng-template ngFor let-subItem [ngForOf]=\"item.subItems\">\r\n              <a class=\"item subpage\" routerLink={{subItem.route}} [queryParams]=\"getParams(subItem.params)\" [class.selected]=\"subItem === selectedPage\" (click)=\"mobileClose()\">\r\n                <div class=\"label-div\">{{subItem.label}}</div>\r\n                <div class=\"item-overlay\"></div>\r\n              </a>\r\n              <!-- Paragraphs of a subpage -->\r\n              <div class=\"child-container\" *ngIf=\"subItem.paragraphs && subItem.paragraphs.length > 0 && subItem === selectedPage\" [@expandCollapse]>\r\n                <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n                <div>\r\n                  <a *ngFor=\"let paragraph of subItem.paragraphs\" class=\"item subpage-paragraph\" href=\"{{subItem.route}}{{getUrlParams(item.params)}}#{{paragraph.id}}\"\r\n                    [class.selected]=\"paragraph.id === selectedParagraph\" (click)=\"mobileClose()\">\r\n                    <div class=\"label-div\">{{paragraph.label}}</div>\r\n                  </a>\r\n                </div>\r\n                <div class=\"page-progress-bar\">\r\n                  <div class=\"page-progress-bar-background\"></div>\r\n                  <div class=\"page-progress-bar-scrubber\" [ngStyle]=\"getScrubberStyle()\"></div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div class=\"arrow-spacer\"></div>\r\n\r\n  <svg (click)=\"arrowToggleOpen()\" [class.closed]=\"!open\" class=\"open-close-arrow\"  id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <g transform=\"translate(405 102) rotate(-180)\">\r\n      <path d=\"M-972.955,492l6.774-6,1.581,1.4-5.194,4.6,5.194,4.6-1.581,1.4Zm-5.645,0,6.773-6,1.581,1.4-5.193,4.6,5.193,4.6-1.581,1.4Z\" transform=\"translate(1364.6 -402)\"/>\r\n    </g>\r\n  </svg>\r\n\r\n</div>\r\n<div class=\"scrim\" (click)=\"open = false;\"></div>",
            animations: [
                trigger('expandCollapse', [
                    transition(':enter', [
                        style({ 'max-height': '0px' }),
                        animate('225ms ease-in', style({ transform: 'translateY(0%)', 'max-height': '200px' }))
                    ]),
                    transition(':leave', [
                        style({ 'max-height': '200px' }),
                        animate('180ms ease-in', style({ 'max-height': '0px' }))
                    ])
                ])
            ],
            styles: [":host{font-family:var(--avl-font-family);height:100%;display:block;--text-color:var(--avl-side-nav-text-color, var(--avl-emphasis-high-color));--icons-color:var(--avl-side-nav-icons-color, var(--avl-emphasis-medium-color));--background-color:var(--avl-side-nav-background-color, var(--avl-side-nav-color));--item-icon-width:72px;--side-nav-mini-width:var(--item-icon-width);--side-nav-open-width:var(--avl-side-nav-open-width, 256px);--item-height:48px;box-shadow:var(--avl-box-shadow-12dp);z-index:3}.outer-container{position:relative;box-sizing:content-box;height:calc(100% - var(--avl-app-bar-height,56px));background-color:var(--background-color);width:var(--side-nav-open-width);overflow:hidden}.inner-container{width:var(--side-nav-open-width)}.toolbar-spacing{padding-top:var(--avl-app-bar-height,56px)}.open-close-arrow{position:absolute;bottom:12px;right:24px;font-size:24px;fill:var(--icons-color);cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:24px}.open-close-arrow:not(.closed){transform:scale(-1,1)}.outer-container.closed{width:var(--side-nav-mini-width);-webkit-animation-name:closing;animation-name:closing;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1);transition-duration:195ms}.arrow-spacer{height:48px}.item-scroll{height:calc(100% - 48px);overflow-y:auto;overflow-x:hidden}.item{display:flex;align-items:center;cursor:pointer;color:var(--text-color);height:var(--item-height);position:relative;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;isolation:isolate;outline:0;white-space:pre-wrap;padding-right:24px}.item:active{color:var(--text-color)}.top-level-paragraph{padding-left:88px}.subpage{padding-left:72px}.subpage-paragraph{padding-left:88px}.label-div{z-index:10;font-family:Roboto;max-width:160px;overflow:hidden;text-overflow:ellipsis;max-height:40px;word-break:break-word;-webkit-box-orient:vertical;display:-webkit-box;-webkit-line-clamp:2}.group.expanded>.label-div.group{font-family:Roboto-Medium}.label-div.group{max-width:calc(100% - 112px)}.image-div{color:var(--avl-emphasis-medium-color);display:flex;align-items:center;justify-content:center;width:var(--item-icon-width);height:var(--item-height);margin-right:0;z-index:9}img{height:auto;width:auto;max-height:24px;max-width:24px}avl-icon{margin-bottom:0;font-size:24px;color:var(--avl-emphasis-medium-color)}.group-arrow{position:absolute;right:24px}.group.expanded>.group-arrow{transform:rotate(180deg)}.item-overlay{box-sizing:border-box;position:absolute;height:100%;width:100%;left:0;z-index:0}.item.selected>.item-overlay{background-color:var(--avl-side-nav-product-color,var(--avl-product-focus-color))}.item:hover:not(.selected)>.item-overlay{background-color:var(--avl-side-nav-product-color-hover,var(--avl-product-hover-color))}.item.selected{font-weight:500}.child-container{position:relative;display:flex;overflow:hidden;flex-direction:column-reverse}.page-progress-bar{position:absolute;left:72px;top:11px;bottom:11px;width:2px;overflow:hidden}.page-progress-bar-background{background-color:var(--text-color);opacity:.2;width:100%;height:100%}.page-progress-bar-scrubber{position:absolute;width:100%;background-color:var(--text-color);opacity:1;transition:height .2s,top .2s;margin-top:6px;margin-bottom:2px}@-webkit-keyframes closing{from{width:var(--side-nav-open-width)}to{width:var(--side-nav-mini-width)}}@keyframes closing{from{width:var(--side-nav-open-width)}to{width:var(--side-nav-mini-width)}}@-webkit-keyframes opening{from{width:var(--side-nav-mini-width)}to{width:var(--side-nav-open-width)}}@keyframes opening{from{width:var(--side-nav-mini-width)}to{width:var(--side-nav-open-width)}}.outer-container:not(.closed){-webkit-animation-name:opening;animation-name:opening;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1);transition-duration:225ms}@media (max-width:960px){:host(.responsive){position:absolute;--side-nav-mini-width:0;transition:box-shadow 250ms}:host(.responsive[slot=left-side]){left:0}:host(.responsive[slot=right-side]){right:0}:host(.responsive:not(.open)){box-shadow:none}:host(.responsive) .item-scroll{height:100%}:host(.responsive) .open-close-arrow{display:none}:host(.responsive) .arrow-spacer{display:none;visibility:hidden}:host(.responsive) .scrim{transition:250ms;transition-duration:250px}:host(.responsive[slot=left-side]:not(.open)) .scrim{visibility:hidden;left:0}:host(.responsive.open) .scrim{background-color:var(--avl-scrim-color);position:fixed;visibility:visible;top:0;width:100%;height:100%}:host(.responsive[slot=left-side].open) .scrim{left:var(--side-nav-open-width)}:host(.responsive[slot=right-side].open) .scrim{right:var(--side-nav-open-width)}:host(.responsive[slot=right-side]:not(.open)) .scrim{visibility:hidden;right:0}}:host(.mobile){position:absolute;--side-nav-mini-width:0;transition:box-shadow 250ms}:host(.mobile[slot=left-side]){left:0}:host(.mobile[slot=right-side]){right:0}:host(.mobile:not(.open)){box-shadow:none}:host(.mobile) .item-scroll{height:100%}:host(.mobile) .open-close-arrow{display:none}:host(.mobile) .arrow-spacer{display:none;visibility:hidden}:host(.mobile) .scrim{transition:250ms;transition-duration:250px}:host(.mobile[slot=left-side]:not(.open)) .scrim{visibility:hidden;left:0}:host(.mobile.open) .scrim{background-color:var(--avl-scrim-color);position:fixed;visibility:visible;top:0;width:100%;height:100%}:host(.mobile[slot=left-side].open) .scrim{left:var(--side-nav-open-width)}:host(.mobile[slot=right-side].open) .scrim{right:var(--side-nav-open-width)}:host(.mobile[slot=right-side]:not(.open)) .scrim{visibility:hidden;right:0}"]
        }),
        __metadata("design:paramtypes", [Router,
            ActivatedRoute])
    ], AvlSideNavComponent);
    return AvlSideNavComponent;
}());
export { AvlSideNavComponent };
/**
* @hidden
*/
function isGroup(item) {
    return item.subItems !== undefined && item.subItems.length > 0;
}
/**
* @hidden
*/
function isTopLevelPage(item) {
    return !isGroup(item) && (item.icon !== undefined || item.iconUrl !== undefined);
}
//# sourceMappingURL=data:application/json;base64,