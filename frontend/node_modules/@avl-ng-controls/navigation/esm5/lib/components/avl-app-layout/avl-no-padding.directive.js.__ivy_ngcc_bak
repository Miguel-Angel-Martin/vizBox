var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { OnInit, Directive, OnDestroy, ElementRef } from '@angular/core';
var AvlNoPaddingDirective = /** @class */ (function () {
    function AvlNoPaddingDirective(elementRef) {
        this.elementRef = elementRef;
    }
    /** @hidden */
    AvlNoPaddingDirective.prototype.ngOnInit = function () {
        var appLayout = this.findAppLayout();
        if (appLayout) {
            appLayout.setAttribute('noPadding', '');
        }
    };
    /** @hidden */
    AvlNoPaddingDirective.prototype.ngOnDestroy = function () {
        var appLayout = this.findAppLayout();
        if (appLayout) {
            appLayout.removeAttribute('noPadding');
        }
    };
    AvlNoPaddingDirective.prototype.findAppLayout = function () {
        var element = this.elementRef.nativeElement;
        while (element) {
            if (element.tagName.toLowerCase() == 'avl-app-layout') {
                return element;
            }
            element = element.parentElement;
        }
    };
    AvlNoPaddingDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    AvlNoPaddingDirective = __decorate([
        Directive({
            selector: '[avl-no-padding]'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], AvlNoPaddingDirective);
    return AvlNoPaddingDirective;
}());
export { AvlNoPaddingDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLW5vLXBhZGRpbmcuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGF2bC1uZy1jb250cm9scy9uYXZpZ2F0aW9uLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvYXZsLWFwcC1sYXlvdXQvYXZsLW5vLXBhZGRpbmcuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFLekU7SUFFRSwrQkFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUFJLENBQUM7SUFFL0MsY0FBYztJQUNkLHdDQUFRLEdBQVI7UUFDRSxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdkMsSUFBSSxTQUFTLEVBQUU7WUFDYixTQUFTLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7SUFFRCxjQUFjO0lBQ2QsMkNBQVcsR0FBWDtRQUNFLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QyxJQUFJLFNBQVMsRUFBRTtZQUNiLFNBQVMsQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDeEM7SUFDSCxDQUFDO0lBRU8sNkNBQWEsR0FBckI7UUFDRSxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQTRCLENBQUM7UUFDM0QsT0FBTyxPQUFPLEVBQUU7WUFDZCxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQUksZ0JBQWdCLEVBQUU7Z0JBQ3JELE9BQU8sT0FBTyxDQUFDO2FBQ2hCO1lBQ0QsT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7U0FDakM7SUFDSCxDQUFDOztnQkExQitCLFVBQVU7O0lBRi9CLHFCQUFxQjtRQUhqQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0JBQWtCO1NBQzdCLENBQUM7eUNBR2dDLFVBQVU7T0FGL0IscUJBQXFCLENBOEJqQztJQUFELDRCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0E5QlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBEaXJlY3RpdmUsIE9uRGVzdHJveSwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbYXZsLW5vLXBhZGRpbmddJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsTm9QYWRkaW5nRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHsgfVxyXG5cclxuICAvKiogQGhpZGRlbiAqL1xyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgY29uc3QgYXBwTGF5b3V0ID0gdGhpcy5maW5kQXBwTGF5b3V0KCk7XHJcbiAgICBpZiAoYXBwTGF5b3V0KSB7XHJcbiAgICAgIGFwcExheW91dC5zZXRBdHRyaWJ1dGUoJ25vUGFkZGluZycsICcnKTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGNvbnN0IGFwcExheW91dCA9IHRoaXMuZmluZEFwcExheW91dCgpO1xyXG4gICAgaWYgKGFwcExheW91dCkge1xyXG4gICAgICBhcHBMYXlvdXQucmVtb3ZlQXR0cmlidXRlKCdub1BhZGRpbmcnKTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgcHJpdmF0ZSBmaW5kQXBwTGF5b3V0KCkge1xyXG4gICAgbGV0IGVsZW1lbnQgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudDtcclxuICAgIHdoaWxlIChlbGVtZW50KSB7XHJcbiAgICAgIGlmIChlbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAnYXZsLWFwcC1sYXlvdXQnKSB7XHJcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XHJcbiAgICAgIH1cclxuICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==