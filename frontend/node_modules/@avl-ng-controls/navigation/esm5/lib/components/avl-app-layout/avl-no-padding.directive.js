import * as ɵngcc0 from '@angular/core';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { OnInit, Directive, OnDestroy, ElementRef } from '@angular/core';
var AvlNoPaddingDirective = /** @class */ (function () {
    function AvlNoPaddingDirective(elementRef) {
        this.elementRef = elementRef;
    }
    /** @hidden */
    AvlNoPaddingDirective.prototype.ngOnInit = function () {
        var appLayout = this.findAppLayout();
        if (appLayout) {
            appLayout.setAttribute('noPadding', '');
        }
    };
    /** @hidden */
    AvlNoPaddingDirective.prototype.ngOnDestroy = function () {
        var appLayout = this.findAppLayout();
        if (appLayout) {
            appLayout.removeAttribute('noPadding');
        }
    };
    AvlNoPaddingDirective.prototype.findAppLayout = function () {
        var element = this.elementRef.nativeElement;
        while (element) {
            if (element.tagName.toLowerCase() == 'avl-app-layout') {
                return element;
            }
            element = element.parentElement;
        }
    };
    AvlNoPaddingDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    AvlNoPaddingDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], AvlNoPaddingDirective);
AvlNoPaddingDirective.ɵfac = function AvlNoPaddingDirective_Factory(t) { return new (t || AvlNoPaddingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlNoPaddingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlNoPaddingDirective, selectors: [["", "avl-no-padding", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlNoPaddingDirective, [{
        type: Directive,
        args: [{
                selector: '[avl-no-padding]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return AvlNoPaddingDirective;
}());
export { AvlNoPaddingDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLW5vLXBhZGRpbmcuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1uZy1jb250cm9scy9uYXZpZ2F0aW9uL2xpYi9jb21wb25lbnRzL2F2bC1hcHAtbGF5b3V0L2F2bC1uby1wYWRkaW5nLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUt6RTtBQUF5RCxJQUV2RCwrQkFBb0IsVUFBc0I7QUFBSSxRQUExQixlQUFVLEdBQVYsVUFBVSxDQUFZO0FBQUMsSUFBRyxDQUFDO0FBQ2pELElBQ0UsY0FBYztBQUNoQixJQUFFLHdDQUFRLEdBQVI7QUFDRCxRQUFHLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUMzQyxRQUFJLElBQUksU0FBUyxFQUFFO0FBQ25CLFlBQU0sU0FBUyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDOUMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNGLElBQ0MsY0FBYztBQUNoQixJQUFFLDJDQUFXLEdBQVg7QUFBYyxRQUNaLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUMzQyxRQUFJLElBQUksU0FBUyxFQUFFO0FBQ25CLFlBQU0sU0FBUyxDQUFDLGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM3QyxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0YsSUFDUyw2Q0FBYSxHQUFyQjtBQUFjLFFBQ1osSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUE0QixDQUFDO0FBQy9ELFFBQUksT0FBTyxPQUFPLEVBQUU7QUFDcEIsWUFBTSxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQUksZ0JBQWdCLEVBQUU7QUFDN0QsZ0JBQVEsT0FBTyxPQUFPLENBQUM7QUFDdkIsYUFBTztBQUNQLFlBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDdEMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUVIO0FBQ2dFLGdCQTdCOUIsVUFBVTtBQUFHO0FBRXpDLElBSk8scUJBQXFCLHdCQUhqQyxTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsM0NBRUosa0NBRTBCLFVBQVU7Y0FKZCxVQUM3QixDQUFDLHpCQUc2QyxPQUZsQyxxQkFBcUIsQ0E4QmpDOzs7Ozs7OzsyRUFDRDtBQUFDLElBREQsNEJBQUM7QUFDQSxDQURBLEFBOUJELElBOEJDOztBQW5DQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBMUJBLEFBQUEsQUFGQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBR0EsQUFBQSxBQUZBLEFBQUEsQUE4QkEsQUFBQSxBQUFBLEFBQUEsQUE5QkEsQUE4QkEsQUE5QkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRGlyZWN0aXZlLCBPbkRlc3Ryb3ksIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2F2bC1uby1wYWRkaW5nXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bE5vUGFkZGluZ0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7IH1cclxuXHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGNvbnN0IGFwcExheW91dCA9IHRoaXMuZmluZEFwcExheW91dCgpO1xyXG4gICAgaWYgKGFwcExheW91dCkge1xyXG4gICAgICBhcHBMYXlvdXQuc2V0QXR0cmlidXRlKCdub1BhZGRpbmcnLCAnJyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICBjb25zdCBhcHBMYXlvdXQgPSB0aGlzLmZpbmRBcHBMYXlvdXQoKTtcclxuICAgIGlmIChhcHBMYXlvdXQpIHtcclxuICAgICAgYXBwTGF5b3V0LnJlbW92ZUF0dHJpYnV0ZSgnbm9QYWRkaW5nJyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHByaXZhdGUgZmluZEFwcExheW91dCgpIHtcclxuICAgIGxldCBlbGVtZW50ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICB3aGlsZSAoZWxlbWVudCkge1xyXG4gICAgICBpZiAoZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ2F2bC1hcHAtbGF5b3V0Jykge1xyXG4gICAgICAgIHJldHVybiBlbGVtZW50O1xyXG4gICAgICB9XHJcbiAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=