import * as ɵngcc0 from '@angular/core';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, Input, ElementRef } from '@angular/core';
let AvlParagraphDirective = class AvlParagraphDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
};
AvlParagraphDirective.ɵfac = function AvlParagraphDirective_Factory(t) { return new (t || AvlParagraphDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlParagraphDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlParagraphDirective, selectors: [["", "avl-paragraph", ""]], inputs: { paragraphName: ["avl-paragraph", "paragraphName"] } });
AvlParagraphDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input('avl-paragraph'),
    __metadata("design:type", String)
], AvlParagraphDirective.prototype, "paragraphName", void 0);
AvlParagraphDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], AvlParagraphDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlParagraphDirective, [{
        type: Directive,
        args: [{
                selector: '[avl-paragraph]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { paragraphName: [{
            type: Input,
            args: ['avl-paragraph']
        }] }); })();
export { AvlParagraphDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXBhcmFncmFwaC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9AYXZsLW5nLWNvbnRyb2xzL25hdmlnYXRpb24vbGliL2NvbXBvbmVudHMvYXZsLWxvbmctcGFnZS9hdmwtcGFyYWdyYXBoLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSzdELElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0FBQ2xDLElBR0UsWUFBbUIsVUFBc0I7QUFBSSxRQUExQixlQUFVLEdBQVYsVUFBVSxDQUFZO0FBQUMsSUFBRyxDQUFDO0FBQ2hELENBQ0M7OzhMQUFBO0FBQ0Q7QUFBK0MsWUFIZCxVQUFVO0FBQUc7QUFGcEI7QUFBYSxJQUFwQyxLQUFLLENBQUMsZUFBZSxDQUFDO0FBQUU7QUFFbkIsNERBRitDO0FBRjFDLHFCQUFxQixvQkFIakMsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFLG5DQUVSLGtDQUk2QixVQUFVO0tBTmQsTUFDNUIsQ0FBQyxaQUs0QyxHQUpqQyxxQkFBcUIsQ0FNakM7Ozs7Ozs7OztvQkFDRDs7QUFaQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFGQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFGQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBS0EsQUFBQSxBQUpBLEFBQUEsQUFNQSxBQU5BLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1thdmwtcGFyYWdyYXBoXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bFBhcmFncmFwaERpcmVjdGl2ZSB7XHJcblxyXG4gIEBJbnB1dCgnYXZsLXBhcmFncmFwaCcpIHB1YmxpYyBwYXJhZ3JhcGhOYW1lOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7IH1cclxuXHJcbn1cclxuIl19