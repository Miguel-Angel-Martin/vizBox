var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, Input, ElementRef } from '@angular/core';
let AvlParagraphDirective = class AvlParagraphDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
};
AvlParagraphDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input('avl-paragraph'),
    __metadata("design:type", String)
], AvlParagraphDirective.prototype, "paragraphName", void 0);
AvlParagraphDirective = __decorate([
    Directive({
        selector: '[avl-paragraph]'
    }),
    __metadata("design:paramtypes", [ElementRef])
], AvlParagraphDirective);
export { AvlParagraphDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXBhcmFncmFwaC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYXZsLW5nLWNvbnRyb2xzL25hdmlnYXRpb24vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9hdmwtbG9uZy1wYWdlL2F2bC1wYXJhZ3JhcGguZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUs3RCxJQUFhLHFCQUFxQixHQUFsQyxNQUFhLHFCQUFxQjtJQUloQyxZQUFtQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQUksQ0FBQztDQUUvQyxDQUFBOztZQUZnQyxVQUFVOztBQUZqQjtJQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDOzs0REFBOEI7QUFGMUMscUJBQXFCO0lBSGpDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxpQkFBaUI7S0FDNUIsQ0FBQztxQ0FLK0IsVUFBVTtHQUo5QixxQkFBcUIsQ0FNakM7U0FOWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1thdmwtcGFyYWdyYXBoXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bFBhcmFncmFwaERpcmVjdGl2ZSB7XHJcblxyXG4gIEBJbnB1dCgnYXZsLXBhcmFncmFwaCcpIHB1YmxpYyBwYXJhZ3JhcGhOYW1lOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7IH1cclxuXHJcbn1cclxuIl19