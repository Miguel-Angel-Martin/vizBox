import { Component, Input, HostListener, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class AvlListExpanderComponent {
    constructor() {
        /**
         * Boolean that changes modes between wide and narrow, false by default.
         */
        this.narrow = false;
        this._open = false;
        /**
         * Event that emits when the expander is opened or closed.
         * Sends boolean value of new open state.
         */
        this.openChange = new EventEmitter();
    }
    /**
     * Boolean that tells whether the expander is open or closed, expander is closed by default.
     */
    set open(value) {
        this._open = value;
        this.openChange.emit(this._open);
    }
    get open() {
        return this._open;
    }
    toggleClick() {
        this.open = !this.open;
    }
    /** @hidden */
    keyEvent(event) {
        const activeEl = document.activeElement;
        if (event.key === ' ' || event.key === 'Enter') {
            activeEl.click();
            return;
        }
    }
}
AvlListExpanderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlListExpanderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AvlListExpanderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlListExpanderComponent, selector: "avl-list-expander", inputs: { narrow: "narrow", open: "open" }, outputs: { openChange: "openChange" }, host: { listeners: { "keydown": "keyEvent($event)" } }, ngImport: i0, template: "<hr/>\r\n<div id=\"expander\">\r\n    <div  [ngClass]=\"narrow ? 'title-container-narrow' : 'title-container'\" tabindex=\"0\" (click)=\"toggleClick()\">\r\n        <div [ngClass]=\"narrow ? 'icon-narrow' : 'icon'\" *ngIf=\"!open\">\r\n            <avl-icon icon=\"hardware:keyboard-arrow-down\" id=\"starsIcon\"></avl-icon>\r\n        </div>\r\n        <div [ngClass]=\"narrow ? 'icon-narrow' : 'icon'\" *ngIf=\"open\">\r\n            <avl-icon icon=\"hardware:keyboard-arrow-up\" id=\"starsIcon\"></avl-icon>\r\n        </div>\r\n        <div [ngClass]=\"narrow ? 'title-narrow' : 'title'\">\r\n            <ng-content select=\"div[role=header]\"></ng-content>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"open\" [ngClass]=\"narrow ? 'content-narrow' : 'content'\">\r\n        <ng-content select=\"div[role=content]\"></ng-content>\r\n    </div>\r\n</div>\r\n\r\n", styles: [".title-container:hover{background-color:var(--avl-ink-default-hover-color);background-color:var(--avl-list-expander-header-hover-color,var(--avl-ink-default-hover-color))}.title-container:focus{background-color:var(--avl-ink-default-focus-color);background-color:var(--avl-list-expander-header-focus-color,var(--avl-ink-default-focus-color));outline:none}.title-container:active{background-color:var(--avl-ink-default-pressed-color);background-color:var(--avl-list-expander-header-pressed-color,var(--avl-ink-default-pressed-color))}.title-container{height:48px;display:flex;flex-flow:row;align-items:center;cursor:pointer}.title{font-size:17px;color:var(--avl-foreground-color);color:var(--avl-list-expander-title-color,var(--avl-foreground-color))}.icon{margin:12px 12px 12px 24px;height:24px}.content{margin:4px 24px}hr{display:block;border:0;border-top:1px solid var(--avl-list-expander-divider-color,var(--avl-divider-color));margin:0}avl-icon{--avl-icon-custom-color:var(--avl-list-expander-icon-color,var(--avl-hint-color))}.icon-narrow{margin:16px 24px 16px 16px;position:absolute;right:0;bottom:0;height:24px}.title-container-narrow{position:relative;height:56px;display:flex;flex-flow:row;align-items:center;cursor:pointer}.content-narrow{margin:0 24px 24px}.title-narrow{margin-left:24px;font-size:17px;margin-right:64px;white-space:nowrap;overflow:hidden}.title-container-narrow:hover{background-color:var(--avl-ink-default-hover-color);background-color:var(--avl-list-expander-header-hover-color,var(--avl-ink-default-hover-color))}.title-container-narrow:focus{background-color:var(--avl-ink-default-focus-color);background-color:var(--avl-list-expander-header-focus-color,var(--avl-ink-default-focus-color));outline:none}.title-container-narrow:active{background-color:var(--avl-ink-default-pressed-color);background-color:var(--avl-list-expander-header-pressed-color,var(--avl-ink-default-pressed-color))}"], directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlListExpanderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'avl-list-expander',
                    templateUrl: './avl-list-expander.component.html',
                    styleUrls: ['./avl-list-expander.component.css']
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { narrow: [{
                type: Input
            }], open: [{
                type: Input
            }], openChange: [{
                type: Output
            }], keyEvent: [{
                type: HostListener,
                args: ['keydown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWxpc3QtZXhwYW5kZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmF2aWdhdGlvbi9zcmMvbGliL2NvbXBvbmVudHMvYXZsLWxpc3QtZXhwYW5kZXIvYXZsLWxpc3QtZXhwYW5kZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmF2aWdhdGlvbi9zcmMvbGliL2NvbXBvbmVudHMvYXZsLWxpc3QtZXhwYW5kZXIvYXZsLWxpc3QtZXhwYW5kZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQU9yRixNQUFNLE9BQU8sd0JBQXdCO0lBNkNqQztRQTNCQTs7V0FFRztRQUVILFdBQU0sR0FBWSxLQUFLLENBQUM7UUFHaEIsVUFBSyxHQUFHLEtBQUssQ0FBQztRQWN0Qjs7O1dBR0c7UUFDTyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQUVwQyxDQUFDO0lBbkJoQjs7T0FFRztJQUNILElBQ0ksSUFBSSxDQUFDLEtBQWM7UUFDbkIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDSixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQVVELFdBQVc7UUFDUCxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBRUQsY0FBYztJQUVkLFFBQVEsQ0FBQyxLQUFvQjtRQUN6QixNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBNEIsQ0FBQztRQUN2RCxJQUFJLEtBQUssQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxHQUFHLEtBQUssT0FBTyxFQUFFO1lBQzVDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNqQixPQUFPO1NBQ1Y7SUFDTCxDQUFDOztxSEEzRFEsd0JBQXdCO3lHQUF4Qix3QkFBd0Isb01DUHJDLDgyQkFtQkE7MkZEWmEsd0JBQXdCO2tCQUxwQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFdBQVcsRUFBRSxvQ0FBb0M7b0JBQ2pELFNBQVMsRUFBRSxDQUFDLG1DQUFtQyxDQUFDO2lCQUNuRDswRUF1QkcsTUFBTTtzQkFETCxLQUFLO2dCQVNGLElBQUk7c0JBRFAsS0FBSztnQkFjSSxVQUFVO3NCQUFuQixNQUFNO2dCQVVQLFFBQVE7c0JBRFAsWUFBWTt1QkFBQyxTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBIb3N0TGlzdGVuZXIsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXZsLWxpc3QtZXhwYW5kZXInLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2F2bC1saXN0LWV4cGFuZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2F2bC1saXN0LWV4cGFuZGVyLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsTGlzdEV4cGFuZGVyQ29tcG9uZW50IHtcclxuXHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiAjIyMgU3R5bGluZ1xyXG4gICAgICogVGhlIGZvbGxvd2luZyBjdXN0b20gcHJvcGVydGllcyBhcmUgYXZhaWxhYmxlIGZvciBzdHlsaW5nOlxyXG4gICAgICpcclxuICAgICAqIEN1c3RvbSBwcm9wZXJ0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRGVmYXVsdFxyXG4gICAgICogOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18Oi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgKiBgLS1hdmwtbGlzdC1leHBhbmRlci1oZWFkZXItaG92ZXItY29sb3JgICAgICAgIHwgSGVhZGVyIGJhY2tncm91bmQgY29sb3Igd2hlbiBob3ZlcmVkICB8IGAtLWF2bC1pbmstZGVmYXVsdC1ob3Zlci1jb2xvcmBcclxuICAgICAqIGAtLWF2bC1saXN0LWV4cGFuZGVyLWhlYWRlci1mb2N1cy1jb2xvcmAgICAgICAgfCBIZWFkZXIgYmFja2dyb3VuZCBjb2xvciB3aGVuIGZvY3VzZWQgIHwgYC0tYXZsLWluay1kZWZhdWx0LWZvY3VzLWNvbG9yYFxyXG4gICAgICogYC0tYXZsLWxpc3QtZXhwYW5kZXItaGVhZGVyLXByZXNzZWQtY29sb3JgICAgICB8IEhlYWRlciBiYWNrZ3JvdW5kIGNvbG9yIHdoZW4gcHJlc3NlZCAgfCBgLS1hdmwtaW5rLWRlZmF1bHQtcHJlc3NlZC1jb2xvcmBcclxuICAgICAqIGAtLWF2bC1saXN0LWV4cGFuZGVyLWRpdmlkZXItY29sb3JgICAgICAgICAgICAgfCBEaXZpZGVyIGNvbG9yICAgICAgICAgICAgICAgICAgICAgICAgIHwgYC0tYXZsLWRpdmlkZXItY29sb3JgXHJcbiAgICAgKiBgLS1hdmwtbGlzdC1leHBhbmRlci10aXRsZS1jb2xvcmAgICAgICAgICAgICAgIHwgVGl0bGUgY29sb3IgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGAtLWF2bC1pbmstZGVmYXVsdC1wcmVzc2VkLWNvbG9yYFxyXG4gICAgICogYC0tYXZsLWxpc3QtZXhwYW5kZXItaWNvbi1jb2xvcmAgICAgICAgICAgICAgICB8IEFycm93IGljb24gY29sb3IgICAgICAgICAgICAgICAgICAgICAgfCBgLS1hdmwtZGl2aWRlci1jb2xvcmBcclxuICAgICAqL1xyXG4gICAgX3N0eWxpbmc6IGFueTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEJvb2xlYW4gdGhhdCBjaGFuZ2VzIG1vZGVzIGJldHdlZW4gd2lkZSBhbmQgbmFycm93LCBmYWxzZSBieSBkZWZhdWx0LlxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKVxyXG4gICAgbmFycm93OiBib29sZWFuID0gZmFsc2U7XHJcblxyXG5cclxuICAgIHByaXZhdGUgX29wZW4gPSBmYWxzZTtcclxuICAgIC8qKlxyXG4gICAgICogQm9vbGVhbiB0aGF0IHRlbGxzIHdoZXRoZXIgdGhlIGV4cGFuZGVyIGlzIG9wZW4gb3IgY2xvc2VkLCBleHBhbmRlciBpcyBjbG9zZWQgYnkgZGVmYXVsdC5cclxuICAgICAqL1xyXG4gICAgQElucHV0KClcclxuICAgIHNldCBvcGVuKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fb3BlbiA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMub3BlbkNoYW5nZS5lbWl0KHRoaXMuX29wZW4pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBvcGVuKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vcGVuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgdGhhdCBlbWl0cyB3aGVuIHRoZSBleHBhbmRlciBpcyBvcGVuZWQgb3IgY2xvc2VkLlxyXG4gICAgICogU2VuZHMgYm9vbGVhbiB2YWx1ZSBvZiBuZXcgb3BlbiBzdGF0ZS5cclxuICAgICAqL1xyXG4gICAgQE91dHB1dCgpIG9wZW5DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAgIHRvZ2dsZUNsaWNrKCkge1xyXG4gICAgICAgIHRoaXMub3BlbiA9ICF0aGlzLm9wZW47XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24nLCBbJyRldmVudCddKVxyXG4gICAga2V5RXZlbnQoZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgICAgICBjb25zdCBhY3RpdmVFbCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJyAnIHx8IGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xyXG4gICAgICAgICAgICBhY3RpdmVFbC5jbGljaygpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIjxoci8+XHJcbjxkaXYgaWQ9XCJleHBhbmRlclwiPlxyXG4gICAgPGRpdiAgW25nQ2xhc3NdPVwibmFycm93ID8gJ3RpdGxlLWNvbnRhaW5lci1uYXJyb3cnIDogJ3RpdGxlLWNvbnRhaW5lcidcIiB0YWJpbmRleD1cIjBcIiAoY2xpY2spPVwidG9nZ2xlQ2xpY2soKVwiPlxyXG4gICAgICAgIDxkaXYgW25nQ2xhc3NdPVwibmFycm93ID8gJ2ljb24tbmFycm93JyA6ICdpY29uJ1wiICpuZ0lmPVwiIW9wZW5cIj5cclxuICAgICAgICAgICAgPGF2bC1pY29uIGljb249XCJoYXJkd2FyZTprZXlib2FyZC1hcnJvdy1kb3duXCIgaWQ9XCJzdGFyc0ljb25cIj48L2F2bC1pY29uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgW25nQ2xhc3NdPVwibmFycm93ID8gJ2ljb24tbmFycm93JyA6ICdpY29uJ1wiICpuZ0lmPVwib3BlblwiPlxyXG4gICAgICAgICAgICA8YXZsLWljb24gaWNvbj1cImhhcmR3YXJlOmtleWJvYXJkLWFycm93LXVwXCIgaWQ9XCJzdGFyc0ljb25cIj48L2F2bC1pY29uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgW25nQ2xhc3NdPVwibmFycm93ID8gJ3RpdGxlLW5hcnJvdycgOiAndGl0bGUnXCI+XHJcbiAgICAgICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cImRpdltyb2xlPWhlYWRlcl1cIj48L25nLWNvbnRlbnQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8ZGl2ICpuZ0lmPVwib3BlblwiIFtuZ0NsYXNzXT1cIm5hcnJvdyA/ICdjb250ZW50LW5hcnJvdycgOiAnY29udGVudCdcIj5cclxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJkaXZbcm9sZT1jb250ZW50XVwiPjwvbmctY29udGVudD5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuXHJcbiJdfQ==