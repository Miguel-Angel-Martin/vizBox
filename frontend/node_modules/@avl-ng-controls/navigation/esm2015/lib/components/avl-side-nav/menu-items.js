export class Paragraph {
    constructor(
    /**
     * Id/fragment of the paragraph header in the page.
     */
    id, 
    /**
     * Label of the paragraph shown in the side nav.
     */
    label) {
        this.id = id;
        this.label = label;
    }
}
export class Params {
    constructor(
    /**
     * Name of the query parameter.
     */
    name, 
    /**
     * Value of the query parameter.
     */
    value) {
        this.name = name;
        this.value = value;
    }
}
export class Page {
    constructor(
    /**
     * Label of the page shown in the side nav.
     */
    label, 
    /**
     * Route to the page.
     */
    route, 
    /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
    paragraphs, 
    /**
     * Query parameters of the page.
     */
    params, expanded) {
        this.label = label;
        this.route = route;
        this.paragraphs = paragraphs;
        this.params = params;
        this.expanded = expanded;
        this.paragraphs = paragraphs ? paragraphs : [];
        this.params = params ? params : [];
    }
}
export class TopLevelPage extends Page {
    constructor(
    /**
     * Label of the page shown in the side nav.
     */
    label, 
    /**
     * Route to the page.
     */
    route, 
    /**
     * Material icon name for the icon to show next to the label.
     * https://material.io/tools/icons
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    icon, 
    /**
     * URL to the icon image to show next to the label.
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    iconUrl, 
    /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
    paragraphs, 
    /**
     * Query parameters of the page.
     */
    params, 
    /**
     * Sub pages of the top level page.
     */
    subItems, expanded) {
        super(label, route, paragraphs, params, expanded);
        this.icon = icon;
        this.iconUrl = iconUrl;
        this.paragraphs = paragraphs;
        this.params = params;
        this.subItems = subItems;
    }
}
export class Group extends Page {
    constructor(
    /**
     * Label of the Group shown in the side nav.
     */
    label, 
    /**
     * Material icon name for the icon to show next to the label.
     * https://material.io/tools/icons
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    icon, 
    /**
     * URL to the icon image to show next to the label.
     * Only one of icon and iconUrl can be used. The other should be undefined.
     */
    iconUrl, 
    /**
     * Sub pages of the group.
     */
    subItems, 
    /**
     * Route to the page.
     */
    route, 
    /**
 * Paragraphs of the long page.
 * It's a regular page if no paragraphs are defined.
 */
    paragraphs, params, expanded) {
        super(label, route, paragraphs, params, expanded);
        this.icon = icon;
        this.iconUrl = iconUrl;
        this.subItems = subItems;
        this.subItems = subItems ? subItems : [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtbmctY29udHJvbHMvbmF2aWdhdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2F2bC1zaWRlLW5hdi9tZW51LWl0ZW1zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxTQUFTO0lBQ3BCO0lBQ0U7O09BRUc7SUFDYSxFQUFVO0lBQzFCOztPQUVHO0lBQ2EsS0FBYTtRQUpiLE9BQUUsR0FBRixFQUFFLENBQVE7UUFJVixVQUFLLEdBQUwsS0FBSyxDQUFRO0lBQzNCLENBQUM7Q0FDTjtBQUVELE1BQU0sT0FBTyxNQUFNO0lBQ2pCO0lBQ0U7O09BRUc7SUFDYSxJQUFZO0lBQzVCOztPQUVHO0lBQ2EsS0FBYTtRQUpiLFNBQUksR0FBSixJQUFJLENBQVE7UUFJWixVQUFLLEdBQUwsS0FBSyxDQUFRO0lBQzNCLENBQUM7Q0FDTjtBQUVELE1BQU0sT0FBTyxJQUFJO0lBQ2Y7SUFDRTs7T0FFRztJQUNhLEtBQWE7SUFDN0I7O09BRUc7SUFDYSxLQUFhO0lBQzdCOzs7T0FHRztJQUNhLFVBQXdCO0lBQ3hDOztPQUVHO0lBQ2EsTUFBaUIsRUFFakIsUUFBa0I7UUFmbEIsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUliLFVBQUssR0FBTCxLQUFLLENBQVE7UUFLYixlQUFVLEdBQVYsVUFBVSxDQUFjO1FBSXhCLFdBQU0sR0FBTixNQUFNLENBQVc7UUFFakIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUVsQyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDL0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3JDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxZQUFhLFNBQVEsSUFBSTtJQUNwQztJQUNFOztPQUVHO0lBQ0gsS0FBYTtJQUNiOztPQUVHO0lBQ0gsS0FBYTtJQUNiOzs7O09BSUc7SUFDYSxJQUFhO0lBQzdCOzs7T0FHRztJQUNhLE9BQWdCO0lBQ2hDOzs7T0FHRztJQUNhLFVBQXdCO0lBQ3hDOztPQUVHO0lBQ2EsTUFBaUI7SUFDakM7O09BRUc7SUFDYSxRQUFpQixFQUVqQyxRQUFrQjtRQUVsQixLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBdEJsQyxTQUFJLEdBQUosSUFBSSxDQUFTO1FBS2IsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUtoQixlQUFVLEdBQVYsVUFBVSxDQUFjO1FBSXhCLFdBQU0sR0FBTixNQUFNLENBQVc7UUFJakIsYUFBUSxHQUFSLFFBQVEsQ0FBUztJQUtuQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sS0FBTSxTQUFRLElBQUk7SUFDN0I7SUFDRTs7T0FFRztJQUNILEtBQWE7SUFDYjs7OztPQUlHO0lBQ2EsSUFBYTtJQUM3Qjs7O09BR0c7SUFDYSxPQUFnQjtJQUNoQzs7T0FFRztJQUNhLFFBQWlCO0lBQ2pDOztPQUVHO0lBQ0gsS0FBYztJQUNWOzs7R0FHRDtJQUNILFVBQXdCLEVBQ3hCLE1BQWlCLEVBQ2pCLFFBQWtCO1FBRWxCLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7UUF0QmxDLFNBQUksR0FBSixJQUFJLENBQVM7UUFLYixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBSWhCLGFBQVEsR0FBUixRQUFRLENBQVM7UUFjakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzNDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuZXhwb3J0IGNsYXNzIFBhcmFncmFwaCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICAvKipcclxuICAgICAqIElkL2ZyYWdtZW50IG9mIHRoZSBwYXJhZ3JhcGggaGVhZGVyIGluIHRoZSBwYWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgaWQ6IHN0cmluZyxcclxuICAgIC8qKlxyXG4gICAgICogTGFiZWwgb2YgdGhlIHBhcmFncmFwaCBzaG93biBpbiB0aGUgc2lkZSBuYXYuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBsYWJlbDogc3RyaW5nXHJcbiAgKSB7IH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBhcmFtcyB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICAvKipcclxuICAgICAqIE5hbWUgb2YgdGhlIHF1ZXJ5IHBhcmFtZXRlci5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZyxcclxuICAgIC8qKlxyXG4gICAgICogVmFsdWUgb2YgdGhlIHF1ZXJ5IHBhcmFtZXRlci5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHZhbHVlOiBzdHJpbmdcclxuICApIHsgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUGFnZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICAvKipcclxuICAgICAqIExhYmVsIG9mIHRoZSBwYWdlIHNob3duIGluIHRoZSBzaWRlIG5hdi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IGxhYmVsOiBzdHJpbmcsXHJcbiAgICAvKipcclxuICAgICAqIFJvdXRlIHRvIHRoZSBwYWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgcm91dGU6IHN0cmluZyxcclxuICAgIC8qKlxyXG4gICAgICogUGFyYWdyYXBocyBvZiB0aGUgbG9uZyBwYWdlLlxyXG4gICAgICogSXQncyBhIHJlZ3VsYXIgcGFnZSBpZiBubyBwYXJhZ3JhcGhzIGFyZSBkZWZpbmVkLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgcGFyYWdyYXBocz86IFBhcmFncmFwaFtdLFxyXG4gICAgLyoqXHJcbiAgICAgKiBRdWVyeSBwYXJhbWV0ZXJzIG9mIHRoZSBwYWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgcGFyYW1zPzogUGFyYW1zW10sXHJcblxyXG4gICAgcHVibGljIHJlYWRvbmx5IGV4cGFuZGVkPzogYm9vbGVhblxyXG4gICkge1xyXG4gICAgdGhpcy5wYXJhZ3JhcGhzID0gcGFyYWdyYXBocyA/IHBhcmFncmFwaHMgOiBbXTtcclxuICAgIHRoaXMucGFyYW1zID0gcGFyYW1zID8gcGFyYW1zIDogW107XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVG9wTGV2ZWxQYWdlIGV4dGVuZHMgUGFnZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICAvKipcclxuICAgICAqIExhYmVsIG9mIHRoZSBwYWdlIHNob3duIGluIHRoZSBzaWRlIG5hdi5cclxuICAgICAqL1xyXG4gICAgbGFiZWw6IHN0cmluZyxcclxuICAgIC8qKlxyXG4gICAgICogUm91dGUgdG8gdGhlIHBhZ2UuXHJcbiAgICAgKi9cclxuICAgIHJvdXRlOiBzdHJpbmcsXHJcbiAgICAvKipcclxuICAgICAqIE1hdGVyaWFsIGljb24gbmFtZSBmb3IgdGhlIGljb24gdG8gc2hvdyBuZXh0IHRvIHRoZSBsYWJlbC5cclxuICAgICAqIGh0dHBzOi8vbWF0ZXJpYWwuaW8vdG9vbHMvaWNvbnNcclxuICAgICAqIE9ubHkgb25lIG9mIGljb24gYW5kIGljb25VcmwgY2FuIGJlIHVzZWQuIFRoZSBvdGhlciBzaG91bGQgYmUgdW5kZWZpbmVkLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgaWNvbj86IHN0cmluZyxcclxuICAgIC8qKlxyXG4gICAgICogVVJMIHRvIHRoZSBpY29uIGltYWdlIHRvIHNob3cgbmV4dCB0byB0aGUgbGFiZWwuXHJcbiAgICAgKiBPbmx5IG9uZSBvZiBpY29uIGFuZCBpY29uVXJsIGNhbiBiZSB1c2VkLiBUaGUgb3RoZXIgc2hvdWxkIGJlIHVuZGVmaW5lZC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IGljb25Vcmw/OiBzdHJpbmcsXHJcbiAgICAvKipcclxuICAgICAqIFBhcmFncmFwaHMgb2YgdGhlIGxvbmcgcGFnZS5cclxuICAgICAqIEl0J3MgYSByZWd1bGFyIHBhZ2UgaWYgbm8gcGFyYWdyYXBocyBhcmUgZGVmaW5lZC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHBhcmFncmFwaHM/OiBQYXJhZ3JhcGhbXSxcclxuICAgIC8qKlxyXG4gICAgICogUXVlcnkgcGFyYW1ldGVycyBvZiB0aGUgcGFnZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHBhcmFtcz86IFBhcmFtc1tdLFxyXG4gICAgLyoqXHJcbiAgICAgKiBTdWIgcGFnZXMgb2YgdGhlIHRvcCBsZXZlbCBwYWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgc3ViSXRlbXM/OiBQYWdlW10sXHJcblxyXG4gICAgZXhwYW5kZWQ/OiBib29sZWFuXHJcbiAgKSB7XHJcbiAgICBzdXBlcihsYWJlbCwgcm91dGUsIHBhcmFncmFwaHMsIHBhcmFtcywgZXhwYW5kZWQpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEdyb3VwIGV4dGVuZHMgUGFnZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICAvKipcclxuICAgICAqIExhYmVsIG9mIHRoZSBHcm91cCBzaG93biBpbiB0aGUgc2lkZSBuYXYuXHJcbiAgICAgKi9cclxuICAgIGxhYmVsOiBzdHJpbmcsXHJcbiAgICAvKipcclxuICAgICAqIE1hdGVyaWFsIGljb24gbmFtZSBmb3IgdGhlIGljb24gdG8gc2hvdyBuZXh0IHRvIHRoZSBsYWJlbC5cclxuICAgICAqIGh0dHBzOi8vbWF0ZXJpYWwuaW8vdG9vbHMvaWNvbnNcclxuICAgICAqIE9ubHkgb25lIG9mIGljb24gYW5kIGljb25VcmwgY2FuIGJlIHVzZWQuIFRoZSBvdGhlciBzaG91bGQgYmUgdW5kZWZpbmVkLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgaWNvbj86IHN0cmluZyxcclxuICAgIC8qKlxyXG4gICAgICogVVJMIHRvIHRoZSBpY29uIGltYWdlIHRvIHNob3cgbmV4dCB0byB0aGUgbGFiZWwuXHJcbiAgICAgKiBPbmx5IG9uZSBvZiBpY29uIGFuZCBpY29uVXJsIGNhbiBiZSB1c2VkLiBUaGUgb3RoZXIgc2hvdWxkIGJlIHVuZGVmaW5lZC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IGljb25Vcmw/OiBzdHJpbmcsXHJcbiAgICAvKipcclxuICAgICAqIFN1YiBwYWdlcyBvZiB0aGUgZ3JvdXAuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyByZWFkb25seSBzdWJJdGVtcz86IFBhZ2VbXSxcclxuICAgIC8qKlxyXG4gICAgICogUm91dGUgdG8gdGhlIHBhZ2UuXHJcbiAgICAgKi9cclxuICAgIHJvdXRlPzogc3RyaW5nLFxyXG4gICAgICAgIC8qKlxyXG4gICAgICogUGFyYWdyYXBocyBvZiB0aGUgbG9uZyBwYWdlLlxyXG4gICAgICogSXQncyBhIHJlZ3VsYXIgcGFnZSBpZiBubyBwYXJhZ3JhcGhzIGFyZSBkZWZpbmVkLlxyXG4gICAgICovXHJcbiAgICBwYXJhZ3JhcGhzPzogUGFyYWdyYXBoW10sXHJcbiAgICBwYXJhbXM/OiBQYXJhbXNbXSxcclxuICAgIGV4cGFuZGVkPzogYm9vbGVhblxyXG4gICkge1xyXG4gICAgc3VwZXIobGFiZWwsIHJvdXRlLCBwYXJhZ3JhcGhzLCBwYXJhbXMsIGV4cGFuZGVkKTtcclxuICAgIHRoaXMuc3ViSXRlbXMgPSBzdWJJdGVtcyA/IHN1Ykl0ZW1zIDogW107XHJcbiAgfVxyXG59XHJcbiJdfQ==