(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/router'), require('@avl-ng-controls/common'), require('@avl-controls/core/dist/avl-app-switcher/avl-app-switcher'), require('@avl-controls/core/dist/avl-icon/avl-icon.js'), require('@avl-controls/ng-binders'), require('@angular/animations'), require('rxjs/operators'), require('@avl-controls/core/dist/avl-icon/avl-icon'), require('rxjs'), require('@avl-controls/core/dist/avl-search-bar/avl-search-bar')) :
    typeof define === 'function' && define.amd ? define('@avl-ng-controls/navigation', ['exports', '@angular/core', '@angular/common', '@angular/router', '@avl-ng-controls/common', '@avl-controls/core/dist/avl-app-switcher/avl-app-switcher', '@avl-controls/core/dist/avl-icon/avl-icon.js', '@avl-controls/ng-binders', '@angular/animations', 'rxjs/operators', '@avl-controls/core/dist/avl-icon/avl-icon', 'rxjs', '@avl-controls/core/dist/avl-search-bar/avl-search-bar'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['avl-ng-controls'] = global['avl-ng-controls'] || {}, global['avl-ng-controls'].navigation = {}), global.ng.core, global.ng.common, global.ng.router, global['@avl-ng-controls/common'], null, null, global['@avl-controls/ng-binders'], global.ng.animations, global.rxjs.operators, null, global.rxjs));
}(this, (function (exports, i0, i2, i1, i1$1, avlAppSwitcher, avlIcon_js, i3, animations, operators, avlIcon, rxjs) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    var AvlAppBarItemComponent = /** @class */ (function () {
        function AvlAppBarItemComponent(elementRef) {
            this.elementRef = elementRef;
        }
        /**
         * @hidden
         */
        AvlAppBarItemComponent.prototype.ngOnInit = function () {
            this.elementRef.nativeElement.classList.add('mdc-toolbar__icon');
        };
        return AvlAppBarItemComponent;
    }());
    AvlAppBarItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAppBarItemComponent, deps: [{ token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlAppBarItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlAppBarItemComponent, selector: "avl-app-bar-item", ngImport: i0__namespace, template: '<ng-content></ng-content>', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAppBarItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-app-bar-item',
                        template: '<ng-content></ng-content>',
                        styleUrls: []
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }]; } });

    var MenuButtonItems = /** @class */ (function () {
        function MenuButtonItems(headerText, headerIconName, items, footerItems) {
            this.headerText = headerText;
            this.headerIconName = headerIconName;
            this.items = items;
            this.footerItems = footerItems;
        }
        return MenuButtonItems;
    }());
    /**
     * Object representing sub-application that is added to app-bar drop-down
     */
    var ApplicationReference = /** @class */ (function () {
        function ApplicationReference() {
        }
        return ApplicationReference;
    }());
    var AvlAppBarComponent = /** @class */ (function () {
        function AvlAppBarComponent() {
            /**
             * List of sub-applications used
             */
            this.applications = [];
            /**
             * Event emitted when new application is added.
             */
            this.applicationListChange = new i0.EventEmitter();
            /**
             * Flag indicating app-bar has fixed positioning or no
             */
            this.fixed = true;
            /**
             * Event emitted when application is changed in app-bar drop-down
             */
            this.currentApplicationChange = new i0.EventEmitter();
            /**
             * Event emmited when Burger menu is clicked.
             * Toggles side-nav visibility if app-bar is part of app-layout in responsive mode
             */
            this.burgerClicked = new i0.EventEmitter();
            /** @hidden */
            this.appLogoSet = false;
            this.appLogoPreset = false;
        }
        Object.defineProperty(AvlAppBarComponent.prototype, "isSingleApp", {
            /**
             * True if only one element added to applications array
             */
            get: function () {
                return !this.applications || this._appsLength < 2;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AvlAppBarComponent.prototype, "showAppLogo", {
            /**
             * @hidden
             */
            get: function () {
                if (this.currentApplication == null)
                    return false;
                var image = this.currentApplication.image;
                return !(image == null || image === '');
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @hidden
         */
        AvlAppBarComponent.prototype.burgerIconClicked = function () {
            this.burgerClicked.emit();
        };
        /**
         * @hidden
         */
        AvlAppBarComponent.prototype.onApplicationChanged = function (app) {
            var _this = this;
            this.currentApplication = app;
            if (!this.appLogoPreset) {
                setTimeout(function () {
                    _this.appLogoSet = true;
                    _this.appLogo = _this.currentApplication.image;
                });
            }
            this.currentApplicationChange.emit(this.currentApplication);
        };
        /**
         * @hidden
         */
        AvlAppBarComponent.prototype.onApplicationListChanged = function (apps) {
            this.applications = apps;
            this.applicationListChange.emit(this.applications);
        };
        /** @hidden */
        AvlAppBarComponent.prototype.ngOnInit = function () {
            if (this.appLogo) {
                this.appLogoSet = true;
                this.appLogoPreset = true;
            }
            else {
                this.appLogo = this.currentApplication ? this.currentApplication.image : '';
                this.appLogoSet = true;
            }
            this._appsLength = this.applications ? this.applications.length : 0;
        };
        return AvlAppBarComponent;
    }());
    AvlAppBarComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAppBarComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlAppBarComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlAppBarComponent, selector: "avl-app-bar", inputs: { currentApplication: "currentApplication", responsive: "responsive", mobile: "mobile", homePageUrl: "homePageUrl", appLogo: "appLogo", applications: "applications", fixed: "fixed" }, outputs: { applicationListChange: "applicationListChange", currentApplicationChange: "currentApplicationChange", burgerClicked: "burgerClicked" }, host: { properties: { "class.responsive": "this.responsive", "class.mobile": "this.mobile" } }, ngImport: i0__namespace, template: "<header id=\"header\" class=\"mdc-toolbar mdc-toolbar--waterfall\" [ngClass]=\"{'mdc-toolbar--fixed': fixed}\">\r\n  <div class=\"mdc-toolbar__row\">\r\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start mdc-toolbar__section--shrink-to-fit section-with-switcher\">\r\n      <avl-app-bar-item class=\"burger-container\">\r\n        <avl-icon class=\"burgerMenu\" icon=\"menu\" theme=\"dark\" (click)=\"burgerIconClicked()\"></avl-icon>\r\n      </avl-app-bar-item>\r\n      <avl-app-bar-item class=\"noselect\" *ngIf=\"appLogoSet && appLogo != undefined\">\r\n        <a class=\"avl-app-logo\"\r\n          [style.background-image]=\"'url(' + appLogo + ')'\"\r\n          [style.background-repeat]=\"'no-repeat'\"\r\n          routerLink=\"{{homePageUrl ? homePageUrl : '/' }}\"></a>\r\n      </avl-app-bar-item>\r\n\r\n      <div *ngIf=\"isSingleApp; then singleApp else multiApp\"></div>\r\n      <ng-template #singleApp>\r\n        <avl-app-bar-item class=\"single-app-name\" [innerHTML]=\"currentApplication?.name\">\r\n        </avl-app-bar-item>\r\n      </ng-template>\r\n      <ng-template #multiApp>\r\n        <avl-app-bar-item class=\"toolbar-item-with-switcher\">\r\n          <avl-app-switcher [items]=\"applications\" (itemsChange)=\"onApplicationListChanged($event)\" [selectedValue]=\"currentApplication\" (selectedValueChange)=\"onApplicationChanged($event)\">\r\n          </avl-app-switcher>\r\n        </avl-app-bar-item>\r\n      </ng-template>\r\n    </section>\r\n    <section id=\"additionalContent\" class=\"mdc-toolbar__section mdc-toolbar__section--align-end \">\r\n      <ng-content></ng-content>\r\n      <ng-content select=\"avl-overflow-menu[slot=menu]\"></ng-content>\r\n    </section>\r\n  </div>\r\n  <div class=\"border\"></div>\r\n</header>\r\n", styles: [".mdc-toolbar{background-color:#3f51b5;background-color:var(--mdc-theme-primary,#3f51b5);color:#fff;color:var(--mdc-theme-text-primary-on-primary,#fff);flex-direction:column;justify-content:space-between}.mdc-toolbar,.mdc-toolbar__row{display:flex;position:relative;box-sizing:border-box;width:100%}.mdc-toolbar__row{align-items:center;height:auto;min-height:64px}@media (max-width:959px) and (orientation:landscape){.mdc-toolbar__row{min-height:48px}}@media (max-width:599px){.mdc-toolbar__row{min-height:56px}}.mdc-toolbar__section{display:inline-flex;flex:1;align-items:flex-start;justify-content:center;min-width:0;height:100%;z-index:1}.mdc-toolbar__section--align-start{justify-content:flex-start;order:-1}.mdc-toolbar__section--align-end{justify-content:flex-end;order:1}.mdc-toolbar__title{font-family:Roboto,sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-size:1.25rem;font-weight:500;letter-spacing:.02em;text-decoration:inherit;text-transform:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;margin-left:24px;margin-right:0;align-self:center;padding:16px 0;line-height:1.5rem;z-index:1}.mdc-toolbar__title[dir=rtl],[dir=rtl] .mdc-toolbar__title{margin-left:0;margin-right:24px}.mdc-toolbar__icon{display:flex;align-items:center;justify-content:center;border:none;background-color:inherit;color:inherit;text-decoration:none;color:#fff;color:var(--mdc-theme-text-primary-on-primary,#fff);padding:16px 12px;cursor:pointer}.mdc-toolbar__icon:last-of-type{padding-left:12px;padding-right:24px}.mdc-toolbar__icon:last-of-type[dir=rtl],[dir=rtl] .mdc-toolbar__icon:last-of-type{padding-left:24px;padding-right:12px}.mdc-toolbar__menu-icon{display:flex;align-items:center;justify-content:center;border:none;background-color:inherit;color:inherit;text-decoration:none;color:#fff;color:var(--mdc-theme-text-primary-on-primary,#fff);padding:16px 24px;cursor:pointer}.mdc-toolbar__menu-icon+.mdc-toolbar__title{margin-left:8px;margin-right:0}.mdc-toolbar__menu-icon+.mdc-toolbar__title[dir=rtl],[dir=rtl] .mdc-toolbar__menu-icon+.mdc-toolbar__title{margin-left:0;margin-right:8px}@media (max-width:599px){.mdc-toolbar__title{margin-left:16px;margin-right:0}.mdc-toolbar__title[dir=rtl],[dir=rtl] .mdc-toolbar__title{margin-left:0;margin-right:16px}.mdc-toolbar__icon{padding-right:8px;padding-left:8px}.mdc-toolbar__icon:last-of-type{padding-left:8px;padding-right:16px}.mdc-toolbar__icon:last-of-type[dir=rtl],[dir=rtl] .mdc-toolbar__icon:last-of-type{padding-left:16px;padding-right:8px}.mdc-toolbar__menu-icon{padding-right:16px;padding-left:16px}.mdc-toolbar__menu-icon+.mdc-toolbar__title{margin-left:16px;margin-right:0}.mdc-toolbar__menu-icon+.mdc-toolbar__title[dir=rtl],[dir=rtl] .mdc-toolbar__menu-icon+.mdc-toolbar__title{margin-left:0;margin-right:16px}}.mdc-toolbar--fixed{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);position:fixed;top:0;left:0;z-index:4}.mdc-toolbar--flexible{--mdc-toolbar-ratio-to-extend-flexible:4}.mdc-toolbar--flexible .mdc-toolbar__row:first-child{height:256px;height:calc(64px * 4);height:calc(64px * var(--mdc-toolbar-ratio-to-extend-flexible, 4))}@media (max-width:599px){.mdc-toolbar--flexible .mdc-toolbar__row:first-child{height:224px;height:calc(56px * 4);height:calc(56px * var(--mdc-toolbar-ratio-to-extend-flexible, 4))}}.mdc-toolbar--flexible .mdc-toolbar__row:first-child:after{position:absolute;content:\"\"}.mdc-toolbar--flexible-default-behavior .mdc-toolbar__title{font-family:Roboto,sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-size:2.125rem;font-weight:400;letter-spacing:normal;text-decoration:inherit;text-transform:inherit;align-self:flex-end;line-height:1.5rem}.mdc-toolbar--flexible-default-behavior .mdc-toolbar__row:first-child:after{top:0;left:0;width:100%;height:100%;transition:opacity .2s ease;opacity:1}.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__row:first-child:after{opacity:0}.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__title{font-weight:500}.mdc-toolbar--waterfall.mdc-toolbar--fixed{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);transition:box-shadow .28s cubic-bezier(.4,0,.2,1);will-change:box-shadow}.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--flexible-space-minimized{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--flexible-space-minimized{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--fixed-at-last-row{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.mdc-toolbar-fixed-adjust{margin-top:64px}@media (max-width:959px) and (orientation:landscape){.mdc-toolbar-fixed-adjust{margin-top:48px}}@media (max-width:599px){.mdc-toolbar-fixed-adjust{margin-top:56px}}.mdc-toolbar__section--shrink-to-fit{flex:none}:host{--item-color:var(--avl-app-bar-item-color,var(--avl-on-primary-color));--bar-height:var(--avl-app-bar-height,52px);--background-color:var(--avl-app-bar-background-color,var(--avl-primary-color));--line-underline-color:var(--avl-app-bar-underline-color,var(--avl-product-color));color:var(--item-color);font-family:var(--avl-font-family);font-size:20px}#additionalContent{margin-right:12px;z-index:2}.material-icons{font-family:Material Icons,sans-serif;font-weight:400;font-style:normal;font-size:24px;display:inline-block;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}.mdc-toolbar{background-color:var(--background-color);background-repeat:no-repeat;background-position:calc(100% - 61px) -30px;background-size:158px;color:var(--item-color);z-index:4}.mdc-toolbar,.mdc-toolbar--fixed{box-shadow:none}#header{box-shadow:var(--avl-box-shadow-14dp)}avl-menu-button avl-icon-button{height:24px;width:24px;margin:0 16px 0 13px;padding:0}.border{height:4px;background:linear-gradient(90deg,var(--avl-product-light-color) 0,var(--avl-product-dark-color) 100%)}.mdc-toolbar__icon{margin-bottom:0}.mdc-toolbar__icon,.mdc-toolbar__icon:active{color:var(--item-color)}.mdc-toolbar__icon:last-of-type{padding:0 16px}.search-bar-container{margin-left:24px;display:flex;justify-content:space-between;--avl-search-bar-text-color:var(--item-color,#fff);--avl-search-bar-search-color:var(--item-color,#fff)}.mdc-toolbar__row{min-height:52px;min-height:var(--bar-height,52px);max-height:52px;max-height:var(--bar-height,52px)}.mdc-toolbar__section{align-items:center;z-index:0}.avl-app-logo{width:32px;height:32px;background-size:100%}.burgerMenu{height:24px;width:24px}.mdc-toolbar__icon{padding:0}avl-icon-button{--avl-icon-button-color:#fff}.detailsMenuButtonSeparator{height:1px;background:#000}.icons-placeholder{font-size:20px;margin-bottom:0;margin-right:10px}.header-container{display:inline-flex;padding-bottom:5px;padding-top:5px}.header-icon{font-size:20px;margin-bottom:0;margin-right:10px;margin-top:5px}.header-text{display:inline;margin-left:-5px;font-size:25px;font-weight:700;padding-bottom:5px}.toolbar-item-with-switcher{padding-left:12px!important}avl-app-bar-item{cursor:auto!important}.section-with-switcher{position:relative;z-index:2}.burgerMenu{display:none;cursor:pointer}.avl-app-logo{margin:12px 0 12px 20px}.single-app-name{cursor:default}:host(.mobile) .burgerMenu{display:block}@media (max-width:960px){:host(.responsive) .burgerMenu{display:block}}@media (min-width:400px){:host(.mobile) .burgerMenu,:host(.responsive) .burgerMenu{margin:16px 0 16px 24px}}@media (max-width:400px){:host(.mobile) .avl-app-logo,:host(.responsive) .avl-app-logo{display:none}:host(.mobile) .burgerMenu,:host(.responsive) .burgerMenu{margin:16px -4px 16px 16px}}"], components: [{ type: AvlAppBarItemComponent, selector: "avl-app-bar-item" }], directives: [{ type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i3__namespace.AvlSingleSelectControlDirective, selector: "avl-datatable,avl-dropdown,avl-list,avl-radio-group,avl-app-switcher,avl-chip-list,avl-combo-box", outputs: ["selectedIndexChange", "selectedValueChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAppBarComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-app-bar',
                        templateUrl: './avl-app-bar.component.html',
                        styleUrls: ['./avl-app-bar.component.css'],
                        encapsulation: i0.ViewEncapsulation.Emulated
                    }]
            }], propDecorators: { currentApplication: [{
                    type: i0.Input
                }], responsive: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class.responsive']
                }], mobile: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class.mobile']
                }], homePageUrl: [{
                    type: i0.Input
                }], appLogo: [{
                    type: i0.Input
                }], applications: [{
                    type: i0.Input
                }], applicationListChange: [{
                    type: i0.Output
                }], fixed: [{
                    type: i0.Input
                }], currentApplicationChange: [{
                    type: i0.Output
                }], burgerClicked: [{
                    type: i0.Output
                }] } });

    var rowHeightPx = 48;
    var AvlSideNavComponent = /** @class */ (function () {
        function AvlSideNavComponent(router, activeRoute) {
            var _this = this;
            this.router = router;
            this.activeRoute = activeRoute;
            this.openValue = false;
            /**
             * Specific for shell usage. When side-nav is used in application inside a shell (iframe)
             * this parameter containing shell url enables opening correct url in new tab/window
             */
            this.shellUrl = '';
            /**
             * Emitted when the open property changes.
             */
            this.openChange = new i0.EventEmitter();
            activeRoute.queryParams.subscribe(function (p) {
                _this.params = p;
            });
            this.subscription = this.router.events
                .pipe(operators.filter(function (event) { return event instanceof i1.ActivationEnd; }))
                .subscribe(function (event) {
                _this.selectItems();
            });
        }
        Object.defineProperty(AvlSideNavComponent.prototype, "open", {
            /**
             * Can be set to open or close the side nav.
             * Returns the current state of the side nav.
             */
            get: function () {
                return this.openValue;
            },
            set: function (val) {
                this.openValue = val;
                this.openChange.next(val);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.toggleOpen = function () {
            if (!this.manuallyOpened) {
                this.open = !this.open;
            }
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.arrowToggleOpen = function () {
            this.manuallyOpened = !this.open;
            this.open = !this.open;
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.mobileClose = function () {
            if (Math.max(document.documentElement.clientWidth, window.innerWidth) < 960) {
                this.open = false;
            }
        };
        AvlSideNavComponent.prototype.navigateLocal = function (event, route, params, fragment) {
            if (!event.ctrlKey) {
                event.preventDefault();
                var navigationExtras = {
                    queryParams: this.getParams(params),
                    fragment: fragment
                };
                this.router.navigate([route], navigationExtras);
            }
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.groupClicked = function (item) {
            if (!this.open) {
                this.open = true;
                if (!item.expanded) {
                    item.expanded = true;
                }
            }
            else {
                item.expanded = !item.expanded;
            }
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.getScrubberStyle = function () {
            return {
                height: this.selectedParagraph ? '14px' : '0px',
                top: this.selectedParagraphIndex * rowHeightPx + "px"
            };
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.trimSlash = function (str) {
            if (str[0] === '/') {
                str = str.substring(1, str.length);
            }
            if (str[str.length - 1] === '/') {
                str = str.substring(0, str.length - 1);
            }
            return str;
        };
        AvlSideNavComponent.prototype.selectItems = function () {
            if (!this.menuItems) {
                return;
            }
            var fragment = this.router.parseUrl(this.router.url).fragment;
            var url = this.router.url.split('#')[0];
            var queue = this.menuItems.slice();
            queue.sort(function (pageOne, pageTwo) { return (pageOne.route < pageTwo.route ? -1 : 1); });
            var currentGroup;
            this.selectedGroup = undefined;
            this.selectedPage = undefined;
            this.selectedParagraph = undefined;
            var fallbackSelectedPage;
            var _loop_1 = function () {
                var item = queue.pop();
                if (isGroup(item)) {
                    currentGroup = item;
                    item.subItems.forEach(function (subitem) {
                        queue.push(subitem);
                    });
                }
                else {
                    if (fallbackSelectedPage == null &&
                        this_1.trimSlash(url).startsWith(this_1.trimSlash(item.route))) {
                        fallbackSelectedPage = item;
                    }
                    if (item.route &&
                        this_1.trimSlash(url).endsWith(this_1.trimSlash(item.route + this_1.getUrlParams(item.params)))) {
                        if (this_1.selectedPage &&
                            this_1.selectedPage.route &&
                            this_1.selectedPage.route.length > item.route.length) {
                            return "continue";
                        }
                        if (item.params && item.params.length > 0) {
                            var object_1 = new Object();
                            item.params.forEach(function (i) {
                                object_1[i.name] = i.value;
                            });
                            if (JSON.stringify(this_1.params) === JSON.stringify(object_1)) {
                                this_1.selectedPage = item;
                            }
                        }
                        else {
                            this_1.selectedPage = item;
                        }
                        if (isTopLevelPage(item)) {
                            this_1.selectedGroup = undefined;
                        }
                        else {
                            this_1.selectedGroup = currentGroup;
                        }
                        if (item.paragraphs && item.paragraphs.length > 0) {
                            var paragraphIndex = item.paragraphs.findIndex(function (p) { return p.id === fragment; });
                            if (fragment && item.paragraphs && paragraphIndex !== -1) {
                                this_1.selectedParagraph = fragment;
                                this_1.selectedParagraphIndex = paragraphIndex;
                            }
                        }
                    }
                }
            };
            var this_1 = this;
            while (queue.length) {
                _loop_1();
            }
            if (this.selectedPage == null) {
                this.selectedPage = fallbackSelectedPage;
            }
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.ngOnChanges = function (changes) {
            if (changes['menuItems']) {
                this.selectItems();
            }
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.getParams = function (params) {
            if (params && params.length > 0) {
                var object_2 = {};
                params.forEach(function (param) {
                    object_2[param.name] = param.value;
                });
                return object_2;
            }
            else {
                return {};
            }
        };
        /**
         * @hidden
         */
        AvlSideNavComponent.prototype.getUrlParams = function (params) {
            if (params && params.length > 0) {
                var url_1 = '?';
                params.forEach(function (param) {
                    url_1 += param.name + '=' + param.value + '&';
                });
                return url_1.slice(0, -1);
            }
            else {
                return '';
            }
        };
        return AvlSideNavComponent;
    }());
    AvlSideNavComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlSideNavComponent, deps: [{ token: i1__namespace.Router }, { token: i1__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlSideNavComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlSideNavComponent, selector: "avl-side-nav", inputs: { open: "open", menuItems: "menuItems", responsive: "responsive", mobile: "mobile", shellUrl: "shellUrl" }, outputs: { openChange: "openChange" }, host: { properties: { "class.open": "this.open", "class.responsive": "this.responsive", "class.mobile": "this.mobile" } }, usesOnChanges: true, ngImport: i0__namespace, template: "<div #outerContainer [class.closed]=\"!open\" class=\"outer-container toolbar-spacing\">\r\n  <div class=\"item-scroll\">\r\n    <div #innerContainer class=\"inner-container\">\r\n      <ng-template ngFor let-item [ngForOf]=\"menuItems\">\r\n        <!-- Top level page -->\r\n        <a\r\n          *ngIf=\"!item.subItems && !shellUrl\"\r\n          tabindex=\"0\"\r\n          class=\"item top-level-page\"\r\n          routerLink=\"{{ item.route }}\"\r\n          [queryParams]=\"getParams(item.params)\"\r\n          [class.selected]=\"item === selectedPage\"\r\n          (click)=\"mobileClose()\"\r\n        >\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{ item.icon }}\"></avl-icon>\r\n            <img alt=\"[[item.name]]\" *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\" />\r\n          </div>\r\n          <div class=\"label-div\">{{ item.label }}</div>\r\n          <div class=\"item-overlay\"></div>\r\n        </a>\r\n        <a\r\n          *ngIf=\"!item.subItems && shellUrl\"\r\n          tabindex=\"0\"\r\n          class=\"item top-level-page\"\r\n          href=\"{{ shellUrl + '/' + trimSlash(item.route + getUrlParams(item.params)) }}\"\r\n          [class.selected]=\"item === selectedPage\"\r\n          (click)=\"mobileClose(); navigateLocal($event, item.route, item.params)\"\r\n        >\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{ item.icon }}\"></avl-icon>\r\n            <img alt=\"[[item.name]]\" *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\" />\r\n          </div>\r\n          <div class=\"label-div\">{{ item.label }}</div>\r\n          <div class=\"item-overlay\"></div>\r\n        </a>\r\n        <!-- Paragraphs of a top level page -->\r\n        <div\r\n          class=\"child-container\"\r\n          *ngIf=\"open && item.paragraphs && item.paragraphs.length > 0 && item === selectedPage\"\r\n          [@expandCollapse]\r\n        >\r\n          <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n          <div *ngIf=\"!shellUrl\">\r\n            <a\r\n              *ngFor=\"let paragraph of item.paragraphs\"\r\n              class=\"item top-level-paragraph\"\r\n              routerLink=\"{{ item.route }}\"\r\n              [queryParams]=\"getParams(item.params)\"\r\n              fragment=\"{{ paragraph.id }}\"\r\n              [class.selected]=\"paragraph.id === selectedParagraph\"\r\n              (click)=\"mobileClose()\"\r\n            >\r\n              <div class=\"label-div\">{{ paragraph.label }}</div>\r\n            </a>\r\n          </div>\r\n          <div *ngIf=\"shellUrl\">\r\n            <a\r\n              *ngFor=\"let paragraph of item.paragraphs\"\r\n              class=\"item top-level-paragraph\"\r\n              href=\"{{\r\n                shellUrl +\r\n                  '/' +\r\n                  trimSlash(item.route + getUrlParams(item.params)) +\r\n                  '#' +\r\n                  paragraph.id\r\n              }}\"\r\n              [class.selected]=\"paragraph.id === selectedParagraph\"\r\n              (click)=\"mobileClose(); navigateLocal($event, item.route, item.params, paragraph.id)\"\r\n            >\r\n              <div class=\"label-div\">{{ paragraph.label }}</div>\r\n            </a>\r\n          </div>\r\n          <div class=\"page-progress-bar\">\r\n            <div class=\"page-progress-bar-background\"></div>\r\n            <div class=\"page-progress-bar-scrubber\" [ngStyle]=\"getScrubberStyle()\"></div>\r\n          </div>\r\n        </div>\r\n        <!-- Group -->\r\n        <div\r\n          *ngIf=\"item.subItems\"\r\n          tabindex=\"0\"\r\n          class=\"item group\"\r\n          [class.expanded]=\"item.expanded\"\r\n          (click)=\"groupClicked(item)\"\r\n          [class.selected]=\"item === selectedGroup\"\r\n        >\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{ item.icon }}\"></avl-icon>\r\n            <img alt=\"[[item.name]]\" *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\" />\r\n          </div>\r\n          <div class=\"label-div group\">{{ item.label }}</div>\r\n          <avl-icon class=\"group-arrow\" icon=\"arrow-drop-down\"></avl-icon>\r\n          <div class=\"item-overlay\"></div>\r\n        </div>\r\n        <!-- Subpages -->\r\n        <div\r\n          class=\"child-container\"\r\n          *ngIf=\"open && item.subItems && item.subItems.length > 0 && item.expanded\"\r\n          [@expandCollapse]\r\n          (click)=\"toggleOpen()\"\r\n        >\r\n          <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n          <div>\r\n            <ng-template ngFor let-subItem [ngForOf]=\"item.subItems\">\r\n              <a\r\n                *ngIf=\"!shellUrl\"\r\n                class=\"item subpage\"\r\n                routerLink=\"{{ subItem.route }}\"\r\n                [queryParams]=\"getParams(subItem.params)\"\r\n                [class.selected]=\"subItem === selectedPage\"\r\n                (click)=\"mobileClose()\"\r\n              >\r\n                <div class=\"label-div\">{{ subItem.label }}</div>\r\n                <div class=\"item-overlay\"></div>\r\n              </a>\r\n              <a\r\n                *ngIf=\"shellUrl\"\r\n                class=\"item subpage\"\r\n                href=\"{{\r\n                  shellUrl + '/' + trimSlash(subItem.route + getUrlParams(subItem.params))\r\n                }}\"\r\n                [class.selected]=\"subItem === selectedPage\"\r\n                (click)=\"mobileClose(); navigateLocal($event, item.route, item.params)\"\r\n              >\r\n                <div class=\"label-div\">{{ subItem.label }}</div>\r\n                <div class=\"item-overlay\"></div>\r\n              </a>\r\n              <!-- Paragraphs of a subpage -->\r\n              <div\r\n                class=\"child-container\"\r\n                *ngIf=\"\r\n                  subItem.paragraphs && subItem.paragraphs.length > 0 && subItem === selectedPage\r\n                \"\r\n                [@expandCollapse]\r\n              >\r\n                <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n                <div *ngIf=\"!shellUrl\">\r\n                  <a\r\n                    *ngFor=\"let paragraph of subItem.paragraphs\"\r\n                    class=\"item subpage-paragraph\"\r\n                    routerLink=\"{{ subItem.route }}\"\r\n                    [queryParams]=\"getParams(subItem.params)\"\r\n                    fragment=\"{{ paragraph.id }}\"\r\n                    [class.selected]=\"paragraph.id === selectedParagraph\"\r\n                    (click)=\"mobileClose()\"\r\n                  >\r\n                    <div class=\"label-div\">{{ paragraph.label }}</div>\r\n                  </a>\r\n                </div>\r\n                <div *ngIf=\"shellUrl\">\r\n                  <a\r\n                    *ngFor=\"let paragraph of subItem.paragraphs\"\r\n                    class=\"item subpage-paragraph\"\r\n                    href=\"{{\r\n                      shellUrl +\r\n                        '/' +\r\n                        trimSlash(subItem.route + getUrlParams(item.params)) +\r\n                        '#' +\r\n                        paragraph.id\r\n                    }}\"\r\n                    [class.selected]=\"paragraph.id === selectedParagraph\"\r\n                    (click)=\"\r\n                      mobileClose(); navigateLocal($event, subItem.route, item.params, paragraph.id)\r\n                    \"\r\n                  >\r\n                    <div class=\"label-div\">{{ paragraph.label }}</div>\r\n                  </a>\r\n                </div>\r\n                <div class=\"page-progress-bar\">\r\n                  <div class=\"page-progress-bar-background\"></div>\r\n                  <div class=\"page-progress-bar-scrubber\" [ngStyle]=\"getScrubberStyle()\"></div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div class=\"arrow-spacer\"></div>\r\n\r\n  <svg\r\n    (click)=\"arrowToggleOpen()\"\r\n    [class.closed]=\"!open\"\r\n    class=\"open-close-arrow\"\r\n    id=\"Layer_1\"\r\n    data-name=\"Layer 1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <g transform=\"translate(405 102) rotate(-180)\">\r\n      <path\r\n        d=\"M-972.955,492l6.774-6,1.581,1.4-5.194,4.6,5.194,4.6-1.581,1.4Zm-5.645,0,6.773-6,1.581,1.4-5.193,4.6,5.193,4.6-1.581,1.4Z\"\r\n        transform=\"translate(1364.6 -402)\"\r\n      />\r\n    </g>\r\n  </svg>\r\n</div>\r\n<div class=\"scrim\" (click)=\"open = false\"></div>\r\n", styles: [":host{font-family:var(--avl-font-family);height:100%;display:block;--text-color:var(--avl-side-nav-text-color,var(--avl-foreground-color));--icons-color:var(--avl-side-nav-icons-color,var(--avl-foreground-medium-color));--background-color:var(--avl-side-nav-background-color,var(--avl-sidenav-color));--item-icon-width:72px;--side-nav-mini-width:var(--item-icon-width);--side-nav-open-width:var(--avl-side-nav-open-width,256px);--item-height:48px;box-shadow:var(--avl-box-shadow-12dp);z-index:3}.outer-container{position:relative;box-sizing:content-box;height:calc(100% - 56px);height:calc(100% - var(--avl-app-bar-height, 56px));background-color:var(--background-color);overflow:hidden}.inner-container,.outer-container{width:var(--side-nav-open-width)}.toolbar-spacing{padding-top:56px;padding-top:var(--avl-app-bar-height,56px)}.open-close-arrow{position:absolute;bottom:12px;right:24px;font-size:24px;fill:var(--icons-color);cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:24px}.open-close-arrow:not(.closed){transform:scaleX(-1)}.outer-container.closed{width:var(--side-nav-mini-width)}.arrow-spacer{height:48px}.item-scroll{height:calc(100% - 48px);overflow-y:auto;overflow-x:hidden}.item{display:flex;align-items:center;cursor:pointer;height:var(--item-height);position:relative;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;isolation:isolate}.item,.item:active{color:var(--text-color)}.top-level-paragraph{padding-left:88px}.subpage{padding-left:72px}.subpage-paragraph{padding-left:88px}.label-div{z-index:10;font-family:Roboto,sans-serif;max-width:160px;overflow:hidden;text-overflow:ellipsis;max-height:40px;word-break:break-word;-webkit-box-orient:vertical;display:-webkit-box;-webkit-line-clamp:2}.group.expanded>.label-div.group{font-family:Roboto-Medium,sans-serif}.label-div.group{max-width:calc(100% - 112px)}.image-div{color:var(--avl-foreground-medium-color);display:flex;align-items:center;justify-content:center;width:var(--item-icon-width);height:var(--item-height);margin-right:0;z-index:9}img{height:auto;width:auto;max-height:24px;max-width:24px}avl-icon{margin-bottom:0;font-size:24px}.group-arrow{position:absolute;right:24px}.group.expanded>.group-arrow{transform:rotate(180deg)}.item-overlay{box-sizing:border-box;position:absolute;height:100%;width:100%;left:0;z-index:0}.item.selected>.item-overlay{background-color:var(--avl-product-focus-color);background-color:var(--avl-side-nav-product-color,var(--avl-product-focus-color))}.item:hover:not(.selected)>.item-overlay{background-color:var(--avl-product-hover-color);background-color:var(--avl-side-nav-product-color-hover,var(--avl-product-hover-color))}.item{outline:none;white-space:pre-wrap;padding-right:24px}.item.selected{font-weight:500}.child-container{position:relative}.page-progress-bar{position:absolute;left:72px;top:11px;bottom:11px;width:2px;overflow:hidden}.page-progress-bar-background{background-color:var(--text-color);opacity:.2;width:100%;height:100%}.page-progress-bar-scrubber{position:absolute;width:100%;background-color:var(--text-color);opacity:1;transition:height .2s ease,top .2s ease;margin-top:6px;margin-bottom:2px}.child-container{display:flex;overflow:hidden;flex-direction:column-reverse}@-webkit-keyframes closing{0%{width:var(--side-nav-open-width)}to{width:var(--side-nav-mini-width)}}@keyframes closing{0%{width:var(--side-nav-open-width)}to{width:var(--side-nav-mini-width)}}.outer-container.closed{-webkit-animation-name:closing;animation-name:closing;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1);transition-duration:195ms}@-webkit-keyframes opening{0%{width:var(--side-nav-mini-width)}to{width:var(--side-nav-open-width)}}@keyframes opening{0%{width:var(--side-nav-mini-width)}to{width:var(--side-nav-open-width)}}.outer-container:not(.closed){-webkit-animation-name:opening;animation-name:opening;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1);transition-duration:225ms}avl-icon{color:var(--avl-foreground-medium-color)}@media (max-width:960px){:host(.responsive){position:absolute;--side-nav-mini-width:0;transition:box-shadow .25s}:host(.responsive[slot=left-side]){left:0}:host(.responsive[slot=right-side]){right:0}:host(.responsive:not(.open)){box-shadow:none}:host(.responsive) .item-scroll{height:100%}:host(.responsive) .open-close-arrow{display:none}:host(.responsive) .arrow-spacer{display:none;visibility:hidden}:host(.responsive) .scrim{transition:all .25s;transition-duration:250px}:host(.responsive[slot=left-side]:not(.open)) .scrim{visibility:hidden;left:0}:host(.responsive.open) .scrim{background-color:var(--avl-scrim-color);position:fixed;visibility:visible;top:0;width:100%;height:100%}:host(.responsive[slot=left-side].open) .scrim{left:var(--side-nav-open-width)}:host(.responsive[slot=right-side].open) .scrim{right:var(--side-nav-open-width)}:host(.responsive[slot=right-side]:not(.open)) .scrim{visibility:hidden;right:0}}:host(.mobile){position:absolute;--side-nav-mini-width:0;transition:box-shadow .25s}:host(.mobile[slot=left-side]){left:0}:host(.mobile[slot=right-side]){right:0}:host(.mobile:not(.open)){box-shadow:none}:host(.mobile) .item-scroll{height:100%}:host(.mobile) .open-close-arrow{display:none}:host(.mobile) .arrow-spacer{display:none;visibility:hidden}:host(.mobile) .scrim{transition:all .25s;transition-duration:250px}:host(.mobile[slot=left-side]:not(.open)) .scrim{visibility:hidden;left:0}:host(.mobile.open) .scrim{background-color:var(--avl-scrim-color);position:fixed;visibility:visible;top:0;width:100%;height:100%}:host(.mobile[slot=left-side].open) .scrim{left:var(--side-nav-open-width)}:host(.mobile[slot=right-side].open) .scrim{right:var(--side-nav-open-width)}:host(.mobile[slot=right-side]:not(.open)) .scrim{visibility:hidden;right:0}"], directives: [{ type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2__namespace.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], animations: [
            animations.trigger('expandCollapse', [
                animations.transition(':enter', [
                    animations.style({ 'max-height': '0px' }),
                    animations.animate('225ms ease-in', animations.style({ transform: 'translateY(0%)', 'max-height': '200px' }))
                ]),
                animations.transition(':leave', [
                    animations.style({ 'max-height': '200px' }),
                    animations.animate('180ms ease-in', animations.style({ 'max-height': '0px' }))
                ])
            ])
        ] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlSideNavComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-side-nav',
                        templateUrl: './avl-side-nav.component.html',
                        styleUrls: ['./avl-side-nav.component.css'],
                        animations: [
                            animations.trigger('expandCollapse', [
                                animations.transition(':enter', [
                                    animations.style({ 'max-height': '0px' }),
                                    animations.animate('225ms ease-in', animations.style({ transform: 'translateY(0%)', 'max-height': '200px' }))
                                ]),
                                animations.transition(':leave', [
                                    animations.style({ 'max-height': '200px' }),
                                    animations.animate('180ms ease-in', animations.style({ 'max-height': '0px' }))
                                ])
                            ])
                        ]
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.Router }, { type: i1__namespace.ActivatedRoute }]; }, propDecorators: { open: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class.open']
                }], menuItems: [{
                    type: i0.Input
                }], responsive: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class.responsive']
                }], mobile: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class.mobile']
                }], shellUrl: [{
                    type: i0.Input
                }], openChange: [{
                    type: i0.Output
                }] } });
    /**
     * @hidden
     */
    function isGroup(item) {
        return item.subItems !== undefined && item.subItems.length > 0;
    }
    /**
     * @hidden
     */
    function isTopLevelPage(item) {
        return (!isGroup(item) &&
            (item.icon !== undefined || item.iconUrl !== undefined));
    }

    var AvlAppLayoutComponent = /** @class */ (function () {
        function AvlAppLayoutComponent() {
        }
        AvlAppLayoutComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            if (this.sideNav && this.appBar) {
                this.appBar.burgerClicked.subscribe(function () { return _this.sideNav.open = !_this.sideNav.open; });
            }
        };
        return AvlAppLayoutComponent;
    }());
    AvlAppLayoutComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAppLayoutComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlAppLayoutComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlAppLayoutComponent, selector: "avl-app-layout", queries: [{ propertyName: "sideNav", first: true, predicate: AvlSideNavComponent, descendants: true }, { propertyName: "appBar", first: true, predicate: AvlAppBarComponent, descendants: true }], ngImport: i0__namespace, template: "<ng-content select=\"[slot=toolbar]\"></ng-content>\r\n<div class=\"sideNavAndContent\">\r\n  <ng-content select=\"[slot=left-side]\"></ng-content>\r\n  <main>\r\n    <ng-content></ng-content>\r\n  </main>\r\n  <ng-content select=\"[slot=right-side]\"></ng-content>\r\n</div>\r\n", styles: [".sideNavAndContent{display:flex;flex-flow:row nowrap;height:100%;padding-bottom:4px;position:relative}.scrim{display:none;visibility:hidden}main{--app-bar-height:var(--avl-app-bar-height,53px);color:var(--avl-primary-text-color);width:100%;padding:24px;padding:var(--avl-app-layout-content-padding,24px);overflow:auto;margin-top:var(--app-bar-height);position:relative}:host([noPadding]) main{padding:0}"] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAppLayoutComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-app-layout',
                        templateUrl: './avl-app-layout.component.html',
                        styleUrls: [
                            './avl-app-layout.component.css'
                        ],
                        encapsulation: i0.ViewEncapsulation.Emulated
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { sideNav: [{
                    type: i0.ContentChild,
                    args: [AvlSideNavComponent]
                }], appBar: [{
                    type: i0.ContentChild,
                    args: [AvlAppBarComponent]
                }] } });

    var AvlNoPaddingDirective = /** @class */ (function () {
        function AvlNoPaddingDirective(elementRef) {
            this.elementRef = elementRef;
        }
        /** @hidden */
        AvlNoPaddingDirective.prototype.ngOnInit = function () {
            var appLayout = this.findAppLayout();
            if (appLayout) {
                appLayout.setAttribute('noPadding', '');
            }
        };
        /** @hidden */
        AvlNoPaddingDirective.prototype.ngOnDestroy = function () {
            var appLayout = this.findAppLayout();
            if (appLayout) {
                appLayout.removeAttribute('noPadding');
            }
        };
        AvlNoPaddingDirective.prototype.findAppLayout = function () {
            var element = this.elementRef.nativeElement;
            while (element) {
                if (element.tagName.toLowerCase() == 'avl-app-layout') {
                    return element;
                }
                element = element.parentElement;
            }
        };
        return AvlNoPaddingDirective;
    }());
    AvlNoPaddingDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlNoPaddingDirective, deps: [{ token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AvlNoPaddingDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.3", type: AvlNoPaddingDirective, selector: "[avl-no-padding]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlNoPaddingDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[avl-no-padding]'
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }]; } });

    var AvlParagraphDirective = /** @class */ (function () {
        function AvlParagraphDirective(elementRef) {
            this.elementRef = elementRef;
        }
        return AvlParagraphDirective;
    }());
    AvlParagraphDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlParagraphDirective, deps: [{ token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AvlParagraphDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.3", type: AvlParagraphDirective, selector: "[avl-paragraph]", inputs: { paragraphName: ["avl-paragraph", "paragraphName"] }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlParagraphDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[avl-paragraph]'
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }]; }, propDecorators: { paragraphName: [{
                    type: i0.Input,
                    args: ['avl-paragraph']
                }] } });

    /**
    * avl-long-page should only be used inside avl-app-layout. The only scrollable container should
    * be avl-app-layout (already set by default) and avl-long-page and components that are using it must
    * not scroll in order for avl-long-page to work properly.
    */
    var AvlLongPageComponent = /** @class */ (function () {
        /**
        * @hidden
        */
        function AvlLongPageComponent(router, renderer, platformId) {
            var _this = this;
            this.router = router;
            this.renderer = renderer;
            this.platformId = platformId;
            this.scrollListener = function (event) {
                var newParagraph;
                if (_this.scrollContainer.scrollHeight < Math.round(_this.scrollContainer.scrollTop + _this.scrollContainer.getBoundingClientRect().height)) {
                    newParagraph = _this.paragraphs.last;
                }
                else {
                    _this.paragraphs.forEach(function (paragraph) {
                        var p = paragraph.elementRef.nativeElement;
                        var rect = p.getBoundingClientRect();
                        if (rect.top < window.innerHeight * 0.1) {
                            newParagraph = paragraph;
                        }
                    });
                }
                if (newParagraph) {
                    _this.currentFragment = newParagraph.paragraphName;
                    _this.router.navigate([], { queryParamsHandling: 'preserve', fragment: newParagraph.paragraphName });
                }
            };
        }
        AvlLongPageComponent.prototype.handleRouteChange = function () {
            var paragraphName = this.router.parseUrl(this.router.url).fragment;
            var paragraph = this.paragraphs.find(function (p) { return p.paragraphName === paragraphName; });
            if (this.currentFragment === paragraphName) {
                return;
            }
            if (paragraph) {
                setTimeout(function () { return paragraph.elementRef.nativeElement.scrollIntoView({ behavior: 'instant', block: 'start', inline: 'nearest' }); }, 0);
            }
        };
        /**
        * @hidden
        */
        AvlLongPageComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (i2.isPlatformBrowser(this.platformId)) {
                this.scrollContainer = document.querySelector('avl-app-layout main');
                this.scrollSubscription = this.renderer.listen(this.scrollContainer, 'scroll', this.scrollListener);
            }
            this.handleRouteChange();
            this.routerSubscription = this.router.events.subscribe(function (newRoute) {
                if (newRoute instanceof i1.NavigationEnd) {
                    _this.handleRouteChange();
                }
            });
            this.paragraphsSubscription = this.paragraphs.changes.subscribe(function (_) {
                /* if scrollIntoView has not occured yet try it with new paragraphs
                   this is needed for components which render content (paragraphs)
                   after view has been initialized
                */
                if (!_this.currentFragment) {
                    _this.handleRouteChange();
                }
            });
        };
        /**
        * @hidden
        */
        AvlLongPageComponent.prototype.ngOnDestroy = function () {
            if (this.routerSubscription) {
                this.routerSubscription.unsubscribe();
            }
            if (this.paragraphsSubscription) {
                this.paragraphsSubscription.unsubscribe();
            }
            if (this.scrollSubscription) {
                this.scrollSubscription();
            }
        };
        return AvlLongPageComponent;
    }());
    AvlLongPageComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlLongPageComponent, deps: [{ token: i1__namespace.Router }, { token: i0__namespace.Renderer2 }, { token: i0.PLATFORM_ID }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlLongPageComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlLongPageComponent, selector: "avl-long-page", queries: [{ propertyName: "paragraphs", predicate: AvlParagraphDirective }], ngImport: i0__namespace, template: "<ng-content></ng-content>", styles: [":host{font-family:var(--avl-font-family)}"], encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlLongPageComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-long-page',
                        templateUrl: './avl-long-page.component.html',
                        styleUrls: [
                            './avl-long-page.component.css'
                        ],
                        encapsulation: i0.ViewEncapsulation.None
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace.Router }, { type: i0__namespace.Renderer2 }, { type: Object, decorators: [{
                            type: i0.Inject,
                            args: [i0.PLATFORM_ID]
                        }] }];
        }, propDecorators: { paragraphs: [{
                    type: i0.ContentChildren,
                    args: [AvlParagraphDirective]
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    /** @hidden */
    var KeyboardNavigator = /** @class */ (function () {
        function KeyboardNavigator(numberOfItems, gridWidth) {
            this.numberOfItems = numberOfItems;
            this.gridWidth = gridWidth;
        }
        /** @returns to which item to navigate to from the current item and undefined to not move. */
        KeyboardNavigator.prototype.navigate = function (currentItemIndex, keyPressed, nextGroupSize, prevGroupSize) {
            if (nextGroupSize === void 0) { nextGroupSize = 0; }
            if (prevGroupSize === void 0) { prevGroupSize = 0; }
            nextGroupSize = nextGroupSize || 0;
            prevGroupSize = prevGroupSize || 0;
            var currentItemColumn = currentItemIndex % this.gridWidth;
            var currentItemRow = Math.floor(currentItemIndex / this.gridWidth);
            var maxRows = Math.ceil(this.numberOfItems / this.gridWidth);
            var nextIndex;
            switch (keyPressed) {
                case 'ArrowUp':
                case 'Up':
                    nextIndex = currentItemIndex - this.gridWidth;
                    if (currentItemRow === 0) {
                        if (prevGroupSize === 0) {
                            return undefined;
                        }
                        if (nextIndex < 0) {
                            var prevLastIndex = prevGroupSize - 1;
                            // columns of last element and targeted element of previous group
                            // - 0 based index
                            var lastColumn = prevLastIndex % this.gridWidth;
                            return currentItemColumn <= lastColumn
                                ? currentItemColumn - lastColumn - 1 // negative indexes -> -1 is last element
                                : prevGroupSize <= this.gridWidth
                                    // focus last element of previous group if focus should go on 2 groups before current
                                    ? -1
                                    : -this.gridWidth - currentItemColumn;
                        }
                    }
                    return nextIndex;
                case 'ArrowDown':
                case 'Down': {
                    nextIndex = currentItemIndex + this.gridWidth;
                    var indexExists = nextIndex < this.numberOfItems;
                    if (currentItemRow === maxRows - 1) {
                        if (nextGroupSize === 0) {
                            return undefined;
                        }
                        if (!indexExists) {
                            var nextLastIndex = nextGroupSize - 1;
                            var lastColumn = nextLastIndex % this.gridWidth;
                            return lastColumn >= currentItemColumn
                                ? currentItemColumn
                                : nextGroupSize <= this.gridWidth
                                    ? 0
                                    : this.gridWidth + currentItemColumn;
                        }
                    }
                    else if (!indexExists) {
                        return this.numberOfItems - 1;
                    }
                    return nextIndex;
                }
                case 'ArrowLeft':
                case 'Left':
                    if (currentItemIndex === 0) {
                        return prevGroupSize === 0 ? undefined : -1;
                    }
                    return currentItemIndex - 1;
                case 'ArrowRight':
                case 'Right': {
                    if (currentItemIndex === this.numberOfItems - 1) {
                        return nextGroupSize === 0 ? undefined : 0;
                    }
                    nextIndex = currentItemIndex + 1;
                    return nextIndex;
                }
                default:
                    return undefined;
            }
        };
        return KeyboardNavigator;
    }());

    var AvlSolutionOverviewComponent = /** @class */ (function () {
        function AvlSolutionOverviewComponent(cdr) {
            var _this = this;
            this.cdr = cdr;
            /**
             * Emits search query string on change
             */
            this.searchQueryChange = new i0.EventEmitter();
            /**
             * Emits value of the search query when search triggered
             */
            this.search = new i0.EventEmitter();
            this.gridWidth$ = new rxjs.BehaviorSubject(-1);
            this.largestItemsIndex = -1;
            this.maxItems = 0;
            /**
             * @hidden
             */
            this.showIllustration = function () {
                var _a;
                var containerElement = (_a = _this.container) === null || _a === void 0 ? void 0 : _a.nativeElement;
                if (!containerElement) {
                    return;
                }
                var background = getComputedStyle(containerElement).getPropertyValue('--avl-solution-overview-background-image');
                var illustration = getComputedStyle(containerElement).getPropertyValue('--avl-solution-overview-illustration');
                _this.displayIllustration =
                    (!Boolean(background) || background.replace(' ', '') === 'none' || background === 'auto') &&
                        Boolean(illustration);
            };
        }
        Object.defineProperty(AvlSolutionOverviewComponent.prototype, "groupsOfItems", {
            get: function () {
                var e_1, _b;
                var v = [];
                try {
                    for (var _c = __values(this.groupElementRefs), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var gRef = _d.value;
                        var gEl = gRef.nativeElement;
                        var items = Array.prototype.slice.call(gEl.querySelectorAll('a.item'));
                        v = __spreadArray(__spreadArray([], __read(v)), [items]);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AvlSolutionOverviewComponent.prototype, "iconButtonElements", {
            get: function () {
                if (this.iconButtonElementsCache == null) {
                    this.iconButtonElementsCache = Array.prototype.slice.call(this.iconButtonsContainer.nativeElement.querySelectorAll('avl-icon-button'));
                }
                return this.iconButtonElementsCache;
            },
            enumerable: false,
            configurable: true
        });
        AvlSolutionOverviewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.setupReferenceVars();
            this.gridWidthClass$ = this.gridWidth$.asObservable().pipe(operators.throttleTime(50, rxjs.asyncScheduler, { trailing: true }), operators.map(function (gridWidth) {
                return "grid-width-" + gridWidth;
            }), operators.tap(function (_) {
                _this.setMarginAndIllustration();
            }));
        };
        AvlSolutionOverviewComponent.prototype.ngOnDestroy = function () {
            if (this.groupElementRefsChangesSubscription) {
                this.groupElementRefsChangesSubscription.unsubscribe();
            }
        };
        AvlSolutionOverviewComponent.prototype.ngOnChanges = function (changes) {
            if (changes.groups && !changes.groups.isFirstChange()) {
                this.setupReferenceVars();
                this.gridWidth$.next(this.getGridWidth());
            }
        };
        /** @hidden */
        AvlSolutionOverviewComponent.prototype.ngAfterViewInit = function () {
            this.setupFocusOrdering();
            this.gridWidth$.next(this.getGridWidth());
        };
        /** @hidden */
        AvlSolutionOverviewComponent.prototype.getMaxColumnsClass = function () {
            if (this.maxColumns && window.outerWidth === this.screenWidth) {
                return "max-columns-" + this.maxColumns;
            }
            if (this.maxItems === 0) {
                return;
            }
            var maxColumns;
            switch (this.maxItems) {
                case 1:
                    maxColumns = 1;
                    break;
                case 2:
                case 4:
                    maxColumns = 2;
                    break;
                case 3:
                case 5:
                case 6:
                case 9:
                    maxColumns = 3;
                    break;
                case 7:
                case 8:
                case 11:
                case 12:
                    maxColumns = 4;
                    break;
                default:
                    maxColumns = 5;
            }
            this.maxColumns = maxColumns;
            return "max-columns-" + maxColumns;
        };
        /** @hidden **/
        AvlSolutionOverviewComponent.prototype.onResize = function () {
            this.gridWidth$.next(this.getGridWidth());
        };
        /** @hidden */
        AvlSolutionOverviewComponent.prototype.onKeydownHandler = function (event) {
            var e_2, _b;
            var gOfItems = this.groupsOfItems;
            var numGroups = gOfItems.length;
            if (numGroups === 0) {
                return;
            }
            var activeEl = document.activeElement;
            var isDown = ['Down', 'ArrowDown'].includes(event.key);
            var isUp = ['Up', 'ArrowUp'].includes(event.key);
            var isRight = ['Right', 'ArrowRight'].includes(event.key);
            var isLeft = ['Left', 'ArrowLeft'].includes(event.key);
            var isTab = event.key === 'Tab';
            var searchbar = this.showSearchBar
                ? this.searchbarRef.nativeElement
                : undefined;
            var gNum;
            var iIdx;
            try {
                for (var gOfItems_1 = __values(gOfItems), gOfItems_1_1 = gOfItems_1.next(); !gOfItems_1_1.done; gOfItems_1_1 = gOfItems_1.next()) {
                    var items = gOfItems_1_1.value;
                    if (items.indexOf(activeEl) !== -1) {
                        iIdx = items.indexOf(activeEl);
                        gNum = gOfItems.indexOf(items);
                        // Go to route on 'Space'. 'Enter' already works on <a>.
                        if (event.key === ' ') {
                            items[iIdx].click();
                            return;
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (gOfItems_1_1 && !gOfItems_1_1.done && (_b = gOfItems_1.return)) _b.call(gOfItems_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
            if (this.iconButtonElements.includes(activeEl)) {
                var numIconButtons = this.iconButtonElements.length;
                var idx = this.iconButtonElements.indexOf(activeEl);
                if ((isRight || isTab) && idx === numIconButtons - 1) {
                    if (searchbar != null) {
                        searchbar.focus();
                    }
                    else {
                        gOfItems[0][0].focus();
                    }
                }
                else if (isLeft && idx === 0) {
                    var g = gOfItems[numGroups - 1];
                    var gLen = g.length;
                    g[gLen - 1].focus();
                }
                else if (isLeft) {
                    this.iconButtonElements[idx - 1].focus();
                }
                else if (isRight) {
                    this.iconButtonElements[idx + 1].focus();
                }
                event.preventDefault();
            }
            var itemElements = gOfItems[gNum];
            var gridWidth = this.gridWidth$.value;
            if (searchbar != null && iIdx < gridWidth && gNum === 0 && isUp) {
                searchbar.focus();
                event.preventDefault();
            }
            else if ((isRight || isTab) &&
                gNum === gOfItems.length - 1 &&
                iIdx === itemElements.length - 1) {
                var iconButtons = this.iconButtonElements;
                if (iconButtons != null && iconButtons.length > 0) {
                    iconButtons[0].focus();
                    event.preventDefault();
                }
            }
            else if (searchbar != null && searchbar === activeEl && isDown) {
                gOfItems[0][0].focus();
                event.preventDefault();
            }
            else if (gNum != null) {
                var nextGroup = gNum === gOfItems.length - 1 ? undefined : gOfItems[gNum + 1];
                var prevGroup = gNum === 0 ? undefined : gOfItems[gNum - 1];
                var nGLen = nextGroup == null ? 0 : nextGroup.length;
                var pGLen = prevGroup == null ? 0 : prevGroup.length;
                var keyboardNavigator = new KeyboardNavigator(itemElements.length, gridWidth);
                var itemIndexToMoveTo = keyboardNavigator.navigate(iIdx, event.key, nGLen, pGLen);
                if (itemIndexToMoveTo != null) {
                    if ((isUp || isLeft) && itemIndexToMoveTo < 0) {
                        prevGroup[itemIndexToMoveTo + pGLen].focus();
                    }
                    else if ((isDown || isRight) && iIdx + 1 > itemIndexToMoveTo) {
                        nextGroup[itemIndexToMoveTo].focus();
                    }
                    else {
                        gOfItems[gNum][itemIndexToMoveTo].focus();
                    }
                    event.preventDefault();
                }
            }
        };
        /** @hidden */
        AvlSolutionOverviewComponent.prototype.onQueryChange = function (event) {
            this.searchQueryChange.emit(event.detail.value);
        };
        /** @hidden */
        AvlSolutionOverviewComponent.prototype.onSearch = function (event) {
            this.search.emit(event.detail.value);
        };
        AvlSolutionOverviewComponent.prototype.setupReferenceVars = function () {
            var e_3, _b;
            var max = 0;
            try {
                for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var g = _d.value;
                    var itemSz = g.items.length;
                    if (max < itemSz) {
                        max = itemSz;
                        this.largestItemsIndex = this.groups.indexOf(g);
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_3) throw e_3.error; }
            }
            this.maxItems = max;
        };
        AvlSolutionOverviewComponent.prototype.setMarginAndIllustration = function () {
            this.topMarginNeeded = true;
            this.contentHasScroll = false;
            this.cdr.detectChanges();
            var content = this.groupsContainer.nativeElement;
            this.contentHasScroll = content.scrollHeight > content.clientHeight;
            this.topMarginNeeded = !this.contentHasScroll && this.showSearchBar;
            this.showIllustration();
            this.cdr.detectChanges();
        };
        AvlSolutionOverviewComponent.prototype.getGridWidth = function () {
            var e_4, _b;
            if (this.largestItemsIndex < 0) {
                this.setupReferenceVars();
            }
            var items = this.groupsOfItems[this.largestItemsIndex];
            var firstItemOffsetTop = items[0].offsetTop;
            var i = 0;
            try {
                for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
                    var item = items_1_1.value;
                    if (item.offsetTop > firstItemOffsetTop) {
                        return i;
                    }
                    i++;
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (items_1_1 && !items_1_1.done && (_b = items_1.return)) _b.call(items_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
            return items.length;
        };
        AvlSolutionOverviewComponent.prototype.setupFocusOrdering = function () {
            var _this = this;
            var buttonElements = this.buttonRefs.map(function (elRef) { return elRef.nativeElement; });
            var focusableElements = [];
            if (this.showSearchBar) {
                focusableElements.push(this.searchbarRef.nativeElement);
            }
            focusableElements = __spreadArray(__spreadArray(__spreadArray([], __read(focusableElements)), __read(buttonElements)), __read(this.iconButtonElements));
            focusableElements.forEach(function (el) {
                el.addEventListener('focus', function (event) {
                    var t = event.target;
                    if (t.tagName.toLowerCase() === 'avl-icon-button') {
                        if (_this.showSearchBar &&
                            (['body', 'html'].includes(document.activeElement.tagName.toLowerCase()) ||
                                _this.lastFocusedEl == null ||
                                (_this.lastFocusedEl.tagName.toLowerCase() !== 'avl-icon-button' &&
                                    _this.lastFocusedEl !== buttonElements[buttonElements.length - 1]))) {
                            _this.searchbarRef.nativeElement.focus();
                            event.preventDefault();
                        }
                    }
                    _this.lastFocusedEl = event.target;
                });
            });
        };
        return AvlSolutionOverviewComponent;
    }());
    AvlSolutionOverviewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlSolutionOverviewComponent, deps: [{ token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlSolutionOverviewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlSolutionOverviewComponent, selector: "avl-solution-overview", inputs: { groups: "groups", solutionName: "solutionName", solutionIconUrl: "solutionIconUrl", solutionSubtitle: "solutionSubtitle", showSearchBar: "showSearchBar" }, outputs: { searchQueryChange: "searchQueryChange", search: "search" }, host: { listeners: { "window:resize": "onResize()", "keydown": "onKeydownHandler($event)" } }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true }, { propertyName: "searchbarRef", first: true, predicate: ["searchbar"], descendants: true }, { propertyName: "iconButtonsContainer", first: true, predicate: ["iconButtons"], descendants: true }, { propertyName: "searchbarContainer", first: true, predicate: ["searchbarContainer"], descendants: true }, { propertyName: "groupsContainer", first: true, predicate: ["groupsContainer"], descendants: true }, { propertyName: "buttonRefs", predicate: ["itemElement"], descendants: true }, { propertyName: "groupElementRefs", predicate: ["group"], descendants: true }], usesOnChanges: true, ngImport: i0__namespace, template: "<div class=\"container\"  #container>\r\n  <div class=\"top-bar\">\r\n    <div class=\"row\">\r\n      <img  alt=\"[[solutionName]]\" class=\"solution-logo\" src=\"{{solutionIconUrl}}\" />\r\n      <h1 class=\"solution-name\">{{solutionName}}</h1>\r\n      <div class=\"action-buttons\" #iconButtons>\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"solutionSubtitle\">\r\n      <h2 class=\"solution-subtitle\">{{solutionSubtitle}}</h2>\r\n    </div>\r\n  </div>\r\n  <div class=\"outer-container\" [ngClass]=\"{'top-margin': topMarginNeeded}\">\r\n    <div\r\n      *ngIf=\"displayIllustration\"\r\n      [ngClass]=\"{ 'illustration-holder': 1, 'has-scrollbar': contentHasScroll }\"\r\n    ></div>\r\n    <div class=\"searchbar-container\" [ngClass]=\"gridWidthClass$ | async\" #searchbarContainer>\r\n      <avl-search-bar class=\"search-bar\" *ngIf=\"showSearchBar\"\r\n        #searchbar\r\n        always-open\r\n        (query-changed)=\"onQueryChange($event)\"\r\n        (search)=\"onSearch($event)\">\r\n      </avl-search-bar>\r\n    </div>\r\n    <div class=\"groups\" #groupsContainer>\r\n      <div class=\"flexible\"></div>\r\n      <ng-container *ngFor=\"let group of groups\">\r\n        <div class=\"group-container\">\r\n          <div class=\"item-container\" #group [ngClass]=\"getMaxColumnsClass()\">\r\n            <ng-container *ngTemplateOutlet=\"groupTpl; context: { group: group }\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n      <div class='flexible'>\r\n      </div>\r\n      <div id=\"footer\">\r\n        <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #groupTpl let-group=\"group\">\r\n  <h2 class=\"group-name\" *ngIf=\"group.title\">{{group.title}}</h2>\r\n  <div class=\"text-container\" *ngIf=\"group.header\">{{group.header}}</div>\r\n  <ng-container *ngFor=\"let item of group.items\">\r\n    <ng-container *ngIf=\"item.route\">\r\n      <a class=\"item\"\r\n         #itemElement\r\n         [routerLink]=\"item.route\"\r\n         [ngClass]=\"{'with-description': group.description}\"\r\n         tabindex=\"0\">\r\n        <ng-container *ngTemplateOutlet=\"buttonContent; context: { item: item }\">\r\n        </ng-container>\r\n      </a>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"item.link\">\r\n      <a class=\"item\"\r\n         #itemElement\r\n         [attr.href]=\"item.link\"\r\n         [attr.target]=\"item.target\"\r\n         [attr.rel]=\"item.target == '_blank' ? 'noopener' : null\"\r\n         [ngClass]=\"{'with-description': group.description}\"\r\n         tabindex=\"0\">\r\n        <ng-container *ngTemplateOutlet=\"buttonContent; context: { item: item }\">\r\n        </ng-container>\r\n      </a>\r\n    </ng-container>\r\n  </ng-container>\r\n  <div class=\"text-container\" *ngIf=\"group.footer\">{{group.footer}}</div>\r\n</ng-template>\r\n\r\n<ng-template #buttonContent let-item=\"item\">\r\n  <div class=\"icon-container\" [ngClass]=\"{'no-icon-circle': item.noIconCircle}\">\r\n    <avl-icon\r\n      *ngIf=\"item.icon\"\r\n      class=\"item-icon\"\r\n      [icon]=\"item.icon\">\r\n    </avl-icon>\r\n    <img  alt=\"[[item.label]]\" *ngIf=\"item.iconUrl\" class=\"item-icon\" src=\"{{item.iconUrl}}\" />\r\n  </div>\r\n  <div class=\"icon-label\"><span class=\"label\">{{item.label}}</span></div>\r\n  <div class=\"description\">\r\n    <span class=\"text\">\r\n      {{item.description}}\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n", styles: [":host{--avl-solution-overview-background-color:var(--avl-background-1-color);--avl-solution-overview-background-image:auto;--avl-solution-overview-text-color:var(--avl-foreground-color);--avl-solution-overview-title-color:var(--avl-foreground-color);--avl-solution-overview-subtitle-color:var(--avl-foreground-medium-color);--avl-solution-overview-item-background-color:var(--avl-container-background-color);--avl-solution-overview-item-hover-color:var(--avl-container-background-product-hover-color);--avl-solution-overview-item-focus-color:var(--avl-container-background-product-focus-color);--avl-solution-overview-item-pressed-color:var(--avl-container-background-product-pressed-color);--avl-solution-overview-item-icon-circle-color:var(--avl-product-color);--avl-solution-overview-item-icon-color:var(--avl-on-primary-color);--avl-solution-overview-item-icon-color-no-circle:var(--avl-hint-color);--avl-solution-overview-item-description-color:var(--avl-foreground-medium-color);--avl-solution-overview-item-icon-pressed-color:var(--avl-solution-overview-item-icon-color);display:block;width:100%;--item-width:184px;--item-margin:24px;--total-width:calc(var(--item-width) + var(--item-margin));--total-height:100vh;height:var(--total-height);font-family:var(--avl-font-family)}.container{background-image:var(--avl-solution-overview-background-image);background-size:cover;background-color:var(--avl-solution-overview-background-color);height:100%}.container,.groups{display:flex;flex-direction:column}.groups{width:100%;overflow-y:auto;flex:1 1 100%}#footer{margin-top:24px}.flexible{flex:1 1 100%}.group-container{width:100%}.group-container,.outer-container{display:flex;justify-content:center;position:relative}.outer-container{align-items:center;flex-direction:column;overflow:hidden;height:100%}.outer-container.top-margin{margin-top:-50px}.searchbar-container{display:flex;justify-content:space-between}.search-bar{padding-right:20px}.external-link-container,.item-container{display:grid;width:100%;margin:0 12px 2px;padding-top:24px;grid-template-columns:repeat(auto-fill,var(--item-width)) [end];grid-gap:var(--item-margin);justify-content:center}.text-container{color:var(--avl-solution-overview-text-color);grid-column:1/end}.container .illustration-holder{position:absolute;width:25%;height:100%;right:0;bottom:0;background-image:var(--avl-solution-overview-illustration);background-position:50% 50%;background-size:contain;background-repeat:no-repeat}.container .illustration-holder.has-scrollbar{right:20px}.max-columns-1{max-width:calc(var(--total-width) * 1)}.max-columns-2{max-width:calc(var(--total-width) * 2)}.max-columns-3{max-width:calc(var(--total-width) * 3)}.max-columns-4{max-width:calc(var(--total-width) * 4)}.max-columns-5{max-width:calc(var(--total-width) * 5)}.grid-width-1{width:calc(var(--total-width) * 1)}.grid-width-2{width:calc(var(--total-width) * 2)}.grid-width-3{width:calc(var(--total-width) * 3)}.grid-width-4{width:calc(var(--total-width) * 4)}.grid-width-5{width:calc(var(--total-width) * 5)}.item{position:relative;display:flex;flex-direction:column;align-items:center;padding:12px;width:var(--item-width);height:112px;box-sizing:border-box;background-color:var(--avl-solution-overview-item-background-color);outline:none;box-shadow:var(--avl-box-shadow-1dp);transition:box-shadow .15s cubic-bezier(.4,0,.2,1)}.item.with-description{height:204px}.description{display:none}.item.with-description .description{overflow:hidden;display:block;font-weight:400;text-align:center;font-size:14px;line-height:16px;color:var(--avl-foreground-medium-color)}.item:active,.item:focus,.item:hover{box-shadow:var(--avl-box-shadow-8dp)}.item:focus{background-color:var(--avl-solution-overview-item-focus-color)}.item:hover{background-color:var(--avl-solution-overview-item-hover-color)}.item:active{background-color:var(--avl-solution-overview-item-pressed-color)}.icon-container{background:var(--avl-solution-overview-item-icon-circle-color);display:flex;align-items:center;justify-content:center;width:48px;height:48px;min-height:48px;border-radius:50%}.icon-container.no-icon-circle{background:transparent}.no-icon-circle .item-icon{--avl-icon-custom-color:var(--avl-solution-overview-item-icon-color-no-circle)}.item-icon{width:24px;height:24px;--avl-icon-custom-color:var(--avl-solution-overview-item-icon-color)}.item:active .item-icon{--avl-icon-custom-color:var(--avl-solution-overview-item-icon-pressed-color)}.icon-label{display:flex;justify-content:center;flex-flow:column;width:100%;font-size:14px;line-height:16px;margin:8px 0;font-weight:500;text-align:center;height:32px;color:var(--avl-solution-overview-text-color)}.group-name{margin:0 0 -8px;color:var(--avl-solution-overview-text-color);grid-column:1/end}.group-name,.solution-name{font-weight:400;font-size:24px}.solution-name{margin:0 0 0 32px;height:32px;line-height:32px;flex:auto;color:var(--avl-solution-overview-title-color)}.solution-subtitle{font-weight:400;font-size:20px;margin:0 0 0 64px;color:var(--avl-solution-overview-subtitle-color)}.top-bar{display:flex;flex-direction:column;padding:32px 32px 0}.top-bar .row{display:flex;flex-direction:row;justify-content:space-between;align-items:flex-start;height:32px}.top-bar .row:last-child{margin-top:12px;height:24px}.action-buttons{margin-top:-8px;justify-self:flex-end;height:32px}.solution-logo{top:32px;left:32px;width:32px;height:32px}avl-search-bar{padding-top:20px}"], components: [{ type: i1__namespace$1.AvlFooterComponent, selector: "avl-footer", inputs: ["companyLogo", "currentYear"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3__namespace.AvlSearchBarDirective, selector: "avl-search-bar", outputs: ["queryChange", "openChange"] }, { type: i3__namespace.AvlFormControlDirective, selector: "avl-date,avl-dropdown,avl-time,avl-icon-toggle,avl-numberfield,avl-radio-group,avl-slider,avl-textarea,avl-textfield,avl-timespan,avl-checkbox,avl-switch,avl-chip-list,avl-upload,avl-search-bar,avl-chip-input", inputs: ["readonly"], outputs: ["invalidChange"] }, { type: i3__namespace.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }], pipes: { "async": i2__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlSolutionOverviewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-solution-overview',
                        templateUrl: './avl-solution-overview.component.html',
                        styleUrls: ['./avl-solution-overview.component.css']
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { groups: [{
                    type: i0.Input
                }], solutionName: [{
                    type: i0.Input
                }], solutionIconUrl: [{
                    type: i0.Input
                }], solutionSubtitle: [{
                    type: i0.Input
                }], showSearchBar: [{
                    type: i0.Input
                }], searchQueryChange: [{
                    type: i0.Output
                }], search: [{
                    type: i0.Output
                }], buttonRefs: [{
                    type: i0.ViewChildren,
                    args: ['itemElement']
                }], groupElementRefs: [{
                    type: i0.ViewChildren,
                    args: ['group']
                }], container: [{
                    type: i0.ViewChild,
                    args: ['container']
                }], searchbarRef: [{
                    type: i0.ViewChild,
                    args: ['searchbar']
                }], iconButtonsContainer: [{
                    type: i0.ViewChild,
                    args: ['iconButtons']
                }], searchbarContainer: [{
                    type: i0.ViewChild,
                    args: ['searchbarContainer']
                }], groupsContainer: [{
                    type: i0.ViewChild,
                    args: ['groupsContainer']
                }], onResize: [{
                    type: i0.HostListener,
                    args: ['window:resize']
                }], onKeydownHandler: [{
                    type: i0.HostListener,
                    args: ['keydown', ['$event']]
                }] } });

    var AvlListExpanderComponent = /** @class */ (function () {
        function AvlListExpanderComponent() {
            /**
             * Boolean that changes modes between wide and narrow, false by default.
             */
            this.narrow = false;
            this._open = false;
            /**
             * Event that emits when the expander is opened or closed.
             * Sends boolean value of new open state.
             */
            this.openChange = new i0.EventEmitter();
        }
        Object.defineProperty(AvlListExpanderComponent.prototype, "open", {
            get: function () {
                return this._open;
            },
            /**
             * Boolean that tells whether the expander is open or closed, expander is closed by default.
             */
            set: function (value) {
                this._open = value;
                this.openChange.emit(this._open);
            },
            enumerable: false,
            configurable: true
        });
        AvlListExpanderComponent.prototype.toggleClick = function () {
            this.open = !this.open;
        };
        /** @hidden */
        AvlListExpanderComponent.prototype.keyEvent = function (event) {
            var activeEl = document.activeElement;
            if (event.key === ' ' || event.key === 'Enter') {
                activeEl.click();
                return;
            }
        };
        return AvlListExpanderComponent;
    }());
    AvlListExpanderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlListExpanderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlListExpanderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlListExpanderComponent, selector: "avl-list-expander", inputs: { narrow: "narrow", open: "open" }, outputs: { openChange: "openChange" }, host: { listeners: { "keydown": "keyEvent($event)" } }, ngImport: i0__namespace, template: "<hr/>\r\n<div id=\"expander\">\r\n    <div  [ngClass]=\"narrow ? 'title-container-narrow' : 'title-container'\" tabindex=\"0\" (click)=\"toggleClick()\">\r\n        <div [ngClass]=\"narrow ? 'icon-narrow' : 'icon'\" *ngIf=\"!open\">\r\n            <avl-icon icon=\"hardware:keyboard-arrow-down\" id=\"starsIcon\"></avl-icon>\r\n        </div>\r\n        <div [ngClass]=\"narrow ? 'icon-narrow' : 'icon'\" *ngIf=\"open\">\r\n            <avl-icon icon=\"hardware:keyboard-arrow-up\" id=\"starsIcon\"></avl-icon>\r\n        </div>\r\n        <div [ngClass]=\"narrow ? 'title-narrow' : 'title'\">\r\n            <ng-content select=\"div[role=header]\"></ng-content>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"open\" [ngClass]=\"narrow ? 'content-narrow' : 'content'\">\r\n        <ng-content select=\"div[role=content]\"></ng-content>\r\n    </div>\r\n</div>\r\n\r\n", styles: [".title-container:hover{background-color:var(--avl-ink-default-hover-color);background-color:var(--avl-list-expander-header-hover-color,var(--avl-ink-default-hover-color))}.title-container:focus{background-color:var(--avl-ink-default-focus-color);background-color:var(--avl-list-expander-header-focus-color,var(--avl-ink-default-focus-color));outline:none}.title-container:active{background-color:var(--avl-ink-default-pressed-color);background-color:var(--avl-list-expander-header-pressed-color,var(--avl-ink-default-pressed-color))}.title-container{height:48px;display:flex;flex-flow:row;align-items:center;cursor:pointer}.title{font-size:17px;color:var(--avl-foreground-color);color:var(--avl-list-expander-title-color,var(--avl-foreground-color))}.icon{margin:12px 12px 12px 24px;height:24px}.content{margin:4px 24px}hr{display:block;border:0;border-top:1px solid var(--avl-list-expander-divider-color,var(--avl-divider-color));margin:0}avl-icon{--avl-icon-custom-color:var(--avl-list-expander-icon-color,var(--avl-hint-color))}.icon-narrow{margin:16px 24px 16px 16px;position:absolute;right:0;bottom:0;height:24px}.title-container-narrow{position:relative;height:56px;display:flex;flex-flow:row;align-items:center;cursor:pointer}.content-narrow{margin:0 24px 24px}.title-narrow{margin-left:24px;font-size:17px;margin-right:64px;white-space:nowrap;overflow:hidden}.title-container-narrow:hover{background-color:var(--avl-ink-default-hover-color);background-color:var(--avl-list-expander-header-hover-color,var(--avl-ink-default-hover-color))}.title-container-narrow:focus{background-color:var(--avl-ink-default-focus-color);background-color:var(--avl-list-expander-header-focus-color,var(--avl-ink-default-focus-color));outline:none}.title-container-narrow:active{background-color:var(--avl-ink-default-pressed-color);background-color:var(--avl-list-expander-header-pressed-color,var(--avl-ink-default-pressed-color))}"], directives: [{ type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlListExpanderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-list-expander',
                        templateUrl: './avl-list-expander.component.html',
                        styleUrls: ['./avl-list-expander.component.css']
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { narrow: [{
                    type: i0.Input
                }], open: [{
                    type: i0.Input
                }], openChange: [{
                    type: i0.Output
                }], keyEvent: [{
                    type: i0.HostListener,
                    args: ['keydown', ['$event']]
                }] } });

    var componentsAndDirectives = [
        AvlAppBarComponent,
        AvlAppBarItemComponent,
        AvlSideNavComponent,
        AvlAppLayoutComponent,
        AvlNoPaddingDirective,
        AvlLongPageComponent,
        AvlParagraphDirective,
        AvlSolutionOverviewComponent,
        AvlListExpanderComponent
    ];
    var AvlNavigationModule = /** @class */ (function () {
        function AvlNavigationModule() {
        }
        return AvlNavigationModule;
    }());
    AvlNavigationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlNavigationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AvlNavigationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlNavigationModule, declarations: [AvlAppBarComponent,
            AvlAppBarItemComponent,
            AvlSideNavComponent,
            AvlAppLayoutComponent,
            AvlNoPaddingDirective,
            AvlLongPageComponent,
            AvlParagraphDirective,
            AvlSolutionOverviewComponent,
            AvlListExpanderComponent], imports: [i2.CommonModule,
            i1.RouterModule,
            i3.AvlNgBindersModule,
            i1$1.AvlCommonModule], exports: [AvlAppBarComponent,
            AvlAppBarItemComponent,
            AvlSideNavComponent,
            AvlAppLayoutComponent,
            AvlNoPaddingDirective,
            AvlLongPageComponent,
            AvlParagraphDirective,
            AvlSolutionOverviewComponent,
            AvlListExpanderComponent] });
    AvlNavigationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlNavigationModule, imports: [[
                i2.CommonModule,
                i1.RouterModule,
                i3.AvlNgBindersModule,
                i1$1.AvlCommonModule
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlNavigationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i1.RouterModule,
                            i3.AvlNgBindersModule,
                            i1$1.AvlCommonModule
                        ],
                        declarations: componentsAndDirectives,
                        schemas: [
                            i0.CUSTOM_ELEMENTS_SCHEMA
                        ],
                        exports: componentsAndDirectives
                    }]
            }] });

    var Paragraph = /** @class */ (function () {
        function Paragraph(
        /**
         * Id/fragment of the paragraph header in the page.
         */
        id, 
        /**
         * Label of the paragraph shown in the side nav.
         */
        label) {
            this.id = id;
            this.label = label;
        }
        return Paragraph;
    }());
    var Params = /** @class */ (function () {
        function Params(
        /**
         * Name of the query parameter.
         */
        name, 
        /**
         * Value of the query parameter.
         */
        value) {
            this.name = name;
            this.value = value;
        }
        return Params;
    }());
    var Page = /** @class */ (function () {
        function Page(
        /**
         * Label of the page shown in the side nav.
         */
        label, 
        /**
         * Route to the page.
         */
        route, 
        /**
         * Paragraphs of the long page.
         * It's a regular page if no paragraphs are defined.
         */
        paragraphs, 
        /**
         * Query parameters of the page.
         */
        params, expanded) {
            this.label = label;
            this.route = route;
            this.paragraphs = paragraphs;
            this.params = params;
            this.expanded = expanded;
            this.paragraphs = paragraphs ? paragraphs : [];
            this.params = params ? params : [];
        }
        return Page;
    }());
    var TopLevelPage = /** @class */ (function (_super) {
        __extends(TopLevelPage, _super);
        function TopLevelPage(
        /**
         * Label of the page shown in the side nav.
         */
        label, 
        /**
         * Route to the page.
         */
        route, 
        /**
         * Material icon name for the icon to show next to the label.
         * https://material.io/tools/icons
         * Only one of icon and iconUrl can be used. The other should be undefined.
         */
        icon, 
        /**
         * URL to the icon image to show next to the label.
         * Only one of icon and iconUrl can be used. The other should be undefined.
         */
        iconUrl, 
        /**
         * Paragraphs of the long page.
         * It's a regular page if no paragraphs are defined.
         */
        paragraphs, 
        /**
         * Query parameters of the page.
         */
        params, 
        /**
         * Sub pages of the top level page.
         */
        subItems, expanded) {
            var _this = _super.call(this, label, route, paragraphs, params, expanded) || this;
            _this.icon = icon;
            _this.iconUrl = iconUrl;
            _this.paragraphs = paragraphs;
            _this.params = params;
            _this.subItems = subItems;
            return _this;
        }
        return TopLevelPage;
    }(Page));
    var Group = /** @class */ (function (_super) {
        __extends(Group, _super);
        function Group(
        /**
         * Label of the Group shown in the side nav.
         */
        label, 
        /**
         * Material icon name for the icon to show next to the label.
         * https://material.io/tools/icons
         * Only one of icon and iconUrl can be used. The other should be undefined.
         */
        icon, 
        /**
         * URL to the icon image to show next to the label.
         * Only one of icon and iconUrl can be used. The other should be undefined.
         */
        iconUrl, 
        /**
         * Sub pages of the group.
         */
        subItems, 
        /**
         * Route to the page.
         */
        route, 
        /**
     * Paragraphs of the long page.
     * It's a regular page if no paragraphs are defined.
     */
        paragraphs, params, expanded) {
            var _this = _super.call(this, label, route, paragraphs, params, expanded) || this;
            _this.icon = icon;
            _this.iconUrl = iconUrl;
            _this.subItems = subItems;
            _this.subItems = subItems ? subItems : [];
            return _this;
        }
        return Group;
    }(Page));

    /*
     * Public API Surface of navigation
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ApplicationReference = ApplicationReference;
    exports.AvlAppBarComponent = AvlAppBarComponent;
    exports.AvlAppBarItemComponent = AvlAppBarItemComponent;
    exports.AvlAppLayoutComponent = AvlAppLayoutComponent;
    exports.AvlListExpanderComponent = AvlListExpanderComponent;
    exports.AvlLongPageComponent = AvlLongPageComponent;
    exports.AvlNavigationModule = AvlNavigationModule;
    exports.AvlNoPaddingDirective = AvlNoPaddingDirective;
    exports.AvlParagraphDirective = AvlParagraphDirective;
    exports.AvlSideNavComponent = AvlSideNavComponent;
    exports.AvlSolutionOverviewComponent = AvlSolutionOverviewComponent;
    exports.Group = Group;
    exports.KeyboardNavigator = KeyboardNavigator;
    exports.MenuButtonItems = MenuButtonItems;
    exports.Page = Page;
    exports.Paragraph = Paragraph;
    exports.Params = Params;
    exports.TopLevelPage = TopLevelPage;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=avl-ng-controls-navigation.umd.js.map
