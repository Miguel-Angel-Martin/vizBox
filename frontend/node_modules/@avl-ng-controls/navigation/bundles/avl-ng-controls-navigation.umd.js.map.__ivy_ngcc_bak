{"version":3,"file":"avl-ng-controls-navigation.umd.js","sources":["ng://@avl-ng-controls/navigation/lib/components/avl-app-bar/avl-app-bar.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-app-bar/avl-app-bar-item.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-side-nav/avl-side-nav.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-app-layout/avl-app-layout.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-app-layout/avl-no-padding.directive.ts","ng://@avl-ng-controls/navigation/lib/components/avl-long-page/avl-paragraph.directive.ts","ng://@avl-ng-controls/navigation/lib/components/avl-long-page/avl-long-page.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-solution-overview/keyboard-navigator.ts","ng://@avl-ng-controls/navigation/lib/components/avl-solution-overview/avl-solution-overview.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-list-expander/avl-list-expander.component.ts","ng://@avl-ng-controls/navigation/lib/avl-navigation.module.ts","ng://@avl-ng-controls/navigation/lib/components/avl-side-nav/menu-items.ts"],"sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  OnInit,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-app-switcher/avl-app-switcher';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon.js';\r\n\r\nexport class MenuButtonItems {\r\n  constructor(\r\n    readonly headerText: string,\r\n    readonly headerIconName: string,\r\n    readonly items: Array<{ itemText: string; iconName: string }>,\r\n    readonly footerItems?: Array<{ itemText: string; iconName: string }>\r\n  ) {}\r\n}\r\n\r\n/**\r\n * Object representing sub-application that is added to app-bar drop-down\r\n */\r\nexport class ApplicationReference {\r\n  name: string;\r\n  icon?: string;\r\n  image?: string;\r\n  [key: string]: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'avl-app-bar',\r\n  templateUrl: './avl-app-bar.component.html',\r\n  styleUrls: ['./avl-app-bar.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlAppBarComponent implements OnInit {\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                                   | Default\r\n   * :----------------------------------------|:----------------------------------------------|:-------------------------\r\n   * `--avl-app-bar-background-color`         | Background color of app-bar                   | `--avl-primary-color`\r\n   * `--avl-app-bar-height`                   | Height of app-bar (minus 3px bottom line)     | `53px`\r\n   * `--avl-app-bar-item-color`               | Text color of app-bar items                   | `--avl-on-primary-color`\r\n   * `--avl-app-bar-underline-color`          | Underline color                               | `--avl-product-color`\r\n   */\r\n  _styling: any;\r\n\r\n  /**\r\n   * Tells which is the currently selected application\r\n   */\r\n  @Input()\r\n  public currentApplication: ApplicationReference;\r\n\r\n  /**\r\n   * Boolean to toggle responsive features\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.responsive')\r\n  public responsive: boolean;\r\n\r\n  /**\r\n   * Boolean to set only mobile features on\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mobile')\r\n  public mobile: boolean;\r\n\r\n  /**\r\n   * URL to application home/ landing page\r\n   */\r\n  @Input()\r\n  public homePageUrl: string;\r\n\r\n  /**\r\n   * URL to application icon / logo\r\n   */\r\n  @Input()\r\n  public appLogo: string;\r\n\r\n  /**\r\n   * List of sub-applications used\r\n   */\r\n  @Input() applications: ApplicationReference[] = [];\r\n\r\n  /**\r\n   * Event emitted when new application is added.\r\n   */\r\n\r\n  @Output() applicationListChange: EventEmitter<ApplicationReference[]> = new EventEmitter<ApplicationReference[]>();\r\n\r\n  /**\r\n   * Flag indicating app-bar has fixed positioning or no\r\n   */\r\n  @Input() fixed: boolean = true;\r\n\r\n\r\n  /**\r\n   * Event emitted when application is changed in app-bar drop-down\r\n   */\r\n  @Output()\r\n  currentApplicationChange: EventEmitter<ApplicationReference> = new EventEmitter<ApplicationReference>();\r\n\r\n  /**\r\n   * Event emmited when Burger menu is clicked.\r\n   * Toggles side-nav visibility if app-bar is part of app-layout in responsive mode\r\n   */\r\n  @Output() burgerClicked: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public appLogoSet: boolean = false;\r\n\r\n  private appLogoPreset: boolean = false;\r\n\r\n  /** @hidden */\r\n  _appsLength: number;\r\n\r\n  /**\r\n   * True if only one element added to applications array\r\n   */\r\n  get isSingleApp(): boolean {\r\n    return !this.applications || this._appsLength < 2;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  get showAppLogo(): boolean {\r\n    if (this.currentApplication == null) return false;\r\n    const image = this.currentApplication.image;\r\n    return !(image == null || image === '');\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  burgerIconClicked() {\r\n    this.burgerClicked.emit();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onApplicationChanged(app: ApplicationReference) {\r\n    this.currentApplication = app;\r\n    if (!this.appLogoPreset) {\r\n      setTimeout(() => {\r\n        this.appLogoSet = true;\r\n        this.appLogo = this.currentApplication.image;\r\n      });\r\n    }\r\n    this.currentApplicationChange.emit(this.currentApplication);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onApplicationListChanged(apps: ApplicationReference[]) {\r\n    this.applications = apps;\r\n    this.applicationListChange.emit(apps);\r\n  }\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.appLogo) {\r\n      this.appLogoSet = true;\r\n      this.appLogoPreset = true;\r\n    } else {\r\n      this.appLogo = this.currentApplication ? this.currentApplication.image : '';\r\n      this.appLogoSet = true;\r\n    }\r\n    this._appsLength = this.applications ? this.applications.length : 0;\r\n  }\r\n\r\n}","import { Component, OnInit, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'avl-app-bar-item',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: []\r\n})\r\nexport class AvlAppBarItemComponent implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnInit() {\r\n    (this.elementRef.nativeElement as HTMLElement).classList.add('mdc-toolbar__icon');\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, Output, EventEmitter, Input, OnDestroy, OnChanges, SimpleChanges, HostBinding\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition} from '@angular/animations';\r\nimport { TopLevelPage, Group, Page, Params } from './menu-items';\r\n\r\nimport { Router, ActivationEnd, ActivatedRoute } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\n\r\nconst rowHeightPx = 48;\r\n\r\n@Component({\r\n  selector: 'avl-side-nav',\r\n  templateUrl: './avl-side-nav.component.html',\r\n  styleUrls: ['./avl-side-nav.component.css'],\r\n  animations: [\r\n    trigger('expandCollapse', [\r\n      transition(':enter', [\r\n        style({ 'max-height': '0px' }),\r\n        animate('225ms ease-in', style({ transform: 'translateY(0%)', 'max-height': '200px' }))\r\n      ]),\r\n      transition(':leave', [\r\n        style({ 'max-height': '200px' }),\r\n        animate('180ms ease-in', style({ 'max-height': '0px' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AvlSideNavComponent implements OnDestroy, OnChanges {\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                                                                                           | Default\r\n   * :----------------------------------------|:------------------------------------------------------------------------------------------------------|:---------\r\n   * `--avl-app-bar-height`                   | Height of the toolbar. Needed so that the avl-side-nav can be correctly positioned below the toolbar. | `56px`\r\n   * `--avl-side-nav-product-color`           | Used for selected color                                                                               | `--avl-product-selected`\r\n   * `--avl-side-nav-product-color-hover`     | Used for hover color.                                                                                 | `--avl-product-hover`\r\n   * `--avl-side-nav-text-color`              | Color of the text                                                                                     | `--avl-emphasis-high-color`\r\n   * `--avl-side-nav-icons-color`             | Color of icons                                                                                        | `--avl-emphasis-medium-color`\r\n   * `--avl-side-nav-background-color`        | Background color of the avl-side-nav                                                                  | `--avl-side-nav-color`\r\n   * `--avl-side-nav-open-width`              | Width of the avl-side-nav in the open state.                                                          | `256px`\r\n   *\r\n   */\r\n  _styling: any;\r\n\r\n  private openValue = false;\r\n\r\n  /**\r\n   * Can be set to open or close the side nav.\r\n   * Returns the current state of the side nav.\r\n   */\r\n  @Input()\r\n  @HostBinding('class.open')\r\n  public get open(): boolean {\r\n    return this.openValue;\r\n  }\r\n\r\n  /**\r\n   * Items that are shown in the side nav.\r\n   */\r\n  @Input()\r\n  public menuItems: Array<TopLevelPage | Group>;\r\n\r\n  /**\r\n   * Boolean to toggle responsive features\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.responsive')\r\n  public responsive: boolean;\r\n\r\n  /**\r\n   * Boolean to set only mobile features on\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mobile')\r\n  public mobile: boolean;\r\n\r\n  /**\r\n   * Emitted when the open property changes.\r\n   */\r\n  @Output()\r\n  public openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  public set open(val: boolean) {\r\n    this.openValue = val;\r\n    this.openChange.next(val);\r\n  }\r\n\r\n  private subscription: Subscription;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedGroup: Group;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedPage: Page;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedParagraph: string;\r\n  private selectedParagraphIndex: number;\r\n  private params: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n\r\n    public activeRoute: ActivatedRoute\r\n    ) {\r\n    activeRoute.queryParams.subscribe(p => {\r\n      this.params = p;\r\n    });\r\n    this.subscription = this.router.events\r\n      .pipe(filter(event => event instanceof ActivationEnd))\r\n      .subscribe((event: ActivationEnd) => {\r\n        this.selectItems();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public toggleOpen() {\r\n    if(!this.manuallyOpened) {\r\n      this.open = !this.open;\r\n    }\r\n  }\r\n\r\n  private manuallyOpened: boolean;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public arrowToggleOpen() {\r\n      this.manuallyOpened = !this.open;\r\n      this.open = !this.open;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public mobileClose() {\r\n    if(Math.max(document.documentElement.clientWidth, window.innerWidth) < 960) {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public groupClicked(item) {\r\n    if (!this.open) {\r\n      this.open = true;\r\n      if (!item.expanded) {\r\n        item.expanded = true;\r\n      }\r\n    } else {\r\n      item.expanded = !item.expanded;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public getScrubberStyle() {\r\n    return {\r\n      height: this.selectedParagraph ? '14px' : '0px',\r\n      top: `${this.selectedParagraphIndex * rowHeightPx}px`\r\n    };\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  public trimSlash(str: string) {\r\n    if (str[0] === '/') {\r\n      str = str.substring(1, str.length);\r\n    }\r\n    if (str[str.length - 1] === '/') {\r\n      str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  private selectItems() {\r\n    if (!this.menuItems) {\r\n      return;\r\n    }\r\n    const fragment = this.router.parseUrl(this.router.url).fragment;\r\n    const url = this.router.url.split('#')[0];\r\n    const queue: Array<Page | Group> = this.menuItems.slice();\r\n    let currentGroup: Group;\r\n    this.selectedGroup = undefined;\r\n    this.selectedPage = undefined;\r\n    this.selectedParagraph = undefined;\r\n    let fallbackSelectedPage: any;\r\n    while (queue.length) {\r\n      const item = queue.pop();\r\n      if (isGroup(item)) {\r\n        currentGroup = item;\r\n        item.subItems.map(subitem => { queue.push(subitem); });\r\n      } else {\r\n        if (fallbackSelectedPage == null && this.trimSlash(url).startsWith(this.trimSlash(item.route))) {\r\n          fallbackSelectedPage = item;\r\n        }\r\n        if (item.route && this.trimSlash(url).endsWith(this.trimSlash(item.route + this.getUrlParams(item.params)))) {\r\n          if (this.selectedPage && this.selectedPage.route && this.selectedPage.route.length > item.route.length) {\r\n            continue;\r\n          }\r\n          if (item.params && item.params.length > 0) {\r\n            const object = new Object();\r\n            item.params.forEach(i => {\r\n              object[i.name] = i.value;\r\n            });\r\n            if (JSON.stringify(this.params) === JSON.stringify(object)) {\r\n              this.selectedPage = item;\r\n            }\r\n          } else {\r\n            this.selectedPage = item;\r\n          }\r\n          if (isTopLevelPage(item)) {\r\n            this.selectedGroup = undefined;\r\n          } else {\r\n            this.selectedGroup = currentGroup;\r\n          }\r\n\r\n          if (item.paragraphs && item.paragraphs.length > 0) {\r\n            const paragraphIndex = item.paragraphs.findIndex((p) => p.id === fragment);\r\n            if (fragment && item.paragraphs && paragraphIndex !== -1) {\r\n              this.selectedParagraph = fragment;\r\n              this.selectedParagraphIndex = paragraphIndex;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.selectedPage == null) {\r\n      this.selectedPage = fallbackSelectedPage;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['menuItems']) {\r\n      this.selectItems();\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  getParams(params: Params[]) {\r\n    if (params && params.length > 0) {\r\n      const object = {};\r\n      params.forEach(param => {\r\n        object[param.name] = param.value;\r\n      });\r\n      return object;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n getUrlParams(params: Params[]) {\r\n  if (params && params.length > 0) {\r\n    let url = '?';\r\n    params.forEach(param => {\r\n      url += param.name + '=' + param.value + '&';\r\n    });\r\n    return url.slice(0, -1);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n}\r\n\r\n/**\r\n* @hidden\r\n*/\r\nfunction isGroup(item: Page | Group): item is Group {\r\n  return (item as Group).subItems !== undefined && (item as Group).subItems.length > 0;\r\n}\r\n\r\n/**\r\n* @hidden\r\n*/\r\nfunction isTopLevelPage(item: Page | Group): item is TopLevelPage {\r\n  return !isGroup(item) && ((item as TopLevelPage).icon !== undefined || (item as TopLevelPage).iconUrl !== undefined);\r\n}\r\n\r\n","import { Component, ViewEncapsulation, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { AvlSideNavComponent } from '../avl-side-nav/avl-side-nav.component';\r\nimport { AvlAppBarComponent } from '../avl-app-bar/avl-app-bar.component';\r\n\r\n@Component({\r\n  selector: 'avl-app-layout',\r\n  templateUrl: './avl-app-layout.component.html',\r\n  styleUrls: [\r\n    './avl-app-layout.component.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlAppLayoutComponent implements AfterContentInit {\r\n    /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                         | Default\r\n   * :----------------------------------------|:------------------------------------|:-----------\r\n   * `--avl-app-layout-content-padding`       | Padding around main slotted content | `24px`\r\n   * `--avl-primary-text-color`               | Text color of main slotted content  | ``\r\n   *\r\n   */\r\n  _styling: any;\r\n\r\n  @ContentChild(AvlSideNavComponent) sideNav: AvlSideNavComponent;\r\n  @ContentChild(AvlAppBarComponent) appBar: AvlAppBarComponent;\r\n\r\n  constructor() {}\r\n\r\n  ngAfterContentInit() {\r\n    if(this.sideNav && this.appBar) {\r\n      this.appBar.burgerClicked.subscribe( () => this.sideNav.open = !this.sideNav.open );\r\n    }\r\n  }\r\n}\r\n","import { OnInit, Directive, OnDestroy, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[avl-no-padding]'\r\n})\r\nexport class AvlNoPaddingDirective implements OnInit, OnDestroy {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    const appLayout = this.findAppLayout();\r\n    if (appLayout) {\r\n      appLayout.setAttribute('noPadding', '');\r\n    }\r\n  }\r\n  \r\n  /** @hidden */\r\n  ngOnDestroy() {\r\n    const appLayout = this.findAppLayout();\r\n    if (appLayout) {\r\n      appLayout.removeAttribute('noPadding');\r\n    }\r\n  }\r\n  \r\n  private findAppLayout() {\r\n    let element = this.elementRef.nativeElement as HTMLElement;\r\n    while (element) {\r\n      if (element.tagName.toLowerCase() == 'avl-app-layout') {\r\n        return element;\r\n      }\r\n      element = element.parentElement;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[avl-paragraph]'\r\n})\r\nexport class AvlParagraphDirective {\r\n\r\n  @Input('avl-paragraph') public paragraphName: string;\r\n\r\n  constructor(public elementRef: ElementRef) { }\r\n\r\n}\r\n","import { Component, ViewEncapsulation, ContentChildren, QueryList, AfterViewInit, OnDestroy, Renderer2, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { AvlParagraphDirective } from './avl-paragraph.directive';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n/**\r\n* avl-long-page should only be used inside avl-app-layout. The only scrollable container should\r\n* be avl-app-layout (already set by default) and avl-long-page and components that are using it must\r\n* not scroll in order for avl-long-page to work properly.\r\n*/\r\n@Component({\r\n  selector: 'avl-long-page',\r\n  templateUrl: './avl-long-page.component.html',\r\n  styleUrls: [\r\n    './avl-long-page.component.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AvlLongPageComponent implements AfterViewInit, OnDestroy {\r\n  /**\r\n *\r\n * ### Styling\r\n * The following custom properties are available for styling:\r\n *\r\n * Custom property                          | Description                         | Default\r\n * :----------------------------------------|:------------------------------------|:-----------\r\n *\r\n */\r\n  _styling: any;\r\n\r\n  @ContentChildren(AvlParagraphDirective) private paragraphs: QueryList<AvlParagraphDirective>;\r\n  private currentFragment: string;\r\n  private scrollContainer: HTMLElement;\r\n  private routerSubscription: Subscription;\r\n  private paragraphsSubscription: Subscription;\r\n  private scrollSubscription: () => void;\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  constructor(private router: Router, private renderer: Renderer2, @Inject(PLATFORM_ID) private platformId: Object) {\r\n  }\r\n\r\n  private handleRouteChange() {\r\n    const paragraphName = this.router.parseUrl(this.router.url).fragment;\r\n    const paragraph = this.paragraphs.find(p => p.paragraphName === paragraphName);\r\n    if (this.currentFragment === paragraphName) {\r\n      return;\r\n    }\r\n    if (paragraph) {\r\n      setTimeout(() =>\r\n        paragraph.elementRef.nativeElement.scrollIntoView({ behavior: 'instant', block: 'start', inline: 'nearest' })\r\n        , 0);\r\n    }\r\n  }\r\n\r\n  private scrollListener = (event: UIEvent) => {\r\n    let newParagraph: AvlParagraphDirective;\r\n    if (this.scrollContainer.scrollHeight < Math.round(this.scrollContainer.scrollTop + this.scrollContainer.getBoundingClientRect().height)) {\r\n      newParagraph = this.paragraphs.last;\r\n    } else {\r\n      this.paragraphs.forEach(paragraph => {\r\n        const p = paragraph.elementRef.nativeElement as HTMLElement;\r\n        const rect = p.getBoundingClientRect();\r\n        if (rect.top < window.innerHeight * 0.1) {\r\n          newParagraph = paragraph;\r\n        }\r\n      });\r\n    }\r\n    if (newParagraph) {\r\n      this.currentFragment = newParagraph.paragraphName;\r\n      this.router.navigate([], { queryParamsHandling: 'preserve', fragment: newParagraph.paragraphName });\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngAfterViewInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.scrollContainer = document.querySelector('avl-app-layout main') as HTMLElement;\r\n      this.scrollSubscription = this.renderer.listen(this.scrollContainer, 'scroll', this.scrollListener);\r\n    }\r\n    this.handleRouteChange();\r\n    this.routerSubscription = this.router.events.subscribe(newRoute => {\r\n      if (newRoute instanceof NavigationEnd) {\r\n        this.handleRouteChange();\r\n      }\r\n    });\r\n    this.paragraphsSubscription = this.paragraphs.changes.subscribe(_ => {\r\n      /* if scrollIntoView has not occured yet try it with new paragraphs\r\n         this is needed for components which render content (paragraphs)\r\n         after view has been initialized\r\n      */\r\n      if (!this.currentFragment) {\r\n        this.handleRouteChange();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnDestroy() {\r\n    if (this.routerSubscription) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n    if (this.paragraphsSubscription) {\r\n      this.paragraphsSubscription.unsubscribe();\r\n    }\r\n    if (this.scrollSubscription) {\r\n      this.scrollSubscription();\r\n    }\r\n  }\r\n}\r\n","/** @hidden */\r\nexport class KeyboardNavigator {\r\n  constructor(private numberOfItems: number, private gridWidth: number) { }\r\n\r\n  /** @returns to which item to navigate to from the current item and undefined to not move. */\r\n  public navigate(\r\n    currentItemIndex: number,\r\n    keyPressed: string,\r\n    nextGroupSize: number | undefined = 0,\r\n    prevGroupSize: number | undefined = 0\r\n  ): number {\r\n    nextGroupSize = nextGroupSize || 0;\r\n    prevGroupSize = prevGroupSize || 0;\r\n    const currentItemColumn = currentItemIndex % this.gridWidth;\r\n    const currentItemRow = Math.floor(currentItemIndex / this.gridWidth);\r\n    const maxRows = Math.ceil(this.numberOfItems / this.gridWidth);\r\n\r\n    let nextIndex: number;\r\n\r\n    switch (keyPressed) {\r\n      case 'ArrowUp':\r\n      case 'Up':\r\n        nextIndex = currentItemIndex - this.gridWidth;\r\n        if (currentItemRow === 0) {\r\n          if (prevGroupSize === 0) {\r\n            return undefined;\r\n          }\r\n          if (nextIndex < 0) {\r\n            const prevLastIndex = prevGroupSize - 1;\r\n            // columns of last element and targeted element of previous group\r\n            // - 0 based index\r\n            const lastColumn = prevLastIndex % this.gridWidth;\r\n\r\n            return currentItemColumn <= lastColumn\r\n              ? currentItemColumn - lastColumn - 1 // negative indexes -> -1 is last element\r\n              : prevGroupSize <= this.gridWidth\r\n              // focus last element of previous group if focus should go on 2 groups before current\r\n              ? -1\r\n              : -this.gridWidth - currentItemColumn;\r\n          }\r\n        }\r\n        return nextIndex;\r\n      case 'ArrowDown':\r\n      case 'Down': {\r\n        nextIndex = currentItemIndex + this.gridWidth;\r\n        const indexExists = nextIndex < this.numberOfItems;\r\n        if (currentItemRow === maxRows - 1) {\r\n          if (nextGroupSize === 0) {\r\n            return undefined;\r\n          }\r\n          if (!indexExists) {\r\n            const nextLastIndex = nextGroupSize - 1;\r\n            const lastColumn = nextLastIndex % this.gridWidth;\r\n            return lastColumn >= currentItemColumn\r\n              ? currentItemColumn\r\n              : nextGroupSize <= this.gridWidth\r\n              ? 0\r\n              : this.gridWidth + currentItemColumn;\r\n          }\r\n        } else if (!indexExists) {\r\n          return this.numberOfItems - 1;\r\n        }\r\n        return nextIndex;\r\n      }\r\n      case 'ArrowLeft':\r\n      case 'Left':\r\n        if (currentItemIndex === 0) {\r\n          return prevGroupSize === 0 ? undefined : -1;\r\n        }\r\n        return currentItemIndex - 1;\r\n      case 'ArrowRight':\r\n      case 'Right': {\r\n        if (currentItemIndex === this.numberOfItems - 1) {\r\n          return nextGroupSize === 0 ? undefined : 0;\r\n        }\r\n        nextIndex = currentItemIndex + 1;\r\n        return nextIndex;\r\n      }\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  HostListener,\r\n  ElementRef,\r\n  ViewChildren,\r\n  QueryList,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, asyncScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime, map } from 'rxjs/operators';\r\nimport { KeyboardNavigator } from './keyboard-navigator';\r\n\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-search-bar/avl-search-bar';\r\n\r\nexport interface AvlSolutionOverviewItem {\r\n  /**\r\n   * Label of the item.\r\n   */\r\n  label: string;\r\n\r\n  /**\r\n   * Router which to navigate to when the item is clicked.\r\n   * Shouldn't be used together with link.\r\n   */\r\n  route?: string;\r\n\r\n  /**\r\n   * URL which to navigate to when the item is clicked.\r\n   * Shouldn't be used together with route.\r\n   */\r\n  link?: string;\r\n\r\n  /**\r\n   * Specifies where to open the linked document (_blank | _self | _parent | _top | framename).\r\n   * Used only when link is set.\r\n   */\r\n  target?: string;\r\n\r\n  /**\r\n   * Description of the item.\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * Icon of the item.\r\n   * Only one of icon and iconUrl can be used. The other should be undefined.\r\n   */\r\n  icon?: string;\r\n\r\n  /**\r\n   * URL of the icon image of the item.\r\n   * Only one of icon and iconUrl can be used. The other should be undefined.\r\n   */\r\n  iconUrl?: string;\r\n\r\n  /**\r\n   * Don't show circle around icon. Different color will be applied to icon if enabled\r\n   * Circle is visible by default\r\n   */\r\n  noIconCircle?: boolean;\r\n}\r\n\r\nexport interface AvlSolutionOverviewGroup {\r\n  /**\r\n   * If true, additional space for description text will be provided.\r\n   * It is disabled by default\r\n   */\r\n  description?: boolean;\r\n\r\n  /**\r\n   * Title for the group\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Text above group\r\n   */\r\n  header?: string;\r\n\r\n  /*\r\n   * Text below group\r\n   */\r\n  footer?: string;\r\n\r\n  /**\r\n   * Group items\r\n   */\r\n  items: AvlSolutionOverviewItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'avl-solution-overview',\r\n  templateUrl: './avl-solution-overview.component.html',\r\n  styleUrls: ['./avl-solution-overview.component.css'],\r\n})\r\nexport class AvlSolutionOverviewComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy {\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                   | Description                        | Default\r\n   * :-------------------------------------------------|:-----------------------------------|:----------------------\r\n   * `--avl-solution-overview-background-color`        | Background color of the overview   | `--avl-background-1-color`\r\n   * `--avl-solution-overview-text-color`              | Text color                         | `--avl-foreground-color`\r\n   * `--avl-solution-overview-item-background-color`   | Item background color              | `--avl-container-background-color`\r\n   * `--avl-solution-overview-background-image`        | Background image of the overview   |  auto\r\n   * `--avl-solution-overview-item-hover-color`        | Item background color when hovered | `--avl-container-background-product-hover-color`\r\n   * `--avl-solution-overview-item-focus-color`        | Item background color when focused | `--avl-container-background-product-focus-color`\r\n   * `--avl-solution-overview-item-pressed-color`      | Item background color when pressed | `--avl-container-background-product-pressed-color`\r\n   * `--avl-solution-overview-title-color`             | Title color                        | `--avl-foreground-color``\r\n   * `--avl-solution-overview-subtitle-color`          | Subtitle color                     | `--avl-foreground-medium-color``\r\n   * `--avl-solution-overview-item-icon-color`         | Item icon color                    | `--avl-on-primary-color`\r\n   * `--avl-solution-overview-item-icon-color-no-circle` | Item icon color if noIconCircle is set | `--avl-hint-color`\r\n   * `--avl-solution-overview-item-icon-circle-color`  | Color for icon circle              | `--avl-product-color`\r\n   * `--avl-solution-overview-item-icon-pressed-color` | Item icon color when pressed       | `--avl-solution-overview-item-icon-color`\r\n   * `--avl-solution-overview-item-description-color`  | Item description text color        | `--avl-foreground-medium-color`\r\n   */\r\n  _styling: any;\r\n\r\n  /**\r\n   * Groups defining sections with buttons\r\n   */\r\n  @Input()\r\n  groups: AvlSolutionOverviewGroup[];\r\n\r\n  /**\r\n   * Solution overview title.\r\n   */\r\n  @Input()\r\n  public solutionName: string;\r\n\r\n  /**\r\n   * URL of the icon image of the solution overview title.\r\n   */\r\n  @Input()\r\n  public solutionIconUrl: string;\r\n\r\n  /**\r\n   * Solution overview subtitle.\r\n   */\r\n  @Input()\r\n  public solutionSubtitle?: string;\r\n\r\n  /**\r\n   * Flag for the optional search bar.\r\n   * If true, search bar is shown.\r\n   */\r\n  @Input()\r\n  public showSearchBar: boolean;\r\n\r\n  /**\r\n   * Emits search query string on change\r\n   */\r\n  @Output()\r\n  public searchQueryChange = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Emits value of the search query when search triggered\r\n   */\r\n  @Output()\r\n  public search = new EventEmitter<string>();\r\n\r\n  gridWidthClass$: Observable<string>;\r\n\r\n  /** @hidden */\r\n  @ViewChildren('itemElement') buttonRefs: QueryList<ElementRef>;\r\n\r\n  /** @hidden */\r\n  @ViewChildren('group') groupElementRefs: QueryList<ElementRef>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('searchbar') searchbarRef: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('iconButtons') iconButtonsContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('searchbarContainer') searchbarContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('groupsContainer') groupsContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  contentHasScroll: boolean;\r\n\r\n  private gridWidth$ = new BehaviorSubject<number>(-1);\r\n\r\n  private lastFocusedEl: HTMLElement;\r\n\r\n  private maxColumns: number;\r\n\r\n  private largestItemsIndex = -1;\r\n  private maxItems = 0;\r\n\r\n  // cache screenWidth for maxColumns calculation\r\n  private screenWidth: number;\r\n\r\n  // cache icon buttons since they can hardly be changed dynamically\r\n  private iconButtonElementsCache?: HTMLElement[];\r\n\r\n  private groupElementRefsChangesSubscription: Subscription;\r\n\r\n  private get groupsOfItems(): HTMLElement[][] {\r\n    let v = [];\r\n    for (const gRef of this.groupElementRefs) {\r\n      const gEl = gRef.nativeElement;\r\n      const items = Array.prototype.slice.call(gEl.querySelectorAll('a.item'));\r\n\r\n      v = [...v, items];\r\n    }\r\n    return v;\r\n  }\r\n\r\n  private get iconButtonElements(): HTMLElement[] {\r\n    if (this.iconButtonElementsCache == null) {\r\n      this.iconButtonElementsCache = Array.prototype.slice.call(\r\n        (this.iconButtonsContainer\r\n          .nativeElement as HTMLElement).querySelectorAll('avl-icon-button'));\r\n    }\r\n    return this.iconButtonElementsCache;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupReferenceVars();\r\n    this.gridWidthClass$ = this.gridWidth$.asObservable().pipe(\r\n      throttleTime(50, asyncScheduler, {trailing: true}),\r\n      map(gridWidth => {\r\n        return `grid-width-${gridWidth}`;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.groupElementRefsChangesSubscription) {\r\n      this.groupElementRefsChangesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.groups && !changes.groups.isFirstChange()) {\r\n      this.setupReferenceVars();\r\n      this.gridWidth$.next(this.getGridWidth());\r\n      this.setTopMargin();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  ngAfterViewInit() {\r\n    this.setTopMargin();\r\n    this.setupFocusOrdering();\r\n    this.gridWidth$.next(this.getGridWidth());\r\n  }\r\n\r\n  /** @hidden */\r\n  getMaxColumnsClass(): string {\r\n    if (this.maxColumns && window.outerWidth === this.screenWidth) {\r\n      return `max-columns-${this.maxColumns}`;\r\n    }\r\n    if (this.maxItems === 0) {\r\n      return;\r\n    }\r\n    let maxColumns: number;\r\n    switch (this.maxItems) {\r\n      case 1:\r\n        maxColumns = 1;\r\n        break;\r\n      case 2:\r\n      case 4:\r\n        maxColumns = 2;\r\n        break;\r\n      case 3:\r\n      case 5:\r\n      case 6:\r\n      case 9:\r\n        maxColumns = 3;\r\n        break;\r\n      case 7:\r\n      case 8:\r\n      case 11:\r\n      case 12:\r\n        maxColumns = 4;\r\n        break;\r\n      default:\r\n        maxColumns = 5;\r\n    }\r\n    this.maxColumns = maxColumns;\r\n    return `max-columns-${maxColumns}`;\r\n  }\r\n\r\n  /** @hidden **/\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.gridWidth$.next(this.getGridWidth());\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydownHandler(event: KeyboardEvent) {\r\n    const gOfItems = this.groupsOfItems;\r\n    const numGroups = gOfItems.length;\r\n    if (numGroups === 0) {\r\n      return;\r\n    }\r\n\r\n    const activeEl = document.activeElement as HTMLElement;\r\n    const isDown = ['Down', 'ArrowDown'].includes(event.key);\r\n    const isUp = ['Up', 'ArrowUp'].includes(event.key);\r\n    const isRight = ['Right', 'ArrowRight'].includes(event.key);\r\n    const isLeft = ['Left', 'ArrowLeft'].includes(event.key);\r\n    const isTab = event.key === 'Tab';\r\n\r\n    const searchbar = this.showSearchBar\r\n      ? (this.searchbarRef.nativeElement as HTMLElement)\r\n      : undefined;\r\n\r\n    let gNum: number;\r\n    let iIdx: number;\r\n\r\n    for (const items of gOfItems) {\r\n      if (items.indexOf(activeEl) !== -1) {\r\n        iIdx = items.indexOf(activeEl);\r\n        gNum = gOfItems.indexOf(items);\r\n        // Go to route on 'Space'. 'Enter' already works on <a>.\r\n        if (event.key === ' ') {\r\n          items[iIdx].click();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.iconButtonElements.includes(activeEl)) {\r\n      const numIconButtons = this.iconButtonElements.length;\r\n      const idx = this.iconButtonElements.indexOf(activeEl);\r\n      if ((isRight || isTab) && idx === numIconButtons - 1) {\r\n        if (searchbar != null) {\r\n          searchbar.focus();\r\n        } else {\r\n          gOfItems[0][0].focus();\r\n        }\r\n      } else if (isLeft && idx === 0) {\r\n        const g = gOfItems[numGroups - 1];\r\n        const gLen = g.length;\r\n        g[gLen - 1].focus();\r\n      } else if (isLeft) {\r\n        this.iconButtonElements[idx - 1].focus();\r\n      } else if (isRight) {\r\n        this.iconButtonElements[idx + 1].focus();\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    const itemElements = gOfItems[gNum];\r\n    const gridWidth = this.gridWidth$.value;\r\n\r\n    if (searchbar != null && iIdx < gridWidth && gNum === 0 && isUp) {\r\n      searchbar.focus();\r\n      event.preventDefault();\r\n    } else if (\r\n      (isRight || isTab) &&\r\n      gNum === gOfItems.length - 1 &&\r\n      iIdx === itemElements.length - 1\r\n    ) {\r\n      const iconButtons = this.iconButtonElements;\r\n      if (iconButtons != null && iconButtons.length > 0) {\r\n        iconButtons[0].focus();\r\n        event.preventDefault();\r\n      }\r\n    } else if (searchbar != null && searchbar === activeEl && isDown) {\r\n      gOfItems[0][0].focus();\r\n      event.preventDefault();\r\n    } else if (gNum != null) {\r\n      const nextGroup = gNum === gOfItems.length - 1 ? undefined : gOfItems[gNum + 1];\r\n      const prevGroup = gNum === 0 ? undefined : gOfItems[gNum - 1];\r\n\r\n      const nGLen = nextGroup == null ? 0 : nextGroup.length;\r\n      const pGLen = prevGroup == null ? 0 : prevGroup.length;\r\n\r\n      const keyboardNavigator = new KeyboardNavigator(\r\n        itemElements.length,\r\n        gridWidth\r\n      );\r\n      const itemIndexToMoveTo = keyboardNavigator.navigate(\r\n        iIdx,\r\n        event.key,\r\n        nGLen,\r\n        pGLen\r\n      );\r\n      if (itemIndexToMoveTo != null) {\r\n        if ((isUp || isLeft) && itemIndexToMoveTo < 0) {\r\n          prevGroup[itemIndexToMoveTo + pGLen].focus();\r\n        } else if ((isDown || isRight) && iIdx + 1 > itemIndexToMoveTo) {\r\n          nextGroup[itemIndexToMoveTo].focus();\r\n        } else {\r\n          gOfItems[gNum][itemIndexToMoveTo].focus();\r\n        }\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onQueryChange(event: any) {\r\n    this.searchQueryChange.emit(event.detail.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  onSearch(event: any) {\r\n    this.search.emit(event.detail.value);\r\n  }\r\n\r\n  private setupReferenceVars(): void {\r\n    let max = 0;\r\n    for (const g of this.groups) {\r\n      const itemSz = g.items.length;\r\n      if (max < itemSz) {\r\n        max = itemSz;\r\n        this.largestItemsIndex = this.groups.indexOf(g);\r\n      }\r\n    }\r\n    this.maxItems = max;\r\n  }\r\n\r\n  private setTopMargin() {\r\n    this.contentHasScroll = false;\r\n    this.cdr.detectChanges();\r\n    const content = this.groupsContainer.nativeElement;\r\n    this.contentHasScroll = content.scrollHeight > content.clientHeight;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private getGridWidth(): number {\r\n    if (this.largestItemsIndex < 0) {\r\n      this.setupReferenceVars();\r\n    }\r\n    const items = this.groupsOfItems[this.largestItemsIndex];\r\n    const firstItemOffsetTop = items[0].offsetTop;\r\n\r\n    let i = 0;\r\n    for (const item of items) {\r\n      if (item.offsetTop > firstItemOffsetTop) {\r\n        return i;\r\n      }\r\n      i++;\r\n    }\r\n    return items.length;\r\n  }\r\n\r\n  private setupFocusOrdering() {\r\n    const buttonElements: HTMLElement[] = this.buttonRefs.map(elRef => elRef.nativeElement);\r\n    let focusableElements: HTMLElement[] = [];\r\n\r\n    if (this.showSearchBar) {\r\n      focusableElements.push(this.searchbarRef.nativeElement);\r\n    }\r\n    focusableElements = [\r\n      ...focusableElements,\r\n      ...buttonElements,\r\n      ...this.iconButtonElements\r\n    ];\r\n\r\n    focusableElements.forEach((el) => {\r\n      el.addEventListener('focus', (event: FocusEvent) => {\r\n        const t = event.target as HTMLElement;\r\n        if (t.tagName.toLowerCase() === 'avl-icon-button') {\r\n          if (this.showSearchBar && (\r\n            ['body', 'html'].includes(\r\n              document.activeElement.tagName.toLowerCase()\r\n            ) ||\r\n              this.lastFocusedEl == null ||\r\n              (this.lastFocusedEl.tagName.toLowerCase() !== 'avl-icon-button' &&\r\n               this.lastFocusedEl !== buttonElements[buttonElements.length - 1])\r\n          )) {\r\n            this.searchbarRef.nativeElement.focus();\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        this.lastFocusedEl = event.target as HTMLElement;\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'avl-list-expander',\r\n    templateUrl: './avl-list-expander.component.html',\r\n    styleUrls: ['./avl-list-expander.component.css']\r\n})\r\nexport class AvlListExpanderComponent {\r\n\r\n    /**\r\n     *\r\n     * ### Styling\r\n     * The following custom properties are available for styling:\r\n     *\r\n     * Custom property                                | Description                           | Default\r\n     * :----------------------------------------------|:--------------------------------------|:----------------------\r\n     * `--avl-list-expander-header-hover-color`       | Header background color when hovered  | `--avl-ink-default-hover-color`\r\n     * `--avl-list-expander-header-focus-color`       | Header background color when focused  | `--avl-ink-default-focus-color`\r\n     * `--avl-list-expander-header-pressed-color`     | Header background color when pressed  | `--avl-ink-default-pressed-color`\r\n     * `--avl-list-expander-divider-color`            | Divider color                         | `--avl-divider-color`\r\n     * `--avl-list-expander-title-color`              | Title color                           | `--avl-ink-default-pressed-color`\r\n     * `--avl-list-expander-icon-color`               | Arrow icon color                      | `--avl-divider-color`\r\n     */\r\n    _styling: any;\r\n\r\n    /**\r\n     * Boolean that changes modes between wide and narrow, false by default.\r\n     */\r\n    @Input()\r\n    narrow: boolean = false;\r\n\r\n\r\n    private _open = false;\r\n    /**\r\n     * Boolean that tells whether the expander is open or closed, expander is closed by default.\r\n     */\r\n    @Input()\r\n    set open(value: boolean) {\r\n        this._open = value;\r\n        this.openChange.emit(this._open);\r\n    }\r\n\r\n    get open(): boolean {\r\n        return this._open;\r\n    }\r\n\r\n    /**\r\n     * Event that emits when the expander is opened or closed.\r\n     * Sends boolean value of new open state.\r\n     */\r\n    @Output() openChange = new EventEmitter<boolean>();\r\n\r\n    constructor() {}\r\n\r\n    toggleClick() {\r\n        this.open = !this.open;\r\n    }\r\n\r\n    /** @hidden */\r\n    @HostListener('keydown', ['$event'])\r\n    keyEvent(event: KeyboardEvent) {\r\n        const activeEl = document.activeElement as HTMLElement;\r\n        if (event.key === ' ' || event.key === 'Enter') {\r\n            activeEl.click();\r\n            return;\r\n        }\r\n    }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// toolbar stuff\r\nimport { AvlAppBarComponent } from './components/avl-app-bar/avl-app-bar.component';\r\nimport { AvlAppBarItemComponent } from './components/avl-app-bar/avl-app-bar-item.component';\r\n\r\n// sidenav stuff\r\nimport { AvlSideNavComponent } from './components/avl-side-nav/avl-side-nav.component';\r\n\r\nimport { AvlAppLayoutComponent } from './components/avl-app-layout/avl-app-layout.component';\r\nimport { AvlNoPaddingDirective } from './components/avl-app-layout/avl-no-padding.directive';\r\n\r\nimport { AvlLongPageComponent } from './components/avl-long-page/avl-long-page.component';\r\nimport { AvlParagraphDirective } from './components/avl-long-page/avl-paragraph.directive';\r\n\r\nimport { AvlSolutionOverviewComponent } from './components/avl-solution-overview/avl-solution-overview.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\n\r\nimport { AvlListExpanderComponent } from './components/avl-list-expander/avl-list-expander.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlAppBarComponent,\r\n  AvlAppBarItemComponent,\r\n  AvlSideNavComponent,\r\n  AvlAppLayoutComponent,\r\n  AvlNoPaddingDirective,\r\n  AvlLongPageComponent,\r\n  AvlParagraphDirective,\r\n  AvlSolutionOverviewComponent,\r\n  AvlListExpanderComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    AvlNgBindersModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlNavigationModule { }\r\n","\r\n\r\nexport class Paragraph {\r\n  constructor(\r\n    /**\r\n     * Id/fragment of the paragraph header in the page.\r\n     */\r\n    public readonly id: string,\r\n    /**\r\n     * Label of the paragraph shown in the side nav.\r\n     */\r\n    public readonly label: string\r\n  ) { }\r\n}\r\n\r\nexport class Params {\r\n  constructor(\r\n    /**\r\n     * Name of the query parameter.\r\n     */\r\n    public readonly name: string,\r\n    /**\r\n     * Value of the query parameter.\r\n     */\r\n    public readonly value: string\r\n  ) { }\r\n}\r\n\r\nexport class Page {\r\n  constructor(\r\n    /**\r\n     * Label of the page shown in the side nav.\r\n     */\r\n    public readonly label: string,\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    public readonly route: string,\r\n    /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    public readonly paragraphs?: Paragraph[],\r\n    /**\r\n     * Query parameters of the page.\r\n     */\r\n    public readonly params?: Params[],\r\n\r\n    public readonly expanded?: boolean\r\n  ) {\r\n    this.paragraphs = paragraphs ? paragraphs : [];\r\n    this.params = params ? params : [];\r\n  }\r\n}\r\n\r\nexport class TopLevelPage extends Page {\r\n  constructor(\r\n    /**\r\n     * Label of the page shown in the side nav.\r\n     */\r\n    label: string,\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    route: string,\r\n    /**\r\n     * Material icon name for the icon to show next to the label.\r\n     * https://material.io/tools/icons\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly icon?: string,\r\n    /**\r\n     * URL to the icon image to show next to the label.\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly iconUrl?: string,\r\n    /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    public readonly paragraphs?: Paragraph[],\r\n    /**\r\n     * Query parameters of the page.\r\n     */\r\n    public readonly params?: Params[],\r\n    /**\r\n     * Sub pages of the top level page.\r\n     */\r\n    public readonly subItems?: Page[],\r\n\r\n    expanded?: boolean\r\n  ) {\r\n    super(label, route, paragraphs, params, expanded);\r\n  }\r\n}\r\n\r\nexport class Group extends Page {\r\n  constructor(\r\n    /**\r\n     * Label of the Group shown in the side nav.\r\n     */\r\n    label: string,\r\n    /**\r\n     * Material icon name for the icon to show next to the label.\r\n     * https://material.io/tools/icons\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly icon?: string,\r\n    /**\r\n     * URL to the icon image to show next to the label.\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly iconUrl?: string,\r\n    /**\r\n     * Sub pages of the group.\r\n     */\r\n    public readonly subItems?: Page[],\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    route?: string,\r\n        /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    paragraphs?: Paragraph[],\r\n    params?: Params[],\r\n    expanded?: boolean\r\n  ) {\r\n    super(label, route, paragraphs, params, expanded);\r\n    this.subItems = subItems ? subItems : [];\r\n  }\r\n}\r\n"],"names":["EventEmitter","Input","HostBinding","Output","Component","ViewEncapsulation","ElementRef","router","filter","ActivationEnd","Router","ActivatedRoute","__decorate","trigger","transition","style","animate","ContentChild","Directive","isPlatformBrowser","NavigationEnd","Renderer2","Inject","PLATFORM_ID","ContentChildren","QueryList","BehaviorSubject","throttleTime","asyncScheduler","map","ChangeDetectorRef","ViewChildren","ViewChild","HostListener","NgModule","CommonModule","RouterModule","AvlNgBindersModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}