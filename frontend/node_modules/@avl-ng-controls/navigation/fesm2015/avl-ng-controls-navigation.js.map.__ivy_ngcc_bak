{"version":3,"file":"avl-ng-controls-navigation.js","sources":["ng://@avl-ng-controls/navigation/lib/components/avl-app-bar/avl-app-bar.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-app-bar/avl-app-bar-item.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-side-nav/avl-side-nav.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-app-layout/avl-app-layout.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-app-layout/avl-no-padding.directive.ts","ng://@avl-ng-controls/navigation/lib/components/avl-long-page/avl-paragraph.directive.ts","ng://@avl-ng-controls/navigation/lib/components/avl-long-page/avl-long-page.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-solution-overview/keyboard-navigator.ts","ng://@avl-ng-controls/navigation/lib/components/avl-solution-overview/avl-solution-overview.component.ts","ng://@avl-ng-controls/navigation/lib/components/avl-list-expander/avl-list-expander.component.ts","ng://@avl-ng-controls/navigation/lib/avl-navigation.module.ts","ng://@avl-ng-controls/navigation/lib/components/avl-side-nav/menu-items.ts","ng://@avl-ng-controls/navigation/public-api.ts","ng://@avl-ng-controls/navigation/avl-ng-controls-navigation.ts"],"sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  OnInit,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-app-switcher/avl-app-switcher';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon.js';\r\n\r\nexport class MenuButtonItems {\r\n  constructor(\r\n    readonly headerText: string,\r\n    readonly headerIconName: string,\r\n    readonly items: Array<{ itemText: string; iconName: string }>,\r\n    readonly footerItems?: Array<{ itemText: string; iconName: string }>\r\n  ) {}\r\n}\r\n\r\n/**\r\n * Object representing sub-application that is added to app-bar drop-down\r\n */\r\nexport class ApplicationReference {\r\n  name: string;\r\n  icon?: string;\r\n  image?: string;\r\n  [key: string]: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'avl-app-bar',\r\n  templateUrl: './avl-app-bar.component.html',\r\n  styleUrls: ['./avl-app-bar.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlAppBarComponent implements OnInit {\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                                   | Default\r\n   * :----------------------------------------|:----------------------------------------------|:-------------------------\r\n   * `--avl-app-bar-background-color`         | Background color of app-bar                   | `--avl-primary-color`\r\n   * `--avl-app-bar-height`                   | Height of app-bar (minus 3px bottom line)     | `53px`\r\n   * `--avl-app-bar-item-color`               | Text color of app-bar items                   | `--avl-on-primary-color`\r\n   * `--avl-app-bar-underline-color`          | Underline color                               | `--avl-product-color`\r\n   */\r\n  _styling: any;\r\n\r\n  /**\r\n   * Tells which is the currently selected application\r\n   */\r\n  @Input()\r\n  public currentApplication: ApplicationReference;\r\n\r\n  /**\r\n   * Boolean to toggle responsive features\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.responsive')\r\n  public responsive: boolean;\r\n\r\n  /**\r\n   * Boolean to set only mobile features on\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mobile')\r\n  public mobile: boolean;\r\n\r\n  /**\r\n   * URL to application home/ landing page\r\n   */\r\n  @Input()\r\n  public homePageUrl: string;\r\n\r\n  /**\r\n   * URL to application icon / logo\r\n   */\r\n  @Input()\r\n  public appLogo: string;\r\n\r\n  /**\r\n   * List of sub-applications used\r\n   */\r\n  @Input() applications: ApplicationReference[] = [];\r\n\r\n  /**\r\n   * Event emitted when new application is added.\r\n   */\r\n\r\n  @Output() applicationListChange: EventEmitter<ApplicationReference[]> = new EventEmitter<ApplicationReference[]>();\r\n\r\n  /**\r\n   * Flag indicating app-bar has fixed positioning or no\r\n   */\r\n  @Input() fixed: boolean = true;\r\n\r\n\r\n  /**\r\n   * Event emitted when application is changed in app-bar drop-down\r\n   */\r\n  @Output()\r\n  currentApplicationChange: EventEmitter<ApplicationReference> = new EventEmitter<ApplicationReference>();\r\n\r\n  /**\r\n   * Event emmited when Burger menu is clicked.\r\n   * Toggles side-nav visibility if app-bar is part of app-layout in responsive mode\r\n   */\r\n  @Output() burgerClicked: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public appLogoSet: boolean = false;\r\n\r\n  private appLogoPreset: boolean = false;\r\n\r\n  /** @hidden */\r\n  _appsLength: number;\r\n\r\n  /**\r\n   * True if only one element added to applications array\r\n   */\r\n  get isSingleApp(): boolean {\r\n    return !this.applications || this._appsLength < 2;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  get showAppLogo(): boolean {\r\n    if (this.currentApplication == null) return false;\r\n    const image = this.currentApplication.image;\r\n    return !(image == null || image === '');\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  burgerIconClicked() {\r\n    this.burgerClicked.emit();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onApplicationChanged(app: ApplicationReference) {\r\n    this.currentApplication = app;\r\n    if (!this.appLogoPreset) {\r\n      setTimeout(() => {\r\n        this.appLogoSet = true;\r\n        this.appLogo = this.currentApplication.image;\r\n      });\r\n    }\r\n    this.currentApplicationChange.emit(this.currentApplication);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onApplicationListChanged(apps: ApplicationReference[]) {\r\n    this.applications = apps;\r\n    this.applicationListChange.emit(apps);\r\n  }\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.appLogo) {\r\n      this.appLogoSet = true;\r\n      this.appLogoPreset = true;\r\n    } else {\r\n      this.appLogo = this.currentApplication ? this.currentApplication.image : '';\r\n      this.appLogoSet = true;\r\n    }\r\n    this._appsLength = this.applications ? this.applications.length : 0;\r\n  }\r\n\r\n}","import { Component, OnInit, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'avl-app-bar-item',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: []\r\n})\r\nexport class AvlAppBarItemComponent implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnInit() {\r\n    (this.elementRef.nativeElement as HTMLElement).classList.add('mdc-toolbar__icon');\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, Output, EventEmitter, Input, OnDestroy, OnChanges, SimpleChanges, HostBinding\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition} from '@angular/animations';\r\nimport { TopLevelPage, Group, Page, Params } from './menu-items';\r\n\r\nimport { Router, ActivationEnd, ActivatedRoute } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\n\r\nconst rowHeightPx = 48;\r\n\r\n@Component({\r\n  selector: 'avl-side-nav',\r\n  templateUrl: './avl-side-nav.component.html',\r\n  styleUrls: ['./avl-side-nav.component.css'],\r\n  animations: [\r\n    trigger('expandCollapse', [\r\n      transition(':enter', [\r\n        style({ 'max-height': '0px' }),\r\n        animate('225ms ease-in', style({ transform: 'translateY(0%)', 'max-height': '200px' }))\r\n      ]),\r\n      transition(':leave', [\r\n        style({ 'max-height': '200px' }),\r\n        animate('180ms ease-in', style({ 'max-height': '0px' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AvlSideNavComponent implements OnDestroy, OnChanges {\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                                                                                           | Default\r\n   * :----------------------------------------|:------------------------------------------------------------------------------------------------------|:---------\r\n   * `--avl-app-bar-height`                   | Height of the toolbar. Needed so that the avl-side-nav can be correctly positioned below the toolbar. | `56px`\r\n   * `--avl-side-nav-product-color`           | Used for selected color                                                                               | `--avl-product-selected`\r\n   * `--avl-side-nav-product-color-hover`     | Used for hover color.                                                                                 | `--avl-product-hover`\r\n   * `--avl-side-nav-text-color`              | Color of the text                                                                                     | `--avl-emphasis-high-color`\r\n   * `--avl-side-nav-icons-color`             | Color of icons                                                                                        | `--avl-emphasis-medium-color`\r\n   * `--avl-side-nav-background-color`        | Background color of the avl-side-nav                                                                  | `--avl-side-nav-color`\r\n   * `--avl-side-nav-open-width`              | Width of the avl-side-nav in the open state.                                                          | `256px`\r\n   *\r\n   */\r\n  _styling: any;\r\n\r\n  private openValue = false;\r\n\r\n  /**\r\n   * Can be set to open or close the side nav.\r\n   * Returns the current state of the side nav.\r\n   */\r\n  @Input()\r\n  @HostBinding('class.open')\r\n  public get open(): boolean {\r\n    return this.openValue;\r\n  }\r\n\r\n  /**\r\n   * Items that are shown in the side nav.\r\n   */\r\n  @Input()\r\n  public menuItems: Array<TopLevelPage | Group>;\r\n\r\n  /**\r\n   * Boolean to toggle responsive features\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.responsive')\r\n  public responsive: boolean;\r\n\r\n  /**\r\n   * Boolean to set only mobile features on\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mobile')\r\n  public mobile: boolean;\r\n\r\n  /**\r\n   * Emitted when the open property changes.\r\n   */\r\n  @Output()\r\n  public openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  public set open(val: boolean) {\r\n    this.openValue = val;\r\n    this.openChange.next(val);\r\n  }\r\n\r\n  private subscription: Subscription;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedGroup: Group;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedPage: Page;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedParagraph: string;\r\n  private selectedParagraphIndex: number;\r\n  private params: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n\r\n    public activeRoute: ActivatedRoute\r\n    ) {\r\n    activeRoute.queryParams.subscribe(p => {\r\n      this.params = p;\r\n    });\r\n    this.subscription = this.router.events\r\n      .pipe(filter(event => event instanceof ActivationEnd))\r\n      .subscribe((event: ActivationEnd) => {\r\n        this.selectItems();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public toggleOpen() {\r\n    if(!this.manuallyOpened) {\r\n      this.open = !this.open;\r\n    }\r\n  }\r\n\r\n  private manuallyOpened: boolean;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public arrowToggleOpen() {\r\n      this.manuallyOpened = !this.open;\r\n      this.open = !this.open;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public mobileClose() {\r\n    if(Math.max(document.documentElement.clientWidth, window.innerWidth) < 960) {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public groupClicked(item) {\r\n    if (!this.open) {\r\n      this.open = true;\r\n      if (!item.expanded) {\r\n        item.expanded = true;\r\n      }\r\n    } else {\r\n      item.expanded = !item.expanded;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public getScrubberStyle() {\r\n    return {\r\n      height: this.selectedParagraph ? '14px' : '0px',\r\n      top: `${this.selectedParagraphIndex * rowHeightPx}px`\r\n    };\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  public trimSlash(str: string) {\r\n    if (str[0] === '/') {\r\n      str = str.substring(1, str.length);\r\n    }\r\n    if (str[str.length - 1] === '/') {\r\n      str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  private selectItems() {\r\n    if (!this.menuItems) {\r\n      return;\r\n    }\r\n    const fragment = this.router.parseUrl(this.router.url).fragment;\r\n    const url = this.router.url.split('#')[0];\r\n    const queue: Array<Page | Group> = this.menuItems.slice();\r\n    let currentGroup: Group;\r\n    this.selectedGroup = undefined;\r\n    this.selectedPage = undefined;\r\n    this.selectedParagraph = undefined;\r\n    let fallbackSelectedPage: any;\r\n    while (queue.length) {\r\n      const item = queue.pop();\r\n      if (isGroup(item)) {\r\n        currentGroup = item;\r\n        item.subItems.map(subitem => { queue.push(subitem); });\r\n      } else {\r\n        if (fallbackSelectedPage == null && this.trimSlash(url).startsWith(this.trimSlash(item.route))) {\r\n          fallbackSelectedPage = item;\r\n        }\r\n        if (item.route && this.trimSlash(url).endsWith(this.trimSlash(item.route + this.getUrlParams(item.params)))) {\r\n          if (this.selectedPage && this.selectedPage.route && this.selectedPage.route.length > item.route.length) {\r\n            continue;\r\n          }\r\n          if (item.params && item.params.length > 0) {\r\n            const object = new Object();\r\n            item.params.forEach(i => {\r\n              object[i.name] = i.value;\r\n            });\r\n            if (JSON.stringify(this.params) === JSON.stringify(object)) {\r\n              this.selectedPage = item;\r\n            }\r\n          } else {\r\n            this.selectedPage = item;\r\n          }\r\n          if (isTopLevelPage(item)) {\r\n            this.selectedGroup = undefined;\r\n          } else {\r\n            this.selectedGroup = currentGroup;\r\n          }\r\n\r\n          if (item.paragraphs && item.paragraphs.length > 0) {\r\n            const paragraphIndex = item.paragraphs.findIndex((p) => p.id === fragment);\r\n            if (fragment && item.paragraphs && paragraphIndex !== -1) {\r\n              this.selectedParagraph = fragment;\r\n              this.selectedParagraphIndex = paragraphIndex;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.selectedPage == null) {\r\n      this.selectedPage = fallbackSelectedPage;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['menuItems']) {\r\n      this.selectItems();\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  getParams(params: Params[]) {\r\n    if (params && params.length > 0) {\r\n      const object = {};\r\n      params.forEach(param => {\r\n        object[param.name] = param.value;\r\n      });\r\n      return object;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n getUrlParams(params: Params[]) {\r\n  if (params && params.length > 0) {\r\n    let url = '?';\r\n    params.forEach(param => {\r\n      url += param.name + '=' + param.value + '&';\r\n    });\r\n    return url.slice(0, -1);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n}\r\n\r\n/**\r\n* @hidden\r\n*/\r\nfunction isGroup(item: Page | Group): item is Group {\r\n  return (item as Group).subItems !== undefined && (item as Group).subItems.length > 0;\r\n}\r\n\r\n/**\r\n* @hidden\r\n*/\r\nfunction isTopLevelPage(item: Page | Group): item is TopLevelPage {\r\n  return !isGroup(item) && ((item as TopLevelPage).icon !== undefined || (item as TopLevelPage).iconUrl !== undefined);\r\n}\r\n\r\n","import { Component, ViewEncapsulation, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { AvlSideNavComponent } from '../avl-side-nav/avl-side-nav.component';\r\nimport { AvlAppBarComponent } from '../avl-app-bar/avl-app-bar.component';\r\n\r\n@Component({\r\n  selector: 'avl-app-layout',\r\n  templateUrl: './avl-app-layout.component.html',\r\n  styleUrls: [\r\n    './avl-app-layout.component.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlAppLayoutComponent implements AfterContentInit {\r\n    /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                         | Default\r\n   * :----------------------------------------|:------------------------------------|:-----------\r\n   * `--avl-app-layout-content-padding`       | Padding around main slotted content | `24px`\r\n   * `--avl-primary-text-color`               | Text color of main slotted content  | ``\r\n   *\r\n   */\r\n  _styling: any;\r\n\r\n  @ContentChild(AvlSideNavComponent) sideNav: AvlSideNavComponent;\r\n  @ContentChild(AvlAppBarComponent) appBar: AvlAppBarComponent;\r\n\r\n  constructor() {}\r\n\r\n  ngAfterContentInit() {\r\n    if(this.sideNav && this.appBar) {\r\n      this.appBar.burgerClicked.subscribe( () => this.sideNav.open = !this.sideNav.open );\r\n    }\r\n  }\r\n}\r\n","import { OnInit, Directive, OnDestroy, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[avl-no-padding]'\r\n})\r\nexport class AvlNoPaddingDirective implements OnInit, OnDestroy {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    const appLayout = this.findAppLayout();\r\n    if (appLayout) {\r\n      appLayout.setAttribute('noPadding', '');\r\n    }\r\n  }\r\n  \r\n  /** @hidden */\r\n  ngOnDestroy() {\r\n    const appLayout = this.findAppLayout();\r\n    if (appLayout) {\r\n      appLayout.removeAttribute('noPadding');\r\n    }\r\n  }\r\n  \r\n  private findAppLayout() {\r\n    let element = this.elementRef.nativeElement as HTMLElement;\r\n    while (element) {\r\n      if (element.tagName.toLowerCase() == 'avl-app-layout') {\r\n        return element;\r\n      }\r\n      element = element.parentElement;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[avl-paragraph]'\r\n})\r\nexport class AvlParagraphDirective {\r\n\r\n  @Input('avl-paragraph') public paragraphName: string;\r\n\r\n  constructor(public elementRef: ElementRef) { }\r\n\r\n}\r\n","import { Component, ViewEncapsulation, ContentChildren, QueryList, AfterViewInit, OnDestroy, Renderer2, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { AvlParagraphDirective } from './avl-paragraph.directive';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n/**\r\n* avl-long-page should only be used inside avl-app-layout. The only scrollable container should\r\n* be avl-app-layout (already set by default) and avl-long-page and components that are using it must\r\n* not scroll in order for avl-long-page to work properly.\r\n*/\r\n@Component({\r\n  selector: 'avl-long-page',\r\n  templateUrl: './avl-long-page.component.html',\r\n  styleUrls: [\r\n    './avl-long-page.component.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AvlLongPageComponent implements AfterViewInit, OnDestroy {\r\n  /**\r\n *\r\n * ### Styling\r\n * The following custom properties are available for styling:\r\n *\r\n * Custom property                          | Description                         | Default\r\n * :----------------------------------------|:------------------------------------|:-----------\r\n *\r\n */\r\n  _styling: any;\r\n\r\n  @ContentChildren(AvlParagraphDirective) private paragraphs: QueryList<AvlParagraphDirective>;\r\n  private currentFragment: string;\r\n  private scrollContainer: HTMLElement;\r\n  private routerSubscription: Subscription;\r\n  private paragraphsSubscription: Subscription;\r\n  private scrollSubscription: () => void;\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  constructor(private router: Router, private renderer: Renderer2, @Inject(PLATFORM_ID) private platformId: Object) {\r\n  }\r\n\r\n  private handleRouteChange() {\r\n    const paragraphName = this.router.parseUrl(this.router.url).fragment;\r\n    const paragraph = this.paragraphs.find(p => p.paragraphName === paragraphName);\r\n    if (this.currentFragment === paragraphName) {\r\n      return;\r\n    }\r\n    if (paragraph) {\r\n      setTimeout(() =>\r\n        paragraph.elementRef.nativeElement.scrollIntoView({ behavior: 'instant', block: 'start', inline: 'nearest' })\r\n        , 0);\r\n    }\r\n  }\r\n\r\n  private scrollListener = (event: UIEvent) => {\r\n    let newParagraph: AvlParagraphDirective;\r\n    if (this.scrollContainer.scrollHeight < Math.round(this.scrollContainer.scrollTop + this.scrollContainer.getBoundingClientRect().height)) {\r\n      newParagraph = this.paragraphs.last;\r\n    } else {\r\n      this.paragraphs.forEach(paragraph => {\r\n        const p = paragraph.elementRef.nativeElement as HTMLElement;\r\n        const rect = p.getBoundingClientRect();\r\n        if (rect.top < window.innerHeight * 0.1) {\r\n          newParagraph = paragraph;\r\n        }\r\n      });\r\n    }\r\n    if (newParagraph) {\r\n      this.currentFragment = newParagraph.paragraphName;\r\n      this.router.navigate([], { queryParamsHandling: 'preserve', fragment: newParagraph.paragraphName });\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngAfterViewInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.scrollContainer = document.querySelector('avl-app-layout main') as HTMLElement;\r\n      this.scrollSubscription = this.renderer.listen(this.scrollContainer, 'scroll', this.scrollListener);\r\n    }\r\n    this.handleRouteChange();\r\n    this.routerSubscription = this.router.events.subscribe(newRoute => {\r\n      if (newRoute instanceof NavigationEnd) {\r\n        this.handleRouteChange();\r\n      }\r\n    });\r\n    this.paragraphsSubscription = this.paragraphs.changes.subscribe(_ => {\r\n      /* if scrollIntoView has not occured yet try it with new paragraphs\r\n         this is needed for components which render content (paragraphs)\r\n         after view has been initialized\r\n      */\r\n      if (!this.currentFragment) {\r\n        this.handleRouteChange();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnDestroy() {\r\n    if (this.routerSubscription) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n    if (this.paragraphsSubscription) {\r\n      this.paragraphsSubscription.unsubscribe();\r\n    }\r\n    if (this.scrollSubscription) {\r\n      this.scrollSubscription();\r\n    }\r\n  }\r\n}\r\n","/** @hidden */\r\nexport class KeyboardNavigator {\r\n  constructor(private numberOfItems: number, private gridWidth: number) { }\r\n\r\n  /** @returns to which item to navigate to from the current item and undefined to not move. */\r\n  public navigate(\r\n    currentItemIndex: number,\r\n    keyPressed: string,\r\n    nextGroupSize: number | undefined = 0,\r\n    prevGroupSize: number | undefined = 0\r\n  ): number {\r\n    nextGroupSize = nextGroupSize || 0;\r\n    prevGroupSize = prevGroupSize || 0;\r\n    const currentItemColumn = currentItemIndex % this.gridWidth;\r\n    const currentItemRow = Math.floor(currentItemIndex / this.gridWidth);\r\n    const maxRows = Math.ceil(this.numberOfItems / this.gridWidth);\r\n\r\n    let nextIndex: number;\r\n\r\n    switch (keyPressed) {\r\n      case 'ArrowUp':\r\n      case 'Up':\r\n        nextIndex = currentItemIndex - this.gridWidth;\r\n        if (currentItemRow === 0) {\r\n          if (prevGroupSize === 0) {\r\n            return undefined;\r\n          }\r\n          if (nextIndex < 0) {\r\n            const prevLastIndex = prevGroupSize - 1;\r\n            // columns of last element and targeted element of previous group\r\n            // - 0 based index\r\n            const lastColumn = prevLastIndex % this.gridWidth;\r\n\r\n            return currentItemColumn <= lastColumn\r\n              ? currentItemColumn - lastColumn - 1 // negative indexes -> -1 is last element\r\n              : prevGroupSize <= this.gridWidth\r\n              // focus last element of previous group if focus should go on 2 groups before current\r\n              ? -1\r\n              : -this.gridWidth - currentItemColumn;\r\n          }\r\n        }\r\n        return nextIndex;\r\n      case 'ArrowDown':\r\n      case 'Down': {\r\n        nextIndex = currentItemIndex + this.gridWidth;\r\n        const indexExists = nextIndex < this.numberOfItems;\r\n        if (currentItemRow === maxRows - 1) {\r\n          if (nextGroupSize === 0) {\r\n            return undefined;\r\n          }\r\n          if (!indexExists) {\r\n            const nextLastIndex = nextGroupSize - 1;\r\n            const lastColumn = nextLastIndex % this.gridWidth;\r\n            return lastColumn >= currentItemColumn\r\n              ? currentItemColumn\r\n              : nextGroupSize <= this.gridWidth\r\n              ? 0\r\n              : this.gridWidth + currentItemColumn;\r\n          }\r\n        } else if (!indexExists) {\r\n          return this.numberOfItems - 1;\r\n        }\r\n        return nextIndex;\r\n      }\r\n      case 'ArrowLeft':\r\n      case 'Left':\r\n        if (currentItemIndex === 0) {\r\n          return prevGroupSize === 0 ? undefined : -1;\r\n        }\r\n        return currentItemIndex - 1;\r\n      case 'ArrowRight':\r\n      case 'Right': {\r\n        if (currentItemIndex === this.numberOfItems - 1) {\r\n          return nextGroupSize === 0 ? undefined : 0;\r\n        }\r\n        nextIndex = currentItemIndex + 1;\r\n        return nextIndex;\r\n      }\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  HostListener,\r\n  ElementRef,\r\n  ViewChildren,\r\n  QueryList,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, asyncScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime, map } from 'rxjs/operators';\r\nimport { KeyboardNavigator } from './keyboard-navigator';\r\n\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-search-bar/avl-search-bar';\r\n\r\nexport interface AvlSolutionOverviewItem {\r\n  /**\r\n   * Label of the item.\r\n   */\r\n  label: string;\r\n\r\n  /**\r\n   * Router which to navigate to when the item is clicked.\r\n   * Shouldn't be used together with link.\r\n   */\r\n  route?: string;\r\n\r\n  /**\r\n   * URL which to navigate to when the item is clicked.\r\n   * Shouldn't be used together with route.\r\n   */\r\n  link?: string;\r\n\r\n  /**\r\n   * Specifies where to open the linked document (_blank | _self | _parent | _top | framename).\r\n   * Used only when link is set.\r\n   */\r\n  target?: string;\r\n\r\n  /**\r\n   * Description of the item.\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * Icon of the item.\r\n   * Only one of icon and iconUrl can be used. The other should be undefined.\r\n   */\r\n  icon?: string;\r\n\r\n  /**\r\n   * URL of the icon image of the item.\r\n   * Only one of icon and iconUrl can be used. The other should be undefined.\r\n   */\r\n  iconUrl?: string;\r\n\r\n  /**\r\n   * Don't show circle around icon. Different color will be applied to icon if enabled\r\n   * Circle is visible by default\r\n   */\r\n  noIconCircle?: boolean;\r\n}\r\n\r\nexport interface AvlSolutionOverviewGroup {\r\n  /**\r\n   * If true, additional space for description text will be provided.\r\n   * It is disabled by default\r\n   */\r\n  description?: boolean;\r\n\r\n  /**\r\n   * Title for the group\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Text above group\r\n   */\r\n  header?: string;\r\n\r\n  /*\r\n   * Text below group\r\n   */\r\n  footer?: string;\r\n\r\n  /**\r\n   * Group items\r\n   */\r\n  items: AvlSolutionOverviewItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'avl-solution-overview',\r\n  templateUrl: './avl-solution-overview.component.html',\r\n  styleUrls: ['./avl-solution-overview.component.css'],\r\n})\r\nexport class AvlSolutionOverviewComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy {\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                   | Description                        | Default\r\n   * :-------------------------------------------------|:-----------------------------------|:----------------------\r\n   * `--avl-solution-overview-background-color`        | Background color of the overview   | `--avl-background-1-color`\r\n   * `--avl-solution-overview-text-color`              | Text color                         | `--avl-foreground-color`\r\n   * `--avl-solution-overview-item-background-color`   | Item background color              | `--avl-container-background-color`\r\n   * `--avl-solution-overview-background-image`        | Background image of the overview   |  auto\r\n   * `--avl-solution-overview-item-hover-color`        | Item background color when hovered | `--avl-container-background-product-hover-color`\r\n   * `--avl-solution-overview-item-focus-color`        | Item background color when focused | `--avl-container-background-product-focus-color`\r\n   * `--avl-solution-overview-item-pressed-color`      | Item background color when pressed | `--avl-container-background-product-pressed-color`\r\n   * `--avl-solution-overview-title-color`             | Title color                        | `--avl-foreground-color``\r\n   * `--avl-solution-overview-subtitle-color`          | Subtitle color                     | `--avl-foreground-medium-color``\r\n   * `--avl-solution-overview-item-icon-color`         | Item icon color                    | `--avl-on-primary-color`\r\n   * `--avl-solution-overview-item-icon-color-no-circle` | Item icon color if noIconCircle is set | `--avl-hint-color`\r\n   * `--avl-solution-overview-item-icon-circle-color`  | Color for icon circle              | `--avl-product-color`\r\n   * `--avl-solution-overview-item-icon-pressed-color` | Item icon color when pressed       | `--avl-solution-overview-item-icon-color`\r\n   * `--avl-solution-overview-item-description-color`  | Item description text color        | `--avl-foreground-medium-color`\r\n   */\r\n  _styling: any;\r\n\r\n  /**\r\n   * Groups defining sections with buttons\r\n   */\r\n  @Input()\r\n  groups: AvlSolutionOverviewGroup[];\r\n\r\n  /**\r\n   * Solution overview title.\r\n   */\r\n  @Input()\r\n  public solutionName: string;\r\n\r\n  /**\r\n   * URL of the icon image of the solution overview title.\r\n   */\r\n  @Input()\r\n  public solutionIconUrl: string;\r\n\r\n  /**\r\n   * Solution overview subtitle.\r\n   */\r\n  @Input()\r\n  public solutionSubtitle?: string;\r\n\r\n  /**\r\n   * Flag for the optional search bar.\r\n   * If true, search bar is shown.\r\n   */\r\n  @Input()\r\n  public showSearchBar: boolean;\r\n\r\n  /**\r\n   * Emits search query string on change\r\n   */\r\n  @Output()\r\n  public searchQueryChange = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Emits value of the search query when search triggered\r\n   */\r\n  @Output()\r\n  public search = new EventEmitter<string>();\r\n\r\n  gridWidthClass$: Observable<string>;\r\n\r\n  /** @hidden */\r\n  @ViewChildren('itemElement') buttonRefs: QueryList<ElementRef>;\r\n\r\n  /** @hidden */\r\n  @ViewChildren('group') groupElementRefs: QueryList<ElementRef>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('searchbar') searchbarRef: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('iconButtons') iconButtonsContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('searchbarContainer') searchbarContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('groupsContainer') groupsContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  contentHasScroll: boolean;\r\n\r\n  private gridWidth$ = new BehaviorSubject<number>(-1);\r\n\r\n  private lastFocusedEl: HTMLElement;\r\n\r\n  private maxColumns: number;\r\n\r\n  private largestItemsIndex = -1;\r\n  private maxItems = 0;\r\n\r\n  // cache screenWidth for maxColumns calculation\r\n  private screenWidth: number;\r\n\r\n  // cache icon buttons since they can hardly be changed dynamically\r\n  private iconButtonElementsCache?: HTMLElement[];\r\n\r\n  private groupElementRefsChangesSubscription: Subscription;\r\n\r\n  private get groupsOfItems(): HTMLElement[][] {\r\n    let v = [];\r\n    for (const gRef of this.groupElementRefs) {\r\n      const gEl = gRef.nativeElement;\r\n      const items = Array.prototype.slice.call(gEl.querySelectorAll('a.item'));\r\n\r\n      v = [...v, items];\r\n    }\r\n    return v;\r\n  }\r\n\r\n  private get iconButtonElements(): HTMLElement[] {\r\n    if (this.iconButtonElementsCache == null) {\r\n      this.iconButtonElementsCache = Array.prototype.slice.call(\r\n        (this.iconButtonsContainer\r\n          .nativeElement as HTMLElement).querySelectorAll('avl-icon-button'));\r\n    }\r\n    return this.iconButtonElementsCache;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupReferenceVars();\r\n    this.gridWidthClass$ = this.gridWidth$.asObservable().pipe(\r\n      throttleTime(50, asyncScheduler, {trailing: true}),\r\n      map(gridWidth => {\r\n        return `grid-width-${gridWidth}`;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.groupElementRefsChangesSubscription) {\r\n      this.groupElementRefsChangesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.groups && !changes.groups.isFirstChange()) {\r\n      this.setupReferenceVars();\r\n      this.gridWidth$.next(this.getGridWidth());\r\n      this.setTopMargin();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  ngAfterViewInit() {\r\n    this.setTopMargin();\r\n    this.setupFocusOrdering();\r\n    this.gridWidth$.next(this.getGridWidth());\r\n  }\r\n\r\n  /** @hidden */\r\n  getMaxColumnsClass(): string {\r\n    if (this.maxColumns && window.outerWidth === this.screenWidth) {\r\n      return `max-columns-${this.maxColumns}`;\r\n    }\r\n    if (this.maxItems === 0) {\r\n      return;\r\n    }\r\n    let maxColumns: number;\r\n    switch (this.maxItems) {\r\n      case 1:\r\n        maxColumns = 1;\r\n        break;\r\n      case 2:\r\n      case 4:\r\n        maxColumns = 2;\r\n        break;\r\n      case 3:\r\n      case 5:\r\n      case 6:\r\n      case 9:\r\n        maxColumns = 3;\r\n        break;\r\n      case 7:\r\n      case 8:\r\n      case 11:\r\n      case 12:\r\n        maxColumns = 4;\r\n        break;\r\n      default:\r\n        maxColumns = 5;\r\n    }\r\n    this.maxColumns = maxColumns;\r\n    return `max-columns-${maxColumns}`;\r\n  }\r\n\r\n  /** @hidden **/\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.gridWidth$.next(this.getGridWidth());\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydownHandler(event: KeyboardEvent) {\r\n    const gOfItems = this.groupsOfItems;\r\n    const numGroups = gOfItems.length;\r\n    if (numGroups === 0) {\r\n      return;\r\n    }\r\n\r\n    const activeEl = document.activeElement as HTMLElement;\r\n    const isDown = ['Down', 'ArrowDown'].includes(event.key);\r\n    const isUp = ['Up', 'ArrowUp'].includes(event.key);\r\n    const isRight = ['Right', 'ArrowRight'].includes(event.key);\r\n    const isLeft = ['Left', 'ArrowLeft'].includes(event.key);\r\n    const isTab = event.key === 'Tab';\r\n\r\n    const searchbar = this.showSearchBar\r\n      ? (this.searchbarRef.nativeElement as HTMLElement)\r\n      : undefined;\r\n\r\n    let gNum: number;\r\n    let iIdx: number;\r\n\r\n    for (const items of gOfItems) {\r\n      if (items.indexOf(activeEl) !== -1) {\r\n        iIdx = items.indexOf(activeEl);\r\n        gNum = gOfItems.indexOf(items);\r\n        // Go to route on 'Space'. 'Enter' already works on <a>.\r\n        if (event.key === ' ') {\r\n          items[iIdx].click();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.iconButtonElements.includes(activeEl)) {\r\n      const numIconButtons = this.iconButtonElements.length;\r\n      const idx = this.iconButtonElements.indexOf(activeEl);\r\n      if ((isRight || isTab) && idx === numIconButtons - 1) {\r\n        if (searchbar != null) {\r\n          searchbar.focus();\r\n        } else {\r\n          gOfItems[0][0].focus();\r\n        }\r\n      } else if (isLeft && idx === 0) {\r\n        const g = gOfItems[numGroups - 1];\r\n        const gLen = g.length;\r\n        g[gLen - 1].focus();\r\n      } else if (isLeft) {\r\n        this.iconButtonElements[idx - 1].focus();\r\n      } else if (isRight) {\r\n        this.iconButtonElements[idx + 1].focus();\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    const itemElements = gOfItems[gNum];\r\n    const gridWidth = this.gridWidth$.value;\r\n\r\n    if (searchbar != null && iIdx < gridWidth && gNum === 0 && isUp) {\r\n      searchbar.focus();\r\n      event.preventDefault();\r\n    } else if (\r\n      (isRight || isTab) &&\r\n      gNum === gOfItems.length - 1 &&\r\n      iIdx === itemElements.length - 1\r\n    ) {\r\n      const iconButtons = this.iconButtonElements;\r\n      if (iconButtons != null && iconButtons.length > 0) {\r\n        iconButtons[0].focus();\r\n        event.preventDefault();\r\n      }\r\n    } else if (searchbar != null && searchbar === activeEl && isDown) {\r\n      gOfItems[0][0].focus();\r\n      event.preventDefault();\r\n    } else if (gNum != null) {\r\n      const nextGroup = gNum === gOfItems.length - 1 ? undefined : gOfItems[gNum + 1];\r\n      const prevGroup = gNum === 0 ? undefined : gOfItems[gNum - 1];\r\n\r\n      const nGLen = nextGroup == null ? 0 : nextGroup.length;\r\n      const pGLen = prevGroup == null ? 0 : prevGroup.length;\r\n\r\n      const keyboardNavigator = new KeyboardNavigator(\r\n        itemElements.length,\r\n        gridWidth\r\n      );\r\n      const itemIndexToMoveTo = keyboardNavigator.navigate(\r\n        iIdx,\r\n        event.key,\r\n        nGLen,\r\n        pGLen\r\n      );\r\n      if (itemIndexToMoveTo != null) {\r\n        if ((isUp || isLeft) && itemIndexToMoveTo < 0) {\r\n          prevGroup[itemIndexToMoveTo + pGLen].focus();\r\n        } else if ((isDown || isRight) && iIdx + 1 > itemIndexToMoveTo) {\r\n          nextGroup[itemIndexToMoveTo].focus();\r\n        } else {\r\n          gOfItems[gNum][itemIndexToMoveTo].focus();\r\n        }\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onQueryChange(event: any) {\r\n    this.searchQueryChange.emit(event.detail.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  onSearch(event: any) {\r\n    this.search.emit(event.detail.value);\r\n  }\r\n\r\n  private setupReferenceVars(): void {\r\n    let max = 0;\r\n    for (const g of this.groups) {\r\n      const itemSz = g.items.length;\r\n      if (max < itemSz) {\r\n        max = itemSz;\r\n        this.largestItemsIndex = this.groups.indexOf(g);\r\n      }\r\n    }\r\n    this.maxItems = max;\r\n  }\r\n\r\n  private setTopMargin() {\r\n    this.contentHasScroll = false;\r\n    this.cdr.detectChanges();\r\n    const content = this.groupsContainer.nativeElement;\r\n    this.contentHasScroll = content.scrollHeight > content.clientHeight;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private getGridWidth(): number {\r\n    if (this.largestItemsIndex < 0) {\r\n      this.setupReferenceVars();\r\n    }\r\n    const items = this.groupsOfItems[this.largestItemsIndex];\r\n    const firstItemOffsetTop = items[0].offsetTop;\r\n\r\n    let i = 0;\r\n    for (const item of items) {\r\n      if (item.offsetTop > firstItemOffsetTop) {\r\n        return i;\r\n      }\r\n      i++;\r\n    }\r\n    return items.length;\r\n  }\r\n\r\n  private setupFocusOrdering() {\r\n    const buttonElements: HTMLElement[] = this.buttonRefs.map(elRef => elRef.nativeElement);\r\n    let focusableElements: HTMLElement[] = [];\r\n\r\n    if (this.showSearchBar) {\r\n      focusableElements.push(this.searchbarRef.nativeElement);\r\n    }\r\n    focusableElements = [\r\n      ...focusableElements,\r\n      ...buttonElements,\r\n      ...this.iconButtonElements\r\n    ];\r\n\r\n    focusableElements.forEach((el) => {\r\n      el.addEventListener('focus', (event: FocusEvent) => {\r\n        const t = event.target as HTMLElement;\r\n        if (t.tagName.toLowerCase() === 'avl-icon-button') {\r\n          if (this.showSearchBar && (\r\n            ['body', 'html'].includes(\r\n              document.activeElement.tagName.toLowerCase()\r\n            ) ||\r\n              this.lastFocusedEl == null ||\r\n              (this.lastFocusedEl.tagName.toLowerCase() !== 'avl-icon-button' &&\r\n               this.lastFocusedEl !== buttonElements[buttonElements.length - 1])\r\n          )) {\r\n            this.searchbarRef.nativeElement.focus();\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        this.lastFocusedEl = event.target as HTMLElement;\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'avl-list-expander',\r\n    templateUrl: './avl-list-expander.component.html',\r\n    styleUrls: ['./avl-list-expander.component.css']\r\n})\r\nexport class AvlListExpanderComponent {\r\n\r\n    /**\r\n     *\r\n     * ### Styling\r\n     * The following custom properties are available for styling:\r\n     *\r\n     * Custom property                                | Description                           | Default\r\n     * :----------------------------------------------|:--------------------------------------|:----------------------\r\n     * `--avl-list-expander-header-hover-color`       | Header background color when hovered  | `--avl-ink-default-hover-color`\r\n     * `--avl-list-expander-header-focus-color`       | Header background color when focused  | `--avl-ink-default-focus-color`\r\n     * `--avl-list-expander-header-pressed-color`     | Header background color when pressed  | `--avl-ink-default-pressed-color`\r\n     * `--avl-list-expander-divider-color`            | Divider color                         | `--avl-divider-color`\r\n     * `--avl-list-expander-title-color`              | Title color                           | `--avl-ink-default-pressed-color`\r\n     * `--avl-list-expander-icon-color`               | Arrow icon color                      | `--avl-divider-color`\r\n     */\r\n    _styling: any;\r\n\r\n    /**\r\n     * Boolean that changes modes between wide and narrow, false by default.\r\n     */\r\n    @Input()\r\n    narrow: boolean = false;\r\n\r\n\r\n    private _open = false;\r\n    /**\r\n     * Boolean that tells whether the expander is open or closed, expander is closed by default.\r\n     */\r\n    @Input()\r\n    set open(value: boolean) {\r\n        this._open = value;\r\n        this.openChange.emit(this._open);\r\n    }\r\n\r\n    get open(): boolean {\r\n        return this._open;\r\n    }\r\n\r\n    /**\r\n     * Event that emits when the expander is opened or closed.\r\n     * Sends boolean value of new open state.\r\n     */\r\n    @Output() openChange = new EventEmitter<boolean>();\r\n\r\n    constructor() {}\r\n\r\n    toggleClick() {\r\n        this.open = !this.open;\r\n    }\r\n\r\n    /** @hidden */\r\n    @HostListener('keydown', ['$event'])\r\n    keyEvent(event: KeyboardEvent) {\r\n        const activeEl = document.activeElement as HTMLElement;\r\n        if (event.key === ' ' || event.key === 'Enter') {\r\n            activeEl.click();\r\n            return;\r\n        }\r\n    }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// toolbar stuff\r\nimport { AvlAppBarComponent } from './components/avl-app-bar/avl-app-bar.component';\r\nimport { AvlAppBarItemComponent } from './components/avl-app-bar/avl-app-bar-item.component';\r\n\r\n// sidenav stuff\r\nimport { AvlSideNavComponent } from './components/avl-side-nav/avl-side-nav.component';\r\n\r\nimport { AvlAppLayoutComponent } from './components/avl-app-layout/avl-app-layout.component';\r\nimport { AvlNoPaddingDirective } from './components/avl-app-layout/avl-no-padding.directive';\r\n\r\nimport { AvlLongPageComponent } from './components/avl-long-page/avl-long-page.component';\r\nimport { AvlParagraphDirective } from './components/avl-long-page/avl-paragraph.directive';\r\n\r\nimport { AvlSolutionOverviewComponent } from './components/avl-solution-overview/avl-solution-overview.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\n\r\nimport { AvlListExpanderComponent } from './components/avl-list-expander/avl-list-expander.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlAppBarComponent,\r\n  AvlAppBarItemComponent,\r\n  AvlSideNavComponent,\r\n  AvlAppLayoutComponent,\r\n  AvlNoPaddingDirective,\r\n  AvlLongPageComponent,\r\n  AvlParagraphDirective,\r\n  AvlSolutionOverviewComponent,\r\n  AvlListExpanderComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    AvlNgBindersModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlNavigationModule { }\r\n","\r\n\r\nexport class Paragraph {\r\n  constructor(\r\n    /**\r\n     * Id/fragment of the paragraph header in the page.\r\n     */\r\n    public readonly id: string,\r\n    /**\r\n     * Label of the paragraph shown in the side nav.\r\n     */\r\n    public readonly label: string\r\n  ) { }\r\n}\r\n\r\nexport class Params {\r\n  constructor(\r\n    /**\r\n     * Name of the query parameter.\r\n     */\r\n    public readonly name: string,\r\n    /**\r\n     * Value of the query parameter.\r\n     */\r\n    public readonly value: string\r\n  ) { }\r\n}\r\n\r\nexport class Page {\r\n  constructor(\r\n    /**\r\n     * Label of the page shown in the side nav.\r\n     */\r\n    public readonly label: string,\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    public readonly route: string,\r\n    /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    public readonly paragraphs?: Paragraph[],\r\n    /**\r\n     * Query parameters of the page.\r\n     */\r\n    public readonly params?: Params[],\r\n\r\n    public readonly expanded?: boolean\r\n  ) {\r\n    this.paragraphs = paragraphs ? paragraphs : [];\r\n    this.params = params ? params : [];\r\n  }\r\n}\r\n\r\nexport class TopLevelPage extends Page {\r\n  constructor(\r\n    /**\r\n     * Label of the page shown in the side nav.\r\n     */\r\n    label: string,\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    route: string,\r\n    /**\r\n     * Material icon name for the icon to show next to the label.\r\n     * https://material.io/tools/icons\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly icon?: string,\r\n    /**\r\n     * URL to the icon image to show next to the label.\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly iconUrl?: string,\r\n    /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    public readonly paragraphs?: Paragraph[],\r\n    /**\r\n     * Query parameters of the page.\r\n     */\r\n    public readonly params?: Params[],\r\n    /**\r\n     * Sub pages of the top level page.\r\n     */\r\n    public readonly subItems?: Page[],\r\n\r\n    expanded?: boolean\r\n  ) {\r\n    super(label, route, paragraphs, params, expanded);\r\n  }\r\n}\r\n\r\nexport class Group extends Page {\r\n  constructor(\r\n    /**\r\n     * Label of the Group shown in the side nav.\r\n     */\r\n    label: string,\r\n    /**\r\n     * Material icon name for the icon to show next to the label.\r\n     * https://material.io/tools/icons\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly icon?: string,\r\n    /**\r\n     * URL to the icon image to show next to the label.\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly iconUrl?: string,\r\n    /**\r\n     * Sub pages of the group.\r\n     */\r\n    public readonly subItems?: Page[],\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    route?: string,\r\n        /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    paragraphs?: Paragraph[],\r\n    params?: Params[],\r\n    expanded?: boolean\r\n  ) {\r\n    super(label, route, paragraphs, params, expanded);\r\n    this.subItems = subItems ? subItems : [];\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of navigation\r\n */\r\n\r\nexport { AvlNavigationModule } from './lib/avl-navigation.module';\r\nexport {\r\n  MenuButtonItems,\r\n  ApplicationReference,\r\n  AvlAppBarComponent,\r\n} from './lib/components/avl-app-bar/avl-app-bar.component';\r\nexport { AvlAppBarItemComponent } from './lib/components/avl-app-bar/avl-app-bar-item.component';\r\nexport { AvlAppLayoutComponent } from './lib/components/avl-app-layout/avl-app-layout.component';\r\nexport { AvlNoPaddingDirective } from './lib/components/avl-app-layout/avl-no-padding.directive';\r\nexport { AvlListExpanderComponent } from './lib/components/avl-list-expander/avl-list-expander.component';\r\nexport { AvlLongPageComponent } from './lib/components/avl-long-page/avl-long-page.component';\r\nexport { AvlParagraphDirective } from './lib/components/avl-long-page/avl-paragraph.directive';\r\nexport { AvlSideNavComponent } from './lib/components/avl-side-nav/avl-side-nav.component';\r\nexport {\r\n  Group,\r\n  Page,\r\n  TopLevelPage,\r\n  Paragraph,\r\n  Params,\r\n} from './lib/components/avl-side-nav/menu-items';\r\nexport {\r\n  AvlSolutionOverviewComponent,\r\n  AvlSolutionOverviewGroup,\r\n  AvlSolutionOverviewItem,\r\n} from './lib/components/avl-solution-overview/avl-solution-overview.component';\r\nexport { KeyboardNavigator } from './lib/components/avl-solution-overview/keyboard-navigator';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["__decorate"],"mappings":";;;;;;;;;;;;;;;;;;;;;MAaa,eAAe;IAC1B,YACW,UAAkB,EAClB,cAAsB,EACtB,KAAoD,EACpD,WAA2D;QAH3D,eAAU,GAAV,UAAU,CAAQ;QAClB,mBAAc,GAAd,cAAc,CAAQ;QACtB,UAAK,GAAL,KAAK,CAA+C;QACpD,gBAAW,GAAX,WAAW,CAAgD;KAClE;CACL;AAED;;;MAGa,oBAAoB;CAKhC;IAQY,kBAAkB,GAA/B,MAAa,kBAAkB;IAA/B;;;;QAoDW,iBAAY,GAA2B,EAAE,CAAC;;;;QAMzC,0BAAqB,GAAyC,IAAI,YAAY,EAA0B,CAAC;;;;QAK1G,UAAK,GAAY,IAAI,CAAC;;;;QAO/B,6BAAwB,GAAuC,IAAI,YAAY,EAAwB,CAAC;;;;;QAM9F,kBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;;QAGhE,eAAU,GAAY,KAAK,CAAC;QAE3B,kBAAa,GAAY,KAAK,CAAC;KA6DxC;;;;IArDC,IAAI,WAAW;QACb,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACnD;;;;IAKD,IAAI,WAAW;QACb,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI;YAAE,OAAO,KAAK,CAAC;QAClD,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAC5C,OAAO,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC,CAAC;KACzC;;;;IAID,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;;;;IAKD,oBAAoB,CAAC,GAAyB;QAC5C,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,UAAU,CAAC;gBACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aAC9C,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC7D;;;;IAKD,wBAAwB,CAAC,IAA4B;QACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvC;;IAGD,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,EAAE,CAAC;YAC5E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;KACrE;EAEF;AA3HC;IADC,KAAK,EAAE;8BACmB,oBAAoB;8DAAC;AAQhD;IAFC,KAAK,EAAE;IACP,WAAW,CAAC,kBAAkB,CAAC;;sDACL;AAQ3B;IAFC,KAAK,EAAE;IACP,WAAW,CAAC,cAAc,CAAC;;kDACL;AAMvB;IADC,KAAK,EAAE;;uDACmB;AAM3B;IADC,KAAK,EAAE;;mDACe;AAKd;IAAR,KAAK,EAAE;;wDAA2C;AAMzC;IAAT,MAAM,EAAE;8BAAwB,YAAY;iEAAsE;AAK1G;IAAR,KAAK,EAAE;;iDAAuB;AAO/B;IADC,MAAM,EAAE;8BACiB,YAAY;oEAAkE;AAM9F;IAAT,MAAM,EAAE;8BAAgB,YAAY;yDAAkC;AA5E5D,kBAAkB;IAN9B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,svDAA2C;QAE3C,aAAa,EAAE,iBAAiB,CAAC,QAAQ;;KAC1C,CAAC;GACW,kBAAkB,CA8I9B;;;;;;;;;;;IC7KY,sBAAsB,GAAnC,MAAa,sBAAsB;IAEjC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;;;;IAK/C,QAAQ;QACL,IAAI,CAAC,UAAU,CAAC,aAA6B,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;KACnF;EAEF;;YATiC,UAAU;;AAF/B,sBAAsB;IALlC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,2BAA2B;KAEtC,CAAC;uCAGgC,UAAU;GAF/B,sBAAsB,CAWlC;;;;;;;;;;;ACPD,MAAM,WAAW,GAAG,EAAE,CAAC;IAmBV,mBAAmB,GAAhC,MAAa,mBAAmB;IAoF9B,YACU,MAAc,EAEf,WAA2B;QAF1B,WAAM,GAAN,MAAM,CAAQ;QAEf,gBAAW,GAAX,WAAW,CAAgB;QAnE5B,cAAS,GAAG,KAAK,CAAC;;;;QAsCnB,eAAU,GAA0B,IAAI,YAAY,EAAE,CAAC;QA+B5D,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;aACnC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,YAAY,aAAa,CAAC,CAAC;aACrD,SAAS,CAAC,CAAC,KAAoB;YAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB,CAAC,CAAC;KACN;;;;;IArED,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IA8BD,IAAW,IAAI,CAAC,GAAY;QAC1B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC3B;;;;IAuCM,UAAU;QACf,IAAG,CAAC,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;SACxB;KACF;;;;IAOM,eAAe;QAClB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC1B;;;;IAKM,WAAW;QAChB,IAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG,EAAE;YAC1E,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SACnB;KACF;;;;IAKM,YAAY,CAAC,IAAI;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;SAChC;KACF;;;;IAKM,gBAAgB;QACrB,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,iBAAiB,GAAG,MAAM,GAAG,KAAK;YAC/C,GAAG,EAAE,GAAG,IAAI,CAAC,sBAAsB,GAAG,WAAW,IAAI;SACtD,CAAC;KACH;;;;IAKM,SAAS,CAAC,GAAW;QAC1B,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAClB,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;SACpC;QACD,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;YAC/B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACxC;QACD,OAAO,GAAG,CAAC;KACZ;IAEO,WAAW;QACjB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;QAChE,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAwB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC1D,IAAI,YAAmB,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACnC,IAAI,oBAAyB,CAAC;QAC9B,OAAO,KAAK,CAAC,MAAM,EAAE;YACnB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;gBACjB,YAAY,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;aACxD;iBAAM;gBACL,IAAI,oBAAoB,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC9F,oBAAoB,GAAG,IAAI,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBAC3G,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACtG,SAAS;qBACV;oBACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACzC,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;wBAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;4BACnB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;yBAC1B,CAAC,CAAC;wBACH,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;4BAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;yBAC1B;qBACF;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;qBAC1B;oBACD,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE;wBACxB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;qBAChC;yBAAM;wBACL,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;qBACnC;oBAED,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wBACjD,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC;wBAC3E,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;4BACxD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;4BAClC,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;yBAC9C;qBACF;iBACF;aACF;SACF;QACD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC7B,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;SAC1C;KACF;;;;IAKD,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,WAAW,CAAC,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;;;;IAKD,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;;;IAKD,SAAS,CAAC,MAAgB;QACxB,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,MAAM,MAAM,GAAG,EAAE,CAAC;YAClB,MAAM,CAAC,OAAO,CAAC,KAAK;gBAClB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;aAClC,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;;IAKF,YAAY,CAAC,MAAgB;QAC5B,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,IAAI,GAAG,GAAG,GAAG,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,KAAK;gBAClB,GAAG,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;aAC7C,CAAC,CAAC;YACH,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACzB;aAAM;YACL,OAAO,EAAE,CAAC;SACX;KACF;EACA;;YArLmB,MAAM;YAEF,cAAc;;AA3DpCA;IAFC,KAAK,EAAE;IACP,WAAW,CAAC,YAAY,CAAC;;;+CAGzB;AAMDA;IADC,KAAK,EAAE;gCACU,KAAK;sDAAuB;AAQ9CA;IAFC,KAAK,EAAE;IACP,WAAW,CAAC,kBAAkB,CAAC;;uDACL;AAQ3BA;IAFC,KAAK,EAAE;IACP,WAAW,CAAC,cAAc,CAAC;;mDACL;AAMvBA;IADC,MAAM,EAAE;gCACU,YAAY;uDAA+B;AA1DnD,mBAAmB;IAjB/B,SAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0yJAA4C;QAE5C,UAAU,EAAE;YACV,OAAO,CAAC,gBAAgB,EAAE;gBACxB,UAAU,CAAC,QAAQ,EAAE;oBACnB,KAAK,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;oBAC9B,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;iBACxF,CAAC;gBACF,UAAU,CAAC,QAAQ,EAAE;oBACnB,KAAK,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC;oBAChC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;iBACzD,CAAC;aACH,CAAC;SACH;;KACF,CAAC;uCAsFkB,MAAM;QAEF,cAAc;GAvFzB,mBAAmB,CA0Q/B;AAED;;;AAGA,SAAS,OAAO,CAAC,IAAkB;IACjC,OAAQ,IAAc,CAAC,QAAQ,KAAK,SAAS,IAAK,IAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACvF,CAAC;AAED;;;AAGA,SAAS,cAAc,CAAC,IAAkB;IACxC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAM,IAAqB,CAAC,IAAI,KAAK,SAAS,IAAK,IAAqB,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC;AACvH;;;;;;;;;;;IC1Sa,qBAAqB,GAAlC,MAAa,qBAAqB;IAiBhC,iBAAgB;IAEhB,kBAAkB;QAChB,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAE,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,CAAC;SACrF;KACF;EACF;AAVoCA;IAAlC,YAAY,CAAC,mBAAmB,CAAC;gCAAU,mBAAmB;sDAAC;AAC9BA;IAAjC,YAAY,CAAC,kBAAkB,CAAC;gCAAS,kBAAkB;qDAAC;AAflD,qBAAqB;IARjC,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,mSAA8C;QAI9C,aAAa,EAAE,iBAAiB,CAAC,QAAQ;;KAC1C,CAAC;;GACW,qBAAqB,CAwBjC;;;;;;;;;;;IC/BY,qBAAqB,GAAlC,MAAa,qBAAqB;IAEhC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;;IAG/C,QAAQ;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;SACzC;KACF;;IAGD,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SACxC;KACF;IAEO,aAAa;QACnB,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAA4B,CAAC;QAC3D,OAAO,OAAO,EAAE;YACd,IAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,gBAAgB,EAAE;gBACrD,OAAO,OAAO,CAAC;aAChB;YACD,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;SACjC;KACF;EAEF;;YA5BiC,UAAU;;AAF/B,qBAAqB;IAHjC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;KAC7B,CAAC;uCAGgC,UAAU;GAF/B,qBAAqB,CA8BjC;;;;;;;;;;;IC9BY,qBAAqB,GAAlC,MAAa,qBAAqB;IAIhC,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;EAE/C;;YAFgC,UAAU;;AAFjBA;IAAvB,KAAK,CAAC,eAAe,CAAC;;4DAA8B;AAF1C,qBAAqB;IAHjC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;KAC5B,CAAC;uCAK+B,UAAU;GAJ9B,qBAAqB,CAMjC;;;;;;;;;;;;;;ACLD;;;;;IAaa,oBAAoB,GAAjC,MAAa,oBAAoB;;;;IAsB/B,YAAoB,MAAc,EAAU,QAAmB,EAA+B,UAAkB;QAA5F,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAA+B,eAAU,GAAV,UAAU,CAAQ;QAgBxG,mBAAc,GAAG,CAAC,KAAc;YACtC,IAAI,YAAmC,CAAC;YACxC,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,EAAE;gBACxI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;oBAC/B,MAAM,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,aAA4B,CAAC;oBAC5D,MAAM,IAAI,GAAG,CAAC,CAAC,qBAAqB,EAAE,CAAC;oBACvC,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,GAAG,GAAG,EAAE;wBACvC,YAAY,GAAG,SAAS,CAAC;qBAC1B;iBACF,CAAC,CAAC;aACJ;YACD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,aAAa,CAAC;gBAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,mBAAmB,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC;aACrG;SACF,CAAA;KAhCA;IAEO,iBAAiB;QACvB,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;QACrE,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC;QAC/E,IAAI,IAAI,CAAC,eAAe,KAAK,aAAa,EAAE;YAC1C,OAAO;SACR;QACD,IAAI,SAAS,EAAE;YACb,UAAU,CAAC,MACT,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,EAC3G,CAAC,CAAC,CAAC;SACR;KACF;;;;IAwBD,eAAe;QACb,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAgB,CAAC;YACpF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACrG;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ;YAC7D,IAAI,QAAQ,YAAY,aAAa,EAAE;gBACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;YAK/D,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;SACF,CAAC,CAAC;KACJ;;;;IAKD,WAAW;QACT,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;QACD,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;EACF;;YA1E6B,MAAM;YAAoB,SAAS;YAA2C,MAAM,uBAA9C,MAAM,SAAC,WAAW;;AAV5CA;IAAvC,eAAe,CAAC,qBAAqB,CAAC;gCAAqB,SAAS;wDAAwB;AAZlF,oBAAoB;IARhC,SAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,qCAA6C;QAI7C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;KACtC,CAAC;IAuBkE,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;uCAAzD,MAAM,EAAoB,SAAS,EAA2C,MAAM;GAtBrG,oBAAoB,CAgGhC;;ACnHD;MACa,iBAAiB;IAC5B,YAAoB,aAAqB,EAAU,SAAiB;QAAhD,kBAAa,GAAb,aAAa,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAQ;KAAK;;IAGlE,QAAQ,CACb,gBAAwB,EACxB,UAAkB,EAClB,gBAAoC,CAAC,EACrC,gBAAoC,CAAC;QAErC,aAAa,GAAG,aAAa,IAAI,CAAC,CAAC;QACnC,aAAa,GAAG,aAAa,IAAI,CAAC,CAAC;QACnC,MAAM,iBAAiB,GAAG,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5D,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACrE,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAE/D,IAAI,SAAiB,CAAC;QAEtB,QAAQ,UAAU;YAChB,KAAK,SAAS,CAAC;YACf,KAAK,IAAI;gBACP,SAAS,GAAG,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC9C,IAAI,cAAc,KAAK,CAAC,EAAE;oBACxB,IAAI,aAAa,KAAK,CAAC,EAAE;wBACvB,OAAO,SAAS,CAAC;qBAClB;oBACD,IAAI,SAAS,GAAG,CAAC,EAAE;wBACjB,MAAM,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;;;wBAGxC,MAAM,UAAU,GAAG,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;wBAElD,OAAO,iBAAiB,IAAI,UAAU;8BAClC,iBAAiB,GAAG,UAAU,GAAG,CAAC;8BAClC,aAAa,IAAI,IAAI,CAAC,SAAS;;kCAE/B,CAAC,CAAC;kCACF,CAAC,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;qBACzC;iBACF;gBACD,OAAO,SAAS,CAAC;YACnB,KAAK,WAAW,CAAC;YACjB,KAAK,MAAM,EAAE;gBACX,SAAS,GAAG,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC9C,MAAM,WAAW,GAAG,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;gBACnD,IAAI,cAAc,KAAK,OAAO,GAAG,CAAC,EAAE;oBAClC,IAAI,aAAa,KAAK,CAAC,EAAE;wBACvB,OAAO,SAAS,CAAC;qBAClB;oBACD,IAAI,CAAC,WAAW,EAAE;wBAChB,MAAM,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;wBACxC,MAAM,UAAU,GAAG,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;wBAClD,OAAO,UAAU,IAAI,iBAAiB;8BAClC,iBAAiB;8BACjB,aAAa,IAAI,IAAI,CAAC,SAAS;kCAC/B,CAAC;kCACD,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;qBACxC;iBACF;qBAAM,IAAI,CAAC,WAAW,EAAE;oBACvB,OAAO,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC/B;gBACD,OAAO,SAAS,CAAC;aAClB;YACD,KAAK,WAAW,CAAC;YACjB,KAAK,MAAM;gBACT,IAAI,gBAAgB,KAAK,CAAC,EAAE;oBAC1B,OAAO,aAAa,KAAK,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;iBAC7C;gBACD,OAAO,gBAAgB,GAAG,CAAC,CAAC;YAC9B,KAAK,YAAY,CAAC;YAClB,KAAK,OAAO,EAAE;gBACZ,IAAI,gBAAgB,KAAK,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBAC/C,OAAO,aAAa,KAAK,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;iBAC5C;gBACD,SAAS,GAAG,gBAAgB,GAAG,CAAC,CAAC;gBACjC,OAAO,SAAS,CAAC;aAClB;YACD;gBACE,OAAO,SAAS,CAAC;SACpB;KACF;;;;;;;;;;;;ICwBU,4BAA4B,GAAzC,MAAa,4BAA4B;IAEvC,YAAoB,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;;;;QA6DnC,sBAAiB,GAAG,IAAI,YAAY,EAAU,CAAC;;;;QAM/C,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;QAyBnC,eAAU,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC,CAAC;QAM7C,sBAAiB,GAAG,CAAC,CAAC,CAAC;QACvB,aAAQ,GAAG,CAAC,CAAC;KAnGyB;IA6G9C,IAAY,aAAa;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACxC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;YAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEzE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;SACnB;QACD,OAAO,CAAC,CAAC;KACV;IAED,IAAY,kBAAkB;QAC5B,IAAI,IAAI,CAAC,uBAAuB,IAAI,IAAI,EAAE;YACxC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CACtD,IAAI,CAAC,oBAAoB;iBACvB,aAA6B,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACzE;QACD,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CACxD,YAAY,CAAC,EAAE,EAAE,cAAc,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,EAClD,GAAG,CAAC,SAAS;YACX,OAAO,cAAc,SAAS,EAAE,CAAC;SAClC,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,IAAI,CAAC,mCAAmC,EAAE;YAC5C,IAAI,CAAC,mCAAmC,CAAC,WAAW,EAAE,CAAC;SACxD;KACF;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE;YACrD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;;IAGD,eAAe;QACb,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAC3C;;IAGD,kBAAkB;QAChB,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,CAAC,WAAW,EAAE;YAC7D,OAAO,eAAe,IAAI,CAAC,UAAU,EAAE,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACvB,OAAO;SACR;QACD,IAAI,UAAkB,CAAC;QACvB,QAAQ,IAAI,CAAC,QAAQ;YACnB,KAAK,CAAC;gBACJ,UAAU,GAAG,CAAC,CAAC;gBACf,MAAM;YACR,KAAK,CAAC,CAAC;YACP,KAAK,CAAC;gBACJ,UAAU,GAAG,CAAC,CAAC;gBACf,MAAM;YACR,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC;gBACJ,UAAU,GAAG,CAAC,CAAC;gBACf,MAAM;YACR,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,EAAE,CAAC;YACR,KAAK,EAAE;gBACL,UAAU,GAAG,CAAC,CAAC;gBACf,MAAM;YACR;gBACE,UAAU,GAAG,CAAC,CAAC;SAClB;QACD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,OAAO,eAAe,UAAU,EAAE,CAAC;KACpC;;IAID,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAC3C;;IAID,gBAAgB,CAAC,KAAoB;QACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;QAClC,IAAI,SAAS,KAAK,CAAC,EAAE;YACnB,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAA4B,CAAC;QACvD,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzD,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,MAAM,OAAO,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzD,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC;QAElC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa;cAC/B,IAAI,CAAC,YAAY,CAAC,aAA6B;cAChD,SAAS,CAAC;QAEd,IAAI,IAAY,CAAC;QACjB,IAAI,IAAY,CAAC;QAEjB,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;YAC5B,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBAClC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC/B,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;gBAE/B,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;oBACrB,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;oBACpB,OAAO;iBACR;aACF;SACF;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YACtD,MAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,IAAI,KAAK,KAAK,GAAG,KAAK,cAAc,GAAG,CAAC,EAAE;gBACpD,IAAI,SAAS,IAAI,IAAI,EAAE;oBACrB,SAAS,CAAC,KAAK,EAAE,CAAC;iBACnB;qBAAM;oBACL,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBACxB;aACF;iBAAM,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBAClC,MAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC;gBACtB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACrB;iBAAM,IAAI,MAAM,EAAE;gBACjB,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aAC1C;iBAAM,IAAI,OAAO,EAAE;gBAClB,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aAC1C;YACD,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAExC,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI,GAAG,SAAS,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE;YAC/D,SAAS,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;aAAM,IACL,CAAC,OAAO,IAAI,KAAK;YACjB,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC;YAC5B,IAAI,KAAK,YAAY,CAAC,MAAM,GAAG,CAAC,EAChC;YACA,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC5C,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjD,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;gBACvB,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;SACF;aAAM,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,KAAK,QAAQ,IAAI,MAAM,EAAE;YAChE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACvB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;aAAM,IAAI,IAAI,IAAI,IAAI,EAAE;YACvB,MAAM,SAAS,GAAG,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YAChF,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YAE9D,MAAM,KAAK,GAAG,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;YACvD,MAAM,KAAK,GAAG,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;YAEvD,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAC7C,YAAY,CAAC,MAAM,EACnB,SAAS,CACV,CAAC;YACF,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,QAAQ,CAClD,IAAI,EACJ,KAAK,CAAC,GAAG,EACT,KAAK,EACL,KAAK,CACN,CAAC;YACF,IAAI,iBAAiB,IAAI,IAAI,EAAE;gBAC7B,IAAI,CAAC,IAAI,IAAI,MAAM,KAAK,iBAAiB,GAAG,CAAC,EAAE;oBAC7C,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC9C;qBAAM,IAAI,CAAC,MAAM,IAAI,OAAO,KAAK,IAAI,GAAG,CAAC,GAAG,iBAAiB,EAAE;oBAC9D,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,CAAC;iBACtC;qBAAM;oBACL,QAAQ,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC3C;gBACD,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;SACF;KACF;;IAGD,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACjD;;IAGD,QAAQ,CAAC,KAAU;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACtC;IAEO,kBAAkB;QACxB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9B,IAAI,GAAG,GAAG,MAAM,EAAE;gBAChB,GAAG,GAAG,MAAM,CAAC;gBACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACjD;SACF;QACD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACrB;IAEO,YAAY;QAClB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACpE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;KAC1B;IAEO,YAAY;QAClB,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACzD,MAAM,kBAAkB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9C,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,SAAS,GAAG,kBAAkB,EAAE;gBACvC,OAAO,CAAC,CAAC;aACV;YACD,CAAC,EAAE,CAAC;SACL;QACD,OAAO,KAAK,CAAC,MAAM,CAAC;KACrB;IAEO,kBAAkB;QACxB,MAAM,cAAc,GAAkB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;QACxF,IAAI,iBAAiB,GAAkB,EAAE,CAAC;QAE1C,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACzD;QACD,iBAAiB,GAAG;YAClB,GAAG,iBAAiB;YACpB,GAAG,cAAc;YACjB,GAAG,IAAI,CAAC,kBAAkB;SAC3B,CAAC;QAEF,iBAAiB,CAAC,OAAO,CAAC,CAAC,EAAE;YAC3B,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAiB;gBAC7C,MAAM,CAAC,GAAG,KAAK,CAAC,MAAqB,CAAC;gBACtC,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,iBAAiB,EAAE;oBACjD,IAAI,IAAI,CAAC,aAAa,KACpB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CACvB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,CAC7C;wBACC,IAAI,CAAC,aAAa,IAAI,IAAI;yBACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,iBAAiB;4BAC9D,IAAI,CAAC,aAAa,KAAK,cAAc,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CACrE,EAAE;wBACD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;wBACxC,KAAK,CAAC,cAAc,EAAE,CAAC;qBACxB;iBACF;gBACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAqB,CAAC;aAClD,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;EACF;;YAnY0B,iBAAiB;;AA8B1CA;IADC,KAAK,EAAE;;4DAC2B;AAMnCA;IADC,KAAK,EAAE;;kEACoB;AAM5BA;IADC,KAAK,EAAE;;qEACuB;AAM/BA;IADC,KAAK,EAAE;;sEACyB;AAOjCA;IADC,KAAK,EAAE;;mEACsB;AAM9BA;IADC,MAAM,EAAE;;uEAC6C;AAMtDA;IADC,MAAM,EAAE;;4DACkC;AAKdA;IAA5B,YAAY,CAAC,aAAa,CAAC;gCAAa,SAAS;gEAAa;AAGxCA;IAAtB,YAAY,CAAC,OAAO,CAAC;gCAAmB,SAAS;sEAAa;AAGvCA;IAAvB,SAAS,CAAC,WAAW,CAAC;gCAAe,UAAU;kEAAC;AAGvBA;IAAzB,SAAS,CAAC,aAAa,CAAC;gCAAuB,UAAU;0EAAC;AAG1BA;IAAhC,SAAS,CAAC,oBAAoB,CAAC;gCAAqB,UAAU;wEAAC;AAGlCA;IAA7B,SAAS,CAAC,iBAAiB,CAAC;gCAAkB,UAAU;qEAAC;AA+G1DA;IADC,YAAY,CAAC,eAAe,CAAC;;;;4DAG7B;AAIDA;IADC,YAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;;uCACZ,aAAa;;oEAqGpC;AAnTU,4BAA4B;IALxC,SAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,ioGAAqD;;KAEtD,CAAC;uCAGyB,iBAAiB;GAF/B,4BAA4B,CAqYxC;;;;;;;;;;;ICveY,wBAAwB,GAArC,MAAa,wBAAwB;IA6CjC;;;;QAvBA,WAAM,GAAY,KAAK,CAAC;QAGhB,UAAK,GAAG,KAAK,CAAC;;;;;QAkBZ,eAAU,GAAG,IAAI,YAAY,EAAW,CAAC;KAEnC;;;;IAfhB,IAAI,IAAI,CAAC,KAAc;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;IAUD,WAAW;QACP,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC1B;;IAID,QAAQ,CAAC,KAAoB;QACzB,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAA4B,CAAC;QACvD,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YAC5C,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjB,OAAO;SACV;KACJ;EACJ;AAtCGA;IADC,KAAK,EAAE;;wDACgB;AAQxBA;IADC,KAAK,EAAE;;;oDAIP;AAUSA;IAAT,MAAM,EAAE;;4DAA0C;AAUnDA;IADC,YAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;;uCACpB,aAAa;;wDAM5B;AA3DQ,wBAAwB;IALpC,SAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,w3BAAiD;;KAEpD,CAAC;;GACW,wBAAwB,CA4DpC;;;;;;;;AC7CD,MAAM,uBAAuB,GAAG;IAC9B,kBAAkB;IAClB,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;IACrB,qBAAqB;IACrB,oBAAoB;IACpB,qBAAqB;IACrB,4BAA4B;IAC5B,wBAAwB;CACzB,CAAC;IAcW,mBAAmB,GAAhC,MAAa,mBAAmB;EAAI;AAAvB,mBAAmB;IAZ/B,QAAQ,CAAC;QACR,OAAO,EAAE;YACP,YAAY;YACZ,YAAY;YACZ,kBAAkB;SACnB;QACD,YAAY,EAAE,uBAAuB;QACrC,OAAO,EAAE;YACP,sBAAsB;SACvB;QACD,OAAO,EAAE,uBAAuB;KACjC,CAAC;GACW,mBAAmB,CAAI;;MC5CvB,SAAS;IACpB;;;;IAIkB,EAAU;;;;IAIV,KAAa;QAJb,OAAE,GAAF,EAAE,CAAQ;QAIV,UAAK,GAAL,KAAK,CAAQ;KAC1B;CACN;MAEY,MAAM;IACjB;;;;IAIkB,IAAY;;;;IAIZ,KAAa;QAJb,SAAI,GAAJ,IAAI,CAAQ;QAIZ,UAAK,GAAL,KAAK,CAAQ;KAC1B;CACN;MAEY,IAAI;IACf;;;;IAIkB,KAAa;;;;IAIb,KAAa;;;;;IAKb,UAAwB;;;;IAIxB,MAAiB,EAEjB,QAAkB;QAflB,UAAK,GAAL,KAAK,CAAQ;QAIb,UAAK,GAAL,KAAK,CAAQ;QAKb,eAAU,GAAV,UAAU,CAAc;QAIxB,WAAM,GAAN,MAAM,CAAW;QAEjB,aAAQ,GAAR,QAAQ,CAAU;QAElC,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,EAAE,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC;KACpC;CACF;MAEY,YAAa,SAAQ,IAAI;IACpC;;;;IAIE,KAAa;;;;IAIb,KAAa;;;;;;IAMG,IAAa;;;;;IAKb,OAAgB;;;;;IAKhB,UAAwB;;;;IAIxB,MAAiB;;;;IAIjB,QAAiB,EAEjC,QAAkB;QAElB,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAtBlC,SAAI,GAAJ,IAAI,CAAS;QAKb,YAAO,GAAP,OAAO,CAAS;QAKhB,eAAU,GAAV,UAAU,CAAc;QAIxB,WAAM,GAAN,MAAM,CAAW;QAIjB,aAAQ,GAAR,QAAQ,CAAS;KAKlC;CACF;MAEY,KAAM,SAAQ,IAAI;IAC7B;;;;IAIE,KAAa;;;;;;IAMG,IAAa;;;;;IAKb,OAAgB;;;;IAIhB,QAAiB;;;;IAIjC,KAAc;;;;;IAKd,UAAwB,EACxB,MAAiB,EACjB,QAAkB;QAElB,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAtBlC,SAAI,GAAJ,IAAI,CAAS;QAKb,YAAO,GAAP,OAAO,CAAS;QAIhB,aAAQ,GAAR,QAAQ,CAAS;QAcjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,EAAE,CAAC;KAC1C;;;ACnIH;;;;ACAA;;;;;;"}