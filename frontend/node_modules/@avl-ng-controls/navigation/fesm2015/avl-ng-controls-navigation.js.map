{"version":3,"file":"avl-ng-controls-navigation.js","sources":["../../../projects/navigation/src/lib/components/avl-app-bar/avl-app-bar-item.component.ts","../../../projects/navigation/src/lib/components/avl-app-bar/avl-app-bar.component.ts","../../../projects/navigation/src/lib/components/avl-app-bar/avl-app-bar.component.html","../../../projects/navigation/src/lib/components/avl-side-nav/avl-side-nav.component.ts","../../../projects/navigation/src/lib/components/avl-side-nav/avl-side-nav.component.html","../../../projects/navigation/src/lib/components/avl-app-layout/avl-app-layout.component.ts","../../../projects/navigation/src/lib/components/avl-app-layout/avl-app-layout.component.html","../../../projects/navigation/src/lib/components/avl-app-layout/avl-no-padding.directive.ts","../../../projects/navigation/src/lib/components/avl-long-page/avl-paragraph.directive.ts","../../../projects/navigation/src/lib/components/avl-long-page/avl-long-page.component.ts","../../../projects/navigation/src/lib/components/avl-long-page/avl-long-page.component.html","../../../projects/navigation/src/lib/components/avl-solution-overview/keyboard-navigator.ts","../../../projects/navigation/src/lib/components/avl-solution-overview/avl-solution-overview.component.ts","../../../projects/navigation/src/lib/components/avl-solution-overview/avl-solution-overview.component.html","../../../projects/navigation/src/lib/components/avl-list-expander/avl-list-expander.component.ts","../../../projects/navigation/src/lib/components/avl-list-expander/avl-list-expander.component.html","../../../projects/navigation/src/lib/avl-navigation.module.ts","../../../projects/navigation/src/lib/components/avl-side-nav/menu-items.ts","../../../projects/navigation/src/public-api.ts","../../../projects/navigation/src/avl-ng-controls-navigation.ts"],"sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'avl-app-bar-item',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: []\r\n})\r\nexport class AvlAppBarItemComponent implements OnInit {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnInit() {\r\n    (this.elementRef.nativeElement as HTMLElement).classList.add('mdc-toolbar__icon');\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  OnInit,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-app-switcher/avl-app-switcher';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon.js';\r\n\r\nexport class MenuButtonItems {\r\n  constructor(\r\n    readonly headerText: string,\r\n    readonly headerIconName: string,\r\n    readonly items: Array<{ itemText: string; iconName: string }>,\r\n    readonly footerItems?: Array<{ itemText: string; iconName: string }>\r\n  ) {}\r\n}\r\n\r\n/**\r\n * Object representing sub-application that is added to app-bar drop-down\r\n */\r\nexport class ApplicationReference {\r\n  name: string;\r\n  icon?: string;\r\n  image?: string;\r\n  [key: string]: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'avl-app-bar',\r\n  templateUrl: './avl-app-bar.component.html',\r\n  styleUrls: ['./avl-app-bar.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlAppBarComponent implements OnInit {\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                                   | Default\r\n   * :----------------------------------------|:----------------------------------------------|:-------------------------\r\n   * `--avl-app-bar-background-color`         | Background color of app-bar                   | `--avl-primary-color`\r\n   * `--avl-app-bar-height`                   | Height of app-bar (minus 3px bottom line)     | `53px`\r\n   * `--avl-app-bar-item-color`               | Text color of app-bar items                   | `--avl-on-primary-color`\r\n   * `--avl-app-bar-underline-color`          | Underline color                               | `--avl-product-color`\r\n   */\r\n  _styling: any;\r\n\r\n  /**\r\n   * Tells which is the currently selected application\r\n   */\r\n  @Input()\r\n  public currentApplication: ApplicationReference;\r\n\r\n  /**\r\n   * Boolean to toggle responsive features\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.responsive')\r\n  public responsive: boolean;\r\n\r\n  /**\r\n   * Boolean to set only mobile features on\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mobile')\r\n  public mobile: boolean;\r\n\r\n  /**\r\n   * URL to application home/ landing page\r\n   */\r\n  @Input()\r\n  public homePageUrl: string;\r\n\r\n  /**\r\n   * URL to application icon / logo\r\n   */\r\n  @Input()\r\n  public appLogo: string;\r\n\r\n  /**\r\n   * List of sub-applications used\r\n   */\r\n  @Input() applications: ApplicationReference[] = [];\r\n\r\n  /**\r\n   * Event emitted when new application is added.\r\n   */\r\n\r\n  @Output() applicationListChange: EventEmitter<ApplicationReference[]> = new EventEmitter<ApplicationReference[]>();\r\n\r\n  /**\r\n   * Flag indicating app-bar has fixed positioning or no\r\n   */\r\n  @Input() fixed: boolean = true;\r\n\r\n\r\n  /**\r\n   * Event emitted when application is changed in app-bar drop-down\r\n   */\r\n  @Output()\r\n  currentApplicationChange: EventEmitter<ApplicationReference> = new EventEmitter<ApplicationReference>();\r\n\r\n  /**\r\n   * Event emmited when Burger menu is clicked.\r\n   * Toggles side-nav visibility if app-bar is part of app-layout in responsive mode\r\n   */\r\n  @Output() burgerClicked: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public appLogoSet: boolean = false;\r\n\r\n  private appLogoPreset: boolean = false;\r\n\r\n  /** @hidden */\r\n  _appsLength: number;\r\n\r\n  /**\r\n   * True if only one element added to applications array\r\n   */\r\n  get isSingleApp(): boolean {\r\n    return !this.applications || this._appsLength < 2;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  get showAppLogo(): boolean {\r\n    if (this.currentApplication == null) return false;\r\n    const image = this.currentApplication.image;\r\n    return !(image == null || image === '');\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  burgerIconClicked() {\r\n    this.burgerClicked.emit();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onApplicationChanged(app: ApplicationReference) {\r\n    this.currentApplication = app;\r\n    if (!this.appLogoPreset) {\r\n      setTimeout(() => {\r\n        this.appLogoSet = true;\r\n        this.appLogo = this.currentApplication.image;\r\n      });\r\n    }\r\n    this.currentApplicationChange.emit(this.currentApplication);\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  onApplicationListChanged(apps: unknown) {\r\n    this.applications = apps as ApplicationReference[];\r\n    this.applicationListChange.emit(this.applications);\r\n  }\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.appLogo) {\r\n      this.appLogoSet = true;\r\n      this.appLogoPreset = true;\r\n    } else {\r\n      this.appLogo = this.currentApplication ? this.currentApplication.image : '';\r\n      this.appLogoSet = true;\r\n    }\r\n    this._appsLength = this.applications ? this.applications.length : 0;\r\n  }\r\n\r\n}","<header id=\"header\" class=\"mdc-toolbar mdc-toolbar--waterfall\" [ngClass]=\"{'mdc-toolbar--fixed': fixed}\">\r\n  <div class=\"mdc-toolbar__row\">\r\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start mdc-toolbar__section--shrink-to-fit section-with-switcher\">\r\n      <avl-app-bar-item class=\"burger-container\">\r\n        <avl-icon class=\"burgerMenu\" icon=\"menu\" theme=\"dark\" (click)=\"burgerIconClicked()\"></avl-icon>\r\n      </avl-app-bar-item>\r\n      <avl-app-bar-item class=\"noselect\" *ngIf=\"appLogoSet && appLogo != undefined\">\r\n        <a class=\"avl-app-logo\"\r\n          [style.background-image]=\"'url(' + appLogo + ')'\"\r\n          [style.background-repeat]=\"'no-repeat'\"\r\n          routerLink=\"{{homePageUrl ? homePageUrl : '/' }}\"></a>\r\n      </avl-app-bar-item>\r\n\r\n      <div *ngIf=\"isSingleApp; then singleApp else multiApp\"></div>\r\n      <ng-template #singleApp>\r\n        <avl-app-bar-item class=\"single-app-name\" [innerHTML]=\"currentApplication?.name\">\r\n        </avl-app-bar-item>\r\n      </ng-template>\r\n      <ng-template #multiApp>\r\n        <avl-app-bar-item class=\"toolbar-item-with-switcher\">\r\n          <avl-app-switcher [items]=\"applications\" (itemsChange)=\"onApplicationListChanged($event)\" [selectedValue]=\"currentApplication\" (selectedValueChange)=\"onApplicationChanged($event)\">\r\n          </avl-app-switcher>\r\n        </avl-app-bar-item>\r\n      </ng-template>\r\n    </section>\r\n    <section id=\"additionalContent\" class=\"mdc-toolbar__section mdc-toolbar__section--align-end \">\r\n      <ng-content></ng-content>\r\n      <ng-content select=\"avl-overflow-menu[slot=menu]\"></ng-content>\r\n    </section>\r\n  </div>\r\n  <div class=\"border\"></div>\r\n</header>\r\n","import {\r\n  Component,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  HostBinding\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { TopLevelPage, Group, Page, Params } from './menu-items';\r\n\r\nimport { Router, ActivationEnd, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\n\r\nconst rowHeightPx = 48;\r\n\r\n@Component({\r\n  selector: 'avl-side-nav',\r\n  templateUrl: './avl-side-nav.component.html',\r\n  styleUrls: ['./avl-side-nav.component.css'],\r\n  animations: [\r\n    trigger('expandCollapse', [\r\n      transition(':enter', [\r\n        style({ 'max-height': '0px' }),\r\n        animate('225ms ease-in', style({ transform: 'translateY(0%)', 'max-height': '200px' }))\r\n      ]),\r\n      transition(':leave', [\r\n        style({ 'max-height': '200px' }),\r\n        animate('180ms ease-in', style({ 'max-height': '0px' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AvlSideNavComponent implements OnDestroy, OnChanges {\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                                                                                           | Default\r\n   * :----------------------------------------|:------------------------------------------------------------------------------------------------------|:---------\r\n   * `--avl-app-bar-height`                   | Height of the toolbar. Needed so that the avl-side-nav can be correctly positioned below the toolbar. | `56px`\r\n   * `--avl-side-nav-product-color`           | Used for selected color                                                                               | `--avl-product-selected`\r\n   * `--avl-side-nav-product-color-hover`     | Used for hover color.                                                                                 | `--avl-product-hover`\r\n   * `--avl-side-nav-text-color`              | Color of the text                                                                                     | `--avl-foreground-color`\r\n   * `--avl-side-nav-icons-color`             | Color of icons                                                                                        | `--avl-foreground-medium-color`\r\n   * `--avl-side-nav-background-color`        | Background color of the avl-side-nav                                                                  | `--avl-sidenav-color`\r\n   * `--avl-side-nav-open-width`              | Width of the avl-side-nav in the open state.                                                          | `256px`\r\n   *\r\n   */\r\n  _styling: any;\r\n\r\n  private openValue = false;\r\n\r\n  /**\r\n   * Can be set to open or close the side nav.\r\n   * Returns the current state of the side nav.\r\n   */\r\n  @Input()\r\n  @HostBinding('class.open')\r\n  public get open(): boolean {\r\n    return this.openValue;\r\n  }\r\n\r\n  /**\r\n   * Items that are shown in the side nav.\r\n   */\r\n  @Input()\r\n  public menuItems: Array<TopLevelPage | Group>;\r\n\r\n  /**\r\n   * Boolean to toggle responsive features\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.responsive')\r\n  public responsive: boolean;\r\n\r\n  /**\r\n   * Boolean to set only mobile features on\r\n   * On mobile screens sidenav toggling is triggered by burger icon in app-bar as part of app-layout\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mobile')\r\n  public mobile: boolean;\r\n\r\n  /**\r\n   * Specific for shell usage. When side-nav is used in application inside a shell (iframe)\r\n   * this parameter containing shell url enables opening correct url in new tab/window\r\n   */\r\n  @Input()\r\n  public shellUrl = '';\r\n\r\n  /**\r\n   * Emitted when the open property changes.\r\n   */\r\n  @Output()\r\n  public openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  public set open(val: boolean) {\r\n    this.openValue = val;\r\n    this.openChange.next(val);\r\n  }\r\n\r\n  private subscription: Subscription;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedGroup: Group;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedPage: Page;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public selectedParagraph: string;\r\n  private selectedParagraphIndex: number;\r\n  private params: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n\r\n    public activeRoute: ActivatedRoute\r\n  ) {\r\n    activeRoute.queryParams.subscribe(p => {\r\n      this.params = p;\r\n    });\r\n    this.subscription = this.router.events\r\n      .pipe(filter(event => event instanceof ActivationEnd))\r\n      .subscribe((event: ActivationEnd) => {\r\n        this.selectItems();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public toggleOpen() {\r\n    if (!this.manuallyOpened) {\r\n      this.open = !this.open;\r\n    }\r\n  }\r\n\r\n  private manuallyOpened: boolean;\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public arrowToggleOpen() {\r\n    this.manuallyOpened = !this.open;\r\n    this.open = !this.open;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public mobileClose() {\r\n    if (Math.max(document.documentElement.clientWidth, window.innerWidth) < 960) {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  public navigateLocal(event: MouseEvent, route: string, params?: Params[], fragment?: string) {\r\n    if (!event.ctrlKey) {\r\n      event.preventDefault();\r\n      let navigationExtras: NavigationExtras = {\r\n        queryParams: this.getParams(params),\r\n        fragment: fragment\r\n      };\r\n      this.router.navigate([route], navigationExtras);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public groupClicked(item) {\r\n    if (!this.open) {\r\n      this.open = true;\r\n      if (!item.expanded) {\r\n        item.expanded = true;\r\n      }\r\n    } else {\r\n      item.expanded = !item.expanded;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public getScrubberStyle() {\r\n    return {\r\n      height: this.selectedParagraph ? '14px' : '0px',\r\n      top: `${this.selectedParagraphIndex * rowHeightPx}px`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  public trimSlash(str: string) {\r\n    if (str[0] === '/') {\r\n      str = str.substring(1, str.length);\r\n    }\r\n    if (str[str.length - 1] === '/') {\r\n      str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  private selectItems() {\r\n    if (!this.menuItems) {\r\n      return;\r\n    }\r\n    const fragment = this.router.parseUrl(this.router.url).fragment;\r\n    const url = this.router.url.split('#')[0];\r\n    const queue: Array<Page | Group> = this.menuItems.slice();\r\n    queue.sort((pageOne, pageTwo) => (pageOne.route < pageTwo.route ? -1 : 1));\r\n    let currentGroup: Group;\r\n    this.selectedGroup = undefined;\r\n    this.selectedPage = undefined;\r\n    this.selectedParagraph = undefined;\r\n    let fallbackSelectedPage: any;\r\n    while (queue.length) {\r\n      const item = queue.pop();\r\n      if (isGroup(item)) {\r\n        currentGroup = item;\r\n        item.subItems.forEach(subitem => {\r\n          queue.push(subitem);\r\n        });\r\n      } else {\r\n        if (\r\n          fallbackSelectedPage == null &&\r\n          this.trimSlash(url).startsWith(this.trimSlash(item.route))\r\n        ) {\r\n          fallbackSelectedPage = item;\r\n        }\r\n        if (\r\n          item.route &&\r\n          this.trimSlash(url).endsWith(this.trimSlash(item.route + this.getUrlParams(item.params)))\r\n        ) {\r\n          if (\r\n            this.selectedPage &&\r\n            this.selectedPage.route &&\r\n            this.selectedPage.route.length > item.route.length\r\n          ) {\r\n            continue;\r\n          }\r\n          if (item.params && item.params.length > 0) {\r\n            const object = new Object();\r\n            item.params.forEach(i => {\r\n              object[i.name] = i.value;\r\n            });\r\n            if (JSON.stringify(this.params) === JSON.stringify(object)) {\r\n              this.selectedPage = item;\r\n            }\r\n          } else {\r\n            this.selectedPage = item;\r\n          }\r\n          if (isTopLevelPage(item)) {\r\n            this.selectedGroup = undefined;\r\n          } else {\r\n            this.selectedGroup = currentGroup;\r\n          }\r\n\r\n          if (item.paragraphs && item.paragraphs.length > 0) {\r\n            const paragraphIndex = item.paragraphs.findIndex(p => p.id === fragment);\r\n            if (fragment && item.paragraphs && paragraphIndex !== -1) {\r\n              this.selectedParagraph = fragment;\r\n              this.selectedParagraphIndex = paragraphIndex;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.selectedPage == null) {\r\n      this.selectedPage = fallbackSelectedPage;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['menuItems']) {\r\n      this.selectItems();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  getParams(params: Params[]) {\r\n    if (params && params.length > 0) {\r\n      const object = {};\r\n      params.forEach(param => {\r\n        object[param.name] = param.value;\r\n      });\r\n      return object;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  getUrlParams(params: Params[]): string {\r\n    if (params && params.length > 0) {\r\n      let url = '?';\r\n      params.forEach(param => {\r\n        url += param.name + '=' + param.value + '&';\r\n      });\r\n      return url.slice(0, -1);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nfunction isGroup(item: Page | Group): item is Group {\r\n  return (item as Group).subItems !== undefined && (item as Group).subItems.length > 0;\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nfunction isTopLevelPage(item: Page | Group): item is TopLevelPage {\r\n  return (\r\n    !isGroup(item) &&\r\n    ((item as TopLevelPage).icon !== undefined || (item as TopLevelPage).iconUrl !== undefined)\r\n  );\r\n}\r\n","<div #outerContainer [class.closed]=\"!open\" class=\"outer-container toolbar-spacing\">\r\n  <div class=\"item-scroll\">\r\n    <div #innerContainer class=\"inner-container\">\r\n      <ng-template ngFor let-item [ngForOf]=\"menuItems\">\r\n        <!-- Top level page -->\r\n        <a\r\n          *ngIf=\"!item.subItems && !shellUrl\"\r\n          tabindex=\"0\"\r\n          class=\"item top-level-page\"\r\n          routerLink=\"{{ item.route }}\"\r\n          [queryParams]=\"getParams(item.params)\"\r\n          [class.selected]=\"item === selectedPage\"\r\n          (click)=\"mobileClose()\"\r\n        >\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{ item.icon }}\"></avl-icon>\r\n            <img alt=\"[[item.name]]\" *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\" />\r\n          </div>\r\n          <div class=\"label-div\">{{ item.label }}</div>\r\n          <div class=\"item-overlay\"></div>\r\n        </a>\r\n        <a\r\n          *ngIf=\"!item.subItems && shellUrl\"\r\n          tabindex=\"0\"\r\n          class=\"item top-level-page\"\r\n          href=\"{{ shellUrl + '/' + trimSlash(item.route + getUrlParams(item.params)) }}\"\r\n          [class.selected]=\"item === selectedPage\"\r\n          (click)=\"mobileClose(); navigateLocal($event, item.route, item.params)\"\r\n        >\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{ item.icon }}\"></avl-icon>\r\n            <img alt=\"[[item.name]]\" *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\" />\r\n          </div>\r\n          <div class=\"label-div\">{{ item.label }}</div>\r\n          <div class=\"item-overlay\"></div>\r\n        </a>\r\n        <!-- Paragraphs of a top level page -->\r\n        <div\r\n          class=\"child-container\"\r\n          *ngIf=\"open && item.paragraphs && item.paragraphs.length > 0 && item === selectedPage\"\r\n          [@expandCollapse]\r\n        >\r\n          <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n          <div *ngIf=\"!shellUrl\">\r\n            <a\r\n              *ngFor=\"let paragraph of item.paragraphs\"\r\n              class=\"item top-level-paragraph\"\r\n              routerLink=\"{{ item.route }}\"\r\n              [queryParams]=\"getParams(item.params)\"\r\n              fragment=\"{{ paragraph.id }}\"\r\n              [class.selected]=\"paragraph.id === selectedParagraph\"\r\n              (click)=\"mobileClose()\"\r\n            >\r\n              <div class=\"label-div\">{{ paragraph.label }}</div>\r\n            </a>\r\n          </div>\r\n          <div *ngIf=\"shellUrl\">\r\n            <a\r\n              *ngFor=\"let paragraph of item.paragraphs\"\r\n              class=\"item top-level-paragraph\"\r\n              href=\"{{\r\n                shellUrl +\r\n                  '/' +\r\n                  trimSlash(item.route + getUrlParams(item.params)) +\r\n                  '#' +\r\n                  paragraph.id\r\n              }}\"\r\n              [class.selected]=\"paragraph.id === selectedParagraph\"\r\n              (click)=\"mobileClose(); navigateLocal($event, item.route, item.params, paragraph.id)\"\r\n            >\r\n              <div class=\"label-div\">{{ paragraph.label }}</div>\r\n            </a>\r\n          </div>\r\n          <div class=\"page-progress-bar\">\r\n            <div class=\"page-progress-bar-background\"></div>\r\n            <div class=\"page-progress-bar-scrubber\" [ngStyle]=\"getScrubberStyle()\"></div>\r\n          </div>\r\n        </div>\r\n        <!-- Group -->\r\n        <div\r\n          *ngIf=\"item.subItems\"\r\n          tabindex=\"0\"\r\n          class=\"item group\"\r\n          [class.expanded]=\"item.expanded\"\r\n          (click)=\"groupClicked(item)\"\r\n          [class.selected]=\"item === selectedGroup\"\r\n        >\r\n          <div class=\"image-div\">\r\n            <avl-icon *ngIf=\"item.icon\" attr.icon=\"{{ item.icon }}\"></avl-icon>\r\n            <img alt=\"[[item.name]]\" *ngIf=\"item.iconUrl\" [src]=\"item.iconUrl\" />\r\n          </div>\r\n          <div class=\"label-div group\">{{ item.label }}</div>\r\n          <avl-icon class=\"group-arrow\" icon=\"arrow-drop-down\"></avl-icon>\r\n          <div class=\"item-overlay\"></div>\r\n        </div>\r\n        <!-- Subpages -->\r\n        <div\r\n          class=\"child-container\"\r\n          *ngIf=\"open && item.subItems && item.subItems.length > 0 && item.expanded\"\r\n          [@expandCollapse]\r\n          (click)=\"toggleOpen()\"\r\n        >\r\n          <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n          <div>\r\n            <ng-template ngFor let-subItem [ngForOf]=\"item.subItems\">\r\n              <a\r\n                *ngIf=\"!shellUrl\"\r\n                class=\"item subpage\"\r\n                routerLink=\"{{ subItem.route }}\"\r\n                [queryParams]=\"getParams(subItem.params)\"\r\n                [class.selected]=\"subItem === selectedPage\"\r\n                (click)=\"mobileClose()\"\r\n              >\r\n                <div class=\"label-div\">{{ subItem.label }}</div>\r\n                <div class=\"item-overlay\"></div>\r\n              </a>\r\n              <a\r\n                *ngIf=\"shellUrl\"\r\n                class=\"item subpage\"\r\n                href=\"{{\r\n                  shellUrl + '/' + trimSlash(subItem.route + getUrlParams(subItem.params))\r\n                }}\"\r\n                [class.selected]=\"subItem === selectedPage\"\r\n                (click)=\"mobileClose(); navigateLocal($event, item.route, item.params)\"\r\n              >\r\n                <div class=\"label-div\">{{ subItem.label }}</div>\r\n                <div class=\"item-overlay\"></div>\r\n              </a>\r\n              <!-- Paragraphs of a subpage -->\r\n              <div\r\n                class=\"child-container\"\r\n                *ngIf=\"\r\n                  subItem.paragraphs && subItem.paragraphs.length > 0 && subItem === selectedPage\r\n                \"\r\n                [@expandCollapse]\r\n              >\r\n                <!-- div for preventing reversing of the items by flex-direction: column-reverse -->\r\n                <div *ngIf=\"!shellUrl\">\r\n                  <a\r\n                    *ngFor=\"let paragraph of subItem.paragraphs\"\r\n                    class=\"item subpage-paragraph\"\r\n                    routerLink=\"{{ subItem.route }}\"\r\n                    [queryParams]=\"getParams(subItem.params)\"\r\n                    fragment=\"{{ paragraph.id }}\"\r\n                    [class.selected]=\"paragraph.id === selectedParagraph\"\r\n                    (click)=\"mobileClose()\"\r\n                  >\r\n                    <div class=\"label-div\">{{ paragraph.label }}</div>\r\n                  </a>\r\n                </div>\r\n                <div *ngIf=\"shellUrl\">\r\n                  <a\r\n                    *ngFor=\"let paragraph of subItem.paragraphs\"\r\n                    class=\"item subpage-paragraph\"\r\n                    href=\"{{\r\n                      shellUrl +\r\n                        '/' +\r\n                        trimSlash(subItem.route + getUrlParams(item.params)) +\r\n                        '#' +\r\n                        paragraph.id\r\n                    }}\"\r\n                    [class.selected]=\"paragraph.id === selectedParagraph\"\r\n                    (click)=\"\r\n                      mobileClose(); navigateLocal($event, subItem.route, item.params, paragraph.id)\r\n                    \"\r\n                  >\r\n                    <div class=\"label-div\">{{ paragraph.label }}</div>\r\n                  </a>\r\n                </div>\r\n                <div class=\"page-progress-bar\">\r\n                  <div class=\"page-progress-bar-background\"></div>\r\n                  <div class=\"page-progress-bar-scrubber\" [ngStyle]=\"getScrubberStyle()\"></div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div class=\"arrow-spacer\"></div>\r\n\r\n  <svg\r\n    (click)=\"arrowToggleOpen()\"\r\n    [class.closed]=\"!open\"\r\n    class=\"open-close-arrow\"\r\n    id=\"Layer_1\"\r\n    data-name=\"Layer 1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <g transform=\"translate(405 102) rotate(-180)\">\r\n      <path\r\n        d=\"M-972.955,492l6.774-6,1.581,1.4-5.194,4.6,5.194,4.6-1.581,1.4Zm-5.645,0,6.773-6,1.581,1.4-5.193,4.6,5.193,4.6-1.581,1.4Z\"\r\n        transform=\"translate(1364.6 -402)\"\r\n      />\r\n    </g>\r\n  </svg>\r\n</div>\r\n<div class=\"scrim\" (click)=\"open = false\"></div>\r\n","import { Component, ViewEncapsulation, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { AvlSideNavComponent } from '../avl-side-nav/avl-side-nav.component';\r\nimport { AvlAppBarComponent } from '../avl-app-bar/avl-app-bar.component';\r\n\r\n@Component({\r\n  selector: 'avl-app-layout',\r\n  templateUrl: './avl-app-layout.component.html',\r\n  styleUrls: [\r\n    './avl-app-layout.component.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlAppLayoutComponent implements AfterContentInit {\r\n    /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                          | Description                         | Default\r\n   * :----------------------------------------|:------------------------------------|:-----------\r\n   * `--avl-app-layout-content-padding`       | Padding around main slotted content | `24px`\r\n   * `--avl-primary-text-color`               | Text color of main slotted content  | ``\r\n   *\r\n   */\r\n  _styling: any;\r\n\r\n  @ContentChild(AvlSideNavComponent) sideNav: AvlSideNavComponent;\r\n  @ContentChild(AvlAppBarComponent) appBar: AvlAppBarComponent;\r\n\r\n  constructor() {}\r\n\r\n  ngAfterContentInit() {\r\n    if(this.sideNav && this.appBar) {\r\n      this.appBar.burgerClicked.subscribe( () => this.sideNav.open = !this.sideNav.open );\r\n    }\r\n  }\r\n}\r\n","<ng-content select=\"[slot=toolbar]\"></ng-content>\r\n<div class=\"sideNavAndContent\">\r\n  <ng-content select=\"[slot=left-side]\"></ng-content>\r\n  <main>\r\n    <ng-content></ng-content>\r\n  </main>\r\n  <ng-content select=\"[slot=right-side]\"></ng-content>\r\n</div>\r\n","import { OnInit, Directive, OnDestroy, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[avl-no-padding]'\r\n})\r\nexport class AvlNoPaddingDirective implements OnInit, OnDestroy {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    const appLayout = this.findAppLayout();\r\n    if (appLayout) {\r\n      appLayout.setAttribute('noPadding', '');\r\n    }\r\n  }\r\n  \r\n  /** @hidden */\r\n  ngOnDestroy() {\r\n    const appLayout = this.findAppLayout();\r\n    if (appLayout) {\r\n      appLayout.removeAttribute('noPadding');\r\n    }\r\n  }\r\n  \r\n  private findAppLayout() {\r\n    let element = this.elementRef.nativeElement as HTMLElement;\r\n    while (element) {\r\n      if (element.tagName.toLowerCase() == 'avl-app-layout') {\r\n        return element;\r\n      }\r\n      element = element.parentElement;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[avl-paragraph]'\r\n})\r\nexport class AvlParagraphDirective {\r\n\r\n  @Input('avl-paragraph') public paragraphName: string;\r\n\r\n  constructor(public elementRef: ElementRef) { }\r\n\r\n}\r\n","import { Component, ViewEncapsulation, ContentChildren, AfterViewInit, OnDestroy, Renderer2, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { AvlParagraphDirective } from './avl-paragraph.directive';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport type { QueryList } from '@angular/core';\r\n\r\n/**\r\n* avl-long-page should only be used inside avl-app-layout. The only scrollable container should\r\n* be avl-app-layout (already set by default) and avl-long-page and components that are using it must\r\n* not scroll in order for avl-long-page to work properly.\r\n*/\r\n@Component({\r\n  selector: 'avl-long-page',\r\n  templateUrl: './avl-long-page.component.html',\r\n  styleUrls: [\r\n    './avl-long-page.component.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AvlLongPageComponent implements AfterViewInit, OnDestroy {\r\n  /**\r\n *\r\n * ### Styling\r\n * The following custom properties are available for styling:\r\n *\r\n * Custom property                          | Description                         | Default\r\n * :----------------------------------------|:------------------------------------|:-----------\r\n *\r\n */\r\n  _styling: any;\r\n\r\n  @ContentChildren(AvlParagraphDirective) private paragraphs: QueryList<AvlParagraphDirective>;\r\n  private currentFragment: string;\r\n  private scrollContainer: HTMLElement;\r\n  private routerSubscription: Subscription;\r\n  private paragraphsSubscription: Subscription;\r\n  private scrollSubscription: () => void;\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  constructor(private router: Router, private renderer: Renderer2, @Inject(PLATFORM_ID) private platformId: Object) {\r\n  }\r\n\r\n  private handleRouteChange() {\r\n    const paragraphName = this.router.parseUrl(this.router.url).fragment;\r\n    const paragraph = this.paragraphs.find(p => p.paragraphName === paragraphName);\r\n    if (this.currentFragment === paragraphName) {\r\n      return;\r\n    }\r\n    if (paragraph) {\r\n      setTimeout(() =>\r\n        paragraph.elementRef.nativeElement.scrollIntoView({ behavior: 'instant', block: 'start', inline: 'nearest' })\r\n        , 0);\r\n    }\r\n  }\r\n\r\n  private scrollListener = (event: UIEvent) => {\r\n    let newParagraph: AvlParagraphDirective;\r\n    if (this.scrollContainer.scrollHeight < Math.round(this.scrollContainer.scrollTop + this.scrollContainer.getBoundingClientRect().height)) {\r\n      newParagraph = this.paragraphs.last;\r\n    } else {\r\n      this.paragraphs.forEach(paragraph => {\r\n        const p = paragraph.elementRef.nativeElement as HTMLElement;\r\n        const rect = p.getBoundingClientRect();\r\n        if (rect.top < window.innerHeight * 0.1) {\r\n          newParagraph = paragraph;\r\n        }\r\n      });\r\n    }\r\n    if (newParagraph) {\r\n      this.currentFragment = newParagraph.paragraphName;\r\n      this.router.navigate([], { queryParamsHandling: 'preserve', fragment: newParagraph.paragraphName });\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngAfterViewInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.scrollContainer = document.querySelector('avl-app-layout main') as HTMLElement;\r\n      this.scrollSubscription = this.renderer.listen(this.scrollContainer, 'scroll', this.scrollListener);\r\n    }\r\n    this.handleRouteChange();\r\n    this.routerSubscription = this.router.events.subscribe(newRoute => {\r\n      if (newRoute instanceof NavigationEnd) {\r\n        this.handleRouteChange();\r\n      }\r\n    });\r\n    this.paragraphsSubscription = this.paragraphs.changes.subscribe(_ => {\r\n      /* if scrollIntoView has not occured yet try it with new paragraphs\r\n         this is needed for components which render content (paragraphs)\r\n         after view has been initialized\r\n      */\r\n      if (!this.currentFragment) {\r\n        this.handleRouteChange();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * @hidden\r\n  */\r\n  ngOnDestroy() {\r\n    if (this.routerSubscription) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n    if (this.paragraphsSubscription) {\r\n      this.paragraphsSubscription.unsubscribe();\r\n    }\r\n    if (this.scrollSubscription) {\r\n      this.scrollSubscription();\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>","/** @hidden */\r\nexport class KeyboardNavigator {\r\n  constructor(private numberOfItems: number, private gridWidth: number) { }\r\n\r\n  /** @returns to which item to navigate to from the current item and undefined to not move. */\r\n  public navigate(\r\n    currentItemIndex: number,\r\n    keyPressed: string,\r\n    nextGroupSize: number | undefined = 0,\r\n    prevGroupSize: number | undefined = 0\r\n  ): number {\r\n    nextGroupSize = nextGroupSize || 0;\r\n    prevGroupSize = prevGroupSize || 0;\r\n    const currentItemColumn = currentItemIndex % this.gridWidth;\r\n    const currentItemRow = Math.floor(currentItemIndex / this.gridWidth);\r\n    const maxRows = Math.ceil(this.numberOfItems / this.gridWidth);\r\n\r\n    let nextIndex: number;\r\n\r\n    switch (keyPressed) {\r\n      case 'ArrowUp':\r\n      case 'Up':\r\n        nextIndex = currentItemIndex - this.gridWidth;\r\n        if (currentItemRow === 0) {\r\n          if (prevGroupSize === 0) {\r\n            return undefined;\r\n          }\r\n          if (nextIndex < 0) {\r\n            const prevLastIndex = prevGroupSize - 1;\r\n            // columns of last element and targeted element of previous group\r\n            // - 0 based index\r\n            const lastColumn = prevLastIndex % this.gridWidth;\r\n\r\n            return currentItemColumn <= lastColumn\r\n              ? currentItemColumn - lastColumn - 1 // negative indexes -> -1 is last element\r\n              : prevGroupSize <= this.gridWidth\r\n              // focus last element of previous group if focus should go on 2 groups before current\r\n              ? -1\r\n              : -this.gridWidth - currentItemColumn;\r\n          }\r\n        }\r\n        return nextIndex;\r\n      case 'ArrowDown':\r\n      case 'Down': {\r\n        nextIndex = currentItemIndex + this.gridWidth;\r\n        const indexExists = nextIndex < this.numberOfItems;\r\n        if (currentItemRow === maxRows - 1) {\r\n          if (nextGroupSize === 0) {\r\n            return undefined;\r\n          }\r\n          if (!indexExists) {\r\n            const nextLastIndex = nextGroupSize - 1;\r\n            const lastColumn = nextLastIndex % this.gridWidth;\r\n            return lastColumn >= currentItemColumn\r\n              ? currentItemColumn\r\n              : nextGroupSize <= this.gridWidth\r\n              ? 0\r\n              : this.gridWidth + currentItemColumn;\r\n          }\r\n        } else if (!indexExists) {\r\n          return this.numberOfItems - 1;\r\n        }\r\n        return nextIndex;\r\n      }\r\n      case 'ArrowLeft':\r\n      case 'Left':\r\n        if (currentItemIndex === 0) {\r\n          return prevGroupSize === 0 ? undefined : -1;\r\n        }\r\n        return currentItemIndex - 1;\r\n      case 'ArrowRight':\r\n      case 'Right': {\r\n        if (currentItemIndex === this.numberOfItems - 1) {\r\n          return nextGroupSize === 0 ? undefined : 0;\r\n        }\r\n        nextIndex = currentItemIndex + 1;\r\n        return nextIndex;\r\n      }\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  HostListener,\r\n  ElementRef,\r\n  ViewChildren,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, asyncScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime, map, tap } from 'rxjs/operators';\r\nimport { KeyboardNavigator } from './keyboard-navigator';\r\n\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-search-bar/avl-search-bar';\r\n\r\nimport type { QueryList } from '@angular/core';\r\n\r\nexport interface AvlSolutionOverviewItem {\r\n  /**\r\n   * Label of the item.\r\n   */\r\n  label: string;\r\n\r\n  /**\r\n   * Router which to navigate to when the item is clicked.\r\n   * Shouldn't be used together with link.\r\n   */\r\n  route?: string;\r\n\r\n  /**\r\n   * URL which to navigate to when the item is clicked.\r\n   * Shouldn't be used together with route.\r\n   */\r\n  link?: string;\r\n\r\n  /**\r\n   * Specifies where to open the linked document (_blank | _self | _parent | _top | framename).\r\n   * Used only when link is set.\r\n   */\r\n  target?: string;\r\n\r\n  /**\r\n   * Description of the item.\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * Icon of the item.\r\n   * Only one of icon and iconUrl can be used. The other should be undefined.\r\n   */\r\n  icon?: string;\r\n\r\n  /**\r\n   * URL of the icon image of the item.\r\n   * Only one of icon and iconUrl can be used. The other should be undefined.\r\n   */\r\n  iconUrl?: string;\r\n\r\n  /**\r\n   * Don't show circle around icon. Different color will be applied to icon if enabled\r\n   * Circle is visible by default\r\n   */\r\n  noIconCircle?: boolean;\r\n}\r\n\r\nexport interface AvlSolutionOverviewGroup {\r\n  /**\r\n   * If true, additional space for description text will be provided.\r\n   * It is disabled by default\r\n   */\r\n  description?: boolean;\r\n\r\n  /**\r\n   * Title for the group\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Text above group\r\n   */\r\n  header?: string;\r\n\r\n  /*\r\n   * Text below group\r\n   */\r\n  footer?: string;\r\n\r\n  /**\r\n   * Group items\r\n   */\r\n  items: AvlSolutionOverviewItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'avl-solution-overview',\r\n  templateUrl: './avl-solution-overview.component.html',\r\n  styleUrls: ['./avl-solution-overview.component.css']\r\n})\r\nexport class AvlSolutionOverviewComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy {\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                   | Description                        | Default\r\n   * :-------------------------------------------------|:-----------------------------------|:----------------------\r\n   * `--avl-solution-overview-background-color`        | Background color of the overview   | `--avl-background-1-color`\r\n   * `--avl-solution-overview-text-color`              | Text color                         | `--avl-foreground-color`\r\n   * `--avl-solution-overview-item-background-color`   | Item background color              | `--avl-container-background-color`\r\n   * `--avl-solution-overview-background-image`        | Background image of the overview   |  auto\r\n   * `--avl-solution-overview-item-hover-color`        | Item background color when hovered | `--avl-container-background-product-hover-color`\r\n   * `--avl-solution-overview-item-focus-color`        | Item background color when focused | `--avl-container-background-product-focus-color`\r\n   * `--avl-solution-overview-item-pressed-color`      | Item background color when pressed | `--avl-container-background-product-pressed-color`\r\n   * `--avl-solution-overview-title-color`             | Title color                        | `--avl-foreground-color``\r\n   * `--avl-solution-overview-subtitle-color`          | Subtitle color                     | `--avl-foreground-medium-color``\r\n   * `--avl-solution-overview-item-icon-color`         | Item icon color                    | `--avl-on-primary-color`\r\n   * `--avl-solution-overview-item-icon-color-no-circle` | Item icon color if noIconCircle is set | `--avl-hint-color`\r\n   * `--avl-solution-overview-item-icon-circle-color`  | Color for icon circle              | `--avl-product-color`\r\n   * `--avl-solution-overview-item-icon-pressed-color` | Item icon color when pressed       | `--avl-solution-overview-item-icon-color`\r\n   * `--avl-solution-overview-item-description-color`  | Item description text color        | `--avl-foreground-medium-color`\r\n   */\r\n  _styling: any;\r\n\r\n  /**\r\n   * Groups defining sections with buttons\r\n   */\r\n  @Input()\r\n  groups: AvlSolutionOverviewGroup[];\r\n\r\n  /**\r\n   * Solution overview title.\r\n   */\r\n  @Input()\r\n  public solutionName: string;\r\n\r\n  /**\r\n   * URL of the icon image of the solution overview title.\r\n   */\r\n  @Input()\r\n  public solutionIconUrl: string;\r\n\r\n  /**\r\n   * Solution overview subtitle.\r\n   */\r\n  @Input()\r\n  public solutionSubtitle?: string;\r\n\r\n  /**\r\n   * Flag for the optional search bar.\r\n   * If true, search bar is shown.\r\n   */\r\n  @Input()\r\n  public showSearchBar: boolean;\r\n\r\n  /**\r\n   * Emits search query string on change\r\n   */\r\n  @Output()\r\n  public searchQueryChange = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Emits value of the search query when search triggered\r\n   */\r\n  @Output()\r\n  public search = new EventEmitter<string>();\r\n\r\n  /** @hidden */\r\n  @ViewChildren('itemElement') buttonRefs: QueryList<ElementRef>;\r\n\r\n  /** @hidden */\r\n  @ViewChildren('group') groupElementRefs: QueryList<ElementRef>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('container') container: ElementRef<HTMLElement>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('searchbar') searchbarRef: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('iconButtons') iconButtonsContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('searchbarContainer') searchbarContainer: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('groupsContainer') groupsContainer: ElementRef;\r\n\r\n  public gridWidthClass$: Observable<string>;\r\n\r\n  /** @hidden */\r\n  public contentHasScroll: boolean;\r\n  \r\n  /** @hidden */\r\n  public topMarginNeeded: boolean;\r\n\r\n  /** @hidden */\r\n  public displayIllustration: boolean;\r\n\r\n  private gridWidth$ = new BehaviorSubject<number>(-1);\r\n\r\n  private lastFocusedEl: HTMLElement;\r\n\r\n  private maxColumns: number;\r\n\r\n  private largestItemsIndex = -1;\r\n  private maxItems = 0;\r\n\r\n  // cache screenWidth for maxColumns calculation\r\n  private screenWidth: number;\r\n\r\n  // cache icon buttons since they can hardly be changed dynamically\r\n  private iconButtonElementsCache?: HTMLElement[];\r\n\r\n  private groupElementRefsChangesSubscription: Subscription;\r\n\r\n  private get groupsOfItems(): HTMLElement[][] {\r\n    let v = [];\r\n    for (const gRef of this.groupElementRefs) {\r\n      const gEl = gRef.nativeElement;\r\n      const items = Array.prototype.slice.call(gEl.querySelectorAll('a.item'));\r\n\r\n      v = [...v, items];\r\n    }\r\n    return v;\r\n  }\r\n\r\n  private get iconButtonElements(): HTMLElement[] {\r\n    if (this.iconButtonElementsCache == null) {\r\n      this.iconButtonElementsCache = Array.prototype.slice.call(\r\n        (this.iconButtonsContainer.nativeElement as HTMLElement).querySelectorAll('avl-icon-button')\r\n      );\r\n    }\r\n    return this.iconButtonElementsCache;\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  private readonly showIllustration = (): void => {\r\n    const containerElement: Element = this.container?.nativeElement;\r\n    if (!containerElement) {\r\n      return;\r\n    }\r\n    const background = getComputedStyle(containerElement).getPropertyValue(\r\n      '--avl-solution-overview-background-image'\r\n    );\r\n    const illustration = getComputedStyle(containerElement).getPropertyValue(\r\n      '--avl-solution-overview-illustration'\r\n    );\r\n\r\n    this.displayIllustration =\r\n      (!Boolean(background) || background.replace(' ', '') === 'none' || background === 'auto') &&\r\n      Boolean(illustration);\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.setupReferenceVars();\r\n    this.gridWidthClass$ = this.gridWidth$.asObservable().pipe(\r\n      throttleTime(50, asyncScheduler, { trailing: true }),\r\n      map(gridWidth => {\r\n        return `grid-width-${gridWidth}`;\r\n      }),\r\n      tap(_ => {\r\n        this.setMarginAndIllustration();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.groupElementRefsChangesSubscription) {\r\n      this.groupElementRefsChangesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.groups && !changes.groups.isFirstChange()) {\r\n      this.setupReferenceVars();\r\n      this.gridWidth$.next(this.getGridWidth());\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  ngAfterViewInit() {\r\n    this.setupFocusOrdering();\r\n    this.gridWidth$.next(this.getGridWidth());\r\n  }\r\n\r\n  /** @hidden */\r\n  getMaxColumnsClass(): string {\r\n    if (this.maxColumns && window.outerWidth === this.screenWidth) {\r\n      return `max-columns-${this.maxColumns}`;\r\n    }\r\n    if (this.maxItems === 0) {\r\n      return;\r\n    }\r\n    let maxColumns: number;\r\n    switch (this.maxItems) {\r\n      case 1:\r\n        maxColumns = 1;\r\n        break;\r\n      case 2:\r\n      case 4:\r\n        maxColumns = 2;\r\n        break;\r\n      case 3:\r\n      case 5:\r\n      case 6:\r\n      case 9:\r\n        maxColumns = 3;\r\n        break;\r\n      case 7:\r\n      case 8:\r\n      case 11:\r\n      case 12:\r\n        maxColumns = 4;\r\n        break;\r\n      default:\r\n        maxColumns = 5;\r\n    }\r\n    this.maxColumns = maxColumns;\r\n    return `max-columns-${maxColumns}`;\r\n  }\r\n\r\n  /** @hidden **/\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.gridWidth$.next(this.getGridWidth());\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydownHandler(event: KeyboardEvent) {\r\n    const gOfItems = this.groupsOfItems;\r\n    const numGroups = gOfItems.length;\r\n    if (numGroups === 0) {\r\n      return;\r\n    }\r\n\r\n    const activeEl = document.activeElement as HTMLElement;\r\n    const isDown = ['Down', 'ArrowDown'].includes(event.key);\r\n    const isUp = ['Up', 'ArrowUp'].includes(event.key);\r\n    const isRight = ['Right', 'ArrowRight'].includes(event.key);\r\n    const isLeft = ['Left', 'ArrowLeft'].includes(event.key);\r\n    const isTab = event.key === 'Tab';\r\n\r\n    const searchbar = this.showSearchBar\r\n      ? (this.searchbarRef.nativeElement as HTMLElement)\r\n      : undefined;\r\n\r\n    let gNum: number;\r\n    let iIdx: number;\r\n\r\n    for (const items of gOfItems) {\r\n      if (items.indexOf(activeEl) !== -1) {\r\n        iIdx = items.indexOf(activeEl);\r\n        gNum = gOfItems.indexOf(items);\r\n        // Go to route on 'Space'. 'Enter' already works on <a>.\r\n        if (event.key === ' ') {\r\n          items[iIdx].click();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.iconButtonElements.includes(activeEl)) {\r\n      const numIconButtons = this.iconButtonElements.length;\r\n      const idx = this.iconButtonElements.indexOf(activeEl);\r\n      if ((isRight || isTab) && idx === numIconButtons - 1) {\r\n        if (searchbar != null) {\r\n          searchbar.focus();\r\n        } else {\r\n          gOfItems[0][0].focus();\r\n        }\r\n      } else if (isLeft && idx === 0) {\r\n        const g = gOfItems[numGroups - 1];\r\n        const gLen = g.length;\r\n        g[gLen - 1].focus();\r\n      } else if (isLeft) {\r\n        this.iconButtonElements[idx - 1].focus();\r\n      } else if (isRight) {\r\n        this.iconButtonElements[idx + 1].focus();\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    const itemElements = gOfItems[gNum];\r\n    const gridWidth = this.gridWidth$.value;\r\n\r\n    if (searchbar != null && iIdx < gridWidth && gNum === 0 && isUp) {\r\n      searchbar.focus();\r\n      event.preventDefault();\r\n    } else if (\r\n      (isRight || isTab) &&\r\n      gNum === gOfItems.length - 1 &&\r\n      iIdx === itemElements.length - 1\r\n    ) {\r\n      const iconButtons = this.iconButtonElements;\r\n      if (iconButtons != null && iconButtons.length > 0) {\r\n        iconButtons[0].focus();\r\n        event.preventDefault();\r\n      }\r\n    } else if (searchbar != null && searchbar === activeEl && isDown) {\r\n      gOfItems[0][0].focus();\r\n      event.preventDefault();\r\n    } else if (gNum != null) {\r\n      const nextGroup = gNum === gOfItems.length - 1 ? undefined : gOfItems[gNum + 1];\r\n      const prevGroup = gNum === 0 ? undefined : gOfItems[gNum - 1];\r\n\r\n      const nGLen = nextGroup == null ? 0 : nextGroup.length;\r\n      const pGLen = prevGroup == null ? 0 : prevGroup.length;\r\n\r\n      const keyboardNavigator = new KeyboardNavigator(itemElements.length, gridWidth);\r\n      const itemIndexToMoveTo = keyboardNavigator.navigate(iIdx, event.key, nGLen, pGLen);\r\n      if (itemIndexToMoveTo != null) {\r\n        if ((isUp || isLeft) && itemIndexToMoveTo < 0) {\r\n          prevGroup[itemIndexToMoveTo + pGLen].focus();\r\n        } else if ((isDown || isRight) && iIdx + 1 > itemIndexToMoveTo) {\r\n          nextGroup[itemIndexToMoveTo].focus();\r\n        } else {\r\n          gOfItems[gNum][itemIndexToMoveTo].focus();\r\n        }\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  onQueryChange(event: any) {\r\n    this.searchQueryChange.emit(event.detail.value);\r\n  }\r\n\r\n  /** @hidden */\r\n  onSearch(event: any) {\r\n    this.search.emit(event.detail.value);\r\n  }\r\n\r\n  private setupReferenceVars(): void {\r\n    let max = 0;\r\n    for (const g of this.groups) {\r\n      const itemSz = g.items.length;\r\n      if (max < itemSz) {\r\n        max = itemSz;\r\n        this.largestItemsIndex = this.groups.indexOf(g);\r\n      }\r\n    }\r\n    this.maxItems = max;\r\n  }\r\n\r\n  private setMarginAndIllustration() {\r\n    this.topMarginNeeded = true\r\n    this.contentHasScroll = false;\r\n    this.cdr.detectChanges();\r\n    const content = this.groupsContainer.nativeElement;\r\n    this.contentHasScroll = content.scrollHeight > content.clientHeight;\r\n    this.topMarginNeeded = !this.contentHasScroll && this.showSearchBar\r\n    this.showIllustration();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private getGridWidth(): number {\r\n    if (this.largestItemsIndex < 0) {\r\n      this.setupReferenceVars();\r\n    }\r\n    const items = this.groupsOfItems[this.largestItemsIndex];\r\n    const firstItemOffsetTop = items[0].offsetTop;\r\n\r\n    let i = 0;\r\n    for (const item of items) {\r\n      if (item.offsetTop > firstItemOffsetTop) {\r\n        return i;\r\n      }\r\n      i++;\r\n    }\r\n    return items.length;\r\n  }\r\n\r\n  private setupFocusOrdering() {\r\n    const buttonElements: HTMLElement[] = this.buttonRefs.map(elRef => elRef.nativeElement);\r\n    let focusableElements: HTMLElement[] = [];\r\n\r\n    if (this.showSearchBar) {\r\n      focusableElements.push(this.searchbarRef.nativeElement);\r\n    }\r\n    focusableElements = [...focusableElements, ...buttonElements, ...this.iconButtonElements];\r\n\r\n    focusableElements.forEach(el => {\r\n      el.addEventListener('focus', (event: FocusEvent) => {\r\n        const t = event.target as HTMLElement;\r\n        if (t.tagName.toLowerCase() === 'avl-icon-button') {\r\n          if (\r\n            this.showSearchBar &&\r\n            (['body', 'html'].includes(document.activeElement.tagName.toLowerCase()) ||\r\n              this.lastFocusedEl == null ||\r\n              (this.lastFocusedEl.tagName.toLowerCase() !== 'avl-icon-button' &&\r\n                this.lastFocusedEl !== buttonElements[buttonElements.length - 1]))\r\n          ) {\r\n            this.searchbarRef.nativeElement.focus();\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        this.lastFocusedEl = event.target as HTMLElement;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\"  #container>\r\n  <div class=\"top-bar\">\r\n    <div class=\"row\">\r\n      <img  alt=\"[[solutionName]]\" class=\"solution-logo\" src=\"{{solutionIconUrl}}\" />\r\n      <h1 class=\"solution-name\">{{solutionName}}</h1>\r\n      <div class=\"action-buttons\" #iconButtons>\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"solutionSubtitle\">\r\n      <h2 class=\"solution-subtitle\">{{solutionSubtitle}}</h2>\r\n    </div>\r\n  </div>\r\n  <div class=\"outer-container\" [ngClass]=\"{'top-margin': topMarginNeeded}\">\r\n    <div\r\n      *ngIf=\"displayIllustration\"\r\n      [ngClass]=\"{ 'illustration-holder': 1, 'has-scrollbar': contentHasScroll }\"\r\n    ></div>\r\n    <div class=\"searchbar-container\" [ngClass]=\"gridWidthClass$ | async\" #searchbarContainer>\r\n      <avl-search-bar class=\"search-bar\" *ngIf=\"showSearchBar\"\r\n        #searchbar\r\n        always-open\r\n        (query-changed)=\"onQueryChange($event)\"\r\n        (search)=\"onSearch($event)\">\r\n      </avl-search-bar>\r\n    </div>\r\n    <div class=\"groups\" #groupsContainer>\r\n      <div class=\"flexible\"></div>\r\n      <ng-container *ngFor=\"let group of groups\">\r\n        <div class=\"group-container\">\r\n          <div class=\"item-container\" #group [ngClass]=\"getMaxColumnsClass()\">\r\n            <ng-container *ngTemplateOutlet=\"groupTpl; context: { group: group }\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n      <div class='flexible'>\r\n      </div>\r\n      <div id=\"footer\">\r\n        <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #groupTpl let-group=\"group\">\r\n  <h2 class=\"group-name\" *ngIf=\"group.title\">{{group.title}}</h2>\r\n  <div class=\"text-container\" *ngIf=\"group.header\">{{group.header}}</div>\r\n  <ng-container *ngFor=\"let item of group.items\">\r\n    <ng-container *ngIf=\"item.route\">\r\n      <a class=\"item\"\r\n         #itemElement\r\n         [routerLink]=\"item.route\"\r\n         [ngClass]=\"{'with-description': group.description}\"\r\n         tabindex=\"0\">\r\n        <ng-container *ngTemplateOutlet=\"buttonContent; context: { item: item }\">\r\n        </ng-container>\r\n      </a>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"item.link\">\r\n      <a class=\"item\"\r\n         #itemElement\r\n         [attr.href]=\"item.link\"\r\n         [attr.target]=\"item.target\"\r\n         [attr.rel]=\"item.target == '_blank' ? 'noopener' : null\"\r\n         [ngClass]=\"{'with-description': group.description}\"\r\n         tabindex=\"0\">\r\n        <ng-container *ngTemplateOutlet=\"buttonContent; context: { item: item }\">\r\n        </ng-container>\r\n      </a>\r\n    </ng-container>\r\n  </ng-container>\r\n  <div class=\"text-container\" *ngIf=\"group.footer\">{{group.footer}}</div>\r\n</ng-template>\r\n\r\n<ng-template #buttonContent let-item=\"item\">\r\n  <div class=\"icon-container\" [ngClass]=\"{'no-icon-circle': item.noIconCircle}\">\r\n    <avl-icon\r\n      *ngIf=\"item.icon\"\r\n      class=\"item-icon\"\r\n      [icon]=\"item.icon\">\r\n    </avl-icon>\r\n    <img  alt=\"[[item.label]]\" *ngIf=\"item.iconUrl\" class=\"item-icon\" src=\"{{item.iconUrl}}\" />\r\n  </div>\r\n  <div class=\"icon-label\"><span class=\"label\">{{item.label}}</span></div>\r\n  <div class=\"description\">\r\n    <span class=\"text\">\r\n      {{item.description}}\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n","import { Component, Input, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'avl-list-expander',\r\n    templateUrl: './avl-list-expander.component.html',\r\n    styleUrls: ['./avl-list-expander.component.css']\r\n})\r\nexport class AvlListExpanderComponent {\r\n\r\n    /**\r\n     *\r\n     * ### Styling\r\n     * The following custom properties are available for styling:\r\n     *\r\n     * Custom property                                | Description                           | Default\r\n     * :----------------------------------------------|:--------------------------------------|:----------------------\r\n     * `--avl-list-expander-header-hover-color`       | Header background color when hovered  | `--avl-ink-default-hover-color`\r\n     * `--avl-list-expander-header-focus-color`       | Header background color when focused  | `--avl-ink-default-focus-color`\r\n     * `--avl-list-expander-header-pressed-color`     | Header background color when pressed  | `--avl-ink-default-pressed-color`\r\n     * `--avl-list-expander-divider-color`            | Divider color                         | `--avl-divider-color`\r\n     * `--avl-list-expander-title-color`              | Title color                           | `--avl-ink-default-pressed-color`\r\n     * `--avl-list-expander-icon-color`               | Arrow icon color                      | `--avl-divider-color`\r\n     */\r\n    _styling: any;\r\n\r\n    /**\r\n     * Boolean that changes modes between wide and narrow, false by default.\r\n     */\r\n    @Input()\r\n    narrow: boolean = false;\r\n\r\n\r\n    private _open = false;\r\n    /**\r\n     * Boolean that tells whether the expander is open or closed, expander is closed by default.\r\n     */\r\n    @Input()\r\n    set open(value: boolean) {\r\n        this._open = value;\r\n        this.openChange.emit(this._open);\r\n    }\r\n\r\n    get open(): boolean {\r\n        return this._open;\r\n    }\r\n\r\n    /**\r\n     * Event that emits when the expander is opened or closed.\r\n     * Sends boolean value of new open state.\r\n     */\r\n    @Output() openChange = new EventEmitter<boolean>();\r\n\r\n    constructor() {}\r\n\r\n    toggleClick() {\r\n        this.open = !this.open;\r\n    }\r\n\r\n    /** @hidden */\r\n    @HostListener('keydown', ['$event'])\r\n    keyEvent(event: KeyboardEvent) {\r\n        const activeEl = document.activeElement as HTMLElement;\r\n        if (event.key === ' ' || event.key === 'Enter') {\r\n            activeEl.click();\r\n            return;\r\n        }\r\n    }\r\n}\r\n","<hr/>\r\n<div id=\"expander\">\r\n    <div  [ngClass]=\"narrow ? 'title-container-narrow' : 'title-container'\" tabindex=\"0\" (click)=\"toggleClick()\">\r\n        <div [ngClass]=\"narrow ? 'icon-narrow' : 'icon'\" *ngIf=\"!open\">\r\n            <avl-icon icon=\"hardware:keyboard-arrow-down\" id=\"starsIcon\"></avl-icon>\r\n        </div>\r\n        <div [ngClass]=\"narrow ? 'icon-narrow' : 'icon'\" *ngIf=\"open\">\r\n            <avl-icon icon=\"hardware:keyboard-arrow-up\" id=\"starsIcon\"></avl-icon>\r\n        </div>\r\n        <div [ngClass]=\"narrow ? 'title-narrow' : 'title'\">\r\n            <ng-content select=\"div[role=header]\"></ng-content>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"open\" [ngClass]=\"narrow ? 'content-narrow' : 'content'\">\r\n        <ng-content select=\"div[role=content]\"></ng-content>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AvlCommonModule } from '@avl-ng-controls/common';\r\n\r\n// toolbar stuff\r\nimport { AvlAppBarComponent } from './components/avl-app-bar/avl-app-bar.component';\r\nimport { AvlAppBarItemComponent } from './components/avl-app-bar/avl-app-bar-item.component';\r\n\r\n// sidenav stuff\r\nimport { AvlSideNavComponent } from './components/avl-side-nav/avl-side-nav.component';\r\n\r\nimport { AvlAppLayoutComponent } from './components/avl-app-layout/avl-app-layout.component';\r\nimport { AvlNoPaddingDirective } from './components/avl-app-layout/avl-no-padding.directive';\r\n\r\nimport { AvlLongPageComponent } from './components/avl-long-page/avl-long-page.component';\r\nimport { AvlParagraphDirective } from './components/avl-long-page/avl-paragraph.directive';\r\n\r\nimport { AvlSolutionOverviewComponent } from './components/avl-solution-overview/avl-solution-overview.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\n\r\nimport { AvlListExpanderComponent } from './components/avl-list-expander/avl-list-expander.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlAppBarComponent,\r\n  AvlAppBarItemComponent,\r\n  AvlSideNavComponent,\r\n  AvlAppLayoutComponent,\r\n  AvlNoPaddingDirective,\r\n  AvlLongPageComponent,\r\n  AvlParagraphDirective,\r\n  AvlSolutionOverviewComponent,\r\n  AvlListExpanderComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    AvlNgBindersModule,\r\n    AvlCommonModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlNavigationModule { }\r\n","\r\n\r\nexport class Paragraph {\r\n  constructor(\r\n    /**\r\n     * Id/fragment of the paragraph header in the page.\r\n     */\r\n    public readonly id: string,\r\n    /**\r\n     * Label of the paragraph shown in the side nav.\r\n     */\r\n    public readonly label: string\r\n  ) { }\r\n}\r\n\r\nexport class Params {\r\n  constructor(\r\n    /**\r\n     * Name of the query parameter.\r\n     */\r\n    public readonly name: string,\r\n    /**\r\n     * Value of the query parameter.\r\n     */\r\n    public readonly value: string\r\n  ) { }\r\n}\r\n\r\nexport class Page {\r\n  constructor(\r\n    /**\r\n     * Label of the page shown in the side nav.\r\n     */\r\n    public readonly label: string,\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    public readonly route: string,\r\n    /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    public readonly paragraphs?: Paragraph[],\r\n    /**\r\n     * Query parameters of the page.\r\n     */\r\n    public readonly params?: Params[],\r\n\r\n    public readonly expanded?: boolean\r\n  ) {\r\n    this.paragraphs = paragraphs ? paragraphs : [];\r\n    this.params = params ? params : [];\r\n  }\r\n}\r\n\r\nexport class TopLevelPage extends Page {\r\n  constructor(\r\n    /**\r\n     * Label of the page shown in the side nav.\r\n     */\r\n    label: string,\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    route: string,\r\n    /**\r\n     * Material icon name for the icon to show next to the label.\r\n     * https://material.io/tools/icons\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly icon?: string,\r\n    /**\r\n     * URL to the icon image to show next to the label.\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly iconUrl?: string,\r\n    /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    public readonly paragraphs?: Paragraph[],\r\n    /**\r\n     * Query parameters of the page.\r\n     */\r\n    public readonly params?: Params[],\r\n    /**\r\n     * Sub pages of the top level page.\r\n     */\r\n    public readonly subItems?: Page[],\r\n\r\n    expanded?: boolean\r\n  ) {\r\n    super(label, route, paragraphs, params, expanded);\r\n  }\r\n}\r\n\r\nexport class Group extends Page {\r\n  constructor(\r\n    /**\r\n     * Label of the Group shown in the side nav.\r\n     */\r\n    label: string,\r\n    /**\r\n     * Material icon name for the icon to show next to the label.\r\n     * https://material.io/tools/icons\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly icon?: string,\r\n    /**\r\n     * URL to the icon image to show next to the label.\r\n     * Only one of icon and iconUrl can be used. The other should be undefined.\r\n     */\r\n    public readonly iconUrl?: string,\r\n    /**\r\n     * Sub pages of the group.\r\n     */\r\n    public readonly subItems?: Page[],\r\n    /**\r\n     * Route to the page.\r\n     */\r\n    route?: string,\r\n        /**\r\n     * Paragraphs of the long page.\r\n     * It's a regular page if no paragraphs are defined.\r\n     */\r\n    paragraphs?: Paragraph[],\r\n    params?: Params[],\r\n    expanded?: boolean\r\n  ) {\r\n    super(label, route, paragraphs, params, expanded);\r\n    this.subItems = subItems ? subItems : [];\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of navigation\r\n */\r\n\r\nexport { AvlNavigationModule } from './lib/avl-navigation.module';\r\nexport {\r\n  MenuButtonItems,\r\n  ApplicationReference,\r\n  AvlAppBarComponent,\r\n} from './lib/components/avl-app-bar/avl-app-bar.component';\r\nexport { AvlAppBarItemComponent } from './lib/components/avl-app-bar/avl-app-bar-item.component';\r\nexport { AvlAppLayoutComponent } from './lib/components/avl-app-layout/avl-app-layout.component';\r\nexport { AvlNoPaddingDirective } from './lib/components/avl-app-layout/avl-no-padding.directive';\r\nexport { AvlListExpanderComponent } from './lib/components/avl-list-expander/avl-list-expander.component';\r\nexport { AvlLongPageComponent } from './lib/components/avl-long-page/avl-long-page.component';\r\nexport { AvlParagraphDirective } from './lib/components/avl-long-page/avl-paragraph.directive';\r\nexport { AvlSideNavComponent } from './lib/components/avl-side-nav/avl-side-nav.component';\r\nexport {\r\n  Group,\r\n  Page,\r\n  TopLevelPage,\r\n  Paragraph,\r\n  Params,\r\n} from './lib/components/avl-side-nav/menu-items';\r\nexport {\r\n  AvlSolutionOverviewComponent,\r\n  AvlSolutionOverviewGroup,\r\n  AvlSolutionOverviewItem,\r\n} from './lib/components/avl-solution-overview/avl-solution-overview.component';\r\nexport { KeyboardNavigator } from './lib/components/avl-solution-overview/keyboard-navigator';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}