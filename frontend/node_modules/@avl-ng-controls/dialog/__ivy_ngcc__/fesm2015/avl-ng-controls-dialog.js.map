{"version":3,"file":"avl-ng-controls-dialog.js","sources":["ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-section.base.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-header/avl-dialog-header.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-content/avl-dialog-content.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-about-dialog/avl-about-dialog.component.ts","ng:/@avl-ng-controls/dialog/lib/dialog.module.ts","ng:/@avl-ng-controls/dialog/public-api.ts","ng:/@avl-ng-controls/dialog/avl-ng-controls-dialog.ts"],"names":["__decorate"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'avl-dialog',\r\n  templateUrl: './avl-dialog.component.html',\r\n  styleUrls: ['./avl-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlDialogComponent implements OnInit {\r\n  private _open = false;\r\n  private _dirty: boolean = false;\r\n  private _warningOnClose = false;\r\n  private _warningHeaderText = '';\r\n  private _warningDialogText = '';\r\n  public openWarning = false;\r\n\r\n  /**\r\n   * Dialog content\r\n   */\r\n  @ContentChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('element', { static: true }) element: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('optionForm', { read: NgForm }) optionForm: any;\r\n\r\n  /**\r\n   * If true, the dialog can be closed by clicking on scrim\r\n   */\r\n  @Input() closeOnScrimClick: boolean = true;\r\n\r\n  /**\r\n   * If true, new dialog can open inside a dialog\r\n   */\r\n  @Input() complex: boolean = false;\r\n\r\n  /**\r\n   * Sets the text for warning dialog header.\r\n   */\r\n  @Input()\r\n  get warningHeaderText(): string {\r\n    return this._warningHeaderText;\r\n  }\r\n  set warningHeaderText(value: string) {\r\n    if (this._warningHeaderText !== value) {\r\n      this._warningHeaderText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the main warning dialog text.\r\n   */\r\n  @Input()\r\n  get warningDialogText(): string {\r\n    return this._warningDialogText;\r\n  }\r\n  set warningDialogText(value: string) {\r\n    if (this._warningDialogText !== value) {\r\n      this._warningDialogText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When checked, dialog opens in fullscreen mode\r\n   */\r\n  @HostBinding('class.fullscreen')\r\n  @Input()\r\n  fullscreen = false;\r\n\r\n  /**\r\n   * Can be set to open or close the dialog.\r\n   * Returns the current state of the dialog.\r\n   */\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    if (this._open !== value) {\r\n      this._open = !!value;\r\n      this.openChange.emit(this._open);\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the form has been touched.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get dirty(): boolean {\r\n    return !!this._dirty;\r\n  }\r\n  set dirty(value: boolean) {\r\n    if (this._dirty !== value) {\r\n      this._dirty = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be set to indicate if the warning dialog should be opened.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get warningOnClose(): boolean {\r\n    return !!this._warningOnClose;\r\n  }\r\n  set warningOnClose(value: boolean) {\r\n    if (this._warningOnClose !== value) {\r\n      this._warningOnClose = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /** @hidden */\r\n  close(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (this.closeOnScrimClick && target.classList.contains('scrim')) {\r\n      if (this.warningOnClose) {\r\n        if (this.openWarning === false) {\r\n          this.openWarning = true;\r\n        }\r\n      } else {\r\n        if (this.dirty === true) {\r\n          this.openWarning = true;\r\n        } else {\r\n          this.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a dialog.\r\n   */\r\n  openDialog() {\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a dialog.\r\n   */\r\n  closeDialog() {\r\n    if (this.warningOnClose || this.dirty) {\r\n      this.openWarning = !this.openWarning;\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all dialogs.\r\n   */\r\n  closeAllDialogs() {\r\n    this.openWarning = false;\r\n    this.open = false;\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Opens a warning dialog.\r\n   */\r\n  openWarningDialog() {\r\n    this.openWarning = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a warning dialog.\r\n   */\r\n  closeWarningDialog() {\r\n    this.openWarning = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (event.key === 'Esc' || event.key === 'Escape') {\r\n        this.closeDialog();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.opened')\r\n  get openedClosed() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(private focusTrap: ConfigurableFocusTrapFactory) {}\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.complex != null && this.complex !== false) {\r\n      this.complex = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                     | Description                       | Default\r\n   * :------------------------------------------|:--------------------------------------|:----------------------\r\n   * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`\r\n   * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`\r\n   * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`\r\n   * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`\r\n   * `--avl-dialog-width`                | Dialog width                      | `280 px`\r\n   * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`\r\n   * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`\r\n   * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`\r\n   * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`\r\n   * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`\r\n   *\r\n   */\r\n  _styling: any;\r\n}\r\n","import { OnInit, HostBinding, Directive } from '@angular/core';\r\nimport { AvlDialogComponent } from './avl-dialog.component';\r\n\r\n@Directive()\r\nexport abstract class AvlBaseDialogSection implements OnInit {\r\n\r\n  constructor(protected dialog: AvlDialogComponent) { }\r\n\r\n  @HostBinding('class.complex')\r\n  isComplex: boolean = false;\r\n\r\n  /** @hidden */\r\n  closeDialog() {\r\n    this.dialog.closeDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isComplex = this.dialog.complex;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-header',\r\n  templateUrl: './avl-dialog-header.component.html',\r\n  styleUrls: ['./avl-dialog-header.component.css']\r\n})\r\nexport class AvlDialogHeaderComponent extends AvlBaseDialogSection implements AfterViewInit {\r\n  @HostBinding('class.extended')\r\n  extended = false;\r\n\r\n  @ViewChild('extendedSlot')\r\n  private extendedSlot: ElementRef<HTMLSlotElement>;\r\n\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-footer',\r\n  templateUrl: './avl-dialog-footer.component.html',\r\n  styleUrls: ['./avl-dialog-footer.component.css']\r\n})\r\nexport class AvlDialogFooterComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-content',\r\n  templateUrl: './avl-dialog-content.component.html',\r\n  styleUrls: ['./avl-dialog-content.component.css']\r\n})\r\nexport class AvlDialogContentComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'avl-about-dialog',\r\n  templateUrl: './avl-about-dialog.component.html',\r\n  styleUrls: [\r\n    './avl-about-dialog.component.css'\r\n  ],\r\n\r\n})\r\nexport class AvlAboutDialogComponent {\r\n\r\n  @Input() productLogo: string;\r\n  @Input() productName: string;\r\n  @Input() brandPromise: string;\r\n  @Input() versionInfo: VersionInfo[];\r\n  @Input() legalText: string;\r\n  @Input() additionalInfoLabel: string;\r\n  @Input() additionalInfoUrl: string;\r\n  @Input() copyright: string;\r\n  @Input() okButtonLabel = 'OK';\r\n\r\n  private _open = false;\r\n  @Input()\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    this.openChange.emit(this._open);\r\n  }\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                      | Description                             | Default\r\n   * :----------------------------------------------------|:----------------------------------------|:----------------------\r\n   * `--avl-about-dialog-foreground-color`                | Main foreground color                   | `--avl-corporate-foreground-color`\r\n   * `--avl-about-dialog-foreground-medium-color`         | Forground color for version information | `--avl-corporate-foreground-medium-color`\r\n   * `--avl-about-dialog-link-color`                      | Link color                              | `--avl-corporate-link-color`\r\n   * `--avl-about-dialog-link-hover-color`                | Link hover color                        | `--avl-corporate-link-hover-color`\r\n   * `--avl-about-dialog-on-button-background-color`      | Button text color                       | `--avl-corporate-on-button-background-color`\r\n   * `--avl-about-dialog-button-background-color`         | Button background color                 | `--avl-corporate-button-background-color`\r\n   * `--avl-about-dialog-button-background-hover-color`   | Button hover color                      | `--avl-corporate-button-background-hover-color`\r\n   * `--avl-about-dialog-button-background-focus-color`   | Button focus color                      | `--avl-corporate-button-background-focus-color`\r\n   * `--avl-about-dialog-button-background-pressed-color` | Button pressed color                    | `--avl-corporate-button-background-pressed-color` *\r\n   */\r\n  _styling: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.open = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  openChanged(value: boolean) {\r\n    this.open = value;\r\n  }\r\n}\r\n\r\nexport interface VersionInfo {\r\n  label: string;\r\n  value: string;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule} from '@angular/cdk/a11y';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n// components\r\nimport { AvlDialogComponent } from './avl-dialog/avl-dialog.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogHeaderComponent } from './avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nimport { AvlDialogFooterComponent } from './avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nimport { AvlDialogContentComponent } from './avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\nimport { AvlAboutDialogComponent } from './avl-about-dialog/avl-about-dialog.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlDialogComponent,\r\n  AvlDialogHeaderComponent,\r\n  AvlDialogFooterComponent,\r\n  AvlDialogContentComponent,\r\n  AvlAboutDialogComponent,\r\n];\r\n\r\nconst providers = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AvlNgBindersModule,\r\n    A11yModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  providers: providers,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlDialogModule { }\r\n","/**\r\n * Can't put .ts file as index in package.json.\r\n * Hello, this is proxy.\r\n */\r\nexport { AvlDialogModule } from './lib/dialog.module';\r\nexport { AvlDialogComponent } from './lib/avl-dialog/avl-dialog.component';\r\nexport {\r\n  AvlAboutDialogComponent,\r\n  VersionInfo,\r\n} from './lib/avl-about-dialog/avl-about-dialog.component';\r\nexport { AvlDialogHeaderComponent } from './lib/avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nexport { AvlDialogFooterComponent } from './lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nexport { AvlDialogContentComponent } from './lib/avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AvlBaseDialogSection as ɵa} from './lib/avl-dialog/avl-dialog-section.base';"]}