var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
import '@avl-services/vanilla-js-services/avl-localization-service/avl-localization-service.api';
import '@avl-controls/core/dist/avl-button/avl-button';
import * as i0 from "@angular/core";
import * as i1 from "../avl-dialog/avl-dialog.component";
import * as i2 from "../avl-dialog/avl-dialog-content/avl-dialog-content.component";
import * as i3 from "@avl-ng-controls/common";
import * as i4 from "@angular/common";
import * as i5 from "@avl-controls/ng-binders";
export class AvlAboutDialogComponent {
    constructor() {
        this._open = false;
        this.openChange = new EventEmitter();
    }
    set open(value) {
        this._open = value;
        this.openChange.emit(this._open);
    }
    get open() {
        return this._open;
    }
    ngOnInit() {
        this.translateLabels();
    }
    translateLabels() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!AvlLocalizationService || !AvlLocalizationService.translationService) {
                return;
            }
            const translationService = AvlLocalizationService.translationService;
            this.avlAboutDialogInfo.productName = yield this.validateAndTranslate(this.avlAboutDialogInfo.productName);
            this.avlAboutDialogInfo.brandPromise = yield this.validateAndTranslate(this.avlAboutDialogInfo.brandPromise);
            this.avlAboutDialogInfo.versionInfo = yield this.translateVersionInfo(this.avlAboutDialogInfo.versionInfo);
            this.avlAboutDialogInfo.legalText = yield this.validateAndTranslate(this.avlAboutDialogInfo.legalText);
            this.avlAboutDialogInfo.additionalInfoLabel = yield this.validateAndTranslate(this.avlAboutDialogInfo.additionalInfoLabel);
            this.avlAboutDialogInfo.okButtonLabel = this.avlAboutDialogInfo.okButtonLabel
                ? yield translationService.translate(this.avlAboutDialogInfo.okButtonLabel)
                : 'OK';
        });
    }
    validateAndTranslate(key) {
        return __awaiter(this, void 0, void 0, function* () {
            const translateService = AvlLocalizationService.translationService;
            return key ? yield translateService.translate(key) : key;
        });
    }
    translateVersionInfo(versionInfo) {
        return __awaiter(this, void 0, void 0, function* () {
            return versionInfo
                ? yield Promise.all(versionInfo.map((item) => __awaiter(this, void 0, void 0, function* () { return yield this.translateVersionInfoItem(item); })))
                : versionInfo;
        });
    }
    translateVersionInfoItem(item) {
        return __awaiter(this, void 0, void 0, function* () {
            const translateService = AvlLocalizationService.translationService;
            return Object.assign(Object.assign({}, item), { label: yield translateService.translate(item.label) });
        });
    }
    closeDialog() {
        this.open = false;
    }
    /** @hidden */
    openChanged(value) {
        this.open = value;
    }
}
AvlAboutDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlAboutDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AvlAboutDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlAboutDialogComponent, selector: "avl-about-dialog", inputs: { avlAboutDialogInfo: "avlAboutDialogInfo", open: "open" }, outputs: { openChange: "openChange" }, ngImport: i0, template: "<ng-template #aboutContent>\r\n  <div class=\"about-content\">\r\n    <div class=\"product-title-holder\">\r\n      <div class=\"product-icon\">\r\n        <img src=\"{{ avlAboutDialogInfo.productLogo }}\" class=\"logo-img\" alt=\"logo\" />\r\n      </div>\r\n      <div class=\"product-title\">\r\n        <div class=\"product-name\">{{ avlAboutDialogInfo.productName }}</div>\r\n        <div class=\"brand-promise\">{{ avlAboutDialogInfo.brandPromise }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"version-info\">\r\n      <div class=\"version-info-item\" *ngFor=\"let infoLabel of avlAboutDialogInfo.versionInfo\">\r\n        {{ infoLabel.label }}: {{ infoLabel.value }}\r\n      </div>\r\n    </div>\r\n    <div class=\"legal-text\">{{ avlAboutDialogInfo.legalText }}</div>\r\n    <div class=\"additional-info\">\r\n      <a href=\"{{ avlAboutDialogInfo.additionalInfoUrl }}\" target=\"_blank\" rel=\"noopener noreferrer\">{{\r\n        avlAboutDialogInfo.additionalInfoLabel\r\n      }}</a>\r\n    </div>\r\n    <div class=\"ok-button\">\r\n      <avl-button (click)=\"closeDialog()\" contained>{{ avlAboutDialogInfo.okButtonLabel }}</avl-button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<avl-dialog id=\"dialog\" [(open)]=\"open\" (openChange)=\"openChanged($event)\">\r\n  <ng-template #content>\r\n    <avl-dialog-content>\r\n      <ng-container *ngTemplateOutlet=\"aboutContent\"></ng-container>\r\n      <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n    </avl-dialog-content>\r\n  </ng-template>\r\n</avl-dialog>\r\n\r\n<div *ngIf=\"open\" class=\"full-screen-about\">\r\n  <ng-container *ngTemplateOutlet=\"aboutContent\"></ng-container>\r\n  <div class=\"spacer\"></div>\r\n  <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n</div>\r\n\r\n", styles: [":host{font-family:var(--avl-font-family);--avl-about-dialog-foreground-color:var(--avl-corporate-foreground-color);--avl-about-dialog-foreground-medium-color:var(--avl-corporate-foreground-medium-color);--avl-about-dialog-link-color:var(--avl-corporate-link-color);--avl-about-dialog-link-hover-color:var(--avl-corporate-link-hover-color);--avl-about-dialog-on-button-background-color:var(--avl-corporate-on-button-background-color);--avl-about-dialog-button-background-color:var(--avl-corporate-button-background-color);--avl-about-dialog-button-background-hover-color:var(\r\n    --avl-corporate-button-background-hover-color\r\n  );--avl-about-dialog-button-background-focus-color:var(\r\n    --avl-corporate-button-background-focus-color\r\n  );--avl-about-dialog-button-background-pressed-color:var(\r\n    --avl-corporate-button-background-pressed-color\r\n  );--dialog-padding:48px;--product-logo-size:146px;--product-name-font-size:34px;--margin-above-ok-button:24px;--margin-above-additional-info:8px;--distance-between-version-info-items:8px;--margin-above-version-info:56px}@media (max-width:960px) and (min-width:400px){:host{--dialog-padding:24px 24px 40px 24px;--margin-above-version-info:24px}.product-icon{margin-bottom:24px}.product-title-holder{flex-wrap:wrap}}@media (max-width:400px){:host{--dialog-padding:16px 16px 32px 16px;--product-logo-size:48px;--product-name-font-size:24px;--distance-to-link-for-additional-info:24px;--distance-between-version-info-items:4px;--margin-above-version-info:24px}.product-icon{width:100%;margin-bottom:24px}.product-title-holder{flex-wrap:wrap}}.full-screen-about{display:none}@media (max-width:864px){#dialog{display:none}.spacer{flex:1 1 100%;background-color:var(--avl-corporate-menu-background-color)}.full-screen-about{display:flex;flex-direction:column}.full-screen-about avl-footer{flex:1 0 48px}.full-screen-about .about-content{flex:1 0 auto}}avl-dialog{--avl-dialog-width:768px;--avl-dialog-text-color:var(--avl-about-dialog-foreground-medium-color);--avl-dialog-background-color:var(--avl-corporate-menu-background-color)}avl-dialog-footer{padding:0}.about-content,avl-footer{background-color:var(--avl-corporate-menu-background-color);width:100%}.about-content{display:flex;flex-direction:column;justify-content:flex-start;padding:var(--dialog-padding);box-sizing:border-box;font-size:14px;line-height:19px;overflow:auto}.full-screen-about{position:fixed;top:0;left:0;bottom:0;right:0;overflow:auto;z-index:302}avl-dialog-content{padding:0}.product-title-holder{display:flex;align-items:center}.product-title{flex:1 1 100%}.product-icon{height:var(--product-logo-size);width:auto;margin-right:24px}.product-icon img{height:100%}.product-name{font-size:var(--product-name-font-size)}.brand-promise,.product-name{line-height:1;color:var(--avl-about-dialog-foreground-color)}.brand-promise{font-size:16px;margin-top:8px}.version-info{margin-top:var(--margin-above-version-info);color:hsla(0,0%,100%,.7)}.version-info-item{margin-bottom:var(--distance-between-version-info-items)}.version-info-item:last-child{margin-bottom:0}.legal-text{margin-top:24px;color:var(--avl-about-dialog-foreground-color)}.additional-info{margin-top:var(--margin-above-additional-info);color:var(--avl-corporate-link)}.additional-info:hover{color:var(--avl-corporate-link-hover)}.ok-button{margin-top:var(--margin-above-ok-button)}.ok-button avl-button{float:right}avl-button{--avl-button-label-color:var(--avl-about-dialog-on-button-background-color);--avl-button-background-default-color:var(--avl-about-dialog-button-background-color);--avl-button-background-hover-color:var(--avl-about-dialog-button-background-hover-color);--avl-button-background-focus-color:var(--avl-about-dialog-button-background-focus-color);--avl-button-background-pressed-color:var(--avl-about-dialog-button-background-pressed-color);font-size:14px}"], components: [{ type: i1.AvlDialogComponent, selector: "avl-dialog", inputs: ["closeOnScrimClick", "complex", "warningHeaderText", "warningDialogText", "fullscreen", "open", "dirty", "warningOnClose"], outputs: ["openChange"] }, { type: i2.AvlDialogContentComponent, selector: "avl-dialog-content" }, { type: i3.AvlFooterComponent, selector: "avl-footer", inputs: ["companyLogo", "currentYear"] }], directives: [{ type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }, { type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlAboutDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'avl-about-dialog',
                    templateUrl: './avl-about-dialog.component.html',
                    styleUrls: ['./avl-about-dialog.component.css']
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { avlAboutDialogInfo: [{
                type: Input
            }], open: [{
                type: Input
            }], openChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,