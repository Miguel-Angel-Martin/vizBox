var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from '@angular/core';
import { AvlDialogComponent } from '../avl-dialog.component';
import { AvlBaseDialogSection } from '../avl-dialog-section.base';
let AvlDialogContentComponent = class AvlDialogContentComponent extends AvlBaseDialogSection {
    constructor(dialog) {
        super(dialog);
        this.dialog = dialog;
    }
};
AvlDialogContentComponent.ctorParameters = () => [
    { type: AvlDialogComponent }
];
AvlDialogContentComponent = __decorate([
    Component({
        selector: 'avl-dialog-content',
        template: "<ng-content></ng-content>",
        styles: [":host(){flex-grow:1;flex-direction:column;font-size:16px;line-height:21px;color:var(--avl-dialog-text-color);padding-top:0;padding-right:var(--padding-right,24px);padding-bottom:var(--padding-bottom,28px);padding-left:var(--padding-left,24px);overflow:auto}:host(.complex){padding-top:var(--padding-top,8px)}:host(.warning){padding:13px 16px 0 23px}"]
    }),
    __metadata("design:paramtypes", [AvlDialogComponent])
], AvlDialogContentComponent);
export { AvlDialogContentComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRpYWxvZy1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtbmctY29udHJvbHMvZGlhbG9nLyIsInNvdXJjZXMiOlsibGliL2F2bC1kaWFsb2cvYXZsLWRpYWxvZy1jb250ZW50L2F2bC1kaWFsb2ctY29udGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU9sRSxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUEwQixTQUFRLG9CQUFvQjtJQUNqRSxZQUFzQixNQUEwQjtRQUM5QyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFETSxXQUFNLEdBQU4sTUFBTSxDQUFvQjtJQUVoRCxDQUFDO0NBQ0YsQ0FBQTs7WUFIK0Isa0JBQWtCOztBQURyQyx5QkFBeUI7SUFMckMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLG9CQUFvQjtRQUM5QixxQ0FBa0Q7O0tBRW5ELENBQUM7cUNBRThCLGtCQUFrQjtHQURyQyx5QkFBeUIsQ0FJckM7U0FKWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXZsRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vYXZsLWRpYWxvZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBdmxCYXNlRGlhbG9nU2VjdGlvbiB9IGZyb20gJy4uL2F2bC1kaWFsb2ctc2VjdGlvbi5iYXNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXZsLWRpYWxvZy1jb250ZW50JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXZsLWRpYWxvZy1jb250ZW50LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hdmwtZGlhbG9nLWNvbnRlbnQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdmxEaWFsb2dDb250ZW50Q29tcG9uZW50IGV4dGVuZHMgQXZsQmFzZURpYWxvZ1NlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBkaWFsb2c6IEF2bERpYWxvZ0NvbXBvbmVudCkge1xyXG4gICAgc3VwZXIoZGlhbG9nKTtcclxuICB9XHJcbn1cclxuIl19