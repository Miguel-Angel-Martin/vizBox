import { Component, ViewChild, HostBinding } from '@angular/core';
import '@avl-controls/core/dist/avl-icon-button/avl-icon-button';
import '@avl-controls/core/dist/avl-tooltip/avl-tooltip';
import * as i0 from "@angular/core";
import * as i1 from "@avl-controls/ng-binders";
export class AvlDialogHeaderComponent {
    constructor() {
        this.extended = false;
        this.closeDialog = (event) => {
            event.target
                .closest('avl-dialog')
                .dispatchEvent(new CustomEvent('headerCloseClicked'));
        };
    }
    ngAfterViewInit() {
        Promise.resolve().then(() => (this.extended = !!this.extendedSlot.nativeElement.childElementCount));
    }
}
AvlDialogHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlDialogHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AvlDialogHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlDialogHeaderComponent, selector: "avl-dialog-header", host: { properties: { "class.extended": "this.extended" } }, viewQueries: [{ propertyName: "extendedSlot", first: true, predicate: ["extendedSlot"], descendants: true }], ngImport: i0, template: "<div class=\"title-and-close\">\r\n  <div id=\"headerText\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <avl-icon-button icon=\"icons:close\" id=\"closeIcon\" (click)=\"closeDialog($event)\"></avl-icon-button>\r\n</div>\r\n<avl-tooltip for=\"closeIcon\">close</avl-tooltip>\r\n<div class=\"extended-slot\" #extendedSlot>\r\n  <ng-content select=\"[slot=extended]\"></ng-content>\r\n</div>\r\n", styles: [":host{display:block;font-family:var(--avl-font-family);font-size:20px;line-height:22px;box-sizing:border-box;color:var(--avl-dialog-header-title-color)}:host(.complex){border-bottom:1px solid var(--avl-dialog-separator-color)}.title-and-close{display:flex;height:64px;padding:6px 8px 0 24px;box-sizing:border-box;flex-grow:0;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:space-between}:host(.complex) .title-and-close{height:63px;padding-right:6px;padding-top:7px}:host(.extended) .title-and-close{height:48px;padding-top:0}.extended-slot{display:none}:host(.extended) .extended-slot{display:block}#headerText{width:calc(100% - 60px);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#closeIcon{margin-top:1px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-dialog-close-icon-color);--avl-icon-ink-hover-color:transparent;--avl-icon-ink-focus-color:transparent;--avl-icon-ink-pressed-color:transparent;--avl-icon-button-ink-pressed-color:var(--avl-dialog-close-icon-ink-pressed-color);--avl-icon-button-ink-focus-color:var(--avl-dialog-close-icon-ink-focus-color);--avl-icon-button-ink-hover-color:var(--avl-dialog-close-icon-ink-hover-color)}:host(.extended) #closeIcon{margin-top:0}avl-dialog.fullscreen :host{border:none;box-shadow:var(--avl-box-shadow-4dp)}avl-dialog.fullscreen :host .title-and-close{padding:0 6px}avl-dialog.fullscreen :host #closeIcon{order:-1;margin-left:0}"], directives: [{ type: i1.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }, { type: i1.AvlIconButtonDirective, selector: "avl-icon-button", outputs: ["badgeChange", "badgeValueChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlDialogHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'avl-dialog-header',
                    templateUrl: './avl-dialog-header.component.html',
                    styleUrls: ['./avl-dialog-header.component.css']
                }]
        }], propDecorators: { extended: [{
                type: HostBinding,
                args: ['class.extended']
            }], extendedSlot: [{
                type: ViewChild,
                args: ['extendedSlot']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRpYWxvZy1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZGlhbG9nL3NyYy9saWIvYXZsLWRpYWxvZy9hdmwtZGlhbG9nLWhlYWRlci9hdmwtZGlhbG9nLWhlYWRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kaWFsb2cvc3JjL2xpYi9hdmwtZGlhbG9nL2F2bC1kaWFsb2ctaGVhZGVyL2F2bC1kaWFsb2ctaGVhZGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFpQixXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakYsT0FBTyx5REFBeUQsQ0FBQztBQUNqRSxPQUFPLGlEQUFpRCxDQUFDOzs7QUFTekQsTUFBTSxPQUFPLHdCQUF3QjtJQUxyQztRQU9FLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFVVixnQkFBVyxHQUFHLENBQUMsS0FBaUIsRUFBRSxFQUFFO1lBQ3hDLEtBQUssQ0FBQyxNQUFzQjtpQkFDMUIsT0FBTyxDQUFDLFlBQVksQ0FBQztpQkFDckIsYUFBYSxDQUFDLElBQUksV0FBVyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQztRQUMxRCxDQUFDLENBQUM7S0FDSDtJQVZDLGVBQWU7UUFDYixPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUNwQixHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLGlCQUFpQixDQUFDLENBQzVFLENBQUM7SUFDSixDQUFDOztxSEFYVSx3QkFBd0I7eUdBQXhCLHdCQUF3QixvT0NackMsaVpBVUE7MkZERWEsd0JBQXdCO2tCQUxwQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFdBQVcsRUFBRSxvQ0FBb0M7b0JBQ2pELFNBQVMsRUFBRSxDQUFDLG1DQUFtQyxDQUFDO2lCQUNqRDs4QkFHQyxRQUFRO3NCQURQLFdBQVc7dUJBQUMsZ0JBQWdCO2dCQUlyQixZQUFZO3NCQURuQixTQUFTO3VCQUFDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgQWZ0ZXJWaWV3SW5pdCwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLWljb24tYnV0dG9uL2F2bC1pY29uLWJ1dHRvbic7XHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLXRvb2x0aXAvYXZsLXRvb2x0aXAnO1xyXG5cclxuaW1wb3J0IHR5cGUgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2F2bC1kaWFsb2ctaGVhZGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXZsLWRpYWxvZy1oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2F2bC1kaWFsb2ctaGVhZGVyLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsRGlhbG9nSGVhZGVyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5leHRlbmRlZCcpXHJcbiAgZXh0ZW5kZWQgPSBmYWxzZTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZXh0ZW5kZWRTbG90JylcclxuICBwcml2YXRlIGV4dGVuZGVkU2xvdDogRWxlbWVudFJlZjxIVE1MU2xvdEVsZW1lbnQ+O1xyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKFxyXG4gICAgICAoKSA9PiAodGhpcy5leHRlbmRlZCA9ICEhdGhpcy5leHRlbmRlZFNsb3QubmF0aXZlRWxlbWVudC5jaGlsZEVsZW1lbnRDb3VudClcclxuICAgICk7XHJcbiAgfVxyXG4gIHB1YmxpYyBjbG9zZURpYWxvZyA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgKGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudClcclxuICAgICAgLmNsb3Nlc3QoJ2F2bC1kaWFsb2cnKVxyXG4gICAgICAuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2hlYWRlckNsb3NlQ2xpY2tlZCcpKTtcclxuICB9O1xyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJ0aXRsZS1hbmQtY2xvc2VcIj5cclxuICA8ZGl2IGlkPVwiaGVhZGVyVGV4dFwiPlxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIDwvZGl2PlxyXG4gIDxhdmwtaWNvbi1idXR0b24gaWNvbj1cImljb25zOmNsb3NlXCIgaWQ9XCJjbG9zZUljb25cIiAoY2xpY2spPVwiY2xvc2VEaWFsb2coJGV2ZW50KVwiPjwvYXZsLWljb24tYnV0dG9uPlxyXG48L2Rpdj5cclxuPGF2bC10b29sdGlwIGZvcj1cImNsb3NlSWNvblwiPmNsb3NlPC9hdmwtdG9vbHRpcD5cclxuPGRpdiBjbGFzcz1cImV4dGVuZGVkLXNsb3RcIiAjZXh0ZW5kZWRTbG90PlxyXG4gIDxuZy1jb250ZW50IHNlbGVjdD1cIltzbG90PWV4dGVuZGVkXVwiPjwvbmctY29udGVudD5cclxuPC9kaXY+XHJcbiJdfQ==