import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@avl-controls/ng-binders';

const _c0 = ["extendedSlot"];
const _c1 = ["*", [["", "slot", "extended"]]];
const _c2 = ["*", "[slot=extended]"];
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ViewChild, ElementRef, HostBinding } from '@angular/core';
import { AvlDialogComponent } from '../avl-dialog.component';
import { AvlBaseDialogSection } from '../avl-dialog-section.base';
import '@avl-controls/core/dist/avl-icon-button/avl-icon-button';
import '@avl-controls/core/dist/avl-tooltip/avl-tooltip';
let AvlDialogHeaderComponent = class AvlDialogHeaderComponent extends AvlBaseDialogSection {
    constructor(dialog) {
        super(dialog);
        this.dialog = dialog;
        this.extended = false;
    }
    ngAfterViewInit() {
        Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);
    }
};
AvlDialogHeaderComponent.ɵfac = function AvlDialogHeaderComponent_Factory(t) { return new (t || AvlDialogHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(AvlDialogComponent)); };
AvlDialogHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AvlDialogHeaderComponent, selectors: [["avl-dialog-header"]], viewQuery: function AvlDialogHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.extendedSlot = _t.first);
    } }, hostVars: 2, hostBindings: function AvlDialogHeaderComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("extended", ctx.extended);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 9, vars: 0, consts: [[1, "title-and-close"], ["id", "headerText"], ["icon", "icons:close", "id", "closeIcon", 3, "click"], ["for", "closeIcon"], [1, "extended-slot"], ["extendedSlot", ""]], template: function AvlDialogHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "avl-icon-button", 2);
        ɵngcc0.ɵɵlistener("click", function AvlDialogHeaderComponent_Template_avl_icon_button_click_3_listener() { return ctx.closeDialog(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "avl-tooltip", 3);
        ɵngcc0.ɵɵtext(5, "close");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 4, 5);
        ɵngcc0.ɵɵprojection(8, 1);
        ɵngcc0.ɵɵelementEnd();
    } }, directives: [ɵngcc1.AvlInteractionControlDirective, ɵngcc1.AvlIconButtonDirective], styles: ["[_nghost-%COMP%]{display:block;font-family:var(--avl-font-family);font-size:20px;line-height:22px;box-sizing:border-box;color:var(--avl-dialog-header-title-color)}.complex[_nghost-%COMP%]{border-bottom:1px solid var(--avl-dialog-separator-color)}.title-and-close[_ngcontent-%COMP%]{display:flex;height:64px;padding:6px 8px 0 24px;box-sizing:border-box;flex-grow:0;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:space-between}.complex[_nghost-%COMP%]   .title-and-close[_ngcontent-%COMP%]{height:63px;padding-right:6px;padding-top:7px}.extended[_nghost-%COMP%]   .title-and-close[_ngcontent-%COMP%]{height:48px;padding-top:0}.extended-slot[_ngcontent-%COMP%]{display:none}.extended[_nghost-%COMP%]   .extended-slot[_ngcontent-%COMP%]{display:block}#headerText[_ngcontent-%COMP%]{width:calc(100% - 60px);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#closeIcon[_ngcontent-%COMP%]{margin-top:1px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-dialog-close-icon-color);--avl-icon-ink-hover-color:transparent;--avl-icon-ink-focus-color:transparent;--avl-icon-ink-pressed-color:transparent;--avl-icon-button-ink-pressed-color:var(--avl-dialog-close-icon-ink-pressed-color);--avl-icon-button-ink-focus-color:var(--avl-dialog-close-icon-ink-focus-color);--avl-icon-button-ink-hover-color:var(--avl-dialog-close-icon-ink-hover-color)}.extended[_nghost-%COMP%]   #closeIcon[_ngcontent-%COMP%]{margin-top:0}avl-dialog.fullscreen   [_nghost-%COMP%]{border:none;box-shadow:var(--avl-box-shadow-4dp)}avl-dialog.fullscreen   [_nghost-%COMP%]   .title-and-close[_ngcontent-%COMP%]{padding:0 6px}avl-dialog.fullscreen   [_nghost-%COMP%]   #closeIcon[_ngcontent-%COMP%]{order:-1;margin-left:0}"] });
AvlDialogHeaderComponent.ctorParameters = () => [
    { type: AvlDialogComponent }
];
__decorate([
    HostBinding('class.extended'),
    __metadata("design:type", Object)
], AvlDialogHeaderComponent.prototype, "extended", void 0);
__decorate([
    ViewChild('extendedSlot'),
    __metadata("design:type", ElementRef)
], AvlDialogHeaderComponent.prototype, "extendedSlot", void 0);
AvlDialogHeaderComponent = __decorate([ __metadata("design:paramtypes", [AvlDialogComponent])
], AvlDialogHeaderComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlDialogHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'avl-dialog-header',
                template: "<div class=\"title-and-close\">\r\n  <div id=\"headerText\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <avl-icon-button icon=\"icons:close\" id=\"closeIcon\" (click)=\"closeDialog()\"></avl-icon-button>\r\n</div>\r\n<avl-tooltip for=\"closeIcon\">close</avl-tooltip>\r\n<div class=\"extended-slot\" #extendedSlot>\r\n  <ng-content select=\"[slot=extended]\"></ng-content>\r\n</div>\r\n",
                styles: [":host{display:block;font-family:var(--avl-font-family);font-size:20px;line-height:22px;box-sizing:border-box;color:var(--avl-dialog-header-title-color)}:host(.complex){border-bottom:1px solid var(--avl-dialog-separator-color)}.title-and-close{display:flex;height:64px;padding:6px 8px 0 24px;box-sizing:border-box;flex-grow:0;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:space-between}:host(.complex) .title-and-close{height:63px;padding-right:6px;padding-top:7px}:host(.extended) .title-and-close{height:48px;padding-top:0}.extended-slot{display:none}:host(.extended) .extended-slot{display:block}#headerText{width:calc(100% - 60px);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#closeIcon{margin-top:1px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-dialog-close-icon-color);--avl-icon-ink-hover-color:transparent;--avl-icon-ink-focus-color:transparent;--avl-icon-ink-pressed-color:transparent;--avl-icon-button-ink-pressed-color:var(--avl-dialog-close-icon-ink-pressed-color);--avl-icon-button-ink-focus-color:var(--avl-dialog-close-icon-ink-focus-color);--avl-icon-button-ink-hover-color:var(--avl-dialog-close-icon-ink-hover-color)}:host(.extended) #closeIcon{margin-top:0}avl-dialog.fullscreen :host{border:none;box-shadow:var(--avl-box-shadow-4dp)}avl-dialog.fullscreen :host .title-and-close{padding:0 6px}avl-dialog.fullscreen :host #closeIcon{order:-1;margin-left:0}"]
            }]
    }], function () { return [{ type: AvlDialogComponent }]; }, { extended: [{
            type: HostBinding,
            args: ['class.extended']
        }], extendedSlot: [{
            type: ViewChild,
            args: ['extendedSlot']
        }] }); })();
export { AvlDialogHeaderComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRpYWxvZy1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1uZy1jb250cm9scy9kaWFsb2cvbGliL2F2bC1kaWFsb2cvYXZsLWRpYWxvZy1oZWFkZXIvYXZsLWRpYWxvZy1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBaUIsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWxFLE9BQU8seURBQXlELENBQUM7QUFDakUsT0FBTyxpREFBaUQsQ0FBQztBQU96RCxJQUFhLHdCQUF3QixHQUFyQyxNQUFhLHdCQUF5QixTQUFRLG9CQUFvQjtBQUFHLElBT25FLFlBQXNCLE1BQTBCO0FBQ2xELFFBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2xCLFFBRndCLFdBQU0sR0FBTixNQUFNLENBQW9CO0FBQUMsUUFMakQsYUFBUSxHQUFHLEtBQUssQ0FBQztBQUNuQixJQU1FLENBQUM7QUFDSCxJQUNFLGVBQWU7QUFDakIsUUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDdEcsSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3eURBQUE7QUFDRDtBQUFrRCxZQVJsQixrQkFBa0I7QUFBRztBQUxuRDtBQUFhLElBRFosV0FBVyxDQUFDLGdCQUFnQixDQUFDO0FBQy9CO0FBRWlCLDBEQUZDO0FBR2pCO0FBQWEsSUFEWixTQUFTLENBQUMsY0FBYyxDQUFDO0FBQzNCLDhCQUF1QixVQUFVO0FBQUUsOERBQWdCO0FBTHZDLHdCQUF3QixvQkFMcEMsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFLG1CQUFtQix0REFJM0Isa0NBTzRCLGtCQUFrQjtTQVZoRCxUQVVtRCxHQVB4Qyx3QkFBd0IsQ0FjcEM7Ozs7O29OQWpCa0Q7MnRDQUVsRCxDQUFDOzs7Ozs7OztvQkFnQkY7O0FBM0JBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVBBLEFBQUEsQUFMQSxBQURBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUdBLEFBREEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUxBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBUUEsQUFBQSxBQVBBLEFBQUEsQUFjQSxBQWRBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXZsRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vYXZsLWRpYWxvZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBdmxCYXNlRGlhbG9nU2VjdGlvbiB9IGZyb20gJy4uL2F2bC1kaWFsb2ctc2VjdGlvbi5iYXNlJztcclxuXHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLWljb24tYnV0dG9uL2F2bC1pY29uLWJ1dHRvbic7XHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLXRvb2x0aXAvYXZsLXRvb2x0aXAnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtZGlhbG9nLWhlYWRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2F2bC1kaWFsb2ctaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hdmwtZGlhbG9nLWhlYWRlci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bERpYWxvZ0hlYWRlckNvbXBvbmVudCBleHRlbmRzIEF2bEJhc2VEaWFsb2dTZWN0aW9uIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5leHRlbmRlZCcpXHJcbiAgZXh0ZW5kZWQgPSBmYWxzZTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZXh0ZW5kZWRTbG90JylcclxuICBwcml2YXRlIGV4dGVuZGVkU2xvdDogRWxlbWVudFJlZjxIVE1MU2xvdEVsZW1lbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZGlhbG9nOiBBdmxEaWFsb2dDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGRpYWxvZyk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHRoaXMuZXh0ZW5kZWQgPSAhIXRoaXMuZXh0ZW5kZWRTbG90Lm5hdGl2ZUVsZW1lbnQuY2hpbGRFbGVtZW50Q291bnQpO1xyXG4gIH1cclxufVxyXG4iXX0=