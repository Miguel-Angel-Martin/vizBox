var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ViewChild, ElementRef, HostBinding } from '@angular/core';
import { AvlDialogComponent } from '../avl-dialog.component';
import { AvlBaseDialogSection } from '../avl-dialog-section.base';
import '@avl-controls/core/dist/avl-icon-button/avl-icon-button';
import '@avl-controls/core/dist/avl-tooltip/avl-tooltip';
let AvlDialogHeaderComponent = class AvlDialogHeaderComponent extends AvlBaseDialogSection {
    constructor(dialog) {
        super(dialog);
        this.dialog = dialog;
        this.extended = false;
    }
    ngAfterViewInit() {
        Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);
    }
};
AvlDialogHeaderComponent.ctorParameters = () => [
    { type: AvlDialogComponent }
];
__decorate([
    HostBinding('class.extended'),
    __metadata("design:type", Object)
], AvlDialogHeaderComponent.prototype, "extended", void 0);
__decorate([
    ViewChild('extendedSlot'),
    __metadata("design:type", ElementRef)
], AvlDialogHeaderComponent.prototype, "extendedSlot", void 0);
AvlDialogHeaderComponent = __decorate([
    Component({
        selector: 'avl-dialog-header',
        template: "<div class=\"title-and-close\">\r\n  <div id=\"headerText\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <avl-icon-button icon=\"icons:close\" id=\"closeIcon\" (click)=\"closeDialog()\"></avl-icon-button>\r\n</div>\r\n<avl-tooltip for=\"closeIcon\">close</avl-tooltip>\r\n<div class=\"extended-slot\" #extendedSlot>\r\n  <ng-content select=\"[slot=extended]\"></ng-content>\r\n</div>\r\n",
        styles: [":host{display:block;font-family:var(--avl-font-family);font-size:20px;line-height:22px;box-sizing:border-box;color:var(--avl-dialog-header-title-color)}:host(.complex){border-bottom:1px solid var(--avl-dialog-separator-color)}.title-and-close{display:flex;height:64px;padding:6px 8px 0 24px;box-sizing:border-box;flex-grow:0;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:space-between}:host(.complex) .title-and-close{height:63px;padding-right:6px;padding-top:7px}:host(.extended) .title-and-close{height:48px;padding-top:0}.extended-slot{display:none}:host(.extended) .extended-slot{display:block}#headerText{width:calc(100% - 60px);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#closeIcon{margin-top:1px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-dialog-close-icon-color);--avl-icon-ink-hover-color:transparent;--avl-icon-ink-focus-color:transparent;--avl-icon-ink-pressed-color:transparent;--avl-icon-button-ink-pressed-color:var(--avl-dialog-close-icon-ink-pressed-color);--avl-icon-button-ink-focus-color:var(--avl-dialog-close-icon-ink-focus-color);--avl-icon-button-ink-hover-color:var(--avl-dialog-close-icon-ink-hover-color)}:host(.extended) #closeIcon{margin-top:0}avl-dialog.fullscreen :host{border:none;box-shadow:var(--avl-box-shadow-4dp)}avl-dialog.fullscreen :host .title-and-close{padding:0 6px}avl-dialog.fullscreen :host #closeIcon{order:-1;margin-left:0}"]
    }),
    __metadata("design:paramtypes", [AvlDialogComponent])
], AvlDialogHeaderComponent);
export { AvlDialogHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRpYWxvZy1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGF2bC1uZy1jb250cm9scy9kaWFsb2cvIiwic291cmNlcyI6WyJsaWIvYXZsLWRpYWxvZy9hdmwtZGlhbG9nLWhlYWRlci9hdmwtZGlhbG9nLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFpQixXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDN0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFbEUsT0FBTyx5REFBeUQsQ0FBQztBQUNqRSxPQUFPLGlEQUFpRCxDQUFDO0FBT3pELElBQWEsd0JBQXdCLEdBQXJDLE1BQWEsd0JBQXlCLFNBQVEsb0JBQW9CO0lBT2hFLFlBQXNCLE1BQTBCO1FBQzlDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQURNLFdBQU0sR0FBTixNQUFNLENBQW9CO1FBTGhELGFBQVEsR0FBRyxLQUFLLENBQUM7SUFPakIsQ0FBQztJQUVELGVBQWU7UUFDYixPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDcEcsQ0FBQztDQUNGLENBQUE7O1lBUCtCLGtCQUFrQjs7QUFMaEQ7SUFEQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7OzBEQUNiO0FBR2pCO0lBREMsU0FBUyxDQUFDLGNBQWMsQ0FBQzs4QkFDSixVQUFVOzhEQUFrQjtBQUx2Qyx3QkFBd0I7SUFMcEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLG1CQUFtQjtRQUM3QixxWkFBaUQ7O0tBRWxELENBQUM7cUNBUThCLGtCQUFrQjtHQVByQyx3QkFBd0IsQ0FjcEM7U0FkWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXZsRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vYXZsLWRpYWxvZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBdmxCYXNlRGlhbG9nU2VjdGlvbiB9IGZyb20gJy4uL2F2bC1kaWFsb2ctc2VjdGlvbi5iYXNlJztcclxuXHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLWljb24tYnV0dG9uL2F2bC1pY29uLWJ1dHRvbic7XHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLXRvb2x0aXAvYXZsLXRvb2x0aXAnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtZGlhbG9nLWhlYWRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2F2bC1kaWFsb2ctaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hdmwtZGlhbG9nLWhlYWRlci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bERpYWxvZ0hlYWRlckNvbXBvbmVudCBleHRlbmRzIEF2bEJhc2VEaWFsb2dTZWN0aW9uIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5leHRlbmRlZCcpXHJcbiAgZXh0ZW5kZWQgPSBmYWxzZTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZXh0ZW5kZWRTbG90JylcclxuICBwcml2YXRlIGV4dGVuZGVkU2xvdDogRWxlbWVudFJlZjxIVE1MU2xvdEVsZW1lbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZGlhbG9nOiBBdmxEaWFsb2dDb21wb25lbnQpIHtcclxuICAgIHN1cGVyKGRpYWxvZyk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHRoaXMuZXh0ZW5kZWQgPSAhIXRoaXMuZXh0ZW5kZWRTbG90Lm5hdGl2ZUVsZW1lbnQuY2hpbGRFbGVtZW50Q291bnQpO1xyXG4gIH1cclxufVxyXG4iXX0=