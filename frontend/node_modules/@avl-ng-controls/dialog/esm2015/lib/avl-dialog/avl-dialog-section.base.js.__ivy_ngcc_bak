var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { HostBinding, Directive } from '@angular/core';
import { AvlDialogComponent } from './avl-dialog.component';
let AvlBaseDialogSection = class AvlBaseDialogSection {
    constructor(dialog) {
        this.dialog = dialog;
        this.isComplex = false;
    }
    /** @hidden */
    closeDialog() {
        this.dialog.closeDialog();
    }
    ngOnInit() {
        this.isComplex = this.dialog.complex;
    }
};
AvlBaseDialogSection.ctorParameters = () => [
    { type: AvlDialogComponent }
];
__decorate([
    HostBinding('class.complex'),
    __metadata("design:type", Boolean)
], AvlBaseDialogSection.prototype, "isComplex", void 0);
AvlBaseDialogSection = __decorate([
    Directive(),
    __metadata("design:paramtypes", [AvlDialogComponent])
], AvlBaseDialogSection);
export { AvlBaseDialogSection };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRpYWxvZy1zZWN0aW9uLmJhc2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYXZsLW5nLWNvbnRyb2xzL2RpYWxvZy8iLCJzb3VyY2VzIjpbImxpYi9hdmwtZGlhbG9nL2F2bC1kaWFsb2ctc2VjdGlvbi5iYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBVSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRzVELElBQXNCLG9CQUFvQixHQUExQyxNQUFzQixvQkFBb0I7SUFFeEMsWUFBc0IsTUFBMEI7UUFBMUIsV0FBTSxHQUFOLE1BQU0sQ0FBb0I7UUFHaEQsY0FBUyxHQUFZLEtBQUssQ0FBQztJQUh5QixDQUFDO0lBS3JELGNBQWM7SUFDZCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDdkMsQ0FBQztDQUVGLENBQUE7O1lBZCtCLGtCQUFrQjs7QUFHaEQ7SUFEQyxXQUFXLENBQUMsZUFBZSxDQUFDOzt1REFDRjtBQUxQLG9CQUFvQjtJQUR6QyxTQUFTLEVBQUU7cUNBR29CLGtCQUFrQjtHQUY1QixvQkFBb0IsQ0FnQnpDO1NBaEJxQixvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEhvc3RCaW5kaW5nLCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXZsRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9hdmwtZGlhbG9nLmNvbXBvbmVudCc7XHJcblxyXG5ARGlyZWN0aXZlKClcclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEF2bEJhc2VEaWFsb2dTZWN0aW9uIGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGRpYWxvZzogQXZsRGlhbG9nQ29tcG9uZW50KSB7IH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jb21wbGV4JylcclxuICBpc0NvbXBsZXg6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBjbG9zZURpYWxvZygpIHtcclxuICAgIHRoaXMuZGlhbG9nLmNsb3NlRGlhbG9nKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaXNDb21wbGV4ID0gdGhpcy5kaWFsb2cuY29tcGxleDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==