{"version":3,"file":"avl-ng-controls-dialog.js","sources":["ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-section.base.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-header/avl-dialog-header.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-content/avl-dialog-content.component.ts","ng://@avl-ng-controls/dialog/lib/avl-about-dialog/avl-about-dialog.component.ts","ng://@avl-ng-controls/dialog/lib/dialog.module.ts","ng://@avl-ng-controls/dialog/public-api.ts","ng://@avl-ng-controls/dialog/avl-ng-controls-dialog.ts"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'avl-dialog',\r\n  templateUrl: './avl-dialog.component.html',\r\n  styleUrls: ['./avl-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlDialogComponent implements OnInit {\r\n  private _open = false;\r\n  private _dirty: boolean = false;\r\n  private _warningOnClose = false;\r\n  private _warningHeaderText = '';\r\n  private _warningDialogText = '';\r\n  public openWarning = false;\r\n\r\n  /**\r\n   * Dialog content\r\n   */\r\n  @ContentChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('element', { static: true }) element: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('optionForm', { read: NgForm }) optionForm: any;\r\n\r\n  /**\r\n   * If true, the dialog can be closed by clicking on scrim\r\n   */\r\n  @Input() closeOnScrimClick: boolean = true;\r\n\r\n  /**\r\n   * If true, new dialog can open inside a dialog\r\n   */\r\n  @Input() complex: boolean = false;\r\n\r\n  /**\r\n   * Sets the text for warning dialog header.\r\n   */\r\n  @Input()\r\n  get warningHeaderText(): string {\r\n    return this._warningHeaderText;\r\n  }\r\n  set warningHeaderText(value: string) {\r\n    if (this._warningHeaderText !== value) {\r\n      this._warningHeaderText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the main warning dialog text.\r\n   */\r\n  @Input()\r\n  get warningDialogText(): string {\r\n    return this._warningDialogText;\r\n  }\r\n  set warningDialogText(value: string) {\r\n    if (this._warningDialogText !== value) {\r\n      this._warningDialogText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When checked, dialog opens in fullscreen mode\r\n   */\r\n  @HostBinding('class.fullscreen')\r\n  @Input()\r\n  fullscreen = false;\r\n\r\n  /**\r\n   * Can be set to open or close the dialog.\r\n   * Returns the current state of the dialog.\r\n   */\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    if (this._open !== value) {\r\n      this._open = !!value;\r\n      this.openChange.emit(this._open);\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the form has been touched.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get dirty(): boolean {\r\n    return !!this._dirty;\r\n  }\r\n  set dirty(value: boolean) {\r\n    if (this._dirty !== value) {\r\n      this._dirty = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be set to indicate if the warning dialog should be opened.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get warningOnClose(): boolean {\r\n    return !!this._warningOnClose;\r\n  }\r\n  set warningOnClose(value: boolean) {\r\n    if (this._warningOnClose !== value) {\r\n      this._warningOnClose = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /** @hidden */\r\n  close(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (this.closeOnScrimClick && target.classList.contains('scrim')) {\r\n      if (this.warningOnClose) {\r\n        if (this.openWarning === false) {\r\n          this.openWarning = true;\r\n        }\r\n      } else {\r\n        if (this.dirty === true) {\r\n          this.openWarning = true;\r\n        } else {\r\n          this.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a dialog.\r\n   */\r\n  openDialog() {\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a dialog.\r\n   */\r\n  closeDialog() {\r\n    if (this.warningOnClose || this.dirty) {\r\n      this.openWarning = !this.openWarning;\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all dialogs.\r\n   */\r\n  closeAllDialogs() {\r\n    this.openWarning = false;\r\n    this.open = false;\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Opens a warning dialog.\r\n   */\r\n  openWarningDialog() {\r\n    this.openWarning = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a warning dialog.\r\n   */\r\n  closeWarningDialog() {\r\n    this.openWarning = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (event.key === 'Esc' || event.key === 'Escape') {\r\n        this.closeDialog();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.opened')\r\n  get openedClosed() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(private focusTrap: ConfigurableFocusTrapFactory) {}\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.complex != null && this.complex !== false) {\r\n      this.complex = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                     | Description                       | Default\r\n   * :------------------------------------------|:--------------------------------------|:----------------------\r\n   * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`\r\n   * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`\r\n   * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`\r\n   * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`\r\n   * `--avl-dialog-width`                | Dialog width                      | `280 px`\r\n   * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`\r\n   * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`\r\n   * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`\r\n   * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`\r\n   * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`\r\n   *\r\n   */\r\n  _styling: any;\r\n}\r\n","import { OnInit, HostBinding, Directive } from '@angular/core';\r\nimport { AvlDialogComponent } from './avl-dialog.component';\r\n\r\n@Directive()\r\nexport abstract class AvlBaseDialogSection implements OnInit {\r\n\r\n  constructor(protected dialog: AvlDialogComponent) { }\r\n\r\n  @HostBinding('class.complex')\r\n  isComplex: boolean = false;\r\n\r\n  /** @hidden */\r\n  closeDialog() {\r\n    this.dialog.closeDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isComplex = this.dialog.complex;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-header',\r\n  templateUrl: './avl-dialog-header.component.html',\r\n  styleUrls: ['./avl-dialog-header.component.css']\r\n})\r\nexport class AvlDialogHeaderComponent extends AvlBaseDialogSection implements AfterViewInit {\r\n  @HostBinding('class.extended')\r\n  extended = false;\r\n\r\n  @ViewChild('extendedSlot')\r\n  private extendedSlot: ElementRef<HTMLSlotElement>;\r\n\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-footer',\r\n  templateUrl: './avl-dialog-footer.component.html',\r\n  styleUrls: ['./avl-dialog-footer.component.css']\r\n})\r\nexport class AvlDialogFooterComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-content',\r\n  templateUrl: './avl-dialog-content.component.html',\r\n  styleUrls: ['./avl-dialog-content.component.css']\r\n})\r\nexport class AvlDialogContentComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'avl-about-dialog',\r\n  templateUrl: './avl-about-dialog.component.html',\r\n  styleUrls: [\r\n    './avl-about-dialog.component.css'\r\n  ],\r\n\r\n})\r\nexport class AvlAboutDialogComponent {\r\n\r\n  @Input() productLogo: string;\r\n  @Input() productName: string;\r\n  @Input() brandPromise: string;\r\n  @Input() versionInfo: VersionInfo[];\r\n  @Input() legalText: string;\r\n  @Input() additionalInfoLabel: string;\r\n  @Input() additionalInfoUrl: string;\r\n  @Input() copyright: string;\r\n  @Input() okButtonLabel = 'OK';\r\n\r\n  private _open = false;\r\n  @Input()\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    this.openChange.emit(this._open);\r\n  }\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                      | Description                             | Default\r\n   * :----------------------------------------------------|:----------------------------------------|:----------------------\r\n   * `--avl-about-dialog-foreground-color`                | Main foreground color                   | `--avl-corporate-foreground-color`\r\n   * `--avl-about-dialog-foreground-medium-color`         | Forground color for version information | `--avl-corporate-foreground-medium-color`\r\n   * `--avl-about-dialog-link-color`                      | Link color                              | `--avl-corporate-link-color`\r\n   * `--avl-about-dialog-link-hover-color`                | Link hover color                        | `--avl-corporate-link-hover-color`\r\n   * `--avl-about-dialog-on-button-background-color`      | Button text color                       | `--avl-corporate-on-button-background-color`\r\n   * `--avl-about-dialog-button-background-color`         | Button background color                 | `--avl-corporate-button-background-color`\r\n   * `--avl-about-dialog-button-background-hover-color`   | Button hover color                      | `--avl-corporate-button-background-hover-color`\r\n   * `--avl-about-dialog-button-background-focus-color`   | Button focus color                      | `--avl-corporate-button-background-focus-color`\r\n   * `--avl-about-dialog-button-background-pressed-color` | Button pressed color                    | `--avl-corporate-button-background-pressed-color` *\r\n   */\r\n  _styling: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.open = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  openChanged(value: boolean) {\r\n    this.open = value;\r\n  }\r\n}\r\n\r\nexport interface VersionInfo {\r\n  label: string;\r\n  value: string;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule} from '@angular/cdk/a11y';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n// components\r\nimport { AvlDialogComponent } from './avl-dialog/avl-dialog.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogHeaderComponent } from './avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nimport { AvlDialogFooterComponent } from './avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nimport { AvlDialogContentComponent } from './avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\nimport { AvlAboutDialogComponent } from './avl-about-dialog/avl-about-dialog.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlDialogComponent,\r\n  AvlDialogHeaderComponent,\r\n  AvlDialogFooterComponent,\r\n  AvlDialogContentComponent,\r\n  AvlAboutDialogComponent,\r\n];\r\n\r\nconst providers = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AvlNgBindersModule,\r\n    A11yModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  providers: providers,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlDialogModule { }\r\n","/**\r\n * Can't put .ts file as index in package.json.\r\n * Hello, this is proxy.\r\n */\r\nexport { AvlDialogModule } from './lib/dialog.module';\r\nexport { AvlDialogComponent } from './lib/avl-dialog/avl-dialog.component';\r\nexport {\r\n  AvlAboutDialogComponent,\r\n  VersionInfo,\r\n} from './lib/avl-about-dialog/avl-about-dialog.component';\r\nexport { AvlDialogHeaderComponent } from './lib/avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nexport { AvlDialogFooterComponent } from './lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nexport { AvlDialogContentComponent } from './lib/avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AvlBaseDialogSection as ɵa} from './lib/avl-dialog/avl-dialog-section.base';"],"names":["__decorate"],"mappings":"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"}