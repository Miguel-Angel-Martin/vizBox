{"version":3,"file":"avl-ng-controls-dialog.umd.js","sources":["ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-section.base.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-header/avl-dialog-header.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-content/avl-dialog-content.component.ts","ng://@avl-ng-controls/dialog/lib/avl-about-dialog/avl-about-dialog.component.ts","ng://@avl-ng-controls/dialog/lib/dialog.module.ts"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'avl-dialog',\r\n  templateUrl: './avl-dialog.component.html',\r\n  styleUrls: ['./avl-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlDialogComponent implements OnInit {\r\n  private _open = false;\r\n  private _dirty: boolean = false;\r\n  private _warningOnClose = false;\r\n  private _warningHeaderText = '';\r\n  private _warningDialogText = '';\r\n  public openWarning = false;\r\n\r\n  /**\r\n   * Dialog content\r\n   */\r\n  @ContentChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('element', { static: true }) element: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('optionForm', { read: NgForm }) optionForm: any;\r\n\r\n  /**\r\n   * If true, the dialog can be closed by clicking on scrim\r\n   */\r\n  @Input() closeOnScrimClick: boolean = true;\r\n\r\n  /**\r\n   * If true, new dialog can open inside a dialog\r\n   */\r\n  @Input() complex: boolean = false;\r\n\r\n  /**\r\n   * Sets the text for warning dialog header.\r\n   */\r\n  @Input()\r\n  get warningHeaderText(): string {\r\n    return this._warningHeaderText;\r\n  }\r\n  set warningHeaderText(value: string) {\r\n    if (this._warningHeaderText !== value) {\r\n      this._warningHeaderText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the main warning dialog text.\r\n   */\r\n  @Input()\r\n  get warningDialogText(): string {\r\n    return this._warningDialogText;\r\n  }\r\n  set warningDialogText(value: string) {\r\n    if (this._warningDialogText !== value) {\r\n      this._warningDialogText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When checked, dialog opens in fullscreen mode\r\n   */\r\n  @HostBinding('class.fullscreen')\r\n  @Input()\r\n  fullscreen = false;\r\n\r\n  /**\r\n   * Can be set to open or close the dialog.\r\n   * Returns the current state of the dialog.\r\n   */\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    if (this._open !== value) {\r\n      this._open = !!value;\r\n      this.openChange.emit(this._open);\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the form has been touched.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get dirty(): boolean {\r\n    return !!this._dirty;\r\n  }\r\n  set dirty(value: boolean) {\r\n    if (this._dirty !== value) {\r\n      this._dirty = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be set to indicate if the warning dialog should be opened.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get warningOnClose(): boolean {\r\n    return !!this._warningOnClose;\r\n  }\r\n  set warningOnClose(value: boolean) {\r\n    if (this._warningOnClose !== value) {\r\n      this._warningOnClose = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /** @hidden */\r\n  close(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (this.closeOnScrimClick && target.classList.contains('scrim')) {\r\n      if (this.warningOnClose) {\r\n        if (this.openWarning === false) {\r\n          this.openWarning = true;\r\n        }\r\n      } else {\r\n        if (this.dirty === true) {\r\n          this.openWarning = true;\r\n        } else {\r\n          this.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a dialog.\r\n   */\r\n  openDialog() {\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a dialog.\r\n   */\r\n  closeDialog() {\r\n    if (this.warningOnClose || this.dirty) {\r\n      this.openWarning = !this.openWarning;\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all dialogs.\r\n   */\r\n  closeAllDialogs() {\r\n    this.openWarning = false;\r\n    this.open = false;\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Opens a warning dialog.\r\n   */\r\n  openWarningDialog() {\r\n    this.openWarning = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a warning dialog.\r\n   */\r\n  closeWarningDialog() {\r\n    this.openWarning = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (event.key === 'Esc' || event.key === 'Escape') {\r\n        this.closeDialog();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.opened')\r\n  get openedClosed() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(private focusTrap: ConfigurableFocusTrapFactory) {}\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.complex != null && this.complex !== false) {\r\n      this.complex = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                     | Description                       | Default\r\n   * :------------------------------------------|:--------------------------------------|:----------------------\r\n   * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`\r\n   * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`\r\n   * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`\r\n   * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`\r\n   * `--avl-dialog-width`                | Dialog width                      | `280 px`\r\n   * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`\r\n   * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`\r\n   * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`\r\n   * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`\r\n   * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`\r\n   *\r\n   */\r\n  _styling: any;\r\n}\r\n","import { OnInit, HostBinding, Directive } from '@angular/core';\r\nimport { AvlDialogComponent } from './avl-dialog.component';\r\n\r\n@Directive()\r\nexport abstract class AvlBaseDialogSection implements OnInit {\r\n\r\n  constructor(protected dialog: AvlDialogComponent) { }\r\n\r\n  @HostBinding('class.complex')\r\n  isComplex: boolean = false;\r\n\r\n  /** @hidden */\r\n  closeDialog() {\r\n    this.dialog.closeDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isComplex = this.dialog.complex;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-header',\r\n  templateUrl: './avl-dialog-header.component.html',\r\n  styleUrls: ['./avl-dialog-header.component.css']\r\n})\r\nexport class AvlDialogHeaderComponent extends AvlBaseDialogSection implements AfterViewInit {\r\n  @HostBinding('class.extended')\r\n  extended = false;\r\n\r\n  @ViewChild('extendedSlot')\r\n  private extendedSlot: ElementRef<HTMLSlotElement>;\r\n\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-footer',\r\n  templateUrl: './avl-dialog-footer.component.html',\r\n  styleUrls: ['./avl-dialog-footer.component.css']\r\n})\r\nexport class AvlDialogFooterComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-content',\r\n  templateUrl: './avl-dialog-content.component.html',\r\n  styleUrls: ['./avl-dialog-content.component.css']\r\n})\r\nexport class AvlDialogContentComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'avl-about-dialog',\r\n  templateUrl: './avl-about-dialog.component.html',\r\n  styleUrls: [\r\n    './avl-about-dialog.component.css'\r\n  ],\r\n\r\n})\r\nexport class AvlAboutDialogComponent {\r\n\r\n  @Input() productLogo: string;\r\n  @Input() productName: string;\r\n  @Input() brandPromise: string;\r\n  @Input() versionInfo: VersionInfo[];\r\n  @Input() legalText: string;\r\n  @Input() additionalInfoLabel: string;\r\n  @Input() additionalInfoUrl: string;\r\n  @Input() copyright: string;\r\n  @Input() okButtonLabel = 'OK';\r\n\r\n  private _open = false;\r\n  @Input()\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    this.openChange.emit(this._open);\r\n  }\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                      | Description                             | Default\r\n   * :----------------------------------------------------|:----------------------------------------|:----------------------\r\n   * `--avl-about-dialog-foreground-color`                | Main foreground color                   | `--avl-corporate-foreground-color`\r\n   * `--avl-about-dialog-foreground-medium-color`         | Forground color for version information | `--avl-corporate-foreground-medium-color`\r\n   * `--avl-about-dialog-link-color`                      | Link color                              | `--avl-corporate-link-color`\r\n   * `--avl-about-dialog-link-hover-color`                | Link hover color                        | `--avl-corporate-link-hover-color`\r\n   * `--avl-about-dialog-on-button-background-color`      | Button text color                       | `--avl-corporate-on-button-background-color`\r\n   * `--avl-about-dialog-button-background-color`         | Button background color                 | `--avl-corporate-button-background-color`\r\n   * `--avl-about-dialog-button-background-hover-color`   | Button hover color                      | `--avl-corporate-button-background-hover-color`\r\n   * `--avl-about-dialog-button-background-focus-color`   | Button focus color                      | `--avl-corporate-button-background-focus-color`\r\n   * `--avl-about-dialog-button-background-pressed-color` | Button pressed color                    | `--avl-corporate-button-background-pressed-color` *\r\n   */\r\n  _styling: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.open = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  openChanged(value: boolean) {\r\n    this.open = value;\r\n  }\r\n}\r\n\r\nexport interface VersionInfo {\r\n  label: string;\r\n  value: string;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule} from '@angular/cdk/a11y';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n// components\r\nimport { AvlDialogComponent } from './avl-dialog/avl-dialog.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogHeaderComponent } from './avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nimport { AvlDialogFooterComponent } from './avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nimport { AvlDialogContentComponent } from './avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\nimport { AvlAboutDialogComponent } from './avl-about-dialog/avl-about-dialog.component';\r\n\r\nimport {\r\n  AvlNavigationModule,\r\n} from '@avl-ng-controls/navigation';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlDialogComponent,\r\n  AvlDialogHeaderComponent,\r\n  AvlDialogFooterComponent,\r\n  AvlDialogContentComponent,\r\n  AvlAboutDialogComponent,\r\n];\r\n\r\nconst providers = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AvlNgBindersModule,\r\n    AvlNavigationModule,\r\n    A11yModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  providers: providers,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlDialogModule { }\r\n"],"names":["EventEmitter","ConfigurableFocusTrapFactory","ContentChild","TemplateRef","ViewChild","ElementRef","NgForm","Input","HostBinding","Output","HostListener","Component","ViewEncapsulation","__decorate","Directive","__extends","NgModule","CommonModule","AvlNgBindersModule","AvlNavigationModule","A11yModule","FormsModule","ReactiveFormsModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}