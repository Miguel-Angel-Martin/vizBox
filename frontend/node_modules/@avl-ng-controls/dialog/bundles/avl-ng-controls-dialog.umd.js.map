{"version":3,"file":"avl-ng-controls-dialog.umd.js","sources":["ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-section.base.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-header/avl-dialog-header.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-content/avl-dialog-content.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-about-dialog/avl-about-dialog.component.ts","ng:/@avl-ng-controls/dialog/lib/dialog.module.ts"],"names":["EventEmitter","ConfigurableFocusTrapFactory","ContentChild","TemplateRef","ViewChild","ElementRef","NgForm","Input","HostBinding","Output","HostListener","Component","ViewEncapsulation","__decorate","Directive","__extends","NgModule","CommonModule","AvlNgBindersModule","AvlNavigationModule","A11yModule","FormsModule","ReactiveFormsModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'avl-dialog',\r\n  templateUrl: './avl-dialog.component.html',\r\n  styleUrls: ['./avl-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlDialogComponent implements OnInit {\r\n  private _open = false;\r\n  private _dirty: boolean = false;\r\n  private _warningOnClose = false;\r\n  private _warningHeaderText = '';\r\n  private _warningDialogText = '';\r\n  public openWarning = false;\r\n\r\n  /**\r\n   * Dialog content\r\n   */\r\n  @ContentChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('element', { static: true }) element: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('optionForm', { read: NgForm }) optionForm: any;\r\n\r\n  /**\r\n   * If true, the dialog can be closed by clicking on scrim\r\n   */\r\n  @Input() closeOnScrimClick: boolean = true;\r\n\r\n  /**\r\n   * If true, new dialog can open inside a dialog\r\n   */\r\n  @Input() complex: boolean = false;\r\n\r\n  /**\r\n   * Sets the text for warning dialog header.\r\n   */\r\n  @Input()\r\n  get warningHeaderText(): string {\r\n    return this._warningHeaderText;\r\n  }\r\n  set warningHeaderText(value: string) {\r\n    if (this._warningHeaderText !== value) {\r\n      this._warningHeaderText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the main warning dialog text.\r\n   */\r\n  @Input()\r\n  get warningDialogText(): string {\r\n    return this._warningDialogText;\r\n  }\r\n  set warningDialogText(value: string) {\r\n    if (this._warningDialogText !== value) {\r\n      this._warningDialogText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When checked, dialog opens in fullscreen mode\r\n   */\r\n  @HostBinding('class.fullscreen')\r\n  @Input()\r\n  fullscreen = false;\r\n\r\n  /**\r\n   * Can be set to open or close the dialog.\r\n   * Returns the current state of the dialog.\r\n   */\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    if (this._open !== value) {\r\n      this._open = !!value;\r\n      this.openChange.emit(this._open);\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the form has been touched.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get dirty(): boolean {\r\n    return !!this._dirty;\r\n  }\r\n  set dirty(value: boolean) {\r\n    if (this._dirty !== value) {\r\n      this._dirty = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be set to indicate if the warning dialog should be opened.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get warningOnClose(): boolean {\r\n    return !!this._warningOnClose;\r\n  }\r\n  set warningOnClose(value: boolean) {\r\n    if (this._warningOnClose !== value) {\r\n      this._warningOnClose = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /** @hidden */\r\n  close(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (this.closeOnScrimClick && target.classList.contains('scrim')) {\r\n      if (this.warningOnClose) {\r\n        if (this.openWarning === false) {\r\n          this.openWarning = true;\r\n        }\r\n      } else {\r\n        if (this.dirty === true) {\r\n          this.openWarning = true;\r\n        } else {\r\n          this.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a dialog.\r\n   */\r\n  openDialog() {\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a dialog.\r\n   */\r\n  closeDialog() {\r\n    if (this.warningOnClose || this.dirty) {\r\n      this.openWarning = !this.openWarning;\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all dialogs.\r\n   */\r\n  closeAllDialogs() {\r\n    this.openWarning = false;\r\n    this.open = false;\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Opens a warning dialog.\r\n   */\r\n  openWarningDialog() {\r\n    this.openWarning = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a warning dialog.\r\n   */\r\n  closeWarningDialog() {\r\n    this.openWarning = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (event.key === 'Esc' || event.key === 'Escape') {\r\n        this.closeDialog();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.opened')\r\n  get openedClosed() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(private focusTrap: ConfigurableFocusTrapFactory) {}\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.complex != null && this.complex !== false) {\r\n      this.complex = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                     | Description                       | Default\r\n   * :------------------------------------------|:--------------------------------------|:----------------------\r\n   * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`\r\n   * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`\r\n   * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`\r\n   * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`\r\n   * `--avl-dialog-width`                | Dialog width                      | `280 px`\r\n   * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`\r\n   * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`\r\n   * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`\r\n   * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`\r\n   * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`\r\n   *\r\n   */\r\n  _styling: any;\r\n}\r\n","import { OnInit, HostBinding, Directive } from '@angular/core';\r\nimport { AvlDialogComponent } from './avl-dialog.component';\r\n\r\n@Directive()\r\nexport abstract class AvlBaseDialogSection implements OnInit {\r\n\r\n  constructor(protected dialog: AvlDialogComponent) { }\r\n\r\n  @HostBinding('class.complex')\r\n  isComplex: boolean = false;\r\n\r\n  /** @hidden */\r\n  closeDialog() {\r\n    this.dialog.closeDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isComplex = this.dialog.complex;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-header',\r\n  templateUrl: './avl-dialog-header.component.html',\r\n  styleUrls: ['./avl-dialog-header.component.css']\r\n})\r\nexport class AvlDialogHeaderComponent extends AvlBaseDialogSection implements AfterViewInit {\r\n  @HostBinding('class.extended')\r\n  extended = false;\r\n\r\n  @ViewChild('extendedSlot')\r\n  private extendedSlot: ElementRef<HTMLSlotElement>;\r\n\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-footer',\r\n  templateUrl: './avl-dialog-footer.component.html',\r\n  styleUrls: ['./avl-dialog-footer.component.css']\r\n})\r\nexport class AvlDialogFooterComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-content',\r\n  templateUrl: './avl-dialog-content.component.html',\r\n  styleUrls: ['./avl-dialog-content.component.css']\r\n})\r\nexport class AvlDialogContentComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'avl-about-dialog',\r\n  templateUrl: './avl-about-dialog.component.html',\r\n  styleUrls: [\r\n    './avl-about-dialog.component.css'\r\n  ],\r\n\r\n})\r\nexport class AvlAboutDialogComponent {\r\n\r\n  @Input() productLogo: string;\r\n  @Input() productName: string;\r\n  @Input() brandPromise: string;\r\n  @Input() versionInfo: VersionInfo[];\r\n  @Input() legalText: string;\r\n  @Input() additionalInfoLabel: string;\r\n  @Input() additionalInfoUrl: string;\r\n  @Input() copyright: string;\r\n  @Input() okButtonLabel = 'OK';\r\n\r\n  private _open = false;\r\n  @Input()\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    this.openChange.emit(this._open);\r\n  }\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                      | Description                             | Default\r\n   * :----------------------------------------------------|:----------------------------------------|:----------------------\r\n   * `--avl-about-dialog-foreground-color`                | Main foreground color                   | `--avl-corporate-foreground-color`\r\n   * `--avl-about-dialog-foreground-medium-color`         | Forground color for version information | `--avl-corporate-foreground-medium-color`\r\n   * `--avl-about-dialog-link-color`                      | Link color                              | `--avl-corporate-link-color`\r\n   * `--avl-about-dialog-link-hover-color`                | Link hover color                        | `--avl-corporate-link-hover-color`\r\n   * `--avl-about-dialog-on-button-background-color`      | Button text color                       | `--avl-corporate-on-button-background-color`\r\n   * `--avl-about-dialog-button-background-color`         | Button background color                 | `--avl-corporate-button-background-color`\r\n   * `--avl-about-dialog-button-background-hover-color`   | Button hover color                      | `--avl-corporate-button-background-hover-color`\r\n   * `--avl-about-dialog-button-background-focus-color`   | Button focus color                      | `--avl-corporate-button-background-focus-color`\r\n   * `--avl-about-dialog-button-background-pressed-color` | Button pressed color                    | `--avl-corporate-button-background-pressed-color` *\r\n   */\r\n  _styling: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.open = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  openChanged(value: boolean) {\r\n    this.open = value;\r\n  }\r\n}\r\n\r\nexport interface VersionInfo {\r\n  label: string;\r\n  value: string;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule} from '@angular/cdk/a11y';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n// components\r\nimport { AvlDialogComponent } from './avl-dialog/avl-dialog.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogHeaderComponent } from './avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nimport { AvlDialogFooterComponent } from './avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nimport { AvlDialogContentComponent } from './avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\nimport { AvlAboutDialogComponent } from './avl-about-dialog/avl-about-dialog.component';\r\n\r\nimport {\r\n  AvlNavigationModule,\r\n} from '@avl-ng-controls/navigation';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlDialogComponent,\r\n  AvlDialogHeaderComponent,\r\n  AvlDialogFooterComponent,\r\n  AvlDialogContentComponent,\r\n  AvlAboutDialogComponent,\r\n];\r\n\r\nconst providers = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AvlNgBindersModule,\r\n    AvlNavigationModule,\r\n    A11yModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  providers: providers,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlDialogModule { }\r\n"]}