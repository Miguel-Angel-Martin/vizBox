(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/cdk/a11y'), require('@angular/forms'), require('@avl-controls/core/dist/avl-icon-button/avl-icon-button'), require('@avl-controls/core/dist/avl-tooltip/avl-tooltip'), require('@avl-controls/ng-binders'), require('@avl-controls/core/dist/avl-textfield/avl-textfield'), require('@avl-controls/core/dist/avl-button/avl-button'), require('@avl-ng-controls/common'), require('@avl-services/vanilla-js-services/avl-localization-service/avl-localization-service.api'), require('@avl-ng-controls/navigation')) :
    typeof define === 'function' && define.amd ? define('@avl-ng-controls/dialog', ['exports', '@angular/core', '@angular/common', '@angular/cdk/a11y', '@angular/forms', '@avl-controls/core/dist/avl-icon-button/avl-icon-button', '@avl-controls/core/dist/avl-tooltip/avl-tooltip', '@avl-controls/ng-binders', '@avl-controls/core/dist/avl-textfield/avl-textfield', '@avl-controls/core/dist/avl-button/avl-button', '@avl-ng-controls/common', '@avl-services/vanilla-js-services/avl-localization-service/avl-localization-service.api', '@avl-ng-controls/navigation'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['avl-ng-controls'] = global['avl-ng-controls'] || {}, global['avl-ng-controls'].dialog = {}), global.ng.core, global.ng.common, global.ng.cdk.a11y, global.ng.forms, null, null, global['@avl-controls/ng-binders'], null, null, global['@avl-ng-controls/common'], null, global['@avl-ng-controls/navigation']));
}(this, (function (exports, i0, i4$1, i1, i5, avlIconButton, avlTooltip, i4, avlTextfield, avlButton, i3, avlLocalizationService_api, navigation) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    var AvlDialogHeaderComponent = /** @class */ (function () {
        function AvlDialogHeaderComponent() {
            this.extended = false;
            this.closeDialog = function (event) {
                event.target
                    .closest('avl-dialog')
                    .dispatchEvent(new CustomEvent('headerCloseClicked'));
            };
        }
        AvlDialogHeaderComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            Promise.resolve().then(function () { return (_this.extended = !!_this.extendedSlot.nativeElement.childElementCount); });
        };
        return AvlDialogHeaderComponent;
    }());
    AvlDialogHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlDialogHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlDialogHeaderComponent, selector: "avl-dialog-header", host: { properties: { "class.extended": "this.extended" } }, viewQueries: [{ propertyName: "extendedSlot", first: true, predicate: ["extendedSlot"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"title-and-close\">\r\n  <div id=\"headerText\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <avl-icon-button icon=\"icons:close\" id=\"closeIcon\" (click)=\"closeDialog($event)\"></avl-icon-button>\r\n</div>\r\n<avl-tooltip for=\"closeIcon\">close</avl-tooltip>\r\n<div class=\"extended-slot\" #extendedSlot>\r\n  <ng-content select=\"[slot=extended]\"></ng-content>\r\n</div>\r\n", styles: [":host{display:block;font-family:var(--avl-font-family);font-size:20px;line-height:22px;box-sizing:border-box;color:var(--avl-dialog-header-title-color)}:host(.complex){border-bottom:1px solid var(--avl-dialog-separator-color)}.title-and-close{display:flex;height:64px;padding:6px 8px 0 24px;box-sizing:border-box;flex-grow:0;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:space-between}:host(.complex) .title-and-close{height:63px;padding-right:6px;padding-top:7px}:host(.extended) .title-and-close{height:48px;padding-top:0}.extended-slot{display:none}:host(.extended) .extended-slot{display:block}#headerText{width:calc(100% - 60px);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#closeIcon{margin-top:1px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-dialog-close-icon-color);--avl-icon-ink-hover-color:transparent;--avl-icon-ink-focus-color:transparent;--avl-icon-ink-pressed-color:transparent;--avl-icon-button-ink-pressed-color:var(--avl-dialog-close-icon-ink-pressed-color);--avl-icon-button-ink-focus-color:var(--avl-dialog-close-icon-ink-focus-color);--avl-icon-button-ink-hover-color:var(--avl-dialog-close-icon-ink-hover-color)}:host(.extended) #closeIcon{margin-top:0}avl-dialog.fullscreen :host{border:none;box-shadow:var(--avl-box-shadow-4dp)}avl-dialog.fullscreen :host .title-and-close{padding:0 6px}avl-dialog.fullscreen :host #closeIcon{order:-1;margin-left:0}"], directives: [{ type: i4__namespace.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }, { type: i4__namespace.AvlIconButtonDirective, selector: "avl-icon-button", outputs: ["badgeChange", "badgeValueChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-dialog-header',
                        templateUrl: './avl-dialog-header.component.html',
                        styleUrls: ['./avl-dialog-header.component.css']
                    }]
            }], propDecorators: { extended: [{
                    type: i0.HostBinding,
                    args: ['class.extended']
                }], extendedSlot: [{
                    type: i0.ViewChild,
                    args: ['extendedSlot']
                }] } });

    var AvlDialogContentComponent = /** @class */ (function () {
        function AvlDialogContentComponent() {
        }
        return AvlDialogContentComponent;
    }());
    AvlDialogContentComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogContentComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlDialogContentComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlDialogContentComponent, selector: "avl-dialog-content", ngImport: i0__namespace, template: "<ng-content></ng-content>", styles: [":host{flex-grow:1;flex-direction:column;font-size:16px;line-height:21px;color:var(--avl-dialog-text-color);padding-top:0;padding-right:24px;padding-right:var(--padding-right,24px);padding-bottom:28px;padding-bottom:var(--padding-bottom,28px);padding-left:24px;padding-left:var(--padding-left,24px);overflow:auto}:host(.complex){padding-top:8px;padding-top:var(--padding-top,8px)}:host(.warning){padding:13px 16px 0 23px}"] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogContentComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-dialog-content',
                        templateUrl: './avl-dialog-content.component.html',
                        styleUrls: ['./avl-dialog-content.component.css']
                    }]
            }] });

    var AvlDialogComponent = /** @class */ (function () {
        function AvlDialogComponent(focusTrap) {
            this.focusTrap = focusTrap;
            this._open = false;
            this._dirty = false;
            this._warningOnClose = false;
            this._warningHeaderText = '';
            this._warningDialogText = '';
            this.openWarning = false;
            /**
             * If true, the dialog can be closed by clicking on scrim
             */
            this.closeOnScrimClick = true;
            /**
             * If true, new dialog can open inside a dialog
             */
            this.complex = false;
            /**
             * When checked, dialog opens in fullscreen mode
             */
            this.fullscreen = false;
            this.openChange = new i0.EventEmitter();
        }
        Object.defineProperty(AvlDialogComponent.prototype, "warningHeaderText", {
            /**
             * Sets the text for warning dialog header.
             */
            get: function () {
                return this._warningHeaderText;
            },
            set: function (value) {
                if (this._warningHeaderText !== value) {
                    this._warningHeaderText = value;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AvlDialogComponent.prototype, "warningDialogText", {
            /**
             * Sets the main warning dialog text.
             */
            get: function () {
                return this._warningDialogText;
            },
            set: function (value) {
                if (this._warningDialogText !== value) {
                    this._warningDialogText = value;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AvlDialogComponent.prototype, "open", {
            /**
             * Can be set to open or close the dialog.
             * Returns the current state of the dialog.
             */
            get: function () {
                return this._open;
            },
            set: function (value) {
                if (this._open !== value) {
                    this._open = !!value;
                    this.openChange.emit(this._open);
                    this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AvlDialogComponent.prototype, "dirty", {
            /**
             * Indicates if the form has been touched.
             * Returns the current value of the attribute.
             */
            get: function () {
                return !!this._dirty;
            },
            set: function (value) {
                if (this._dirty !== value) {
                    this._dirty = !!value;
                    this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AvlDialogComponent.prototype, "warningOnClose", {
            /**
             * Can be set to indicate if the warning dialog should be opened.
             * Returns the current value of the attribute.
             */
            get: function () {
                return !!this._warningOnClose;
            },
            set: function (value) {
                if (this._warningOnClose !== value) {
                    this._warningOnClose = !!value;
                    this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();
                }
            },
            enumerable: false,
            configurable: true
        });
        /** @hidden */
        AvlDialogComponent.prototype.close = function (event) {
            var target = event.target;
            if (this.closeOnScrimClick && target.classList.contains('scrim')) {
                if (this.warningOnClose) {
                    if (this.openWarning === false) {
                        this.openWarning = true;
                    }
                }
                else {
                    if (this.dirty === true) {
                        this.openWarning = true;
                    }
                    else {
                        this.open = false;
                    }
                }
            }
        };
        /**
         * Opens a dialog.
         */
        AvlDialogComponent.prototype.openDialog = function () {
            this.open = true;
        };
        /**
         * Closes a dialog.
         */
        AvlDialogComponent.prototype.closeDialog = function () {
            if (this.warningOnClose || this.dirty) {
                this.openWarning = !this.openWarning;
            }
            else {
                this.open = false;
            }
        };
        /**
         * Closes all dialogs.
         */
        AvlDialogComponent.prototype.closeAllDialogs = function () {
            this.openWarning = false;
            this.open = false;
            this.dirty = false;
        };
        /**
         * Opens a warning dialog.
         */
        AvlDialogComponent.prototype.openWarningDialog = function () {
            this.openWarning = true;
        };
        /**
         * Closes a warning dialog.
         */
        AvlDialogComponent.prototype.closeWarningDialog = function () {
            this.openWarning = false;
        };
        /** @hidden */
        AvlDialogComponent.prototype.keyEvent = function (event) {
            if (event.key === 'Esc' || event.key === 'Escape') {
                this.closeDialog();
            }
        };
        /** @hidden */
        AvlDialogComponent.prototype.headerCloseClicked = function () {
            this.closeDialog();
        };
        Object.defineProperty(AvlDialogComponent.prototype, "openedClosed", {
            /** @hidden */
            get: function () {
                return this._open;
            },
            enumerable: false,
            configurable: true
        });
        /** @hidden */
        AvlDialogComponent.prototype.ngOnInit = function () {
            if (this.complex != null && this.complex !== false) {
                this.complex = true;
            }
        };
        return AvlDialogComponent;
    }());
    AvlDialogComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogComponent, deps: [{ token: i1__namespace.ConfigurableFocusTrapFactory }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlDialogComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlDialogComponent, selector: "avl-dialog", inputs: { closeOnScrimClick: "closeOnScrimClick", complex: "complex", warningHeaderText: "warningHeaderText", warningDialogText: "warningDialogText", fullscreen: "fullscreen", open: "open", dirty: "dirty", warningOnClose: "warningOnClose" }, outputs: { openChange: "openChange" }, host: { listeners: { "keydown": "keyEvent($event)", "headerCloseClicked": "headerCloseClicked($event)" }, properties: { "class.fullscreen": "this.fullscreen", "class.opened": "this.openedClosed" } }, queries: [{ propertyName: "content", first: true, predicate: i0.TemplateRef, descendants: true }], viewQueries: [{ propertyName: "element", first: true, predicate: ["element"], descendants: true, static: true }, { propertyName: "optionForm", first: true, predicate: ["optionForm"], descendants: true, read: i5.NgForm }], ngImport: i0__namespace, template: "<div class=\"scrim\" (click)=\"close($event)\">\r\n  <div #element class=\"dialog\" [class.complex]=\"complex\" tabindex=\"0\">\r\n    <div *ngIf=\"open; then content\"></div>\r\n  </div>\r\n\r\n  <div *ngIf=\"openWarning\" #element class=\"dialog warning-dialog\" [class.complex]=\"complex\" tabindex=\"0\">\r\n    <avl-dialog-header>\r\n      {{ warningHeaderText || 'Warning Header' }}\r\n    </avl-dialog-header>\r\n    <avl-dialog-content class=\"warning\">\r\n      <section class=\"supporting-text\">\r\n        <div class=\"column\">\r\n          <avl-icon icon=\"icons:warning\"></avl-icon>\r\n        </div>\r\n        <div class=\"column\">\r\n          <h3>All changes will be lost if you proceed without saving.</h3>\r\n          <p id=\"customText\">{{ warningDialogText }}</p>\r\n        </div>\r\n      </section>\r\n      <section class=\"warning-buttons\">\r\n        <avl-button contained (click)=\"closeAllDialogs()\">Proceed</avl-button>\r\n        <avl-button (click)=\"closeWarningDialog()\">Cancel</avl-button>\r\n      </section>\r\n    </avl-dialog-content>\r\n  </div>\r\n</div>\r\n", styles: [":host{font-family:var(--avl-font-family);--avl-dialog-background-color:var(--avl-background-color);--avl-dialog-header-title-color:var(--avl-foreground-color);--avl-dialog-text-color:var(--avl-foreground-medium-color);--avl-dialog-close-icon-color:var(--avl-icon-default-color);--avl-dialog-separator-color:var(--avl-divider-color);--avl-dialog-close-icon-ink-pressed-color:var(--avl-ink-default-pressed-color);--avl-dialog-close-icon-ink-focus-color:var(--avl-ink-default-focus-color);--avl-dialog-close-icon-ink-hover-color:var(--avl-ink-default-hover-color);display:none}.supporting-text{display:flex;flex-direction:column}.supporting-text p{margin:0 0 16px}.column{display:flex;flex-direction:column;flex-wrap:nowrap;align-items:flex-start}#customText{margin-top:-6px;margin-bottom:11px}.supporting-text h3{font-size:16px;margin-top:7px;font-weight:700}form{margin-bottom:24px;margin-left:24px}.supporting-text avl-icon{width:40px;height:40px;margin-right:15px;margin-top:6px;flex-shrink:0;--avl-icon-custom-color:var(--avl-warning-color)}.warning-buttons{display:flex;justify-content:flex-end;margin-bottom:16px}.warning-buttons>avl-button{margin-top:4px}.warning-buttons>avl-button:last-child{margin-left:-7px}:host(.opened){display:block}.scrim{position:fixed;z-index:50;left:0;top:0;width:100%;height:100%;background-color:var(--avl-scrim-color);display:flex;flex-flow:column nowrap;justify-content:center;align-items:center}.dialog{box-sizing:border-box;height:calc(var(--avl-dialog-height) - 2px);outline:none;display:flex;flex-direction:column;position:absolute;width:var(--avl-dialog-width);min-width:280px;min-height:230px;max-width:calc(100vw - 96px);max-height:calc(100vh - 96px);background-color:var(--avl-dialog-background-color);color:var(--avl-dialog-text-color);box-shadow:var(--avl-box-shadow-24dp);min-width:444px}.warning-dialog{min-height:211px!important}:host(.fullscreen)>div>.dialog{width:100%;height:100%;max-width:100%;max-height:100%}"], components: [{ type: AvlDialogHeaderComponent, selector: "avl-dialog-header" }, { type: AvlDialogContentComponent, selector: "avl-dialog-content" }], directives: [{ type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-dialog',
                        templateUrl: './avl-dialog.component.html',
                        styleUrls: ['./avl-dialog.component.css'],
                        encapsulation: i0.ViewEncapsulation.Emulated
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.ConfigurableFocusTrapFactory }]; }, propDecorators: { content: [{
                    type: i0.ContentChild,
                    args: [i0.TemplateRef]
                }], element: [{
                    type: i0.ViewChild,
                    args: ['element', { static: true }]
                }], optionForm: [{
                    type: i0.ViewChild,
                    args: ['optionForm', { read: i5.NgForm }]
                }], closeOnScrimClick: [{
                    type: i0.Input
                }], complex: [{
                    type: i0.Input
                }], warningHeaderText: [{
                    type: i0.Input
                }], warningDialogText: [{
                    type: i0.Input
                }], fullscreen: [{
                    type: i0.HostBinding,
                    args: ['class.fullscreen']
                }, {
                    type: i0.Input
                }], open: [{
                    type: i0.Input
                }], dirty: [{
                    type: i0.Input
                }], warningOnClose: [{
                    type: i0.Input
                }], openChange: [{
                    type: i0.Output
                }], keyEvent: [{
                    type: i0.HostListener,
                    args: ['keydown', ['$event']]
                }], headerCloseClicked: [{
                    type: i0.HostListener,
                    args: ['headerCloseClicked', ['$event']]
                }], openedClosed: [{
                    type: i0.HostBinding,
                    args: ['class.opened']
                }] } });

    var AvlLoginComponent = /** @class */ (function () {
        function AvlLoginComponent() {
            this.username = undefined;
            this.usernameChange = new i0.EventEmitter();
            this.password = undefined;
            this.passwordChange = new i0.EventEmitter();
            this.errorMessage = undefined;
            this.login = new i0.EventEmitter();
            this.currentYear = '2021';
            this._open = false;
            this.openChange = new i0.EventEmitter();
        }
        Object.defineProperty(AvlLoginComponent.prototype, "open", {
            get: function () {
                return this._open;
            },
            set: function (value) {
                this._open = value;
                this.openChange.emit(this._open);
            },
            enumerable: false,
            configurable: true
        });
        AvlLoginComponent.prototype.loginHandler = function () {
            this.login.emit({
                username: this.username,
                password: this.password
            });
        };
        AvlLoginComponent.prototype.handleUsernameChange = function (username) {
            this.usernameChange.emit(username);
        };
        AvlLoginComponent.prototype.handlePasswordChange = function (password) {
            this.passwordChange.emit(password);
        };
        AvlLoginComponent.prototype.closeDialog = function () {
            this.open = false;
        };
        /** @hidden */
        AvlLoginComponent.prototype.openChanged = function (value) {
            this.open = value;
        };
        return AvlLoginComponent;
    }());
    AvlLoginComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlLoginComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlLoginComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlLoginComponent, selector: "avl-login", inputs: { username: "username", password: "password", errorMessage: "errorMessage", currentYear: "currentYear", productLogo: "productLogo", productName: "productName", brandPromise: "brandPromise", open: "open" }, outputs: { usernameChange: "usernameChange", passwordChange: "passwordChange", login: "login", openChange: "openChange" }, ngImport: i0__namespace, template: "<ng-template #loginContent (keyup.enter)=\"loginHandler()\">\r\n  <div class=\"login-content\">\r\n    <div class=\"product-title-holder\">\r\n      <div class=\"product-icon\">\r\n        <img src=\"{{ productLogo }}\" class=\"logo-img\" alt=\"logo\" />\r\n      </div>\r\n      <div class=\"product-title\">\r\n        <div class=\"product-name\">{{ productName }}</div>\r\n        <div class=\"brand-promise\">{{ brandPromise }}</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <avl-textfield label=\"User Name\" \r\n                  class=\"avl-dark-theme\" \r\n                  [(ngModel)]=\"username\" \r\n                  required \r\n                  validate-on-leave\r\n                  error-message=\"Enter your user name.\"\r\n                  (valueChange)=\"handleUsernameChange($event)\"\r\n                  #usernameField=\"ngModel\"></avl-textfield>\r\n\r\n    <avl-textfield label=\"Password\" \r\n                  type=\"password\" \r\n                  class=\"password-textfield avl-dark-theme\" \r\n                  [(ngModel)]=\"password\" \r\n                  required\r\n                  validate-on-leave\r\n                  error-message=\"Enter your password.\"\r\n                  (valueChange)=\"handlePasswordChange($event)\"\r\n                  #passwordField=\"ngModel\"></avl-textfield>\r\n\r\n    <div class=\"button-container\">\r\n      <div class=\"error-message\">\r\n        <span>\r\n          {{ errorMessage }}\r\n        </span>\r\n      </div>\r\n      <avl-button contained (click)=\"loginHandler()\" [disabled]=\"!usernameField.valid || !passwordField.valid\">LOG IN</avl-button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<avl-dialog id=\"dialog\" [(open)]=\"open\" (openChange)=\"openChanged($event)\">\r\n  <ng-template #content>\r\n    <avl-dialog-content>\r\n      <ng-container *ngTemplateOutlet=\"loginContent\"></ng-container>\r\n      <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n    </avl-dialog-content>\r\n  </ng-template>\r\n</avl-dialog>\r\n\r\n<div *ngIf=\"open\" class=\"full-screen-login\">\r\n  <ng-container *ngTemplateOutlet=\"loginContent\"></ng-container>\r\n  <div class=\"spacer\"></div>\r\n  <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n</div>\r\n", styles: [":host{font-family:var(--avl-font-family);display:flex;justify-content:center;align-items:center;width:100%;height:100%;--dialog-padding:48px;--product-logo-size:146px;--product-name-font-size:34px;--margin-above-username-field:49px}@media (max-width:960px) and (min-width:400px){:host{--margin-above-username-field:17px;--dialog-padding:24px 24px 40px}.product-title-holder{flex-wrap:wrap}}@media (max-width:400px){:host{--product-logo-size:48px;--product-name-font-size:24px;--margin-above-username-field:17px;--dialog-padding:16px 16px 32px}.product-icon{width:100%}.product-title-holder{flex-wrap:wrap}}.full-screen-login{display:none}@media (max-width:864px){#dialog{display:none}.spacer{flex:1 1 100%;background-color:var(--avl-corporate-menu-background-color)}.full-screen-login{display:flex;flex-direction:column}.full-screen-login avl-footer{flex:1 0 48px}.full-screen-login .login-content{flex:1 0 auto}}avl-dialog{--avl-dialog-width:768px;--avl-dialog-background-color:var(--avl-corporate-menu-background-color)}avl-dialog-footer{padding:0}.login-content,avl-footer{background-color:var(--avl-corporate-menu-background-color);width:100%}.login-content{display:flex;flex-direction:column;justify-content:flex-start;padding:var(--dialog-padding);box-sizing:border-box;font-size:14px;line-height:19px;overflow:auto}.full-screen-login{position:fixed;top:0;left:0;bottom:0;right:0;overflow:auto;z-index:302}avl-dialog-content{padding:0}.dialog-content{padding:var(--dialog-padding)}.headerText{font-size:30px}avl-textfield{--avl-textfield-value-color:var(--avl-corporate-foreground-color);--avl-textfield-line-label-color:var(--avl-corporate-foreground-medium-color);--avl-textfield-floating-label-color:var(--avl-corporate-foreground-medium-color);--avl-textfield-floating-label-focus-color:var(--avl-corporate-foreground-focus-color);--avl-textfield-floating-label-disabled-color:var(--avl-corporate-foreground-disabled-color);--avl-textfield-line-color:var(--avl-corporate-border-color);--avl-textfield-line-hover-color:var(--avl-corporate-border-hover-color);--avl-textfield-line-focus-color:var(--avl-corporate-border-focus-color);--avl-textfield-line-disabled-color:var(--avl-corporate-border-disabled-color)}.button-container{display:flex;justify-content:space-between;margin-top:25px}avl-button{--avl-button-background-default-color:var(--avl-corporate-button-background-color);--avl-button-label-color:var(--avl-corporate-on-button-background-color);--avl-button-background-hover-color:var(--avl-corporate-button-background-hover-color);--avl-button-background-focus-color:var(--avl-corporate-button-background-focus-color);--avl-button-background-pressed-color:var(--avl-corporate-button-background-pressed-color);--avl-button-background-disabled-color:var(--avl-corporate-button-background-disabled-color);--avl-button-label-disabled-color:var(--avl-corporate-on-button-background-disabled-color)}.error-message{color:var(--avl-corporate-error-color)}.error-message>span{display:inline-block;vertical-align:middle;line-height:normal}.product-title-holder{color:var(--avl-corporate-foreground-color);display:flex;align-items:center;margin-bottom:var(--margin-above-username-field)}.product-title{flex:1 1 100%}.product-icon{height:var(--product-logo-size);width:auto;margin-right:24px}.product-icon img{height:100%}.product-name{font-size:var(--product-name-font-size);margin-top:25px}.brand-promise,.product-name{line-height:1;color:var(--avl-corporate-foreground-color)}.brand-promise{font-size:16px;margin-top:8px}"], components: [{ type: AvlDialogComponent, selector: "avl-dialog", inputs: ["closeOnScrimClick", "complex", "warningHeaderText", "warningDialogText", "fullscreen", "open", "dirty", "warningOnClose"], outputs: ["openChange"] }, { type: AvlDialogContentComponent, selector: "avl-dialog-content" }, { type: i3__namespace.AvlFooterComponent, selector: "avl-footer", inputs: ["companyLogo", "currentYear"] }], directives: [{ type: i4__namespace.AvlTextfieldDirective, selector: "avl-textfield", outputs: ["valueChange"] }, { type: i4__namespace.AvlFormControlDirective, selector: "avl-date,avl-dropdown,avl-time,avl-icon-toggle,avl-numberfield,avl-radio-group,avl-slider,avl-textarea,avl-textfield,avl-timespan,avl-checkbox,avl-switch,avl-chip-list,avl-upload,avl-search-bar,avl-chip-input", inputs: ["readonly"], outputs: ["invalidChange"] }, { type: i5__namespace.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i5__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4__namespace.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }, { type: i4__namespace$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlLoginComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-login',
                        templateUrl: './avl-login.component.html',
                        styleUrls: ['./avl-login.component.css']
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { username: [{
                    type: i0.Input
                }], usernameChange: [{
                    type: i0.Output
                }], password: [{
                    type: i0.Input
                }], passwordChange: [{
                    type: i0.Output
                }], errorMessage: [{
                    type: i0.Input
                }], login: [{
                    type: i0.Output
                }], currentYear: [{
                    type: i0.Input
                }], productLogo: [{
                    type: i0.Input
                }], productName: [{
                    type: i0.Input
                }], brandPromise: [{
                    type: i0.Input
                }], open: [{
                    type: i0.Input
                }], openChange: [{
                    type: i0.Output
                }] } });

    var AvlDialogFooterComponent = /** @class */ (function () {
        function AvlDialogFooterComponent() {
        }
        return AvlDialogFooterComponent;
    }());
    AvlDialogFooterComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogFooterComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlDialogFooterComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlDialogFooterComponent, selector: "avl-dialog-footer", ngImport: i0__namespace, template: "<ng-content></ng-content>", styles: [":host{display:flex;flex-grow:0;flex-shrink:0;color:var(--avl-primary-text-color);padding:6px 16px 16px 8px;flex-wrap:wrap;align-items:center;justify-content:flex-end;overflow:auto}:host(.complex){border-top:1px solid var(--avl-dialog-separator-color);padding:2px 16px}avl-dialog.fullscreen :host{justify-content:flex-start}"] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogFooterComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-dialog-footer',
                        templateUrl: './avl-dialog-footer.component.html',
                        styleUrls: ['./avl-dialog-footer.component.css']
                    }]
            }] });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter$1(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    var AvlAboutDialogComponent = /** @class */ (function () {
        function AvlAboutDialogComponent() {
            this._open = false;
            this.openChange = new i0.EventEmitter();
        }
        Object.defineProperty(AvlAboutDialogComponent.prototype, "open", {
            get: function () {
                return this._open;
            },
            set: function (value) {
                this._open = value;
                this.openChange.emit(this._open);
            },
            enumerable: false,
            configurable: true
        });
        AvlAboutDialogComponent.prototype.ngOnInit = function () {
            this.translateLabels();
        };
        AvlAboutDialogComponent.prototype.translateLabels = function () {
            return __awaiter(this, void 0, void 0, function () {
                var translationService, _a, _b, _c, _d, _e, _f, _g;
                return __generator(this, function (_h) {
                    switch (_h.label) {
                        case 0:
                            if (!AvlLocalizationService || !AvlLocalizationService.translationService) {
                                return [2 /*return*/];
                            }
                            translationService = AvlLocalizationService.translationService;
                            _a = this.avlAboutDialogInfo;
                            return [4 /*yield*/, this.validateAndTranslate(this.avlAboutDialogInfo.productName)];
                        case 1:
                            _a.productName = _h.sent();
                            _b = this.avlAboutDialogInfo;
                            return [4 /*yield*/, this.validateAndTranslate(this.avlAboutDialogInfo.brandPromise)];
                        case 2:
                            _b.brandPromise = _h.sent();
                            _c = this.avlAboutDialogInfo;
                            return [4 /*yield*/, this.translateVersionInfo(this.avlAboutDialogInfo.versionInfo)];
                        case 3:
                            _c.versionInfo = _h.sent();
                            _d = this.avlAboutDialogInfo;
                            return [4 /*yield*/, this.validateAndTranslate(this.avlAboutDialogInfo.legalText)];
                        case 4:
                            _d.legalText = _h.sent();
                            _e = this.avlAboutDialogInfo;
                            return [4 /*yield*/, this.validateAndTranslate(this.avlAboutDialogInfo.additionalInfoLabel)];
                        case 5:
                            _e.additionalInfoLabel = _h.sent();
                            _f = this.avlAboutDialogInfo;
                            if (!this.avlAboutDialogInfo.okButtonLabel) return [3 /*break*/, 7];
                            return [4 /*yield*/, translationService.translate(this.avlAboutDialogInfo.okButtonLabel)];
                        case 6:
                            _g = _h.sent();
                            return [3 /*break*/, 8];
                        case 7:
                            _g = 'OK';
                            _h.label = 8;
                        case 8:
                            _f.okButtonLabel = _g;
                            return [2 /*return*/];
                    }
                });
            });
        };
        AvlAboutDialogComponent.prototype.validateAndTranslate = function (key) {
            return __awaiter(this, void 0, void 0, function () {
                var translateService, _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            translateService = AvlLocalizationService.translationService;
                            if (!key) return [3 /*break*/, 2];
                            return [4 /*yield*/, translateService.translate(key)];
                        case 1:
                            _a = _b.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            _a = key;
                            _b.label = 3;
                        case 3: return [2 /*return*/, _a];
                    }
                });
            });
        };
        AvlAboutDialogComponent.prototype.translateVersionInfo = function (versionInfo) {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!versionInfo) return [3 /*break*/, 2];
                            return [4 /*yield*/, Promise.all(versionInfo.map(function (item) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, this.translateVersionInfoItem(item)];
                                        case 1: return [2 /*return*/, _a.sent()];
                                    }
                                }); }); }))];
                        case 1:
                            _a = _b.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            _a = versionInfo;
                            _b.label = 3;
                        case 3: return [2 /*return*/, _a];
                    }
                });
            });
        };
        AvlAboutDialogComponent.prototype.translateVersionInfoItem = function (item) {
            return __awaiter(this, void 0, void 0, function () {
                var translateService, _a, _b, _c, _d;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            translateService = AvlLocalizationService.translationService;
                            _b = (_a = Object).assign;
                            _c = [Object.assign({}, item)];
                            _d = {};
                            return [4 /*yield*/, translateService.translate(item.label)];
                        case 1: return [2 /*return*/, _b.apply(_a, _c.concat([(_d.label = _e.sent(), _d)]))];
                    }
                });
            });
        };
        AvlAboutDialogComponent.prototype.closeDialog = function () {
            this.open = false;
        };
        /** @hidden */
        AvlAboutDialogComponent.prototype.openChanged = function (value) {
            this.open = value;
        };
        return AvlAboutDialogComponent;
    }());
    AvlAboutDialogComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAboutDialogComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlAboutDialogComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlAboutDialogComponent, selector: "avl-about-dialog", inputs: { avlAboutDialogInfo: "avlAboutDialogInfo", open: "open" }, outputs: { openChange: "openChange" }, ngImport: i0__namespace, template: "<ng-template #aboutContent>\r\n  <div class=\"about-content\">\r\n    <div class=\"product-title-holder\">\r\n      <div class=\"product-icon\">\r\n        <img src=\"{{ avlAboutDialogInfo.productLogo }}\" class=\"logo-img\" alt=\"logo\" />\r\n      </div>\r\n      <div class=\"product-title\">\r\n        <div class=\"product-name\">{{ avlAboutDialogInfo.productName }}</div>\r\n        <div class=\"brand-promise\">{{ avlAboutDialogInfo.brandPromise }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"version-info\">\r\n      <div class=\"version-info-item\" *ngFor=\"let infoLabel of avlAboutDialogInfo.versionInfo\">\r\n        {{ infoLabel.label }}: {{ infoLabel.value }}\r\n      </div>\r\n    </div>\r\n    <div class=\"legal-text\">{{ avlAboutDialogInfo.legalText }}</div>\r\n    <div class=\"additional-info\">\r\n      <a href=\"{{ avlAboutDialogInfo.additionalInfoUrl }}\" target=\"_blank\" rel=\"noopener noreferrer\">{{\r\n        avlAboutDialogInfo.additionalInfoLabel\r\n      }}</a>\r\n    </div>\r\n    <div class=\"ok-button\">\r\n      <avl-button (click)=\"closeDialog()\" contained>{{ avlAboutDialogInfo.okButtonLabel }}</avl-button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<avl-dialog id=\"dialog\" [(open)]=\"open\" (openChange)=\"openChanged($event)\">\r\n  <ng-template #content>\r\n    <avl-dialog-content>\r\n      <ng-container *ngTemplateOutlet=\"aboutContent\"></ng-container>\r\n      <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n    </avl-dialog-content>\r\n  </ng-template>\r\n</avl-dialog>\r\n\r\n<div *ngIf=\"open\" class=\"full-screen-about\">\r\n  <ng-container *ngTemplateOutlet=\"aboutContent\"></ng-container>\r\n  <div class=\"spacer\"></div>\r\n  <avl-footer companyLogo=\"./assets/images/avl_logo_inverse_48px.svg\" currentYear=\"2021\"> </avl-footer>\r\n</div>\r\n\r\n", styles: [":host{font-family:var(--avl-font-family);--avl-about-dialog-foreground-color:var(--avl-corporate-foreground-color);--avl-about-dialog-foreground-medium-color:var(--avl-corporate-foreground-medium-color);--avl-about-dialog-link-color:var(--avl-corporate-link-color);--avl-about-dialog-link-hover-color:var(--avl-corporate-link-hover-color);--avl-about-dialog-on-button-background-color:var(--avl-corporate-on-button-background-color);--avl-about-dialog-button-background-color:var(--avl-corporate-button-background-color);--avl-about-dialog-button-background-hover-color:var(\r\n    --avl-corporate-button-background-hover-color\r\n  );--avl-about-dialog-button-background-focus-color:var(\r\n    --avl-corporate-button-background-focus-color\r\n  );--avl-about-dialog-button-background-pressed-color:var(\r\n    --avl-corporate-button-background-pressed-color\r\n  );--dialog-padding:48px;--product-logo-size:146px;--product-name-font-size:34px;--margin-above-ok-button:24px;--margin-above-additional-info:8px;--distance-between-version-info-items:8px;--margin-above-version-info:56px}@media (max-width:960px) and (min-width:400px){:host{--dialog-padding:24px 24px 40px 24px;--margin-above-version-info:24px}.product-icon{margin-bottom:24px}.product-title-holder{flex-wrap:wrap}}@media (max-width:400px){:host{--dialog-padding:16px 16px 32px 16px;--product-logo-size:48px;--product-name-font-size:24px;--distance-to-link-for-additional-info:24px;--distance-between-version-info-items:4px;--margin-above-version-info:24px}.product-icon{width:100%;margin-bottom:24px}.product-title-holder{flex-wrap:wrap}}.full-screen-about{display:none}@media (max-width:864px){#dialog{display:none}.spacer{flex:1 1 100%;background-color:var(--avl-corporate-menu-background-color)}.full-screen-about{display:flex;flex-direction:column}.full-screen-about avl-footer{flex:1 0 48px}.full-screen-about .about-content{flex:1 0 auto}}avl-dialog{--avl-dialog-width:768px;--avl-dialog-text-color:var(--avl-about-dialog-foreground-medium-color);--avl-dialog-background-color:var(--avl-corporate-menu-background-color)}avl-dialog-footer{padding:0}.about-content,avl-footer{background-color:var(--avl-corporate-menu-background-color);width:100%}.about-content{display:flex;flex-direction:column;justify-content:flex-start;padding:var(--dialog-padding);box-sizing:border-box;font-size:14px;line-height:19px;overflow:auto}.full-screen-about{position:fixed;top:0;left:0;bottom:0;right:0;overflow:auto;z-index:302}avl-dialog-content{padding:0}.product-title-holder{display:flex;align-items:center}.product-title{flex:1 1 100%}.product-icon{height:var(--product-logo-size);width:auto;margin-right:24px}.product-icon img{height:100%}.product-name{font-size:var(--product-name-font-size)}.brand-promise,.product-name{line-height:1;color:var(--avl-about-dialog-foreground-color)}.brand-promise{font-size:16px;margin-top:8px}.version-info{margin-top:var(--margin-above-version-info);color:hsla(0,0%,100%,.7)}.version-info-item{margin-bottom:var(--distance-between-version-info-items)}.version-info-item:last-child{margin-bottom:0}.legal-text{margin-top:24px;color:var(--avl-about-dialog-foreground-color)}.additional-info{margin-top:var(--margin-above-additional-info);color:var(--avl-corporate-link)}.additional-info:hover{color:var(--avl-corporate-link-hover)}.ok-button{margin-top:var(--margin-above-ok-button)}.ok-button avl-button{float:right}avl-button{--avl-button-label-color:var(--avl-about-dialog-on-button-background-color);--avl-button-background-default-color:var(--avl-about-dialog-button-background-color);--avl-button-background-hover-color:var(--avl-about-dialog-button-background-hover-color);--avl-button-background-focus-color:var(--avl-about-dialog-button-background-focus-color);--avl-button-background-pressed-color:var(--avl-about-dialog-button-background-pressed-color);font-size:14px}"], components: [{ type: AvlDialogComponent, selector: "avl-dialog", inputs: ["closeOnScrimClick", "complex", "warningHeaderText", "warningDialogText", "fullscreen", "open", "dirty", "warningOnClose"], outputs: ["openChange"] }, { type: AvlDialogContentComponent, selector: "avl-dialog-content" }, { type: i3__namespace.AvlFooterComponent, selector: "avl-footer", inputs: ["companyLogo", "currentYear"] }], directives: [{ type: i4__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }, { type: i4__namespace$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlAboutDialogComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-about-dialog',
                        templateUrl: './avl-about-dialog.component.html',
                        styleUrls: ['./avl-about-dialog.component.css']
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { avlAboutDialogInfo: [{
                    type: i0.Input
                }], open: [{
                    type: i0.Input
                }], openChange: [{
                    type: i0.Output
                }] } });

    var AvlUnsavedChangesDialogComponent = /** @class */ (function () {
        function AvlUnsavedChangesDialogComponent() {
        }
        AvlUnsavedChangesDialogComponent.prototype.ngOnInit = function () {
            this.unsavedChanges = this.unsavedChangesService;
        };
        /**
         * Event handler for closing the unsaved changes dialog
         */
        AvlUnsavedChangesDialogComponent.prototype.onOpenChange = function (open) {
            if (!open) {
                this.unsavedChanges.closeDialog();
            }
        };
        return AvlUnsavedChangesDialogComponent;
    }());
    AvlUnsavedChangesDialogComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlUnsavedChangesDialogComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvlUnsavedChangesDialogComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.3", type: AvlUnsavedChangesDialogComponent, selector: "avl-unsaved-changes-dialog", inputs: { unsavedChangesService: "unsavedChangesService" }, ngImport: i0__namespace, template: "<avl-dialog\r\n  *ngIf=\"unsavedChangesService.isDialogOpen\"\r\n  id=\"unsavedChangesDialog\"\r\n  [open]=\"true\"\r\n  (openChange)=\"onOpenChange($event)\"\r\n  [closeOnScrimClick]=\"false\"\r\n  [fullscreen]=\"false\"\r\n  [complex]=\"false\"\r\n>\r\n  <ng-template #content>\r\n    <avl-dialog-header>You have unsaved changes! Do you want to continue?</avl-dialog-header>\r\n    <avl-dialog-content> If you proceed, all changes will be lost. </avl-dialog-content>\r\n    <avl-dialog-footer>\r\n      <avl-button (click)=\"unsavedChangesService.onProceed()\">Leave</avl-button>\r\n      <avl-button (click)=\"unsavedChangesService.onAbort()\">Stay</avl-button>\r\n    </avl-dialog-footer>\r\n  </ng-template>\r\n</avl-dialog>\r\n", styles: [""], components: [{ type: AvlDialogComponent, selector: "avl-dialog", inputs: ["closeOnScrimClick", "complex", "warningHeaderText", "warningDialogText", "fullscreen", "open", "dirty", "warningOnClose"], outputs: ["openChange"] }, { type: AvlDialogHeaderComponent, selector: "avl-dialog-header" }, { type: AvlDialogContentComponent, selector: "avl-dialog-content" }, { type: AvlDialogFooterComponent, selector: "avl-dialog-footer" }], directives: [{ type: i4__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: ["focusedChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlUnsavedChangesDialogComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'avl-unsaved-changes-dialog',
                        templateUrl: './avl-unsaved-changes-dialog.component.html',
                        styleUrls: ['./avl-unsaved-changes-dialog.component.css']
                    }]
            }], propDecorators: { unsavedChangesService: [{
                    type: i0.Input
                }] } });

    var componentsAndDirectives = [
        AvlDialogComponent,
        AvlLoginComponent,
        AvlDialogHeaderComponent,
        AvlDialogFooterComponent,
        AvlDialogContentComponent,
        AvlAboutDialogComponent,
        AvlUnsavedChangesDialogComponent
    ];
    var providers = [];
    var AvlDialogModule = /** @class */ (function () {
        function AvlDialogModule() {
        }
        return AvlDialogModule;
    }());
    AvlDialogModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AvlDialogModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogModule, declarations: [AvlDialogComponent,
            AvlLoginComponent,
            AvlDialogHeaderComponent,
            AvlDialogFooterComponent,
            AvlDialogContentComponent,
            AvlAboutDialogComponent,
            AvlUnsavedChangesDialogComponent], imports: [i4$1.CommonModule,
            i4.AvlNgBindersModule,
            navigation.AvlNavigationModule,
            i3.AvlCommonModule,
            i1.A11yModule,
            i5.FormsModule,
            i5.ReactiveFormsModule], exports: [AvlDialogComponent,
            AvlLoginComponent,
            AvlDialogHeaderComponent,
            AvlDialogFooterComponent,
            AvlDialogContentComponent,
            AvlAboutDialogComponent,
            AvlUnsavedChangesDialogComponent] });
    AvlDialogModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogModule, providers: providers, imports: [[
                i4$1.CommonModule,
                i4.AvlNgBindersModule,
                navigation.AvlNavigationModule,
                i3.AvlCommonModule,
                i1.A11yModule,
                i5.FormsModule,
                i5.ReactiveFormsModule
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0__namespace, type: AvlDialogModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4$1.CommonModule,
                            i4.AvlNgBindersModule,
                            navigation.AvlNavigationModule,
                            i3.AvlCommonModule,
                            i1.A11yModule,
                            i5.FormsModule,
                            i5.ReactiveFormsModule
                        ],
                        declarations: componentsAndDirectives,
                        providers: providers,
                        schemas: [i0.CUSTOM_ELEMENTS_SCHEMA],
                        exports: componentsAndDirectives
                    }]
            }] });

    /**
     * Can't put .ts file as index in package.json.
     * Hello, this is proxy.
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AvlAboutDialogComponent = AvlAboutDialogComponent;
    exports.AvlDialogComponent = AvlDialogComponent;
    exports.AvlDialogContentComponent = AvlDialogContentComponent;
    exports.AvlDialogFooterComponent = AvlDialogFooterComponent;
    exports.AvlDialogHeaderComponent = AvlDialogHeaderComponent;
    exports.AvlDialogModule = AvlDialogModule;
    exports.AvlLoginComponent = AvlLoginComponent;
    exports.AvlUnsavedChangesDialogComponent = AvlUnsavedChangesDialogComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=avl-ng-controls-dialog.umd.js.map
