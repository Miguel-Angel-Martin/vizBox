import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/cdk/a11y';

var _c0 = ["element"];
var _c1 = ["optionForm"];
function AvlDialogComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div");
} }
function AvlDialogComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 5, 2);
    ɵngcc0.ɵɵelementStart(2, "avl-dialog-header");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "avl-dialog-content", 6);
    ɵngcc0.ɵɵelementStart(5, "section", 7);
    ɵngcc0.ɵɵelementStart(6, "div", 8);
    ɵngcc0.ɵɵelement(7, "avl-icon", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 8);
    ɵngcc0.ɵɵelementStart(9, "h3");
    ɵngcc0.ɵɵtext(10, "All changes will be lost if you proceed without saving.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "p", 10);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "section", 11);
    ɵngcc0.ɵɵelementStart(14, "avl-button", 12);
    ɵngcc0.ɵɵlistener("click", function AvlDialogComponent_div_4_Template_avl_button_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.closeAllDialogs(); });
    ɵngcc0.ɵɵtext(15, "Proceed");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "avl-button", 13);
    ɵngcc0.ɵɵlistener("click", function AvlDialogComponent_div_4_Template_avl_button_click_16_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.closeWarningDialog(); });
    ɵngcc0.ɵɵtext(17, "Cancel");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("complex", ctx_r2.complex);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.warningHeaderText || "Warning Header", " ");
    ɵngcc0.ɵɵadvance(9);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.warningDialogText);
} }
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef, Input, Output, EventEmitter, ViewChild, ViewEncapsulation, ContentChild, TemplateRef, HostBinding, HostListener } from '@angular/core';
import { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';
import { NgForm } from '@angular/forms';
var AvlDialogComponent = /** @class */ (function () {
    function AvlDialogComponent(focusTrap) {
        this.focusTrap = focusTrap;
        this._open = false;
        this._dirty = false;
        this._warningOnClose = false;
        this._warningHeaderText = '';
        this._warningDialogText = '';
        this.openWarning = false;
        /**
         * If true, the dialog can be closed by clicking on scrim
         */
        this.closeOnScrimClick = true;
        /**
         * If true, new dialog can open inside a dialog
         */
        this.complex = false;
        /**
         * When checked, dialog opens in fullscreen mode
         */
        this.fullscreen = false;
        this.openChange = new EventEmitter();
    }
    Object.defineProperty(AvlDialogComponent.prototype, "warningHeaderText", {
        /**
         * Sets the text for warning dialog header.
         */
        get: function () {
            return this._warningHeaderText;
        },
        set: function (value) {
            if (this._warningHeaderText !== value) {
                this._warningHeaderText = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvlDialogComponent.prototype, "warningDialogText", {
        /**
         * Sets the main warning dialog text.
         */
        get: function () {
            return this._warningDialogText;
        },
        set: function (value) {
            if (this._warningDialogText !== value) {
                this._warningDialogText = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvlDialogComponent.prototype, "open", {
        /**
         * Can be set to open or close the dialog.
         * Returns the current state of the dialog.
         */
        get: function () {
            return this._open;
        },
        set: function (value) {
            if (this._open !== value) {
                this._open = !!value;
                this.openChange.emit(this._open);
                this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvlDialogComponent.prototype, "dirty", {
        /**
         * Indicates if the form has been touched.
         * Returns the current value of the attribute.
         */
        get: function () {
            return !!this._dirty;
        },
        set: function (value) {
            if (this._dirty !== value) {
                this._dirty = !!value;
                this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AvlDialogComponent.prototype, "warningOnClose", {
        /**
         * Can be set to indicate if the warning dialog should be opened.
         * Returns the current value of the attribute.
         */
        get: function () {
            return !!this._warningOnClose;
        },
        set: function (value) {
            if (this._warningOnClose !== value) {
                this._warningOnClose = !!value;
                this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();
            }
        },
        enumerable: true,
        configurable: true
    });
    /** @hidden */
    AvlDialogComponent.prototype.close = function (event) {
        var target = event.target;
        if (this.closeOnScrimClick && target.classList.contains('scrim')) {
            if (this.warningOnClose) {
                if (this.openWarning === false) {
                    this.openWarning = true;
                }
            }
            else {
                if (this.dirty === true) {
                    this.openWarning = true;
                }
                else {
                    this.open = false;
                }
            }
        }
    };
    /**
     * Opens a dialog.
     */
    AvlDialogComponent.prototype.openDialog = function () {
        this.open = true;
    };
    /**
     * Closes a dialog.
     */
    AvlDialogComponent.prototype.closeDialog = function () {
        if (this.warningOnClose || this.dirty) {
            this.openWarning = !this.openWarning;
        }
        else {
            this.open = false;
        }
    };
    /**
     * Closes all dialogs.
     */
    AvlDialogComponent.prototype.closeAllDialogs = function () {
        this.openWarning = false;
        this.open = false;
        this.dirty = false;
    };
    /**
     * Opens a warning dialog.
     */
    AvlDialogComponent.prototype.openWarningDialog = function () {
        this.openWarning = true;
    };
    /**
     * Closes a warning dialog.
     */
    AvlDialogComponent.prototype.closeWarningDialog = function () {
        this.openWarning = false;
    };
    /** @hidden */
    AvlDialogComponent.prototype.keyEvent = function (event) {
        if (event.key === 'Esc' || event.key === 'Escape') {
            this.closeDialog();
        }
    };
    Object.defineProperty(AvlDialogComponent.prototype, "openedClosed", {
        /** @hidden */
        get: function () {
            return this._open;
        },
        enumerable: true,
        configurable: true
    });
    /** @hidden */
    AvlDialogComponent.prototype.ngOnInit = function () {
        if (this.complex != null && this.complex !== false) {
            this.complex = true;
        }
    };
    AvlDialogComponent.ctorParameters = function () { return [
        { type: ConfigurableFocusTrapFactory }
    ]; };
    __decorate([
        ContentChild(TemplateRef),
        __metadata("design:type", TemplateRef)
    ], AvlDialogComponent.prototype, "content", void 0);
    __decorate([
        ViewChild('element', { static: true }),
        __metadata("design:type", ElementRef)
    ], AvlDialogComponent.prototype, "element", void 0);
    __decorate([
        ViewChild('optionForm', { read: NgForm }),
        __metadata("design:type", Object)
    ], AvlDialogComponent.prototype, "optionForm", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AvlDialogComponent.prototype, "closeOnScrimClick", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AvlDialogComponent.prototype, "complex", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], AvlDialogComponent.prototype, "warningHeaderText", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], AvlDialogComponent.prototype, "warningDialogText", null);
    __decorate([
        HostBinding('class.fullscreen'),
        Input(),
        __metadata("design:type", Object)
    ], AvlDialogComponent.prototype, "fullscreen", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], AvlDialogComponent.prototype, "open", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], AvlDialogComponent.prototype, "dirty", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], AvlDialogComponent.prototype, "warningOnClose", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AvlDialogComponent.prototype, "openChange", void 0);
    __decorate([
        HostListener('keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], AvlDialogComponent.prototype, "keyEvent", null);
    __decorate([
        HostBinding('class.opened'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], AvlDialogComponent.prototype, "openedClosed", null);
    AvlDialogComponent = __decorate([ __metadata("design:paramtypes", [ConfigurableFocusTrapFactory])
    ], AvlDialogComponent);
AvlDialogComponent.ɵfac = function AvlDialogComponent_Factory(t) { return new (t || AvlDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigurableFocusTrapFactory)); };
AvlDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AvlDialogComponent, selectors: [["avl-dialog"]], contentQueries: function AvlDialogComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, viewQuery: function AvlDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true, NgForm);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.element = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionForm = _t.first);
    } }, hostVars: 4, hostBindings: function AvlDialogComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown", function AvlDialogComponent_keydown_HostBindingHandler($event) { return ctx.keyEvent($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("fullscreen", ctx.fullscreen)("opened", ctx.openedClosed);
    } }, inputs: { closeOnScrimClick: "closeOnScrimClick", complex: "complex", fullscreen: "fullscreen", warningHeaderText: "warningHeaderText", warningDialogText: "warningDialogText", open: "open", dirty: "dirty", warningOnClose: "warningOnClose" }, outputs: { openChange: "openChange" }, decls: 5, vars: 5, consts: [[1, "scrim", 3, "click"], ["tabindex", "0", 1, "dialog"], ["element", ""], [4, "ngIf", "ngIfThen"], ["class", "dialog warning-dialog", "tabindex", "0", 3, "complex", 4, "ngIf"], ["tabindex", "0", 1, "dialog", "warning-dialog"], [1, "warning"], [1, "supporting-text"], [1, "column"], ["icon", "icons:warning"], ["id", "customText"], [1, "warning-buttons"], ["contained", "", 3, "click"], [3, "click"]], template: function AvlDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("click", function AvlDialogComponent_Template_div_click_0_listener($event) { return ctx.close($event); });
        ɵngcc0.ɵɵelementStart(1, "div", 1, 2);
        ɵngcc0.ɵɵtemplate(3, AvlDialogComponent_div_3_Template, 1, 0, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, AvlDialogComponent_div_4_Template, 18, 4, "div", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("complex", ctx.complex);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.open)("ngIfThen", ctx.content);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.openWarning);
    } }, styles: ["[_nghost-%COMP%]{font-family:var(--avl-font-family);--avl-dialog-background-color:var(--avl-background-color);--avl-dialog-header-title-color:var(--avl-foreground-color);--avl-dialog-text-color:var(--avl-emphasis-medium-color);--avl-dialog-close-icon-color:var(--avl-icon-default-color);--avl-dialog-separator-color:var(--avl-divider-color);--avl-dialog-close-icon-ink-pressed-color:var(--avl-ink-default-pressed-color);--avl-dialog-close-icon-ink-focus-color:var(--avl-ink-default-focus-color);--avl-dialog-close-icon-ink-hover-color:var(--avl-ink-default-hover-color);display:none}.supporting-text[_ngcontent-%COMP%]{display:flex}.column[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-wrap:nowrap;align-items:flex-start}.supporting-text[_ngcontent-%COMP%]   p#customText[_ngcontent-%COMP%]{margin-top:-6px;margin-bottom:11px}.supporting-text[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:16px;margin-top:7px;font-weight:700}form[_ngcontent-%COMP%]{margin-bottom:24px;margin-left:24px}.supporting-text[_ngcontent-%COMP%]   avl-icon[_ngcontent-%COMP%]{width:40px;height:40px;margin-right:15px;margin-top:6px;flex-shrink:0;--avl-icon-custom-color:var(--avl-warning-color)}.warning-buttons[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;margin-bottom:16px}.warning-buttons[_ngcontent-%COMP%] > avl-button[_ngcontent-%COMP%]{margin-top:4px}.warning-buttons[_ngcontent-%COMP%] > avl-button[_ngcontent-%COMP%]:last-child{margin-left:-7px}.opened[_nghost-%COMP%]{display:block}.scrim[_ngcontent-%COMP%]{position:fixed;z-index:50;left:0;top:0;width:100%;height:100%;background-color:var(--avl-scrim-color);display:flex;flex-flow:column nowrap;justify-content:center;align-items:center}.dialog[_ngcontent-%COMP%]{box-sizing:border-box;height:calc(var(--avl-dialog-height) - 2px);outline:0;display:flex;flex-direction:column;position:absolute;width:var(--avl-dialog-width);min-width:280px;min-height:230px;max-width:calc(100vw - 96px);max-height:calc(100vh - 96px);background-color:var(--avl-dialog-background-color);color:var(--avl-dialog-text-color);box-shadow:var(--avl-box-shadow-24dp);min-width:444px}.warning-dialog[_ngcontent-%COMP%]{min-height:211px!important}.fullscreen[_nghost-%COMP%] > div[_ngcontent-%COMP%] > .dialog[_ngcontent-%COMP%]{width:100%;height:100%;max-width:100%;max-height:100%}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlDialogComponent, [{
        type: Component,
        args: [{
                selector: 'avl-dialog',
                template: "<div class=\"scrim\" (click)=\"close($event)\">\r\n  <div #element class=\"dialog\" [class.complex]=\"complex\" tabindex=\"0\">\r\n    <div *ngIf=\"open; then content\"></div>\r\n  </div>\r\n\r\n  <div *ngIf=\"openWarning\" #element class=\"dialog warning-dialog\" [class.complex]=\"complex\" tabindex=\"0\">\r\n    <avl-dialog-header>\r\n      {{ warningHeaderText || 'Warning Header' }}\r\n    </avl-dialog-header>\r\n    <avl-dialog-content class=\"warning\">\r\n      <section class=\"supporting-text\">\r\n        <div class=\"column\">\r\n          <avl-icon icon=\"icons:warning\"></avl-icon>\r\n        </div>\r\n        <div class=\"column\">\r\n          <h3>All changes will be lost if you proceed without saving.</h3>\r\n          <p id=\"customText\">{{ warningDialogText }}</p>\r\n        </div>\r\n      </section>\r\n      <section class=\"warning-buttons\">\r\n        <avl-button contained (click)=\"closeAllDialogs()\">Proceed</avl-button>\r\n        <avl-button (click)=\"closeWarningDialog()\">Cancel</avl-button>\r\n      </section>\r\n    </avl-dialog-content>\r\n  </div>\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.Emulated,
                styles: [":host(){font-family:var(--avl-font-family);--avl-dialog-background-color:var(--avl-background-color);--avl-dialog-header-title-color:var(--avl-foreground-color);--avl-dialog-text-color:var(--avl-emphasis-medium-color);--avl-dialog-close-icon-color:var(--avl-icon-default-color);--avl-dialog-separator-color:var(--avl-divider-color);--avl-dialog-close-icon-ink-pressed-color:var(--avl-ink-default-pressed-color);--avl-dialog-close-icon-ink-focus-color:var(--avl-ink-default-focus-color);--avl-dialog-close-icon-ink-hover-color:var(--avl-ink-default-hover-color);display:none}.supporting-text{display:flex}.column{display:flex;flex-direction:column;flex-wrap:nowrap;align-items:flex-start}.supporting-text p#customText{margin-top:-6px;margin-bottom:11px}.supporting-text h3{font-size:16px;margin-top:7px;font-weight:700}form{margin-bottom:24px;margin-left:24px}.supporting-text avl-icon{width:40px;height:40px;margin-right:15px;margin-top:6px;flex-shrink:0;--avl-icon-custom-color:var(--avl-warning-color)}.warning-buttons{display:flex;justify-content:flex-end;margin-bottom:16px}.warning-buttons>avl-button{margin-top:4px}.warning-buttons>avl-button:last-child{margin-left:-7px}:host(.opened){display:block}.scrim{position:fixed;z-index:50;left:0;top:0;width:100%;height:100%;background-color:var(--avl-scrim-color);display:flex;flex-flow:column nowrap;justify-content:center;align-items:center}.dialog{box-sizing:border-box;height:calc(var(--avl-dialog-height) - 2px);outline:0;display:flex;flex-direction:column;position:absolute;width:var(--avl-dialog-width);min-width:280px;min-height:230px;max-width:calc(100vw - 96px);max-height:calc(100vh - 96px);background-color:var(--avl-dialog-background-color);color:var(--avl-dialog-text-color);box-shadow:var(--avl-box-shadow-24dp);min-width:444px}.warning-dialog{min-height:211px!important}:host(.fullscreen)>div>.dialog{width:100%;height:100%;max-width:100%;max-height:100%}"]
            }]
    }], function () { return [{ type: ɵngcc1.ConfigurableFocusTrapFactory }]; }, { closeOnScrimClick: [{
            type: Input
        }], complex: [{
            type: Input
        }], fullscreen: [{
            type: HostBinding,
            args: ['class.fullscreen']
        }, {
            type: Input
        }], openChange: [{
            type: Output
        }], warningHeaderText: [{
            type: Input
        }], warningDialogText: [{
            type: Input
        }], open: [{
            type: Input
        }], dirty: [{
            type: Input
        }], warningOnClose: [{
            type: Input
        }], keyEvent: [{
            type: HostListener,
            args: ['keydown', ['$event']]
        }], openedClosed: [{
            type: HostBinding,
            args: ['class.opened']
        }], content: [{
            type: ContentChild,
            args: [TemplateRef]
        }], element: [{
            type: ViewChild,
            args: ['element', { static: true }]
        }], optionForm: [{
            type: ViewChild,
            args: ['optionForm', { read: NgForm }]
        }] }); })();
    return AvlDialogComponent;
}());
export { AvlDialogComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,