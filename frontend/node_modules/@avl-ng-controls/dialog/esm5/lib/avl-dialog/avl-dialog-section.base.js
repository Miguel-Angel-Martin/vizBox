import * as ɵngcc0 from '@angular/core';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { HostBinding, Directive } from '@angular/core';
import { AvlDialogComponent } from './avl-dialog.component';
var AvlBaseDialogSection = /** @class */ (function () {
    function AvlBaseDialogSection(dialog) {
        this.dialog = dialog;
        this.isComplex = false;
    }
    /** @hidden */
    AvlBaseDialogSection.prototype.closeDialog = function () {
        this.dialog.closeDialog();
    };
    AvlBaseDialogSection.prototype.ngOnInit = function () {
        this.isComplex = this.dialog.complex;
    };
    AvlBaseDialogSection.ctorParameters = function () { return [
        { type: AvlDialogComponent }
    ]; };
    __decorate([
        HostBinding('class.complex'),
        __metadata("design:type", Boolean)
    ], AvlBaseDialogSection.prototype, "isComplex", void 0);
    AvlBaseDialogSection = __decorate([ __metadata("design:paramtypes", [AvlDialogComponent])
    ], AvlBaseDialogSection);
AvlBaseDialogSection.ɵfac = function AvlBaseDialogSection_Factory(t) { return new (t || AvlBaseDialogSection)(ɵngcc0.ɵɵdirectiveInject(AvlDialogComponent)); };
AvlBaseDialogSection.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlBaseDialogSection, hostVars: 2, hostBindings: function AvlBaseDialogSection_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("complex", ctx.isComplex);
    } } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlBaseDialogSection, [{
        type: Directive
    }], function () { return [{ type: AvlDialogComponent }]; }, { isComplex: [{
            type: HostBinding,
            args: ['class.complex']
        }] }); })();
    return AvlBaseDialogSection;
}());
export { AvlBaseDialogSection };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRpYWxvZy1zZWN0aW9uLmJhc2UuanMiLCJzb3VyY2VzIjpbIm5nOi9AYXZsLW5nLWNvbnRyb2xzL2RpYWxvZy9saWIvYXZsLWRpYWxvZy9hdmwtZGlhbG9nLXNlY3Rpb24uYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFVLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFHNUQ7QUFBd0QsSUFFdEQsOEJBQXNCLE1BQTBCO0FBQUksUUFBOUIsV0FBTSxHQUFOLE1BQU0sQ0FBb0I7QUFBQyxRQUdqRCxjQUFTLEdBQVksS0FBSyxDQUFDO0FBQzdCLElBSnNELENBQUM7QUFDdkQsSUFJRSxjQUFjO0FBQ2hCLElBQUUsMENBQVcsR0FBWDtBQUFjLFFBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUM5QixJQUFFLENBQUM7QUFFSCxJQUFFLHVDQUFRLEdBQVI7QUFDRCxRQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFDekMsSUFBRSxDQUFDO0FBRUg7QUFDK0QsZ0JBZi9CLGtCQUFrQjtBQUFHO0FBRS9DLElBQ0o7QUFBYSxRQURaLFdBQVcsQ0FBQyxlQUFlLENBQUM7QUFDOUI7QUFFWSwyREFGZ0I7QUFFN0IsSUFQc0Isb0JBQW9CLHdCQUR6QyxTQUFTLEVBQUUscEJBQ0osa0NBRXdCLGtCQUFrQjtBQUFHLE9BRi9CLG9CQUFvQixDQWdCekM7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELDJCQUFDO0FBQ0EsQ0FEQSxBQWhCRCxJQWdCQzs7QUFwQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUhBLEFBQUEsQUFLQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVpBLEFBQUEsQUFHQSxBQURBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUxBLEFBQUEsQUFEQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBRkEsQUFBQSxBQWdCQSxBQUFBLEFBQUEsQUFBQSxBQWhCQSxBQWdCQSxBQWhCQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBIb3N0QmluZGluZywgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEF2bERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4vYXZsLWRpYWxvZy5jb21wb25lbnQnO1xyXG5cclxuQERpcmVjdGl2ZSgpXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBdmxCYXNlRGlhbG9nU2VjdGlvbiBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBkaWFsb2c6IEF2bERpYWxvZ0NvbXBvbmVudCkgeyB9XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuY29tcGxleCcpXHJcbiAgaXNDb21wbGV4OiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgY2xvc2VEaWFsb2coKSB7XHJcbiAgICB0aGlzLmRpYWxvZy5jbG9zZURpYWxvZygpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmlzQ29tcGxleCA9IHRoaXMuZGlhbG9nLmNvbXBsZXg7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=