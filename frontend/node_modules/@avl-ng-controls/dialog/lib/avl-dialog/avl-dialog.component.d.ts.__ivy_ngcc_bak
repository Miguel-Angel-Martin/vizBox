import { ElementRef, EventEmitter, TemplateRef, OnInit } from '@angular/core';
import { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';
export declare class AvlDialogComponent implements OnInit {
    private focusTrap;
    private _open;
    private _dirty;
    private _warningOnClose;
    private _warningHeaderText;
    private _warningDialogText;
    openWarning: boolean;
    /**
     * Dialog content
     */
    content: TemplateRef<any>;
    /** @hidden */
    element: ElementRef;
    /** @hidden */
    optionForm: any;
    /**
     * If true, the dialog can be closed by clicking on scrim
     */
    closeOnScrimClick: boolean;
    /**
     * If true, new dialog can open inside a dialog
     */
    complex: boolean;
    /**
     * Sets the text for warning dialog header.
     */
    get warningHeaderText(): string;
    set warningHeaderText(value: string);
    /**
     * Sets the main warning dialog text.
     */
    get warningDialogText(): string;
    set warningDialogText(value: string);
    /**
     * When checked, dialog opens in fullscreen mode
     */
    fullscreen: boolean;
    /**
     * Can be set to open or close the dialog.
     * Returns the current state of the dialog.
     */
    get open(): boolean;
    set open(value: boolean);
    /**
     * Indicates if the form has been touched.
     * Returns the current value of the attribute.
     */
    get dirty(): boolean;
    set dirty(value: boolean);
    /**
     * Can be set to indicate if the warning dialog should be opened.
     * Returns the current value of the attribute.
     */
    get warningOnClose(): boolean;
    set warningOnClose(value: boolean);
    openChange: EventEmitter<boolean>;
    /** @hidden */
    close(event: MouseEvent): void;
    /**
     * Opens a dialog.
     */
    openDialog(): void;
    /**
     * Closes a dialog.
     */
    closeDialog(): void;
    /**
     * Closes all dialogs.
     */
    closeAllDialogs(): void;
    /**
     * Opens a warning dialog.
     */
    openWarningDialog(): void;
    /**
     * Closes a warning dialog.
     */
    closeWarningDialog(): void;
    /** @hidden */
    keyEvent(event: KeyboardEvent): void;
    /** @hidden */
    get openedClosed(): boolean;
    constructor(focusTrap: ConfigurableFocusTrapFactory);
    /** @hidden */
    ngOnInit(): void;
    /**
     *
     * ### Styling
     * The following custom properties are available for styling:
     *
     * Custom property                     | Description                       | Default
     * :------------------------------------------|:--------------------------------------|:----------------------
     * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`
     * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`
     * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`
     * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`
     * `--avl-dialog-width`                | Dialog width                      | `280 px`
     * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`
     * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`
     * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`
     * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`
     * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`
     *
     */
    _styling: any;
}
