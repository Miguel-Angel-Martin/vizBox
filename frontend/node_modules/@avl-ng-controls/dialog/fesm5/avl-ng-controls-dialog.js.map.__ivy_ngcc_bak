{"version":3,"file":"avl-ng-controls-dialog.js","sources":["ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-section.base.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-header/avl-dialog-header.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component.ts","ng://@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-content/avl-dialog-content.component.ts","ng://@avl-ng-controls/dialog/lib/avl-about-dialog/avl-about-dialog.component.ts","ng://@avl-ng-controls/dialog/lib/dialog.module.ts","ng://@avl-ng-controls/dialog/public-api.ts","ng://@avl-ng-controls/dialog/avl-ng-controls-dialog.ts"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'avl-dialog',\r\n  templateUrl: './avl-dialog.component.html',\r\n  styleUrls: ['./avl-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlDialogComponent implements OnInit {\r\n  private _open = false;\r\n  private _dirty: boolean = false;\r\n  private _warningOnClose = false;\r\n  private _warningHeaderText = '';\r\n  private _warningDialogText = '';\r\n  public openWarning = false;\r\n\r\n  /**\r\n   * Dialog content\r\n   */\r\n  @ContentChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('element', { static: true }) element: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('optionForm', { read: NgForm }) optionForm: any;\r\n\r\n  /**\r\n   * If true, the dialog can be closed by clicking on scrim\r\n   */\r\n  @Input() closeOnScrimClick: boolean = true;\r\n\r\n  /**\r\n   * If true, new dialog can open inside a dialog\r\n   */\r\n  @Input() complex: boolean = false;\r\n\r\n  /**\r\n   * Sets the text for warning dialog header.\r\n   */\r\n  @Input()\r\n  get warningHeaderText(): string {\r\n    return this._warningHeaderText;\r\n  }\r\n  set warningHeaderText(value: string) {\r\n    if (this._warningHeaderText !== value) {\r\n      this._warningHeaderText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the main warning dialog text.\r\n   */\r\n  @Input()\r\n  get warningDialogText(): string {\r\n    return this._warningDialogText;\r\n  }\r\n  set warningDialogText(value: string) {\r\n    if (this._warningDialogText !== value) {\r\n      this._warningDialogText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When checked, dialog opens in fullscreen mode\r\n   */\r\n  @HostBinding('class.fullscreen')\r\n  @Input()\r\n  fullscreen = false;\r\n\r\n  /**\r\n   * Can be set to open or close the dialog.\r\n   * Returns the current state of the dialog.\r\n   */\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    if (this._open !== value) {\r\n      this._open = !!value;\r\n      this.openChange.emit(this._open);\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the form has been touched.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get dirty(): boolean {\r\n    return !!this._dirty;\r\n  }\r\n  set dirty(value: boolean) {\r\n    if (this._dirty !== value) {\r\n      this._dirty = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be set to indicate if the warning dialog should be opened.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get warningOnClose(): boolean {\r\n    return !!this._warningOnClose;\r\n  }\r\n  set warningOnClose(value: boolean) {\r\n    if (this._warningOnClose !== value) {\r\n      this._warningOnClose = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /** @hidden */\r\n  close(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (this.closeOnScrimClick && target.classList.contains('scrim')) {\r\n      if (this.warningOnClose) {\r\n        if (this.openWarning === false) {\r\n          this.openWarning = true;\r\n        }\r\n      } else {\r\n        if (this.dirty === true) {\r\n          this.openWarning = true;\r\n        } else {\r\n          this.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a dialog.\r\n   */\r\n  openDialog() {\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a dialog.\r\n   */\r\n  closeDialog() {\r\n    if (this.warningOnClose || this.dirty) {\r\n      this.openWarning = !this.openWarning;\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all dialogs.\r\n   */\r\n  closeAllDialogs() {\r\n    this.openWarning = false;\r\n    this.open = false;\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Opens a warning dialog.\r\n   */\r\n  openWarningDialog() {\r\n    this.openWarning = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a warning dialog.\r\n   */\r\n  closeWarningDialog() {\r\n    this.openWarning = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (event.key === 'Esc' || event.key === 'Escape') {\r\n        this.closeDialog();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.opened')\r\n  get openedClosed() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(private focusTrap: ConfigurableFocusTrapFactory) {}\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.complex != null && this.complex !== false) {\r\n      this.complex = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                     | Description                       | Default\r\n   * :------------------------------------------|:--------------------------------------|:----------------------\r\n   * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`\r\n   * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`\r\n   * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`\r\n   * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`\r\n   * `--avl-dialog-width`                | Dialog width                      | `280 px`\r\n   * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`\r\n   * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`\r\n   * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`\r\n   * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`\r\n   * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`\r\n   *\r\n   */\r\n  _styling: any;\r\n}\r\n","import { OnInit, HostBinding, Directive } from '@angular/core';\r\nimport { AvlDialogComponent } from './avl-dialog.component';\r\n\r\n@Directive()\r\nexport abstract class AvlBaseDialogSection implements OnInit {\r\n\r\n  constructor(protected dialog: AvlDialogComponent) { }\r\n\r\n  @HostBinding('class.complex')\r\n  isComplex: boolean = false;\r\n\r\n  /** @hidden */\r\n  closeDialog() {\r\n    this.dialog.closeDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isComplex = this.dialog.complex;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-header',\r\n  templateUrl: './avl-dialog-header.component.html',\r\n  styleUrls: ['./avl-dialog-header.component.css']\r\n})\r\nexport class AvlDialogHeaderComponent extends AvlBaseDialogSection implements AfterViewInit {\r\n  @HostBinding('class.extended')\r\n  extended = false;\r\n\r\n  @ViewChild('extendedSlot')\r\n  private extendedSlot: ElementRef<HTMLSlotElement>;\r\n\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-footer',\r\n  templateUrl: './avl-dialog-footer.component.html',\r\n  styleUrls: ['./avl-dialog-footer.component.css']\r\n})\r\nexport class AvlDialogFooterComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-content',\r\n  templateUrl: './avl-dialog-content.component.html',\r\n  styleUrls: ['./avl-dialog-content.component.css']\r\n})\r\nexport class AvlDialogContentComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'avl-about-dialog',\r\n  templateUrl: './avl-about-dialog.component.html',\r\n  styleUrls: [\r\n    './avl-about-dialog.component.css'\r\n  ],\r\n\r\n})\r\nexport class AvlAboutDialogComponent {\r\n\r\n  @Input() productLogo: string;\r\n  @Input() productName: string;\r\n  @Input() brandPromise: string;\r\n  @Input() versionInfo: VersionInfo[];\r\n  @Input() legalText: string;\r\n  @Input() additionalInfoLabel: string;\r\n  @Input() additionalInfoUrl: string;\r\n  @Input() copyright: string;\r\n  @Input() okButtonLabel = 'OK';\r\n\r\n  private _open = false;\r\n  @Input()\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    this.openChange.emit(this._open);\r\n  }\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                      | Description                             | Default\r\n   * :----------------------------------------------------|:----------------------------------------|:----------------------\r\n   * `--avl-about-dialog-foreground-color`                | Main foreground color                   | `--avl-corporate-foreground-color`\r\n   * `--avl-about-dialog-foreground-medium-color`         | Forground color for version information | `--avl-corporate-foreground-medium-color`\r\n   * `--avl-about-dialog-link-color`                      | Link color                              | `--avl-corporate-link-color`\r\n   * `--avl-about-dialog-link-hover-color`                | Link hover color                        | `--avl-corporate-link-hover-color`\r\n   * `--avl-about-dialog-on-button-background-color`      | Button text color                       | `--avl-corporate-on-button-background-color`\r\n   * `--avl-about-dialog-button-background-color`         | Button background color                 | `--avl-corporate-button-background-color`\r\n   * `--avl-about-dialog-button-background-hover-color`   | Button hover color                      | `--avl-corporate-button-background-hover-color`\r\n   * `--avl-about-dialog-button-background-focus-color`   | Button focus color                      | `--avl-corporate-button-background-focus-color`\r\n   * `--avl-about-dialog-button-background-pressed-color` | Button pressed color                    | `--avl-corporate-button-background-pressed-color` *\r\n   */\r\n  _styling: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.open = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  openChanged(value: boolean) {\r\n    this.open = value;\r\n  }\r\n}\r\n\r\nexport interface VersionInfo {\r\n  label: string;\r\n  value: string;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule} from '@angular/cdk/a11y';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n// components\r\nimport { AvlDialogComponent } from './avl-dialog/avl-dialog.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogHeaderComponent } from './avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nimport { AvlDialogFooterComponent } from './avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nimport { AvlDialogContentComponent } from './avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\nimport { AvlAboutDialogComponent } from './avl-about-dialog/avl-about-dialog.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlDialogComponent,\r\n  AvlDialogHeaderComponent,\r\n  AvlDialogFooterComponent,\r\n  AvlDialogContentComponent,\r\n  AvlAboutDialogComponent,\r\n];\r\n\r\nconst providers = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AvlNgBindersModule,\r\n    A11yModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  providers: providers,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlDialogModule { }\r\n","/**\r\n * Can't put .ts file as index in package.json.\r\n * Hello, this is proxy.\r\n */\r\nexport { AvlDialogModule } from './lib/dialog.module';\r\nexport { AvlDialogComponent } from './lib/avl-dialog/avl-dialog.component';\r\nexport {\r\n  AvlAboutDialogComponent,\r\n  VersionInfo,\r\n} from './lib/avl-about-dialog/avl-about-dialog.component';\r\nexport { AvlDialogHeaderComponent } from './lib/avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nexport { AvlDialogFooterComponent } from './lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nexport { AvlDialogContentComponent } from './lib/avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AvlBaseDialogSection as ɵa} from './lib/avl-dialog/avl-dialog-section.base';"],"names":["__decorate","__extends"],"mappings":"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"}