{"version":3,"file":"avl-ng-controls-dialog.js","sources":["ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-section.base.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-header/avl-dialog-header.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-dialog/avl-dialog-content/avl-dialog-content.component.ts","ng:/@avl-ng-controls/dialog/lib/avl-about-dialog/avl-about-dialog.component.ts","ng:/@avl-ng-controls/dialog/lib/dialog.module.ts","ng:/@avl-ng-controls/dialog/public-api.ts","ng:/@avl-ng-controls/dialog/avl-ng-controls-dialog.ts"],"names":["__decorate","__extends"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'avl-dialog',\r\n  templateUrl: './avl-dialog.component.html',\r\n  styleUrls: ['./avl-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AvlDialogComponent implements OnInit {\r\n  private _open = false;\r\n  private _dirty: boolean = false;\r\n  private _warningOnClose = false;\r\n  private _warningHeaderText = '';\r\n  private _warningDialogText = '';\r\n  public openWarning = false;\r\n\r\n  /**\r\n   * Dialog content\r\n   */\r\n  @ContentChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** @hidden */\r\n  @ViewChild('element', { static: true }) element: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('optionForm', { read: NgForm }) optionForm: any;\r\n\r\n  /**\r\n   * If true, the dialog can be closed by clicking on scrim\r\n   */\r\n  @Input() closeOnScrimClick: boolean = true;\r\n\r\n  /**\r\n   * If true, new dialog can open inside a dialog\r\n   */\r\n  @Input() complex: boolean = false;\r\n\r\n  /**\r\n   * Sets the text for warning dialog header.\r\n   */\r\n  @Input()\r\n  get warningHeaderText(): string {\r\n    return this._warningHeaderText;\r\n  }\r\n  set warningHeaderText(value: string) {\r\n    if (this._warningHeaderText !== value) {\r\n      this._warningHeaderText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the main warning dialog text.\r\n   */\r\n  @Input()\r\n  get warningDialogText(): string {\r\n    return this._warningDialogText;\r\n  }\r\n  set warningDialogText(value: string) {\r\n    if (this._warningDialogText !== value) {\r\n      this._warningDialogText = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When checked, dialog opens in fullscreen mode\r\n   */\r\n  @HostBinding('class.fullscreen')\r\n  @Input()\r\n  fullscreen = false;\r\n\r\n  /**\r\n   * Can be set to open or close the dialog.\r\n   * Returns the current state of the dialog.\r\n   */\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    if (this._open !== value) {\r\n      this._open = !!value;\r\n      this.openChange.emit(this._open);\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the form has been touched.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get dirty(): boolean {\r\n    return !!this._dirty;\r\n  }\r\n  set dirty(value: boolean) {\r\n    if (this._dirty !== value) {\r\n      this._dirty = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Can be set to indicate if the warning dialog should be opened.\r\n   * Returns the current value of the attribute.\r\n   */\r\n  @Input()\r\n  get warningOnClose(): boolean {\r\n    return !!this._warningOnClose;\r\n  }\r\n  set warningOnClose(value: boolean) {\r\n    if (this._warningOnClose !== value) {\r\n      this._warningOnClose = !!value;\r\n      this.focusTrap.create(this.element.nativeElement).focusFirstTabbableElementWhenReady();\r\n    }\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /** @hidden */\r\n  close(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (this.closeOnScrimClick && target.classList.contains('scrim')) {\r\n      if (this.warningOnClose) {\r\n        if (this.openWarning === false) {\r\n          this.openWarning = true;\r\n        }\r\n      } else {\r\n        if (this.dirty === true) {\r\n          this.openWarning = true;\r\n        } else {\r\n          this.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a dialog.\r\n   */\r\n  openDialog() {\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a dialog.\r\n   */\r\n  closeDialog() {\r\n    if (this.warningOnClose || this.dirty) {\r\n      this.openWarning = !this.openWarning;\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all dialogs.\r\n   */\r\n  closeAllDialogs() {\r\n    this.openWarning = false;\r\n    this.open = false;\r\n    this.dirty = false;\r\n  }\r\n\r\n  /**\r\n   * Opens a warning dialog.\r\n   */\r\n  openWarningDialog() {\r\n    this.openWarning = true;\r\n  }\r\n\r\n  /**\r\n   * Closes a warning dialog.\r\n   */\r\n  closeWarningDialog() {\r\n    this.openWarning = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostListener('keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (event.key === 'Esc' || event.key === 'Escape') {\r\n        this.closeDialog();\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.opened')\r\n  get openedClosed() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(private focusTrap: ConfigurableFocusTrapFactory) {}\r\n\r\n  /** @hidden */\r\n  ngOnInit() {\r\n    if (this.complex != null && this.complex !== false) {\r\n      this.complex = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                     | Description                       | Default\r\n   * :------------------------------------------|:--------------------------------------|:----------------------\r\n   * `--avl-dialog-background-color`     | Background color of dialog        | `--avl-background-color`\r\n   * `--avl-dialog-text-color`           | Color of text in content          | `--avl-emphasis-medium-color`\r\n   * `--avl-dialog-header-title-color`   | Color of text in header           | `--avl-foreground-color`\r\n   * `--avl-dialog-close-icon-color`     | Color of close icon in header     | `--avl-icon-default-color`\r\n   * `--avl-dialog-width`                | Dialog width                      | `280 px`\r\n   * `--avl-dialog-height`               | Dialog height                     | `100% - 96px`\r\n   * `--avl-dialog-separator-color`      | Color of separator of dialog parts| `--avl-divider-color`\r\n   * `--avl-dialog-close-icon-ink-pressed-color`| Color of pressed close icon in header | `--avl-ink-default-pressed-color`\r\n   * `--avl-dialog-close-icon-ink-focus-color`  | Color of focused close icon in header | `--avl-ink-default-focus-color`\r\n   * `--avl-dialog-close-icon-ink-hover-color`  | Color of hovered close icon in header | `--avl-ink-default-hover-color`\r\n   *\r\n   */\r\n  _styling: any;\r\n}\r\n","import { OnInit, HostBinding, Directive } from '@angular/core';\r\nimport { AvlDialogComponent } from './avl-dialog.component';\r\n\r\n@Directive()\r\nexport abstract class AvlBaseDialogSection implements OnInit {\r\n\r\n  constructor(protected dialog: AvlDialogComponent) { }\r\n\r\n  @HostBinding('class.complex')\r\n  isComplex: boolean = false;\r\n\r\n  /** @hidden */\r\n  closeDialog() {\r\n    this.dialog.closeDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isComplex = this.dialog.complex;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-header',\r\n  templateUrl: './avl-dialog-header.component.html',\r\n  styleUrls: ['./avl-dialog-header.component.css']\r\n})\r\nexport class AvlDialogHeaderComponent extends AvlBaseDialogSection implements AfterViewInit {\r\n  @HostBinding('class.extended')\r\n  extended = false;\r\n\r\n  @ViewChild('extendedSlot')\r\n  private extendedSlot: ElementRef<HTMLSlotElement>;\r\n\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => this.extended = !!this.extendedSlot.nativeElement.childElementCount);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-footer',\r\n  templateUrl: './avl-dialog-footer.component.html',\r\n  styleUrls: ['./avl-dialog-footer.component.css']\r\n})\r\nexport class AvlDialogFooterComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AvlDialogComponent } from '../avl-dialog.component';\r\nimport { AvlBaseDialogSection } from '../avl-dialog-section.base';\r\n\r\n@Component({\r\n  selector: 'avl-dialog-content',\r\n  templateUrl: './avl-dialog-content.component.html',\r\n  styleUrls: ['./avl-dialog-content.component.css']\r\n})\r\nexport class AvlDialogContentComponent extends AvlBaseDialogSection {\r\n  constructor(protected dialog: AvlDialogComponent) {\r\n    super(dialog);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'avl-about-dialog',\r\n  templateUrl: './avl-about-dialog.component.html',\r\n  styleUrls: [\r\n    './avl-about-dialog.component.css'\r\n  ],\r\n\r\n})\r\nexport class AvlAboutDialogComponent {\r\n\r\n  @Input() productLogo: string;\r\n  @Input() productName: string;\r\n  @Input() brandPromise: string;\r\n  @Input() versionInfo: VersionInfo[];\r\n  @Input() legalText: string;\r\n  @Input() additionalInfoLabel: string;\r\n  @Input() additionalInfoUrl: string;\r\n  @Input() copyright: string;\r\n  @Input() okButtonLabel = 'OK';\r\n\r\n  private _open = false;\r\n  @Input()\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    this.openChange.emit(this._open);\r\n  }\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   *\r\n   * ### Styling\r\n   * The following custom properties are available for styling:\r\n   *\r\n   * Custom property                                      | Description                             | Default\r\n   * :----------------------------------------------------|:----------------------------------------|:----------------------\r\n   * `--avl-about-dialog-foreground-color`                | Main foreground color                   | `--avl-corporate-foreground-color`\r\n   * `--avl-about-dialog-foreground-medium-color`         | Forground color for version information | `--avl-corporate-foreground-medium-color`\r\n   * `--avl-about-dialog-link-color`                      | Link color                              | `--avl-corporate-link-color`\r\n   * `--avl-about-dialog-link-hover-color`                | Link hover color                        | `--avl-corporate-link-hover-color`\r\n   * `--avl-about-dialog-on-button-background-color`      | Button text color                       | `--avl-corporate-on-button-background-color`\r\n   * `--avl-about-dialog-button-background-color`         | Button background color                 | `--avl-corporate-button-background-color`\r\n   * `--avl-about-dialog-button-background-hover-color`   | Button hover color                      | `--avl-corporate-button-background-hover-color`\r\n   * `--avl-about-dialog-button-background-focus-color`   | Button focus color                      | `--avl-corporate-button-background-focus-color`\r\n   * `--avl-about-dialog-button-background-pressed-color` | Button pressed color                    | `--avl-corporate-button-background-pressed-color` *\r\n   */\r\n  _styling: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  closeDialog() {\r\n    this.open = false;\r\n  }\r\n\r\n  /** @hidden */\r\n  openChanged(value: boolean) {\r\n    this.open = value;\r\n  }\r\n}\r\n\r\nexport interface VersionInfo {\r\n  label: string;\r\n  value: string;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule} from '@angular/cdk/a11y';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n// components\r\nimport { AvlDialogComponent } from './avl-dialog/avl-dialog.component';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogHeaderComponent } from './avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nimport { AvlDialogFooterComponent } from './avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nimport { AvlDialogContentComponent } from './avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\nimport { AvlAboutDialogComponent } from './avl-about-dialog/avl-about-dialog.component';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlDialogComponent,\r\n  AvlDialogHeaderComponent,\r\n  AvlDialogFooterComponent,\r\n  AvlDialogContentComponent,\r\n  AvlAboutDialogComponent,\r\n];\r\n\r\nconst providers = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AvlNgBindersModule,\r\n    A11yModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: componentsAndDirectives,\r\n  providers: providers,\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: componentsAndDirectives\r\n})\r\nexport class AvlDialogModule { }\r\n","/**\r\n * Can't put .ts file as index in package.json.\r\n * Hello, this is proxy.\r\n */\r\nexport { AvlDialogModule } from './lib/dialog.module';\r\nexport { AvlDialogComponent } from './lib/avl-dialog/avl-dialog.component';\r\nexport {\r\n  AvlAboutDialogComponent,\r\n  VersionInfo,\r\n} from './lib/avl-about-dialog/avl-about-dialog.component';\r\nexport { AvlDialogHeaderComponent } from './lib/avl-dialog/avl-dialog-header/avl-dialog-header.component';\r\nexport { AvlDialogFooterComponent } from './lib/avl-dialog/avl-dialog-footer/avl-dialog-footer.component';\r\nexport { AvlDialogContentComponent } from './lib/avl-dialog/avl-dialog-content/avl-dialog-content.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AvlBaseDialogSection as ɵa} from './lib/avl-dialog/avl-dialog-section.base';"]}