import { AfterViewChecked, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import '@avl-controls/core/dist/avl-snackbar/avl-snackbar';
import { AvlNotification } from '@avl-controls/interfaces';
import { SnackbarStack } from './snackbar-stack';
import * as ɵngcc0 from '@angular/core';
export declare class AvlNotificationContainerComponent implements OnInit, OnDestroy, AfterViewChecked {
    readonly cdRef: ChangeDetectorRef;
    /** @hidden */
    positionTop: string;
    /** @hidden */
    warningStackElement: ElementRef;
    /** @hidden */
    infoStackElement: ElementRef;
    /** @hidden */
    infoStackIndicatorElement: ElementRef;
    /** @hidden */
    warningStackIndicatorElement: ElementRef;
    /** If set optional icon (for info and OK notifications) is displayed, hidden otherwise. */
    displayIcon: boolean;
    /** Observable emits notifications. Default observable emits dummy notifications every 3s for 100s. */
    notification$: Observable<AvlNotification>;
    openMenu: EventEmitter<void>;
    /** @hidden */
    warningStack: SnackbarStack;
    /** @hidden */
    infoStack: SnackbarStack;
    /** @hidden */
    previousNotification: AvlNotification;
    /** @hidden */
    stackHeight: {
        [key: string]: number;
    };
    /** @hidden */
    reopen: boolean;
    /** @hidden */
    notificationList: AvlNotification[];
    private activeNotification;
    private destroyed$;
    constructor(cdRef: ChangeDetectorRef);
    ngOnDestroy(): void;
    ngAfterViewChecked(): void;
    /** @hidden */
    ngOnInit(): void;
    /** @hidden */
    onButtonClicked: (event: any) => void;
    /** @hidden */
    onNotificationDismissed: (event: any, notification: AvlNotification) => void;
    /** @hidden */
    openFromStack: (notification: AvlNotification) => void;
    /** @hidden */
    dismissAll: () => void;
    private handleNotification;
    private updateStackActiveNotification;
    private updateStackNotificationList;
    private silentlyDismissNotification;
    private setStackAnimation;
    private removeNotification;
    private reopenLastNotification;
    private isLastNotificationDismissed;
    private getStack;
    private getStackName;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AvlNotificationContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AvlNotificationContainerComponent, "avl-notification-container", never, { "notification$": "notification$"; "displayIcon": "display-icon"; }, { "openMenu": "openMenu"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImF2bC1ub3RpZmljYXRpb24tY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdDaGVja2VkLCBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCAnQGF2bC1jb250cm9scy9jb3JlL2Rpc3QvYXZsLXNuYWNrYmFyL2F2bC1zbmFja2Jhcic7XHJcbmltcG9ydCB7IEF2bE5vdGlmaWNhdGlvbiB9IGZyb20gJ0BhdmwtY29udHJvbHMvaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IFNuYWNrYmFyU3RhY2sgfSBmcm9tICcuL3NuYWNrYmFyLXN0YWNrJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXZsTm90aWZpY2F0aW9uQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIEFmdGVyVmlld0NoZWNrZWQge1xyXG4gICAgcmVhZG9ubHkgY2RSZWY6IENoYW5nZURldGVjdG9yUmVmO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIHBvc2l0aW9uVG9wOiBzdHJpbmc7XHJcbiAgICAvKiogQGhpZGRlbiAqL1xyXG4gICAgd2FybmluZ1N0YWNrRWxlbWVudDogRWxlbWVudFJlZjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBpbmZvU3RhY2tFbGVtZW50OiBFbGVtZW50UmVmO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIGluZm9TdGFja0luZGljYXRvckVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICAvKiogQGhpZGRlbiAqL1xyXG4gICAgd2FybmluZ1N0YWNrSW5kaWNhdG9yRWxlbWVudDogRWxlbWVudFJlZjtcclxuICAgIC8qKiBJZiBzZXQgb3B0aW9uYWwgaWNvbiAoZm9yIGluZm8gYW5kIE9LIG5vdGlmaWNhdGlvbnMpIGlzIGRpc3BsYXllZCwgaGlkZGVuIG90aGVyd2lzZS4gKi9cclxuICAgIGRpc3BsYXlJY29uOiBib29sZWFuO1xyXG4gICAgLyoqIE9ic2VydmFibGUgZW1pdHMgbm90aWZpY2F0aW9ucy4gRGVmYXVsdCBvYnNlcnZhYmxlIGVtaXRzIGR1bW15IG5vdGlmaWNhdGlvbnMgZXZlcnkgM3MgZm9yIDEwMHMuICovXHJcbiAgICBub3RpZmljYXRpb24kOiBPYnNlcnZhYmxlPEF2bE5vdGlmaWNhdGlvbj47XHJcbiAgICBvcGVuTWVudTogRXZlbnRFbWl0dGVyPHZvaWQ+O1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIHdhcm5pbmdTdGFjazogU25hY2tiYXJTdGFjaztcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBpbmZvU3RhY2s6IFNuYWNrYmFyU3RhY2s7XHJcbiAgICAvKiogQGhpZGRlbiAqL1xyXG4gICAgcHJldmlvdXNOb3RpZmljYXRpb246IEF2bE5vdGlmaWNhdGlvbjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBzdGFja0hlaWdodDoge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IG51bWJlcjtcclxuICAgIH07XHJcbiAgICAvKiogQGhpZGRlbiAqL1xyXG4gICAgcmVvcGVuOiBib29sZWFuO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIG5vdGlmaWNhdGlvbkxpc3Q6IEF2bE5vdGlmaWNhdGlvbltdO1xyXG4gICAgcHJpdmF0ZSBhY3RpdmVOb3RpZmljYXRpb247XHJcbiAgICBwcml2YXRlIGRlc3Ryb3llZCQ7XHJcbiAgICBjb25zdHJ1Y3RvcihjZFJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICAvKiogQGhpZGRlbiAqL1xyXG4gICAgb25CdXR0b25DbGlja2VkOiAoZXZlbnQ6IGFueSkgPT4gdm9pZDtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBvbk5vdGlmaWNhdGlvbkRpc21pc3NlZDogKGV2ZW50OiBhbnksIG5vdGlmaWNhdGlvbjogQXZsTm90aWZpY2F0aW9uKSA9PiB2b2lkO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIG9wZW5Gcm9tU3RhY2s6IChub3RpZmljYXRpb246IEF2bE5vdGlmaWNhdGlvbikgPT4gdm9pZDtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBkaXNtaXNzQWxsOiAoKSA9PiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVOb3RpZmljYXRpb247XHJcbiAgICBwcml2YXRlIHVwZGF0ZVN0YWNrQWN0aXZlTm90aWZpY2F0aW9uO1xyXG4gICAgcHJpdmF0ZSB1cGRhdGVTdGFja05vdGlmaWNhdGlvbkxpc3Q7XHJcbiAgICBwcml2YXRlIHNpbGVudGx5RGlzbWlzc05vdGlmaWNhdGlvbjtcclxuICAgIHByaXZhdGUgc2V0U3RhY2tBbmltYXRpb247XHJcbiAgICBwcml2YXRlIHJlbW92ZU5vdGlmaWNhdGlvbjtcclxuICAgIHByaXZhdGUgcmVvcGVuTGFzdE5vdGlmaWNhdGlvbjtcclxuICAgIHByaXZhdGUgaXNMYXN0Tm90aWZpY2F0aW9uRGlzbWlzc2VkO1xyXG4gICAgcHJpdmF0ZSBnZXRTdGFjaztcclxuICAgIHByaXZhdGUgZ2V0U3RhY2tOYW1lO1xyXG59XHJcbiJdfQ==