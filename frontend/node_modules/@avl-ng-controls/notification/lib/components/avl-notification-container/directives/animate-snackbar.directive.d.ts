import { ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { AvlNotification } from '@avl-controls/interfaces';
import { PositionAnimation } from './animate-stack.directive';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare class AnimateSnackbar implements OnChanges {
    readonly builder: AnimationBuilder;
    /** @hidden */
    readonly animateSnackbar: PositionAnimation;
    /** @hidden */
    readonly positionAnimation: PositionAnimation;
    /** @hidden */
    readonly notification: AvlNotification;
    /** @hidden */
    readonly reopen: boolean;
    /** @hidden */
    inStack: boolean;
    /** @hidden */
    noAnimation: boolean;
    /** @hidden */
    defaultClass: boolean;
    private element;
    private player;
    constructor(builder: AnimationBuilder, el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    private show;
    private move;
    private animate;
    private getAnimation;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AnimateSnackbar, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AnimateSnackbar, "[animateSnackbar]", never, { "animateSnackbar": "animateSnackbar"; "positionAnimation": "positionAnimation"; "notification": "notification"; "reopen": "reopen"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0ZS1zbmFja2Jhci5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiYW5pbWF0ZS1zbmFja2Jhci5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQW5pbWF0aW9uQnVpbGRlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xyXG5pbXBvcnQgeyBBdmxOb3RpZmljYXRpb24gfSBmcm9tICdAYXZsLWNvbnRyb2xzL2ludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBQb3NpdGlvbkFuaW1hdGlvbiB9IGZyb20gJy4vYW5pbWF0ZS1zdGFjay5kaXJlY3RpdmUnO1xyXG4vKiogQGhpZGRlbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbmltYXRlU25hY2tiYXIgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gICAgcmVhZG9ubHkgYnVpbGRlcjogQW5pbWF0aW9uQnVpbGRlcjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICByZWFkb25seSBhbmltYXRlU25hY2tiYXI6IFBvc2l0aW9uQW5pbWF0aW9uO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIHJlYWRvbmx5IHBvc2l0aW9uQW5pbWF0aW9uOiBQb3NpdGlvbkFuaW1hdGlvbjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICByZWFkb25seSBub3RpZmljYXRpb246IEF2bE5vdGlmaWNhdGlvbjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICByZWFkb25seSByZW9wZW46IGJvb2xlYW47XHJcbiAgICAvKiogQGhpZGRlbiAqL1xyXG4gICAgaW5TdGFjazogYm9vbGVhbjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBub0FuaW1hdGlvbjogYm9vbGVhbjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICBkZWZhdWx0Q2xhc3M6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIGVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIHBsYXllcjtcclxuICAgIGNvbnN0cnVjdG9yKGJ1aWxkZXI6IEFuaW1hdGlvbkJ1aWxkZXIsIGVsOiBFbGVtZW50UmVmKTtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBzaG93O1xyXG4gICAgcHJpdmF0ZSBtb3ZlO1xyXG4gICAgcHJpdmF0ZSBhbmltYXRlO1xyXG4gICAgcHJpdmF0ZSBnZXRBbmltYXRpb247XHJcbn1cclxuIl19