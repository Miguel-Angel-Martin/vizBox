import { ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { AvlNotification } from '@avl-interfaces/interfaces';
import { SnackbarMethodDescription } from './show-hide-snackbar.directive';
import * as i0 from "@angular/core";
/** @hidden */
export declare const enum PositionAnimation {
    ToLowerStack = 0,
    ToTop = 1,
    ToBottom = 2,
    ToStack = 3,
    FromStack = 4
}
export declare class AnimateStack implements OnChanges {
    readonly builder: AnimationBuilder;
    /** @hidden */
    readonly animateStack: PositionAnimation;
    /** @hidden */
    readonly notification: AvlNotification;
    /** @hidden */
    readonly previousStackHeight: number;
    /** @hidden */
    readonly snackbarMethodDescription: SnackbarMethodDescription;
    /** @hidden */
    readonly reopen: boolean;
    private styleTop;
    private element;
    private player;
    constructor(builder: AnimationBuilder, el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    private show;
    private move;
    private animate;
    private getAnimation;
    static ɵfac: i0.ɵɵFactoryDeclaration<AnimateStack, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AnimateStack, "[animateStack]", never, { "animateStack": "animateStack"; "notification": "notification"; "previousStackHeight": "previousStackHeight"; "snackbarMethodDescription": "snackbarMethodDescription"; "reopen": "reopen"; }, {}, never>;
}
