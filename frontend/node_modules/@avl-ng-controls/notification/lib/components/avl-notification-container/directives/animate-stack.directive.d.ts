import { ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { AvlNotification } from '@avl-controls/interfaces';
import { SnackbarMethodDescription } from './show-hide-snackbar.directive';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare const enum PositionAnimation {
    ToLowerStack = 0,
    ToTop = 1,
    ToBottom = 2,
    ToStack = 3,
    FromStack = 4
}
export declare class AnimateStack implements OnChanges {
    readonly builder: AnimationBuilder;
    /** @hidden */
    readonly animateStack: PositionAnimation;
    /** @hidden */
    readonly notification: AvlNotification;
    /** @hidden */
    readonly previousStackHeight: number;
    /** @hidden */
    readonly snackbarMethodDescription: SnackbarMethodDescription;
    /** @hidden */
    readonly reopen: boolean;
    private styleTop;
    private element;
    private player;
    constructor(builder: AnimationBuilder, el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    private show;
    private move;
    private animate;
    private getAnimation;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AnimateStack, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AnimateStack, "[animateStack]", never, { "animateStack": "animateStack"; "notification": "notification"; "previousStackHeight": "previousStackHeight"; "snackbarMethodDescription": "snackbarMethodDescription"; "reopen": "reopen"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0ZS1zdGFjay5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiYW5pbWF0ZS1zdGFjay5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBbmltYXRpb25CdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XHJcbmltcG9ydCB7IEF2bE5vdGlmaWNhdGlvbiB9IGZyb20gJ0BhdmwtY29udHJvbHMvaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IFNuYWNrYmFyTWV0aG9kRGVzY3JpcHRpb24gfSBmcm9tICcuL3Nob3ctaGlkZS1zbmFja2Jhci5kaXJlY3RpdmUnO1xyXG4vKiogQGhpZGRlbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBlbnVtIFBvc2l0aW9uQW5pbWF0aW9uIHtcclxuICAgIFRvTG93ZXJTdGFjayA9IDAsXHJcbiAgICBUb1RvcCA9IDEsXHJcbiAgICBUb0JvdHRvbSA9IDIsXHJcbiAgICBUb1N0YWNrID0gMyxcclxuICAgIEZyb21TdGFjayA9IDRcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbmltYXRlU3RhY2sgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gICAgcmVhZG9ubHkgYnVpbGRlcjogQW5pbWF0aW9uQnVpbGRlcjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICByZWFkb25seSBhbmltYXRlU3RhY2s6IFBvc2l0aW9uQW5pbWF0aW9uO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIHJlYWRvbmx5IG5vdGlmaWNhdGlvbjogQXZsTm90aWZpY2F0aW9uO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIHJlYWRvbmx5IHByZXZpb3VzU3RhY2tIZWlnaHQ6IG51bWJlcjtcclxuICAgIC8qKiBAaGlkZGVuICovXHJcbiAgICByZWFkb25seSBzbmFja2Jhck1ldGhvZERlc2NyaXB0aW9uOiBTbmFja2Jhck1ldGhvZERlc2NyaXB0aW9uO1xyXG4gICAgLyoqIEBoaWRkZW4gKi9cclxuICAgIHJlYWRvbmx5IHJlb3BlbjogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgc3R5bGVUb3A7XHJcbiAgICBwcml2YXRlIGVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIHBsYXllcjtcclxuICAgIGNvbnN0cnVjdG9yKGJ1aWxkZXI6IEFuaW1hdGlvbkJ1aWxkZXIsIGVsOiBFbGVtZW50UmVmKTtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBzaG93O1xyXG4gICAgcHJpdmF0ZSBtb3ZlO1xyXG4gICAgcHJpdmF0ZSBhbmltYXRlO1xyXG4gICAgcHJpdmF0ZSBnZXRBbmltYXRpb247XHJcbn1cclxuIl19