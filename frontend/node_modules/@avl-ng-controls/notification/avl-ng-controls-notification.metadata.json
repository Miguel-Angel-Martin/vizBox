{"__symbolic":"module","version":4,"metadata":{"AvlNotificationModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":28,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"AvlNotificationMenuComponent"},{"__symbolic":"reference","name":"AvlNotificationContainerComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"AvlNotificationDialogComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":30,"character":12},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":30,"character":26},{"__symbolic":"reference","module":"@avl-controls/ng-binders","name":"AvlNgBindersModule","line":30,"character":43},{"__symbolic":"reference","module":"@avl-ng-controls/dialog","name":"AvlDialogModule","line":30,"character":63},{"__symbolic":"reference","module":"@avl-ng-controls/navigation","name":"AvlNavigationModule","line":30,"character":80},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":30,"character":101}],"schemas":[{"__symbolic":"reference","module":"@angular/core","name":"CUSTOM_ELEMENTS_SCHEMA","line":31,"character":12}],"exports":[{"__symbolic":"reference","name":"AvlNotificationMenuComponent"},{"__symbolic":"reference","name":"AvlNotificationContainerComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"AvlNotificationDialogComponent"}]}]}],"members":{}},"AvlNotificationMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"avl-notification-menu","template":"<avl-popup\r\n  [noCloseOnInsideClick]=\"true\"\r\n  [open]=\"open\"\r\n  [trigger]=\"trigger\"\r\n  (open-changed)=\"onOpenChanged($event)\"\r\n>\r\n  <div id=\"header\">\r\n    <div id=\"headerText\">\r\n      <span>{{ 'VizBox.NotificationMenu.Notifications' | translate }}</span>\r\n      <span *ngIf=\"numberOfUnreadNotifications\"> ({{ numberOfUnreadNotifications }}) </span>\r\n    </div>\r\n    <avl-overflow-menu (itemClicked)=\"onItemClicked($event)\" [items]=\"overflowMenuItems\">\r\n      <avl-icon-button\r\n        icon=\"more-vert\"\r\n        slot=\"trigger\"\r\n        (click)=\"onOverflowMenuClicked()\"\r\n      ></avl-icon-button>\r\n    </avl-overflow-menu>\r\n  </div>\r\n  <avl-list\r\n    #list\r\n    [rows]=\"notificationList\"\r\n    (row-changed)=\"onNotificationStateChanged($event)\"\r\n  ></avl-list>\r\n  <div id=\"footer\">\r\n    <avl-button (click)=\"onDetailsClicked()\">{{ 'VizBox.NotificationMenu.Details' | translate }}</avl-button>\r\n  </div>\r\n</avl-popup>\r\n","styles":["avl-popup{width:40%}avl-list{width:100%;height:250px;padding-top:8px;--avl-item-padding-left:16px;--avl-item-padding-right:16px;--notification-item-height:48px}#header{display:flex;align-items:center;justify-content:space-between;box-sizing:border-box;height:56px;padding:0 16px;border-bottom:1px solid var(--avl-overflow-menu-divider-color,var(--avl-divider-color))}#footer{display:flex;align-items:center;box-sizing:border-box;height:56px;border-top:1px solid var(--avl-overflow-menu-divider-color,var(--avl-divider-color))}#headerText{font-size:20px;color:var(--avl-primary-text-color);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}"]}]}],"members":{"open":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"trigger":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"notifications":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"openChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"openDetails":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":33,"character":3}}]}],"notificationStateChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":3}}]}],"markAllAsRead":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":35,"character":3}}]}],"markAllAsUnread":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":3}}]}],"list":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":38,"character":3},"arguments":["list"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onNotificationStateChanged":[{"__symbolic":"method"}],"onItemClicked":[{"__symbolic":"method"}],"onOpenChanged":[{"__symbolic":"method"}],"onOverflowMenuClicked":[{"__symbolic":"method"}],"onDetailsClicked":[{"__symbolic":"method"}],"prepareNotifications":[{"__symbolic":"method"}],"formatDateTime":[{"__symbolic":"method"}],"translateLabels":[{"__symbolic":"method"}],"translateMenu":[{"__symbolic":"method"}],"translateMenuGroup":[{"__symbolic":"method"}],"translateMenuItem":[{"__symbolic":"method"}]}},"AvlNotificationMenuItem":{"__symbolic":"interface"},"AvlNotificationDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"avl-notification-dialog","template":"<avl-dialog\r\n  id=\"outerDialog\"\r\n  [open]=\"open\"\r\n  (openChange)=\"openChanged($event)\"\r\n  [closeOnScrimClick]=\"false\"\r\n  [fullscreen]=\"true\"\r\n>\r\n  <ng-template #content>\r\n    <avl-dialog-header>{{ 'VizBox.NotificationDialog.Details' | translate }}</avl-dialog-header>\r\n    <avl-dialog-content>\r\n      <div class=\"main-container\">\r\n        <div class=\"content\">\r\n          <div class=\"table-header\">\r\n            <h1>\r\n              {{ 'VizBox.NotificationDialog.Notifications' | translate }} ({{\r\n                getNumberOfNotifications()\r\n              }})\r\n            </h1>\r\n            <div class=\"table-header-right\">\r\n              <avl-icon-button\r\n                *ngIf=\"showRefreshButton\"\r\n                id=\"updateIcon\"\r\n                (click)=\"refreshTable()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:refresh\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip *ngIf=\"showRefreshButton\" for=\"updateIcon\"\r\n                > {{ 'VizBox.NotificationDialog.Refresh' | translate }}</avl-tooltip\r\n              >\r\n              <avl-icon-button\r\n                id=\"unreadIcon\"\r\n                (click)=\"markAsUnread()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:mail\"\r\n                [disabled]=\"disableMarkingSelected\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip for=\"unreadIcon\">{{\r\n                'VizBox.NotificationDialog.MarkSelectedAsUnread' | translate\r\n              }}</avl-tooltip>\r\n              <avl-icon-button\r\n                id=\"readIcon\"\r\n                class=\"pointer\"\r\n                (click)=\"markAsRead()\"\r\n                icon=\"communication:mail-outline\"\r\n                [disabled]=\"disableMarkingSelected\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip for=\"readIcon\">{{\r\n                'VizBox.NotificationDialog.MarkSelectedAsRead' | translate\r\n              }}</avl-tooltip>\r\n              <avl-icon-button\r\n                (click)=\"toggleFilters()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:filter-list\"\r\n                [badge]=\"badge\"\r\n              ></avl-icon-button>\r\n            </div>\r\n          </div>\r\n          <avl-datatable\r\n            #notificationTable\r\n            class=\"filterDatatable\"\r\n            multi-select\r\n            allow-active-row\r\n            pagination\r\n            [columnDefinitions]=\"columnDefinitions\"\r\n            [data]=\"filteredData\"\r\n            [pageSize]=\"pageSize\"\r\n            [pageSizeOptions]=\"pageSizeOptions\"\r\n            [(selectedValues)]=\"selectedRows\"\r\n            (selectedValuesChange)=\"selectedValuesChanged()\"\r\n            (on-row-clicked)=\"onRowClicked($event)\"\r\n          >\r\n          </avl-datatable>\r\n        </div>\r\n        <avl-side-sheet class=\"filter-sheet\" divider [(open)]=\"filtersOpen\" #filterSheet>\r\n          <div slot=\"title\">\r\n            <h2>{{ 'VizBox.NotificationDialog.Filters' | translate }}</h2>\r\n          </div>\r\n          <div slot=\"content\">\r\n            <form #filterForm=\"ngForm\">\r\n              <avl-list-expander [narrow]=\"true\">\r\n                <div role=\"header\">\r\n                  <h3>{{ 'VizBox.NotificationDialog.Type' | translate }}</h3>\r\n                </div>\r\n                <div role=\"content\" class=\"filterContent\">\r\n                  <div>\r\n                    <avl-checkbox name=\"warningSwitch\" [(ngModel)]=\"filters.type.warning\">\r\n                      {{ 'VizBox.NotificationDialog.Warning' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'warning') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"warningIcon\" class=\"typeIcons\" icon=\"icons:warning\"></avl-icon>\r\n                  </div>\r\n                  <div>\r\n                    <avl-checkbox name=\"errorSwitch\" [(ngModel)]=\"filters.type.error\">\r\n                      {{ 'VizBox.NotificationDialog.Error' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'error') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"errorIcon\" class=\"typeIcons\" icon=\"icons:cancel\"></avl-icon>\r\n                  </div>\r\n                  <div>\r\n                    <avl-checkbox name=\"infoSwitch\" [(ngModel)]=\"filters.type.info\">\r\n                      {{ 'VizBox.NotificationDialog.Info' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'info') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"infoIcon\" class=\"typeIcons\" icon=\"icons:info-outline\"></avl-icon>\r\n                  </div>\r\n                  <div>\r\n                    <avl-checkbox name=\"okSwitch\" [(ngModel)]=\"filters.type.ok\">\r\n                      {{ 'VizBox.NotificationDialog.Ok' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'ok') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"okIcon\" class=\"typeIcons\" icon=\"icons:check\"></avl-icon>\r\n                  </div>\r\n                </div>\r\n              </avl-list-expander>\r\n              <avl-list-expander [narrow]=\"true\">\r\n                <div role=\"header\">\r\n                  <h3>{{ 'VizBox.NotificationDialog.State' | translate }}</h3>\r\n                </div>\r\n                <div role=\"content\" class=\"filterContent\">\r\n                  <avl-checkbox name=\"unreadState\" [(ngModel)]=\"filters.state.unread\">\r\n                    {{ 'VizBox.NotificationDialog.Unread' | translate }} ({{\r\n                      getNumberOfUnreadNotifications(tableData)\r\n                    }})\r\n                  </avl-checkbox>\r\n                  <avl-icon id=\"infoIcon\" class=\"typeIcons\" icon=\"icons:mail\"></avl-icon>\r\n                  <avl-checkbox name=\"readState\" [(ngModel)]=\"filters.state.read\">\r\n                    {{ 'VizBox.NotificationDialog.Read' | translate }} ({{\r\n                      tableData.length - getNumberOfUnreadNotifications(tableData)\r\n                    }})\r\n                  </avl-checkbox>\r\n                  <avl-icon\r\n                    id=\"infoIcon\"\r\n                    class=\"typeIcons\"\r\n                    icon=\"communication:mail-outline\"\r\n                  ></avl-icon>\r\n                </div>\r\n              </avl-list-expander>\r\n              <avl-list-expander [narrow]=\"true\">\r\n                <div role=\"header\">\r\n                  <h3 id=\"date-group\" #dateGroup>\r\n                    {{ dateFilterGroupHeader }}\r\n                  </h3>\r\n                  <avl-tooltip for=\"date-group\" *ngIf=\"dateGroup.scrollWidth > dateGroup.clientWidth\">\r\n                    {{ dateFilterGroupHeader }}\r\n                  </avl-tooltip>\r\n                </div>\r\n                <div role=\"content\">\r\n                  <avl-date\r\n                    class=\"date-control\"\r\n                    [(ngModel)]=\"filters.date.dateFromValue\"\r\n                    name=\"dateFromValue\"\r\n                    (valueChange)=\"updateLabels()\"\r\n                    [label]=\"dateFromLabel\"\r\n                  ></avl-date>\r\n                  <avl-date\r\n                    class=\"date-control\"\r\n                    [(ngModel)]=\"filters.date.dateToValue\"\r\n                    name=\"dateTo\"\r\n                    (valueChange)=\"updateLabels()\"\r\n                    [label]=\"dateToLabel\"\r\n                  ></avl-date>\r\n                </div>\r\n              </avl-list-expander>\r\n            </form>\r\n          </div>\r\n          <div slot=\"actions\">\r\n            <avl-button contained (click)=\"applyFilters()\">{{\r\n              'VizBox.NotificationDialog.Apply' | translate\r\n            }}</avl-button>\r\n            <avl-button (click)=\"reset()\">{{\r\n              'VizBox.NotificationDialog.Reset' | translate\r\n            }}</avl-button>\r\n          </div>\r\n        </avl-side-sheet>\r\n      </div>\r\n    </avl-dialog-content>\r\n  </ng-template>\r\n</avl-dialog>\r\n","styles":[".content{position:relative;display:flex;flex-direction:column;flex-grow:1}.table-header{display:flex;justify-content:space-between;align-items:center}.main-container{display:flex;height:100%}.main-container.hidden{display:none}.filterDatatable{height:100%}.filter-sheet{--avl-side-sheet-padding:0px;--avl-side-sheet-height:84vh;width:300px}.filter-sheet h2{font-size:20px;margin-left:24px}.filter-sheet h3{font-size:16px;margin:0;text-overflow:ellipsis;overflow:hidden}.pointer{cursor:pointer}#errorIcon{--avl-icon-custom-color:var(--avl-error-color)}#warningIcon{--avl-icon-custom-color:var(--avl-warning-color)}#okIcon{--avl-icon-custom-color:var(--avl-ok-color)}#infoIcon{--avl-icon-custom-color:var(--avl-icon-default-color)}.filterContent{position:relative}.typeIcons{position:absolute;right:0;margin-top:12px;margin-bottom:12px}.date-control{width:100%}avl-dialog-content{--padding-top:1px!important;--padding-right:0px!important;--padding-bottom:2px!important}avl-dialog-header{z-index:1}avl-side-sheet{--avl-side-sheet-height:unset!important;box-shadow:none;border-left:1px solid var(--avl-divider-color)}avl-datatable{--margin-top-pages:0px!important}"]}]}],"members":{"open":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"pageSizeOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"columnDefinitions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"notifications":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":3}}]}],"openChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":61,"character":3}}]}],"markSelectedAsRead":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":62,"character":3}}]}],"markSelectedAsUnread":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":63,"character":3}}]}],"table":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":65,"character":3},"arguments":["notificationTable"]}]}],"filterForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":66,"character":3},"arguments":["filterForm",{"read":{"__symbolic":"reference","module":"@angular/forms","name":"NgForm","line":66,"character":35}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":89,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"openChanged":[{"__symbolic":"method"}],"toggleFilters":[{"__symbolic":"method"}],"refreshTable":[{"__symbolic":"method"}],"applyFilters":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"markAsRead":[{"__symbolic":"method"}],"markAsUnread":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"getActiveFilters":[{"__symbolic":"method"}],"selectedValuesChanged":[{"__symbolic":"method"}],"updateLabels":[{"__symbolic":"method"}],"getNumberOfNotificationsWithType":[{"__symbolic":"method"}],"getNumberOfUnreadNotifications":[{"__symbolic":"method"}],"getNumberOfNotifications":[{"__symbolic":"method"}],"onRowClicked":[{"__symbolic":"method"}],"prepareNotifications":[{"__symbolic":"method"}],"formatDateTime":[{"__symbolic":"method"}],"deepCopyObject":[{"__symbolic":"method"}],"doesElementPassEveryFilter":[{"__symbolic":"method"}],"prepareDates":[{"__symbolic":"method"}],"compareDates":[{"__symbolic":"method"}],"updateStateOfSelectedRowsTo":[{"__symbolic":"method"}],"isRowSelected":[{"__symbolic":"method"}],"translateLabels":[{"__symbolic":"method"}],"translatePageSizeOptions":[{"__symbolic":"method"}],"translatePageSizeOption":[{"__symbolic":"method"}],"translateColumns":[{"__symbolic":"method"}],"translateColumnItem":[{"__symbolic":"method"}]}},"AvlNotificationContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":29,"character":1},"arguments":[{"selector":"avl-notification-container","template":"<div class=\"snackbar\" *ngIf=\"notification$ | async as notification\">\r\n  <div\r\n    [animateStack]=\"warningStack?.stackAnimation\"\r\n    [previousStackHeight] = \"infoStack.notificationList.length>0 ? infoSnackElement.offsetHeight : 0\"\r\n    [snackbarMethodDescription] = \"warningStack.methodDescription\"\r\n    class=\"snackbar-stack\"\r\n    id=\"warningStack\"\r\n    #warningStackElement\r\n  >\r\n    <div [animateSnackbar]=\"warningStack.snackbarAnimation\" id=\"warningSnack\" #warningSnackElement>\r\n      <avl-snackbar\r\n        *ngIf=\"warningStack.activeNotification$ | async as activeWarningNotification\"\r\n        id=\"warningSnackbar\"\r\n        [message]=\"activeWarningNotification?.messageText\"\r\n        [actionButtonLabel]=\"warningStack.stackIndicatorButtonLabel\"\r\n        [link]=\"activeWarningNotification.link\"\r\n        [messageType]=\"activeWarningNotification.type\"\r\n        sliding\r\n        (buttonClicked)=\"onButtonClicked($event)\"\r\n        (notificationDismissed)=\"onNotificationDismissed($event, activeWarningNotification)\"\r\n        snackbarListener\r\n        #warningSnackbar\r\n        showHideSnackbar=\"warningSnackbar\"\r\n        [methodDescription]=\"warningStack.methodDescription\"\r\n      ></avl-snackbar>\r\n    </div>\r\n\r\n    <div class=\"stack-indicator-container\" *ngIf=\"warningStack.notificationList.length>1\" #warningStackIndicator>\r\n      <div class=\"stack-indicator\">\r\n        <div class=\"notification-container\">\r\n          <div [ngClass]=\"{'notification': true, 'has-action': warningStack.stackIndicatorButtonLabel}\">\r\n            <avl-icon icon=\"icons:warning\" id=\"warningIcon\" class=\"warning\"></avl-icon>\r\n            <p id=\"snackbarMessage\">{{ warningStack.previousNotification?.messageText }}</p>\r\n            <avl-icon-button id=\"closeButton\" icon=\"icons:close\"></avl-icon-button>\r\n          </div>\r\n          <button id=\"actionButton\" *ngIf=\"warningStack.stackIndicatorButtonLabel\" (click)=\"openFromStack(warningStack.previousNotification)\">\r\n            <div class=\"button-label\">{{ warningStack.stackIndicatorButtonLabel }}</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"snackbar-stack\"\r\n    id=\"infoStack\"\r\n    [animateStack]=\"infoStack?.stackAnimation\"\r\n    [previousStackHeight] = \"infoStack.notificationList.length>0 ? warningSnackElement.offsetHeight : 0\"\r\n    [snackbarMethodDescription] = \"infoStack.methodDescription\"\r\n    #infoStackElement\r\n  >\r\n    <div [animateSnackbar]=\"infoStack.snackbarAnimation\" id=\"infoSnack\" #infoSnackElement>\r\n      <avl-snackbar\r\n        id=\"infoSnackbar\"\r\n        *ngIf=\"infoStack.activeNotification$ | async as activeInfoNotification\"\r\n        [message]=\"activeInfoNotification.messageText\"\r\n        [actionButtonLabel]=\"infoStack.stackIndicatorButtonLabel\"\r\n        [link]=\"activeInfoNotification.link\"\r\n        [messageType]=\"activeInfoNotification.type\"\r\n        [displayIcon]=\"displayIcon\"\r\n        sliding\r\n        (buttonClicked)=\"onButtonClicked($event)\"\r\n        (notificationDismissed)=\"onNotificationDismissed($event, activeInfoNotification)\"\r\n        snackbarListener\r\n        #infoSnackbar\r\n        showHideSnackbar=\"infoSnackbar\"\r\n        [methodDescription]=\"infoStack.methodDescription\"\r\n      ></avl-snackbar>\r\n    </div>\r\n\r\n    <div class=\"stack-indicator-container\" *ngIf=\"infoStack.notificationList.length>1\" #infoStackIndicator>\r\n      <div class=\"stack-indicator\">\r\n        <div class=\"notification-container\">\r\n          <div [ngClass]=\"{'notification': true, 'has-action': infoStack.stackIndicatorButtonLabel}\">\r\n            <p id=\"snackbarMessage\">{{ infoStack.previousNotification?.messageText }}</p>\r\n            <avl-icon-button id=\"closeButton\" icon=\"icons:close\"></avl-icon-button>\r\n          </div>\r\n        </div>\r\n        <button id=\"actionButton\" *ngIf=\"infoStack.stackIndicatorButtonLabel\" (click)=\"openFromStack(infoStack.previousNotification)\">\r\n          <div class=\"button-label\">{{ infoStack.stackIndicatorButtonLabel }}</div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    animateButton\r\n    [infoStackHeight]=\"infoStack?.notificationList?.length > 0 ? infoSnackElement.offsetHeight : 0\"\r\n    [warningStackHeight]=\"warningStack?.notificationList?.length > 0 ? warningSnackElement.offsetHeight : 0\"\r\n    [infoStackIndicatorHeight]=\"infoStackIndicatorElement?.nativeElement?.offsetHeight\"\r\n    [warningStackIndicatorHeight]=\"warningStackIndicatorElement?.nativeElement?.offsetHeight\"\r\n    class=\"dismiss-all\"\r\n    *ngIf=\"notificationList?.length > 1\"\r\n  >\r\n    <avl-button id=\"dismissAll\" (click)=\"dismissAll()\">{{'VizBox.NotificationContainer.DismissAll' | translate}}</avl-button>\r\n  </div>\r\n</div>\r\n\r\n\r\n","styles":[":host{position:fixed;right:0;width:445px;display:flex;flex-direction:column;--avl-snackbar-text-color:var(--avl-on-background-info-color)}.snackbar{width:100%;display:flex;flex-direction:column}.snackbar.displayed{flex:1;max-height:100%}.snackbar-stack{position:absolute;top:0;left:0;right:0;width:100%}.stack-indicator-container{margin:0 12px;position:absolute;width:calc(100% - 12px);top:12px;z-index:-1}.snackbar-container{margin-top:0;margin-left:0;margin-right:0;width:100%}.button-label{text-align:left;text-transform:none}.stack-indicator{background-color:var(--avl-background-message-color);top:0;left:0;width:calc(100% - 24px);border-radius:4px;position:relative;height:100%;z-index:-1;box-shadow:0 3px 5px -1px rgb(0 0 0 / 20%),0 6px 10px 0 rgb(0 0 0 / 14%),0 1px 18px 0 rgb(0 0 0 / 12%)}.notification{display:flex;flex:1 1 100%;align-items:center;flex-direction:row;padding:0 12px 0 16px;justify-content:flex-start;cursor:pointer;text-overflow:ellipsis}.notification p{flex-grow:1;-webkit-line-clamp:3;max-height:48px;text-overflow:ellipsis;line-height:19px;font-size:14px;margin:0 0 0 12px;padding:12px 0;font-family:var(--avl-font-family);color:var(--avl-on-background-info-color)}button#actionButton{font-family:var(--avl-font-family);font-weight:500;font-size:14px;color:var(--avl-on-background-message-link-color);background-color:var(--avl-button-background-default-color);max-height:48px;height:48px;width:100%;cursor:pointer;padding:12px;margin:-12px 0 0;border-radius:2px;border:0;outline:0}div#actionButton:hover{color:var(--avl-on-background-message-link-hover-color)}#warningIcon{--avl-icon-custom-color:var(--avl-on-background-message-warning-color);flex:0 0 24px;--avl-icon-custom-color:var(--avl-warning-color)}#errorIcon{--avl-icon-custom-color:var(--avl-on-background-message-error-color);flex:0 0 24px}#infoIcon{--avl-icon-custom-color:var(--avl-on-background-message-emphasis-medium-color);flex:0 0 24px}#OKIcon{--avl-icon-custom-color:var(--avl-on-background-message-ok-color);flex:0 0 24px}.dismiss-all{position:absolute;padding:0 16px;border-radius:25px;background-color:var(--avl-background-message-color);width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;top:12px}#dismissAll{--avl-flat-button-label-color:var(--avl-on-background-message-link-color)}avl-icon-button{flex:0 0 48px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-on-background-message-icon-default-color);--avl-icon-ink-hover-color:var(--avl-on-background-message-icon-hover-color);--avl-icon-ink-focus-color:var(--avl-on-background-message-icon-focus-color);--avl-icon-ink-pressed-color:var(--avl-on-background-message-icon-pressed-color)}@media only screen and (min-width:320px) and (max-width:376px){:host{width:calc(100% - 32px)}}@media only screen and (min-width:460px){:host{width:445px}}@media only screen and (min-width:376px) and (max-width:400px){:host{width:376px}}"]}]}],"members":{"positionTop":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":36,"character":3},"arguments":["style.top"]}]}],"warningStackElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":39,"character":3},"arguments":["warningStackElement"]}]}],"infoStackElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":42,"character":3},"arguments":["infoStackElement"]}]}],"infoStackIndicatorElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":45,"character":3},"arguments":["infoStackIndicatorElement"]}]}],"warningStackIndicatorElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":48,"character":3},"arguments":["infoStackIndicatorElement"]}]}],"displayIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3},"arguments":["display-icon"]}]}],"notification$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":3},"arguments":["notification$"]}]}],"openMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":76,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":98,"character":30}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"getStack":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[snackbarListener]"}]}],"members":{"notificationClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":5,"character":3}}]}],"buttonClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":7,"character":3}}]}],"notificationDismissed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":9,"character":3}}]}],"onNotificationClicked":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":10,"character":3},"arguments":["notification-clicked",["$event"]]}]}],"onButtonClicked":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":13,"character":3},"arguments":["button-clicked",["$event"]]}]}],"onNotificationDismissed":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":18,"character":3},"arguments":["notification-dismissed",["$event"]]}]}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":20,"character":1},"arguments":[{"selector":"[animateStack]"}]}],"members":{"animateStack":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"notification":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"previousStackHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"snackbarMethodDescription":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"reopen":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/animations","name":"AnimationBuilder","line":41,"character":32},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":41,"character":54}]}],"ngOnChanges":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}],"animate":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":14,"character":1},"arguments":[{"selector":"[animateSnackbar]"}]}],"members":{"animateSnackbar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"positionAnimation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"notification":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3},"arguments":["notification"]}]}],"reopen":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3},"arguments":["reopen"]}]}],"inStack":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":29,"character":3},"arguments":["class.in-stack"]}]}],"noAnimation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":32,"character":3},"arguments":["class.no-animation"]}]}],"defaultClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":35,"character":3},"arguments":["class.snackbar-container"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/animations","name":"AnimationBuilder","line":40,"character":32},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":40,"character":54}]}],"ngOnChanges":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}],"animate":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":13,"character":1},"arguments":[{"selector":"[showHideSnackbar]"}]}],"members":{"methodDescription":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":19,"character":18}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":3,"character":1},"arguments":[{"selector":"[animateButton]"}]}],"members":{"increment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":6,"character":3}}]}],"infoStackHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"warningStackHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"infoStackIndicatorHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"warningStackIndicatorHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"styleTop":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":17,"character":3},"arguments":["style.top"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnChanges":[{"__symbolic":"method"}]}}},"origins":{"AvlNotificationModule":"./lib/notification.module","AvlNotificationMenuComponent":"./lib/components/avl-notification-menu/avl-notification-menu.component","AvlNotificationMenuItem":"./lib/models/notification-menu.model","AvlNotificationDialogComponent":"./lib/components/avl-notification-dialog/avl-notification-dialog.component","AvlNotificationContainerComponent":"./lib/components/avl-notification-container/avl-notification-container.component","ɵa":"./lib/components/avl-notification-container/directives/snackbar-listener.directive","ɵb":"./lib/components/avl-notification-container/directives/animate-stack.directive","ɵc":"./lib/components/avl-notification-container/directives/animate-snackbar.directive","ɵd":"./lib/components/avl-notification-container/directives/show-hide-snackbar.directive","ɵe":"./lib/components/avl-notification-container/directives/animate-button.directive"},"importAs":"@avl-ng-controls/notification"}