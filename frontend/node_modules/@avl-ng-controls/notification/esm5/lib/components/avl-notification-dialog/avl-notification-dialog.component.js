import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@avl-ng-controls/dialog';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@avl-controls/ng-binders';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from '@avl-ng-controls/navigation';
import * as ɵngcc6 from '@ngx-translate/core';

var _c0 = ["notificationTable"];
var _c1 = ["filterForm"];
function AvlNotificationDialogComponent_ng_template_1_avl_icon_button_11_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "avl-icon-button", 45);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationDialogComponent_ng_template_1_avl_icon_button_11_Template_avl_icon_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.refreshTable(); });
    ɵngcc0.ɵɵelementEnd();
} }
function AvlNotificationDialogComponent_ng_template_1_avl_tooltip_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "avl-tooltip", 46);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "VizBox.NotificationDialog.Refresh"), "");
} }
function AvlNotificationDialogComponent_ng_template_1_span_43_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("(", ctx_r7.getNumberOfNotificationsWithType(ctx_r7.tableData, "warning"), ")");
} }
function AvlNotificationDialogComponent_ng_template_1_span_49_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("(", ctx_r8.getNumberOfNotificationsWithType(ctx_r8.tableData, "error"), ")");
} }
function AvlNotificationDialogComponent_ng_template_1_span_55_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("(", ctx_r9.getNumberOfNotificationsWithType(ctx_r9.tableData, "info"), ")");
} }
function AvlNotificationDialogComponent_ng_template_1_span_61_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("(", ctx_r10.getNumberOfNotificationsWithType(ctx_r10.tableData, "ok"), ")");
} }
function AvlNotificationDialogComponent_ng_template_1_avl_tooltip_82_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "avl-tooltip", 47);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r12.dateFilterGroupHeader, " ");
} }
function AvlNotificationDialogComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    var _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "avl-dialog-header");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "avl-dialog-content");
    ɵngcc0.ɵɵelementStart(4, "div", 2);
    ɵngcc0.ɵɵelementStart(5, "div", 3);
    ɵngcc0.ɵɵelementStart(6, "div", 4);
    ɵngcc0.ɵɵelementStart(7, "h1");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "div", 5);
    ɵngcc0.ɵɵtemplate(11, AvlNotificationDialogComponent_ng_template_1_avl_icon_button_11_Template, 1, 0, "avl-icon-button", 6);
    ɵngcc0.ɵɵtemplate(12, AvlNotificationDialogComponent_ng_template_1_avl_tooltip_12_Template, 3, 3, "avl-tooltip", 7);
    ɵngcc0.ɵɵelementStart(13, "avl-icon-button", 8);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationDialogComponent_ng_template_1_Template_avl_icon_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.markAsUnread(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "avl-tooltip", 9);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "avl-icon-button", 10);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationDialogComponent_ng_template_1_Template_avl_icon_button_click_17_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.markAsRead(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(18, "avl-tooltip", 11);
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(21, "avl-icon-button", 12);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationDialogComponent_ng_template_1_Template_avl_icon_button_click_21_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.toggleFilters(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "avl-datatable", 13, 14);
    ɵngcc0.ɵɵlistener("selectedValuesChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_datatable_selectedValuesChange_22_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.selectedRows = $event; })("selectedValuesChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_datatable_selectedValuesChange_22_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.selectedValuesChanged(); })("on-row-clicked", function AvlNotificationDialogComponent_ng_template_1_Template_avl_datatable_on_row_clicked_22_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.onRowClicked($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(24, "avl-side-sheet", 15, 16);
    ɵngcc0.ɵɵlistener("openChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_side_sheet_openChange_24_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.filtersOpen = $event; });
    ɵngcc0.ɵɵelementStart(26, "div", 17);
    ɵngcc0.ɵɵelementStart(27, "h2");
    ɵngcc0.ɵɵtext(28);
    ɵngcc0.ɵɵpipe(29, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(30, "div", 18);
    ɵngcc0.ɵɵelementStart(31, "form", null, 19);
    ɵngcc0.ɵɵelementStart(33, "avl-list-expander", 20);
    ɵngcc0.ɵɵelementStart(34, "div", 21);
    ɵngcc0.ɵɵelementStart(35, "h3");
    ɵngcc0.ɵɵtext(36);
    ɵngcc0.ɵɵpipe(37, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(38, "div", 22);
    ɵngcc0.ɵɵelementStart(39, "div");
    ɵngcc0.ɵɵelementStart(40, "avl-checkbox", 23);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_checkbox_ngModelChange_40_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.filters.type.warning = $event; });
    ɵngcc0.ɵɵtext(41);
    ɵngcc0.ɵɵpipe(42, "translate");
    ɵngcc0.ɵɵtemplate(43, AvlNotificationDialogComponent_ng_template_1_span_43_Template, 2, 1, "span", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(44, "avl-icon", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(45, "div");
    ɵngcc0.ɵɵelementStart(46, "avl-checkbox", 26);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_checkbox_ngModelChange_46_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.filters.type.error = $event; });
    ɵngcc0.ɵɵtext(47);
    ɵngcc0.ɵɵpipe(48, "translate");
    ɵngcc0.ɵɵtemplate(49, AvlNotificationDialogComponent_ng_template_1_span_49_Template, 2, 1, "span", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(50, "avl-icon", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(51, "div");
    ɵngcc0.ɵɵelementStart(52, "avl-checkbox", 28);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_checkbox_ngModelChange_52_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.filters.type.info = $event; });
    ɵngcc0.ɵɵtext(53);
    ɵngcc0.ɵɵpipe(54, "translate");
    ɵngcc0.ɵɵtemplate(55, AvlNotificationDialogComponent_ng_template_1_span_55_Template, 2, 1, "span", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(56, "avl-icon", 29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(57, "div");
    ɵngcc0.ɵɵelementStart(58, "avl-checkbox", 30);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_checkbox_ngModelChange_58_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26.filters.type.ok = $event; });
    ɵngcc0.ɵɵtext(59);
    ɵngcc0.ɵɵpipe(60, "translate");
    ɵngcc0.ɵɵtemplate(61, AvlNotificationDialogComponent_ng_template_1_span_61_Template, 2, 1, "span", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(62, "avl-icon", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(63, "avl-list-expander", 20);
    ɵngcc0.ɵɵelementStart(64, "div", 21);
    ɵngcc0.ɵɵelementStart(65, "h3");
    ɵngcc0.ɵɵtext(66);
    ɵngcc0.ɵɵpipe(67, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(68, "div", 22);
    ɵngcc0.ɵɵelementStart(69, "avl-checkbox", 32);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_checkbox_ngModelChange_69_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.filters.state.unread = $event; });
    ɵngcc0.ɵɵtext(70);
    ɵngcc0.ɵɵpipe(71, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(72, "avl-icon", 33);
    ɵngcc0.ɵɵelementStart(73, "avl-checkbox", 34);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_checkbox_ngModelChange_73_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28.filters.state.read = $event; });
    ɵngcc0.ɵɵtext(74);
    ɵngcc0.ɵɵpipe(75, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(76, "avl-icon", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(77, "avl-list-expander", 20);
    ɵngcc0.ɵɵelementStart(78, "div", 21);
    ɵngcc0.ɵɵelementStart(79, "h3", 36, 37);
    ɵngcc0.ɵɵtext(81);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(82, AvlNotificationDialogComponent_ng_template_1_avl_tooltip_82_Template, 2, 1, "avl-tooltip", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(83, "div", 39);
    ɵngcc0.ɵɵelementStart(84, "avl-date", 40);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_date_ngModelChange_84_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.filters.date.dateFromValue = $event; })("valueChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_date_valueChange_84_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.updateLabels(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(85, "avl-date", 41);
    ɵngcc0.ɵɵlistener("ngModelChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_date_ngModelChange_85_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.filters.date.dateToValue = $event; })("valueChange", function AvlNotificationDialogComponent_ng_template_1_Template_avl_date_valueChange_85_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32.updateLabels(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(86, "div", 42);
    ɵngcc0.ɵɵelementStart(87, "avl-button", 43);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationDialogComponent_ng_template_1_Template_avl_button_click_87_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.applyFilters(); });
    ɵngcc0.ɵɵtext(88);
    ɵngcc0.ɵɵpipe(89, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(90, "avl-button", 44);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationDialogComponent_ng_template_1_Template_avl_button_click_90_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.reset(); });
    ɵngcc0.ɵɵtext(91);
    ɵngcc0.ɵɵpipe(92, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r11 = ɵngcc0.ɵɵreference(80);
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 48, "VizBox.NotificationDialog.Details"));
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(9, 50, "VizBox.NotificationDialog.Notifications"), " (", ctx_r1.getNumberOfNotifications(), ") ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showRefreshButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showRefreshButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.disableMarkingSelected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(16, 52, "VizBox.NotificationDialog.MarkSelectedAsUnread"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.disableMarkingSelected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(20, 54, "VizBox.NotificationDialog.MarkSelectedAsRead"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("badge", ctx_r1.badge);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("columnDefinitions", ctx_r1.columnDefinitions)("data", ctx_r1.filteredData)("pageSize", ctx_r1.pageSize)("pageSizeOptions", ctx_r1.pageSizeOptions)("selectedValues", ctx_r1.selectedRows);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("open", ctx_r1.filtersOpen);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(29, 56, "VizBox.NotificationDialog.Filters"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("narrow", true);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(37, 58, "VizBox.NotificationDialog.Type"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.type.warning);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(42, 60, "VizBox.NotificationDialog.Warning"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.tableData.length);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.type.error);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(48, 62, "VizBox.NotificationDialog.Error"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.tableData.length);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.type.info);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(54, 64, "VizBox.NotificationDialog.Info"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.tableData.length);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.type.ok);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(60, 66, "VizBox.NotificationDialog.Ok"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.tableData.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("narrow", true);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(67, 68, "VizBox.NotificationDialog.State"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.state.unread);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(71, 70, "VizBox.NotificationDialog.Unread"), " (", ctx_r1.getNumberOfUnreadNotifications(ctx_r1.tableData), ") ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.state.read);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(75, 72, "VizBox.NotificationDialog.Read"), " (", ctx_r1.tableData.length - ctx_r1.getNumberOfUnreadNotifications(ctx_r1.tableData), ") ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("narrow", true);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.dateFilterGroupHeader, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r11.scrollWidth > _r11.clientWidth);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.date.dateFromValue)("label", ctx_r1.dateFromLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.filters.date.dateToValue)("label", ctx_r1.dateToLabel);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(89, 74, "VizBox.NotificationDialog.Apply"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(92, 76, "VizBox.NotificationDialog.Reset"));
} }
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, OnInit, ChangeDetectorRef, AfterViewChecked } from '@angular/core';
import '@avl-controls/datatable/dist/avl-datatable/avl-datatable';
import '@avl-controls/core/dist/avl-icon-button/avl-icon-button';
import '@avl-controls/core/dist/avl-icon/avl-icon';
import '@avl-controls/core/dist/avl-side-sheet/avl-side-sheet';
import '@avl-controls/core/dist/avl-checkbox/avl-checkbox';
import '@avl-controls/core/dist/avl-tooltip/avl-tooltip';
import '@avl-controls/core/dist/avl-date/avl-date';
import { DEFAULT_COLUMN_DEFINITIONS, DEFAULT_FILTERS, DEFAULT_PAGE_SIZE_OPTIONS, TYPE_ICON_STYLE_MAPPINGS, TYPE_ICON_MAPPINGS, STATE_ICON_MAPPINGS, NOTIFICATION_TYPE_MAPPINGS, DEFAULT_ICON_STYLE } from './avl-notification-dialog.consts';
import { NgForm } from '@angular/forms';
var AvlNotificationDialogComponent = /** @class */ (function () {
    function AvlNotificationDialogComponent(cdRef) {
        this.cdRef = cdRef;
        this.open = false;
        this.pageSizeOptions = DEFAULT_PAGE_SIZE_OPTIONS;
        this.columnDefinitions = DEFAULT_COLUMN_DEFINITIONS;
        this.openChange = new EventEmitter();
        this.markSelectedAsRead = new EventEmitter();
        this.markSelectedAsUnread = new EventEmitter();
        this.tableData = [];
        this.filteredData = [];
        this.badge = false;
        this.disableMarkingSelected = true;
        this.filters = this.deepCopyObject(DEFAULT_FILTERS);
        this.filtersOpen = true;
        this.showRefreshButton = false;
        this.dateFromLabel = 'Date from';
        this.dateToLabel = 'Date to';
        this.dateFilterGroupInitHeader = 'Date';
        this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;
        //notification datatable options
        this.selectedRows = [];
        this.pageSize = 15;
        this.appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);
        this._notifications = [];
    }
    Object.defineProperty(AvlNotificationDialogComponent.prototype, "notifications", {
        get: function () {
            return this._notifications;
        },
        set: function (notifications) {
            if (this._notifications.length === notifications.length) {
                return;
            }
            this.showRefreshButton = true;
            this._notifications = notifications;
        },
        enumerable: true,
        configurable: true
    });
    AvlNotificationDialogComponent.prototype.ngOnInit = function () {
        this.translateLabels();
        this.refreshTable();
    };
    AvlNotificationDialogComponent.prototype.ngAfterViewChecked = function () {
        this.cdRef.detectChanges();
    };
    /** Emits event when dialog opens or closes */
    AvlNotificationDialogComponent.prototype.openChanged = function (open) {
        this.openChange.emit(open);
    };
    /** Toggles displaying of filter sheet */
    AvlNotificationDialogComponent.prototype.toggleFilters = function () {
        this.filtersOpen = !this.filtersOpen;
    };
    /** Refreshes the datatable when refresh button is clicked */
    AvlNotificationDialogComponent.prototype.refreshTable = function () {
        this.showRefreshButton = false;
        this.tableData = this.prepareNotifications(this._notifications);
        this.filters = this.deepCopyObject(this.appliedFilters);
        this.filterData();
    };
    /**
     * Invoked when clicking apply button - filters data by given filters.
     */
    AvlNotificationDialogComponent.prototype.applyFilters = function () {
        this.appliedFilters = this.deepCopyObject(this.filters);
        this.filterData();
    };
    /** Filters notifications according to applied filters */
    AvlNotificationDialogComponent.prototype.filterData = function () {
        var e_1, _a;
        this.filteredData = [];
        var filters = this.getActiveFilters();
        try {
            for (var _b = __values(this.tableData), _c = _b.next(); !_c.done; _c = _b.next()) {
                var element = _c.value;
                if (this.doesElementPassEveryFilter(filters, element)) {
                    this.filteredData.push(element);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    /** Changes selected notification state to read */
    AvlNotificationDialogComponent.prototype.markAsRead = function () {
        this.updateStateOfSelectedRowsTo(true);
        this.markSelectedAsRead.emit(this.selectedRows);
    };
    /** Changes selected notification state to unread */
    AvlNotificationDialogComponent.prototype.markAsUnread = function () {
        this.updateStateOfSelectedRowsTo(false);
        this.markSelectedAsUnread.emit(this.selectedRows);
    };
    /**
     * Resets all filters.
     */
    AvlNotificationDialogComponent.prototype.reset = function () {
        this.filters = this.deepCopyObject(DEFAULT_FILTERS);
        this.appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);
        this.filterData();
        this.updateLabels();
        this.badge = false;
    };
    /** Calculates active filters from filter object */
    AvlNotificationDialogComponent.prototype.getActiveFilters = function () {
        var e_2, _a, e_3, _b;
        this.badge = false;
        var setFilters = {};
        try {
            // Mapping applied filters object to better format used for filtering, 
            // creates arrays from objects
            for (var _c = __values(Object.keys(this.appliedFilters)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var item = _d.value;
                var secondLevelFilter = [];
                try {
                    for (var _e = (e_3 = void 0, __values(Object.keys(this.appliedFilters[item]))), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var filter = _f.value;
                        if (this.appliedFilters[item][filter] === true) {
                            secondLevelFilter.push(filter);
                            this.badge = true;
                        }
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
                if (secondLevelFilter.length) {
                    setFilters[item] = secondLevelFilter;
                }
                if (item === 'date') {
                    setFilters[item] = [
                        this.appliedFilters[item]['dateFromValue'],
                        this.appliedFilters[item]['dateToValue']
                    ];
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return setFilters;
    };
    /** Called when selection is applied to the table rows */
    AvlNotificationDialogComponent.prototype.selectedValuesChanged = function () {
        this.disableMarkingSelected = false;
        if (this.selectedRows.length == 0) {
            this.disableMarkingSelected = true;
        }
    };
    /** Updates date filter header labels when date changes */
    AvlNotificationDialogComponent.prototype.updateLabels = function () {
        return __awaiter(this, void 0, void 0, function () {
            var translationService, _a, dateFromValue, dateToValue, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        translationService = AvlLocalizationService.translationService;
                        _a = this.filters.date, dateFromValue = _a.dateFromValue, dateToValue = _a.dateToValue;
                        if (!(!dateFromValue && !dateToValue)) return [3 /*break*/, 1];
                        this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;
                        return [3 /*break*/, 3];
                    case 1:
                        _b = this;
                        return [4 /*yield*/, translationService.translate('VizBox.NotificationDialog.DateRange', {
                                dateFrom: this.formatDateTime(dateFromValue),
                                dateTo: this.formatDateTime(dateToValue)
                            })];
                    case 2:
                        _b.dateFilterGroupHeader = _c.sent();
                        _c.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /** Calculates number of notifications with specific type */
    AvlNotificationDialogComponent.prototype.getNumberOfNotificationsWithType = function (data, type) {
        return data.filter(function (element) { return NOTIFICATION_TYPE_MAPPINGS[element.type] === type; }).length;
    };
    /** Calculates number of unread notifications */
    AvlNotificationDialogComponent.prototype.getNumberOfUnreadNotifications = function (data) {
        return data.filter(function (element) { return !element.state; }).length;
    };
    /** Calculates number of notifications currently displayed in datatable */
    AvlNotificationDialogComponent.prototype.getNumberOfNotifications = function () {
        if (this.filteredData.length === this.tableData.length && !this.badge) {
            return this.filteredData.length.toString();
        }
        else {
            return this.filteredData.length + "/" + this.tableData.length;
        }
    };
    /** Opens link in new tab when table row is clicked */
    AvlNotificationDialogComponent.prototype.onRowClicked = function (event) {
        var row = event.detail;
        if (row.link) {
            window.open(row.link, '_blank');
        }
    };
    /** Maps general avl notification list to table specific list */
    AvlNotificationDialogComponent.prototype.prepareNotifications = function (notifications) {
        return notifications.map(function (notification) { return (__assign(__assign({}, notification), { icon: TYPE_ICON_MAPPINGS[notification.type], iconStyle: TYPE_ICON_STYLE_MAPPINGS[notification.type], currentIconToggle: STATE_ICON_MAPPINGS[String(notification.read)], currentIconToggleStyle: DEFAULT_ICON_STYLE, state: notification.read })); });
    };
    /** Formats date time to date-short */
    AvlNotificationDialogComponent.prototype.formatDateTime = function (d) {
        return d ? AvlLocalizationService.formatDateTime(d, { format: 'date-short' }) : '(-)';
    };
    /** Deep copy of filters object */
    AvlNotificationDialogComponent.prototype.deepCopyObject = function (object) {
        var copiedObject = {};
        Object.keys(object).forEach(function (key) {
            copiedObject[key] = Object.assign({}, object[key]);
        });
        return copiedObject;
    };
    /** Determines if element satisfies filter for every key in this.apppliedFilters */
    AvlNotificationDialogComponent.prototype.doesElementPassEveryFilter = function (activeFilters, element) {
        var _this = this;
        return Object.keys(activeFilters).every(function (key) {
            if (key === 'date') {
                var _a = __read(_this.prepareDates(activeFilters[key]), 2), dateFrom = _a[0], dateTo = _a[1];
                // If dates not set, filter this element as well
                if (!dateFrom.getTime() && !dateTo.getTime()) {
                    return true;
                }
                _this.badge = true;
                // If timestamp is not a Date, don't filter this element
                var timestamp = new Date(element.timestamp);
                if (!timestamp.getTime()) {
                    return false;
                }
                return _this.compareDates(timestamp, dateFrom, dateTo);
            }
            return activeFilters[key].includes(NOTIFICATION_TYPE_MAPPINGS[element[key]]);
        });
    };
    AvlNotificationDialogComponent.prototype.prepareDates = function (dates) {
        var dateFrom = new Date(dates[0]);
        var dateTo = new Date(dates[1]);
        dateFrom.setHours(0, 0, 0, 0);
        dateTo.setHours(23, 59, 59, 999);
        return [dateFrom, dateTo];
    };
    AvlNotificationDialogComponent.prototype.compareDates = function (timestamp, from, to) {
        var ts = timestamp.getTime();
        var fromTs = from === null || from === void 0 ? void 0 : from.getTime();
        var toTs = to === null || to === void 0 ? void 0 : to.getTime();
        if (fromTs && toTs) {
            return ts >= fromTs && ts <= toTs;
        }
        else if (fromTs) {
            return ts >= fromTs;
        }
        else if (toTs) {
            return ts <= toTs;
        }
        return false;
    };
    AvlNotificationDialogComponent.prototype.updateStateOfSelectedRowsTo = function (state) {
        var _this = this;
        this.tableData
            .filter(function (notification) { return _this.isRowSelected(notification.id); })
            .forEach(function (notification) {
            notification.state = state;
            notification.currentIconToggle = STATE_ICON_MAPPINGS[String(state)];
        });
        this.tableData = __spread(this.tableData);
        this.filterData();
    };
    AvlNotificationDialogComponent.prototype.isRowSelected = function (id) {
        return this.selectedRows.map(function (row) { return row.id; }).includes(id);
    };
    // Translations
    AvlNotificationDialogComponent.prototype.translateLabels = function () {
        return __awaiter(this, void 0, void 0, function () {
            var translationService, _a, _b, _c, _d, _e;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        if (!AvlLocalizationService || !AvlLocalizationService.translationService) {
                            return [2 /*return*/];
                        }
                        translationService = AvlLocalizationService.translationService;
                        _a = this;
                        return [4 /*yield*/, translationService.translate('VizBox.NotificationDialog.Date')];
                    case 1:
                        _a.dateFilterGroupInitHeader = _f.sent();
                        this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;
                        _b = this;
                        return [4 /*yield*/, translationService.translate('VizBox.NotificationDialog.DateFrom')];
                    case 2:
                        _b.dateFromLabel = _f.sent();
                        _c = this;
                        return [4 /*yield*/, translationService.translate('VizBox.NotificationDialog.DateTo')];
                    case 3:
                        _c.dateToLabel = _f.sent();
                        _d = this;
                        return [4 /*yield*/, this.translatePageSizeOptions(this.pageSizeOptions)];
                    case 4:
                        _d.pageSizeOptions = _f.sent();
                        _e = this;
                        return [4 /*yield*/, this.translateColumns(this.columnDefinitions)];
                    case 5:
                        _e.columnDefinitions = _f.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AvlNotificationDialogComponent.prototype.translatePageSizeOptions = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all(options.map(function (option) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, this.translatePageSizeOption(option)];
                                case 1: return [2 /*return*/, _a.sent()];
                            }
                        }); }); }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    AvlNotificationDialogComponent.prototype.translatePageSizeOption = function (item) {
        return __awaiter(this, void 0, void 0, function () {
            var translationService, _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        translationService = AvlLocalizationService.translationService;
                        _a = [__assign({}, item)];
                        _b = {};
                        if (!(item.value === Number.MAX_SAFE_INTEGER)) return [3 /*break*/, 2];
                        return [4 /*yield*/, translationService.translate('VizBox.NotificationDialog.ShowAll')];
                    case 1:
                        _c = _d.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, translationService.translate('VizBox.NotificationDialog.ShowXPerPage', {
                            rows: item.value
                        })];
                    case 3:
                        _c = _d.sent();
                        _d.label = 4;
                    case 4: return [2 /*return*/, __assign.apply(void 0, _a.concat([(_b.label = _c, _b)]))];
                }
            });
        });
    };
    AvlNotificationDialogComponent.prototype.translateColumns = function (column) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all(column.map(function (item) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, this.translateColumnItem(item)];
                                case 1: return [2 /*return*/, _a.sent()];
                            }
                        }); }); }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    AvlNotificationDialogComponent.prototype.translateColumnItem = function (item) {
        return __awaiter(this, void 0, void 0, function () {
            var translateService, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        translateService = AvlLocalizationService.translationService;
                        _a = [__assign({}, item)];
                        _b = {};
                        return [4 /*yield*/, translateService.translate(item.caption)];
                    case 1: return [2 /*return*/, __assign.apply(void 0, _a.concat([(_b.caption = _c.sent(), _b)]))];
                }
            });
        });
    };
    AvlNotificationDialogComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AvlNotificationDialogComponent.prototype, "open", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], AvlNotificationDialogComponent.prototype, "pageSizeOptions", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], AvlNotificationDialogComponent.prototype, "columnDefinitions", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], AvlNotificationDialogComponent.prototype, "notifications", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlNotificationDialogComponent.prototype, "openChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlNotificationDialogComponent.prototype, "markSelectedAsRead", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlNotificationDialogComponent.prototype, "markSelectedAsUnread", void 0);
    __decorate([
        ViewChild('notificationTable'),
        __metadata("design:type", ElementRef)
    ], AvlNotificationDialogComponent.prototype, "table", void 0);
    __decorate([
        ViewChild('filterForm', { read: NgForm }),
        __metadata("design:type", NgForm)
    ], AvlNotificationDialogComponent.prototype, "filterForm", void 0);
    AvlNotificationDialogComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef])
    ], AvlNotificationDialogComponent);
AvlNotificationDialogComponent.ɵfac = function AvlNotificationDialogComponent_Factory(t) { return new (t || AvlNotificationDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
AvlNotificationDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AvlNotificationDialogComponent, selectors: [["avl-notification-dialog"]], viewQuery: function AvlNotificationDialogComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true, NgForm);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.table = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterForm = _t.first);
    } }, inputs: { open: "open", pageSizeOptions: "pageSizeOptions", columnDefinitions: "columnDefinitions", notifications: "notifications" }, outputs: { openChange: "openChange", markSelectedAsRead: "markSelectedAsRead", markSelectedAsUnread: "markSelectedAsUnread" }, decls: 3, vars: 3, consts: [["id", "outerDialog", 3, "open", "closeOnScrimClick", "fullscreen", "openChange"], ["content", ""], [1, "main-container"], [1, "content"], [1, "table-header"], [1, "table-header-right"], ["id", "updateIcon", "class", "pointer", "icon", "icons:refresh", 3, "click", 4, "ngIf"], ["for", "updateIcon", 4, "ngIf"], ["id", "unreadIcon", "icon", "icons:mail", 1, "pointer", 3, "disabled", "click"], ["for", "unreadIcon"], ["id", "readIcon", "icon", "communication:mail-outline", 1, "pointer", 3, "disabled", "click"], ["for", "readIcon"], ["icon", "icons:filter-list", 1, "pointer", 3, "badge", "click"], ["multi-select", "", "allow-active-row", "", "pagination", "", 1, "filterDatatable", 3, "columnDefinitions", "data", "pageSize", "pageSizeOptions", "selectedValues", "selectedValuesChange", "on-row-clicked"], ["notificationTable", ""], ["divider", "", 1, "filter-sheet", 3, "open", "openChange"], ["filterSheet", ""], ["slot", "title"], ["slot", "content"], ["filterForm", "ngForm"], [3, "narrow"], ["role", "header"], ["role", "content", 1, "filterContent"], ["name", "warningSwitch", 3, "ngModel", "ngModelChange"], [4, "ngIf"], ["id", "warningIcon", "icon", "icons:warning", 1, "typeIcons"], ["name", "errorSwitch", 3, "ngModel", "ngModelChange"], ["id", "errorIcon", "icon", "icons:cancel", 1, "typeIcons"], ["name", "infoSwitch", 3, "ngModel", "ngModelChange"], ["id", "infoIcon", "icon", "icons:info-outline", 1, "typeIcons"], ["name", "okSwitch", 3, "ngModel", "ngModelChange"], ["id", "okIcon", "icon", "icons:check", 1, "typeIcons"], ["name", "unreadState", 3, "ngModel", "ngModelChange"], ["id", "infoIcon", "icon", "icons:mail", 1, "typeIcons"], ["name", "readState", 3, "ngModel", "ngModelChange"], ["id", "infoIcon", "icon", "communication:mail-outline", 1, "typeIcons"], ["id", "date-group"], ["dateGroup", ""], ["for", "date-group", 4, "ngIf"], ["role", "content"], ["name", "dateFromValue", 1, "date-control", 3, "ngModel", "label", "ngModelChange", "valueChange"], ["name", "dateTo", 1, "date-control", 3, "ngModel", "label", "ngModelChange", "valueChange"], ["slot", "actions"], ["contained", "", 3, "click"], [3, "click"], ["id", "updateIcon", "icon", "icons:refresh", 1, "pointer", 3, "click"], ["for", "updateIcon"], ["for", "date-group"]], template: function AvlNotificationDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "avl-dialog", 0);
        ɵngcc0.ɵɵlistener("openChange", function AvlNotificationDialogComponent_Template_avl_dialog_openChange_0_listener($event) { return ctx.openChanged($event); });
        ɵngcc0.ɵɵtemplate(1, AvlNotificationDialogComponent_ng_template_1_Template, 93, 78, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("open", ctx.open)("closeOnScrimClick", false)("fullscreen", true);
    } }, directives: [ɵngcc1.AvlDialogComponent, ɵngcc1.AvlDialogHeaderComponent, ɵngcc1.AvlDialogContentComponent, ɵngcc2.NgIf, ɵngcc3.AvlInteractionControlDirective, ɵngcc3.AvlIconButtonDirective, ɵngcc3.AvlMultiSelectControlDirective, ɵngcc3.AvlSingleSelectControlDirective, ɵngcc3.AvlDatatableDirective, ɵngcc3.AvlSideSheetDirective, ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc5.AvlListExpanderComponent, ɵngcc3.AvlCheckableControlDirective, ɵngcc3.AvlFormControlDirective, ɵngcc3.AvlCheckboxDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc3.AvlDateDirective], pipes: [ɵngcc6.TranslatePipe], styles: [".content[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;flex-grow:1}.table-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.main-container[_ngcontent-%COMP%]{display:flex;height:100%}.main-container.hidden[_ngcontent-%COMP%]{display:none}.filterDatatable[_ngcontent-%COMP%]{height:100%}.filter-sheet[_ngcontent-%COMP%]{--avl-side-sheet-padding:0px;--avl-side-sheet-height:84vh;width:300px}.filter-sheet[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:20px;margin-left:24px}.filter-sheet[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:16px;margin:0;text-overflow:ellipsis;overflow:hidden}.pointer[_ngcontent-%COMP%]{cursor:pointer}#errorIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-error-color)}#warningIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-warning-color)}#okIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-ok-color)}#infoIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-icon-default-color)}.filterContent[_ngcontent-%COMP%]{position:relative}.typeIcons[_ngcontent-%COMP%]{position:absolute;right:0;margin-top:12px;margin-bottom:12px}.date-control[_ngcontent-%COMP%]{width:100%}avl-dialog-content[_ngcontent-%COMP%]{--padding-top:1px!important;--padding-right:0px!important;--padding-bottom:2px!important}avl-dialog-header[_ngcontent-%COMP%]{z-index:1}avl-side-sheet[_ngcontent-%COMP%]{--avl-side-sheet-height:unset!important;box-shadow:none;border-left:1px solid var(--avl-divider-color)}avl-datatable[_ngcontent-%COMP%]{--margin-top-pages:0px!important}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlNotificationDialogComponent, [{
        type: Component,
        args: [{
                selector: 'avl-notification-dialog',
                template: "<avl-dialog\r\n  id=\"outerDialog\"\r\n  [open]=\"open\"\r\n  (openChange)=\"openChanged($event)\"\r\n  [closeOnScrimClick]=\"false\"\r\n  [fullscreen]=\"true\"\r\n>\r\n  <ng-template #content>\r\n    <avl-dialog-header>{{ 'VizBox.NotificationDialog.Details' | translate }}</avl-dialog-header>\r\n    <avl-dialog-content>\r\n      <div class=\"main-container\">\r\n        <div class=\"content\">\r\n          <div class=\"table-header\">\r\n            <h1>\r\n              {{ 'VizBox.NotificationDialog.Notifications' | translate }} ({{\r\n                getNumberOfNotifications()\r\n              }})\r\n            </h1>\r\n            <div class=\"table-header-right\">\r\n              <avl-icon-button\r\n                *ngIf=\"showRefreshButton\"\r\n                id=\"updateIcon\"\r\n                (click)=\"refreshTable()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:refresh\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip *ngIf=\"showRefreshButton\" for=\"updateIcon\"\r\n                > {{ 'VizBox.NotificationDialog.Refresh' | translate }}</avl-tooltip\r\n              >\r\n              <avl-icon-button\r\n                id=\"unreadIcon\"\r\n                (click)=\"markAsUnread()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:mail\"\r\n                [disabled]=\"disableMarkingSelected\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip for=\"unreadIcon\">{{\r\n                'VizBox.NotificationDialog.MarkSelectedAsUnread' | translate\r\n              }}</avl-tooltip>\r\n              <avl-icon-button\r\n                id=\"readIcon\"\r\n                class=\"pointer\"\r\n                (click)=\"markAsRead()\"\r\n                icon=\"communication:mail-outline\"\r\n                [disabled]=\"disableMarkingSelected\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip for=\"readIcon\">{{\r\n                'VizBox.NotificationDialog.MarkSelectedAsRead' | translate\r\n              }}</avl-tooltip>\r\n              <avl-icon-button\r\n                (click)=\"toggleFilters()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:filter-list\"\r\n                [badge]=\"badge\"\r\n              ></avl-icon-button>\r\n            </div>\r\n          </div>\r\n          <avl-datatable\r\n            #notificationTable\r\n            class=\"filterDatatable\"\r\n            multi-select\r\n            allow-active-row\r\n            pagination\r\n            [columnDefinitions]=\"columnDefinitions\"\r\n            [data]=\"filteredData\"\r\n            [pageSize]=\"pageSize\"\r\n            [pageSizeOptions]=\"pageSizeOptions\"\r\n            [(selectedValues)]=\"selectedRows\"\r\n            (selectedValuesChange)=\"selectedValuesChanged()\"\r\n            (on-row-clicked)=\"onRowClicked($event)\"\r\n          >\r\n          </avl-datatable>\r\n        </div>\r\n        <avl-side-sheet class=\"filter-sheet\" divider [(open)]=\"filtersOpen\" #filterSheet>\r\n          <div slot=\"title\">\r\n            <h2>{{ 'VizBox.NotificationDialog.Filters' | translate }}</h2>\r\n          </div>\r\n          <div slot=\"content\">\r\n            <form #filterForm=\"ngForm\">\r\n              <avl-list-expander [narrow]=\"true\">\r\n                <div role=\"header\">\r\n                  <h3>{{ 'VizBox.NotificationDialog.Type' | translate }}</h3>\r\n                </div>\r\n                <div role=\"content\" class=\"filterContent\">\r\n                  <div>\r\n                    <avl-checkbox name=\"warningSwitch\" [(ngModel)]=\"filters.type.warning\">\r\n                      {{ 'VizBox.NotificationDialog.Warning' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'warning') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"warningIcon\" class=\"typeIcons\" icon=\"icons:warning\"></avl-icon>\r\n                  </div>\r\n                  <div>\r\n                    <avl-checkbox name=\"errorSwitch\" [(ngModel)]=\"filters.type.error\">\r\n                      {{ 'VizBox.NotificationDialog.Error' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'error') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"errorIcon\" class=\"typeIcons\" icon=\"icons:cancel\"></avl-icon>\r\n                  </div>\r\n                  <div>\r\n                    <avl-checkbox name=\"infoSwitch\" [(ngModel)]=\"filters.type.info\">\r\n                      {{ 'VizBox.NotificationDialog.Info' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'info') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"infoIcon\" class=\"typeIcons\" icon=\"icons:info-outline\"></avl-icon>\r\n                  </div>\r\n                  <div>\r\n                    <avl-checkbox name=\"okSwitch\" [(ngModel)]=\"filters.type.ok\">\r\n                      {{ 'VizBox.NotificationDialog.Ok' | translate }}\r\n                      <span *ngIf=\"tableData.length\"\r\n                        >({{ getNumberOfNotificationsWithType(tableData, 'ok') }})</span\r\n                      >\r\n                    </avl-checkbox>\r\n                    <avl-icon id=\"okIcon\" class=\"typeIcons\" icon=\"icons:check\"></avl-icon>\r\n                  </div>\r\n                </div>\r\n              </avl-list-expander>\r\n              <avl-list-expander [narrow]=\"true\">\r\n                <div role=\"header\">\r\n                  <h3>{{ 'VizBox.NotificationDialog.State' | translate }}</h3>\r\n                </div>\r\n                <div role=\"content\" class=\"filterContent\">\r\n                  <avl-checkbox name=\"unreadState\" [(ngModel)]=\"filters.state.unread\">\r\n                    {{ 'VizBox.NotificationDialog.Unread' | translate }} ({{\r\n                      getNumberOfUnreadNotifications(tableData)\r\n                    }})\r\n                  </avl-checkbox>\r\n                  <avl-icon id=\"infoIcon\" class=\"typeIcons\" icon=\"icons:mail\"></avl-icon>\r\n                  <avl-checkbox name=\"readState\" [(ngModel)]=\"filters.state.read\">\r\n                    {{ 'VizBox.NotificationDialog.Read' | translate }} ({{\r\n                      tableData.length - getNumberOfUnreadNotifications(tableData)\r\n                    }})\r\n                  </avl-checkbox>\r\n                  <avl-icon\r\n                    id=\"infoIcon\"\r\n                    class=\"typeIcons\"\r\n                    icon=\"communication:mail-outline\"\r\n                  ></avl-icon>\r\n                </div>\r\n              </avl-list-expander>\r\n              <avl-list-expander [narrow]=\"true\">\r\n                <div role=\"header\">\r\n                  <h3 id=\"date-group\" #dateGroup>\r\n                    {{ dateFilterGroupHeader }}\r\n                  </h3>\r\n                  <avl-tooltip for=\"date-group\" *ngIf=\"dateGroup.scrollWidth > dateGroup.clientWidth\">\r\n                    {{ dateFilterGroupHeader }}\r\n                  </avl-tooltip>\r\n                </div>\r\n                <div role=\"content\">\r\n                  <avl-date\r\n                    class=\"date-control\"\r\n                    [(ngModel)]=\"filters.date.dateFromValue\"\r\n                    name=\"dateFromValue\"\r\n                    (valueChange)=\"updateLabels()\"\r\n                    [label]=\"dateFromLabel\"\r\n                  ></avl-date>\r\n                  <avl-date\r\n                    class=\"date-control\"\r\n                    [(ngModel)]=\"filters.date.dateToValue\"\r\n                    name=\"dateTo\"\r\n                    (valueChange)=\"updateLabels()\"\r\n                    [label]=\"dateToLabel\"\r\n                  ></avl-date>\r\n                </div>\r\n              </avl-list-expander>\r\n            </form>\r\n          </div>\r\n          <div slot=\"actions\">\r\n            <avl-button contained (click)=\"applyFilters()\">{{\r\n              'VizBox.NotificationDialog.Apply' | translate\r\n            }}</avl-button>\r\n            <avl-button (click)=\"reset()\">{{\r\n              'VizBox.NotificationDialog.Reset' | translate\r\n            }}</avl-button>\r\n          </div>\r\n        </avl-side-sheet>\r\n      </div>\r\n    </avl-dialog-content>\r\n  </ng-template>\r\n</avl-dialog>\r\n",
                styles: [".content{position:relative;display:flex;flex-direction:column;flex-grow:1}.table-header{display:flex;justify-content:space-between;align-items:center}.main-container{display:flex;height:100%}.main-container.hidden{display:none}.filterDatatable{height:100%}.filter-sheet{--avl-side-sheet-padding:0px;--avl-side-sheet-height:84vh;width:300px}.filter-sheet h2{font-size:20px;margin-left:24px}.filter-sheet h3{font-size:16px;margin:0;text-overflow:ellipsis;overflow:hidden}.pointer{cursor:pointer}#errorIcon{--avl-icon-custom-color:var(--avl-error-color)}#warningIcon{--avl-icon-custom-color:var(--avl-warning-color)}#okIcon{--avl-icon-custom-color:var(--avl-ok-color)}#infoIcon{--avl-icon-custom-color:var(--avl-icon-default-color)}.filterContent{position:relative}.typeIcons{position:absolute;right:0;margin-top:12px;margin-bottom:12px}.date-control{width:100%}avl-dialog-content{--padding-top:1px!important;--padding-right:0px!important;--padding-bottom:2px!important}avl-dialog-header{z-index:1}avl-side-sheet{--avl-side-sheet-height:unset!important;box-shadow:none;border-left:1px solid var(--avl-divider-color)}avl-datatable{--margin-top-pages:0px!important}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { open: [{
            type: Input
        }], pageSizeOptions: [{
            type: Input
        }], columnDefinitions: [{
            type: Input
        }], openChange: [{
            type: Output
        }], markSelectedAsRead: [{
            type: Output
        }], markSelectedAsUnread: [{
            type: Output
        }], notifications: [{
            type: Input
        }], table: [{
            type: ViewChild,
            args: ['notificationTable']
        }], filterForm: [{
            type: ViewChild,
            args: ['filterForm', { read: NgForm }]
        }] }); })();
    return AvlNotificationDialogComponent;
}());
export { AvlNotificationDialogComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,