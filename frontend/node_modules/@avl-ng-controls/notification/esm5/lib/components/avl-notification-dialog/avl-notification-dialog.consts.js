var _a, _b, _c;
import { ColumnType, LeafColumn } from '@avl-controls/datatable/dist/avl-datatable/column-definitions';
export var DEFAULT_PAGE_SIZE_OPTIONS = [
    { value: 15, label: 'Show 15 per page' },
    { value: 50, label: 'Show 50 per page' },
    { value: Number.MAX_SAFE_INTEGER, label: 'Show all' }
];
export var DEFAULT_FILTERS = {
    type: {
        warning: undefined,
        error: undefined,
        info: undefined,
        ok: undefined
    },
    state: {
        read: undefined,
        unread: undefined
    },
    date: {
        dateFromValue: undefined,
        dateToValue: undefined
    }
};
export var DEFAULT_COLUMN_DEFINITIONS = [
    new LeafColumn('VizBox.NotificationDialog.Type', 'icon', ColumnType.Icon, false, false, 0.5),
    new LeafColumn('VizBox.NotificationDialog.Module', 'module', ColumnType.Text, true, false, 3),
    new LeafColumn('VizBox.NotificationDialog.Message', 'messageText', ColumnType.Text, true, false, 8),
    new LeafColumn('VizBox.NotificationDialog.Id', 'id', ColumnType.Number, false, false, 1),
    {
        caption: 'VizBox.NotificationDialog.Timestamp',
        valueField: 'timestamp',
        type: ColumnType.Date,
        sortable: false,
        filterable: false,
        flexWidth: 3,
        dateTimeOptions: { format: 'date-time-short' }
    },
    new LeafColumn('VizBox.NotificationDialog.State', 'currentIconToggle', ColumnType.Icon, false, false, 1)
];
export var NOTIFICATION_TYPE_MAPPINGS = (_a = {},
    _a[0] = 'error',
    _a[1] = 'warning',
    _a[2] = 'info',
    _a[3] = 'ok',
    _a.false = 'unread',
    _a.true = 'read',
    _a);
export var TYPE_ICON_MAPPINGS = (_b = {},
    _b[0 /* Error */] = 'cancel',
    _b[1 /* Warning */] = 'warning',
    _b[2 /* Info */] = 'info-outline',
    _b[3 /* OK */] = 'check',
    _b);
export var STATE_ICON_MAPPINGS = {
    false: 'mail',
    true: 'communication:mail-outline'
};
export var DEFAULT_ICON_STYLE = 'height:24px; width:24px;';
export var TYPE_ICON_STYLE_MAPPINGS = (_c = {},
    _c[0 /* Error */] = "--avl-icon-custom-color: var(--avl-error-color); " + DEFAULT_ICON_STYLE,
    _c[1 /* Warning */] = "--avl-icon-custom-color: var(--avl-warning-color); " + DEFAULT_ICON_STYLE,
    _c[2 /* Info */] = "--avl-icon-custom-color: var(--avl-icon-default-color); " + DEFAULT_ICON_STYLE,
    _c[3 /* OK */] = "--avl-icon-custom-color: var(--avl-ok-color); " + DEFAULT_ICON_STYLE,
    _c);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLW5vdGlmaWNhdGlvbi1kaWFsb2cuY29uc3RzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGF2bC1uZy1jb250cm9scy9ub3RpZmljYXRpb24vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9hdmwtbm90aWZpY2F0aW9uLWRpYWxvZy9hdmwtbm90aWZpY2F0aW9uLWRpYWxvZy5jb25zdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFFTCxVQUFVLEVBQ1YsVUFBVSxFQUNYLE1BQU0sK0RBQStELENBQUM7QUFHdkUsTUFBTSxDQUFDLElBQU0seUJBQXlCLEdBQXFCO0lBQ3pELEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsa0JBQWtCLEVBQUU7SUFDeEMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxrQkFBa0IsRUFBRTtJQUN4QyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtDQUN0RCxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sZUFBZSxHQUFHO0lBQzdCLElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLEtBQUssRUFBRSxTQUFTO1FBQ2hCLElBQUksRUFBRSxTQUFTO1FBQ2YsRUFBRSxFQUFFLFNBQVM7S0FDZDtJQUNELEtBQUssRUFBRTtRQUNMLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLFNBQVM7S0FDbEI7SUFDRCxJQUFJLEVBQUU7UUFDSixhQUFhLEVBQUUsU0FBUztRQUN4QixXQUFXLEVBQUUsU0FBUztLQUN2QjtDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FBRztJQUN4QyxJQUFJLFVBQVUsQ0FBQyxnQ0FBZ0MsRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQztJQUM1RixJQUFJLFVBQVUsQ0FBQyxrQ0FBa0MsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM3RixJQUFJLFVBQVUsQ0FDWixtQ0FBbUMsRUFDbkMsYUFBYSxFQUNiLFVBQVUsQ0FBQyxJQUFJLEVBQ2YsSUFBSSxFQUNKLEtBQUssRUFDTCxDQUFDLENBQ0Y7SUFDRCxJQUFJLFVBQVUsQ0FBQyw4QkFBOEIsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNoRjtRQUNOLE9BQU8sRUFBRSxxQ0FBcUM7UUFDOUMsVUFBVSxFQUFFLFdBQVc7UUFDdkIsSUFBSSxFQUFFLFVBQVUsQ0FBQyxJQUFJO1FBQ3JCLFFBQVEsRUFBRSxLQUFLO1FBQ2YsVUFBVSxFQUFFLEtBQUs7UUFDakIsU0FBUyxFQUFFLENBQUM7UUFDWixlQUFlLEVBQUUsRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUU7S0FDL0M7SUFDRCxJQUFJLFVBQVUsQ0FDWixpQ0FBaUMsRUFDakMsbUJBQW1CLEVBQ25CLFVBQVUsQ0FBQyxJQUFJLEVBQ2YsS0FBSyxFQUNMLEtBQUssRUFDTCxDQUFDLENBQ0Y7Q0FDRixDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sMEJBQTBCO0lBQ3JDLEdBQUMsQ0FBQyxJQUFHLE9BQU87SUFDWixHQUFDLENBQUMsSUFBRyxTQUFTO0lBQ2QsR0FBQyxDQUFDLElBQUcsTUFBTTtJQUNYLEdBQUMsQ0FBQyxJQUFHLElBQUk7SUFDVCxRQUFLLEdBQUUsUUFBUTtJQUNmLE9BQUksR0FBRSxNQUFNO09BQ2IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQjtJQUM3QixvQkFBNkIsUUFBUTtJQUNyQyxzQkFBK0IsU0FBUztJQUN4QyxtQkFBNEIsY0FBYztJQUMxQyxpQkFBMEIsT0FBTztPQUNsQyxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQUc7SUFDakMsS0FBSyxFQUFFLE1BQU07SUFDYixJQUFJLEVBQUUsNEJBQTRCO0NBQ25DLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxrQkFBa0IsR0FBRywwQkFBMEIsQ0FBQztBQUU3RCxNQUFNLENBQUMsSUFBTSx3QkFBd0I7SUFDbkMsb0JBQTZCLHNEQUFvRCxrQkFBb0I7SUFDckcsc0JBQStCLHdEQUFzRCxrQkFBb0I7SUFDekcsbUJBQTRCLDZEQUEyRCxrQkFBb0I7SUFDM0csaUJBQTBCLG1EQUFpRCxrQkFBb0I7T0FDaEcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VTaXplT3B0aW9uIH0gZnJvbSAnQGF2bC1jb250cm9scy9kYXRhdGFibGUvZGlzdC9hdmwtZGF0YXRhYmxlL2F2bC1kYXRhdGFibGUnO1xyXG5pbXBvcnQge1xyXG4gIENvbHVtbixcclxuICBDb2x1bW5UeXBlLFxyXG4gIExlYWZDb2x1bW5cclxufSBmcm9tICdAYXZsLWNvbnRyb2xzL2RhdGF0YWJsZS9kaXN0L2F2bC1kYXRhdGFibGUvY29sdW1uLWRlZmluaXRpb25zJztcclxuaW1wb3J0IHsgQXZsTm90aWZpY2F0aW9uVHlwZSB9IGZyb20gJ0BhdmwtY29udHJvbHMvaW50ZXJmYWNlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgREVGQVVMVF9QQUdFX1NJWkVfT1BUSU9OUzogUGFnZVNpemVPcHRpb25bXSA9IFtcclxuICB7IHZhbHVlOiAxNSwgbGFiZWw6ICdTaG93IDE1IHBlciBwYWdlJyB9LFxyXG4gIHsgdmFsdWU6IDUwLCBsYWJlbDogJ1Nob3cgNTAgcGVyIHBhZ2UnIH0sXHJcbiAgeyB2YWx1ZTogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsIGxhYmVsOiAnU2hvdyBhbGwnIH1cclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0ZJTFRFUlMgPSB7XHJcbiAgdHlwZToge1xyXG4gICAgd2FybmluZzogdW5kZWZpbmVkLFxyXG4gICAgZXJyb3I6IHVuZGVmaW5lZCxcclxuICAgIGluZm86IHVuZGVmaW5lZCxcclxuICAgIG9rOiB1bmRlZmluZWRcclxuICB9LFxyXG4gIHN0YXRlOiB7XHJcbiAgICByZWFkOiB1bmRlZmluZWQsXHJcbiAgICB1bnJlYWQ6IHVuZGVmaW5lZFxyXG4gIH0sXHJcbiAgZGF0ZToge1xyXG4gICAgZGF0ZUZyb21WYWx1ZTogdW5kZWZpbmVkLFxyXG4gICAgZGF0ZVRvVmFsdWU6IHVuZGVmaW5lZFxyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0NPTFVNTl9ERUZJTklUSU9OUyA9IFtcclxuICBuZXcgTGVhZkNvbHVtbignVml6Qm94Lk5vdGlmaWNhdGlvbkRpYWxvZy5UeXBlJywgJ2ljb24nLCBDb2x1bW5UeXBlLkljb24sIGZhbHNlLCBmYWxzZSwgMC41KSxcclxuICBuZXcgTGVhZkNvbHVtbignVml6Qm94Lk5vdGlmaWNhdGlvbkRpYWxvZy5Nb2R1bGUnLCAnbW9kdWxlJywgQ29sdW1uVHlwZS5UZXh0LCB0cnVlLCBmYWxzZSwgMyksXHJcbiAgbmV3IExlYWZDb2x1bW4oXHJcbiAgICAnVml6Qm94Lk5vdGlmaWNhdGlvbkRpYWxvZy5NZXNzYWdlJyxcclxuICAgICdtZXNzYWdlVGV4dCcsXHJcbiAgICBDb2x1bW5UeXBlLlRleHQsXHJcbiAgICB0cnVlLFxyXG4gICAgZmFsc2UsXHJcbiAgICA4XHJcbiAgKSxcclxuICBuZXcgTGVhZkNvbHVtbignVml6Qm94Lk5vdGlmaWNhdGlvbkRpYWxvZy5JZCcsICdpZCcsIENvbHVtblR5cGUuTnVtYmVyLCBmYWxzZSwgZmFsc2UsIDEpLFxyXG4gIDxDb2x1bW4+e1xyXG4gICAgY2FwdGlvbjogJ1ZpekJveC5Ob3RpZmljYXRpb25EaWFsb2cuVGltZXN0YW1wJyxcclxuICAgIHZhbHVlRmllbGQ6ICd0aW1lc3RhbXAnLFxyXG4gICAgdHlwZTogQ29sdW1uVHlwZS5EYXRlLFxyXG4gICAgc29ydGFibGU6IGZhbHNlLFxyXG4gICAgZmlsdGVyYWJsZTogZmFsc2UsXHJcbiAgICBmbGV4V2lkdGg6IDMsXHJcbiAgICBkYXRlVGltZU9wdGlvbnM6IHsgZm9ybWF0OiAnZGF0ZS10aW1lLXNob3J0JyB9XHJcbiAgfSxcclxuICBuZXcgTGVhZkNvbHVtbihcclxuICAgICdWaXpCb3guTm90aWZpY2F0aW9uRGlhbG9nLlN0YXRlJyxcclxuICAgICdjdXJyZW50SWNvblRvZ2dsZScsXHJcbiAgICBDb2x1bW5UeXBlLkljb24sXHJcbiAgICBmYWxzZSxcclxuICAgIGZhbHNlLFxyXG4gICAgMVxyXG4gIClcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBOT1RJRklDQVRJT05fVFlQRV9NQVBQSU5HUyA9IHtcclxuICBbMF06ICdlcnJvcicsXHJcbiAgWzFdOiAnd2FybmluZycsXHJcbiAgWzJdOiAnaW5mbycsXHJcbiAgWzNdOiAnb2snLFxyXG4gIGZhbHNlOiAndW5yZWFkJyxcclxuICB0cnVlOiAncmVhZCdcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBUWVBFX0lDT05fTUFQUElOR1MgPSB7XHJcbiAgW0F2bE5vdGlmaWNhdGlvblR5cGUuRXJyb3JdOiAnY2FuY2VsJyxcclxuICBbQXZsTm90aWZpY2F0aW9uVHlwZS5XYXJuaW5nXTogJ3dhcm5pbmcnLFxyXG4gIFtBdmxOb3RpZmljYXRpb25UeXBlLkluZm9dOiAnaW5mby1vdXRsaW5lJyxcclxuICBbQXZsTm90aWZpY2F0aW9uVHlwZS5PS106ICdjaGVjaydcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBTVEFURV9JQ09OX01BUFBJTkdTID0ge1xyXG4gIGZhbHNlOiAnbWFpbCcsXHJcbiAgdHJ1ZTogJ2NvbW11bmljYXRpb246bWFpbC1vdXRsaW5lJ1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSUNPTl9TVFlMRSA9ICdoZWlnaHQ6MjRweDsgd2lkdGg6MjRweDsnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFRZUEVfSUNPTl9TVFlMRV9NQVBQSU5HUyA9IHtcclxuICBbQXZsTm90aWZpY2F0aW9uVHlwZS5FcnJvcl06IGAtLWF2bC1pY29uLWN1c3RvbS1jb2xvcjogdmFyKC0tYXZsLWVycm9yLWNvbG9yKTsgJHtERUZBVUxUX0lDT05fU1RZTEV9YCxcclxuICBbQXZsTm90aWZpY2F0aW9uVHlwZS5XYXJuaW5nXTogYC0tYXZsLWljb24tY3VzdG9tLWNvbG9yOiB2YXIoLS1hdmwtd2FybmluZy1jb2xvcik7ICR7REVGQVVMVF9JQ09OX1NUWUxFfWAsXHJcbiAgW0F2bE5vdGlmaWNhdGlvblR5cGUuSW5mb106IGAtLWF2bC1pY29uLWN1c3RvbS1jb2xvcjogdmFyKC0tYXZsLWljb24tZGVmYXVsdC1jb2xvcik7ICR7REVGQVVMVF9JQ09OX1NUWUxFfWAsXHJcbiAgW0F2bE5vdGlmaWNhdGlvblR5cGUuT0tdOiBgLS1hdmwtaWNvbi1jdXN0b20tY29sb3I6IHZhcigtLWF2bC1vay1jb2xvcik7ICR7REVGQVVMVF9JQ09OX1NUWUxFfWBcclxufTtcclxuXHJcbiJdfQ==