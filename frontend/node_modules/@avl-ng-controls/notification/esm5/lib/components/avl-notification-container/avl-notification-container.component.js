import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './directives/animate-stack.directive';
import * as ɵngcc3 from './directives/animate-snackbar.directive';
import * as ɵngcc4 from '@avl-controls/ng-binders';
import * as ɵngcc5 from './directives/snackbar-listener.directive';
import * as ɵngcc6 from './directives/show-hide-snackbar.directive';
import * as ɵngcc7 from './directives/animate-button.directive';
import * as ɵngcc8 from '@ngx-translate/core';

var _c0 = ["warningStackElement"];
var _c1 = ["infoStackElement"];
var _c2 = ["infoStackIndicatorElement"];
function AvlNotificationContainerComponent_div_0_avl_snackbar_5_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "avl-snackbar", 14, 15);
    ɵngcc0.ɵɵlistener("buttonClicked", function AvlNotificationContainerComponent_div_0_avl_snackbar_5_Template_avl_snackbar_buttonClicked_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.onButtonClicked($event); })("notificationDismissed", function AvlNotificationContainerComponent_div_0_avl_snackbar_5_Template_avl_snackbar_notificationDismissed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var activeWarningNotification_r11 = ctx.ngIf; var ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.onNotificationDismissed($event, activeWarningNotification_r11); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var activeWarningNotification_r11 = ctx.ngIf;
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("message", activeWarningNotification_r11 == null ? null : activeWarningNotification_r11.messageText)("actionButtonLabel", ctx_r4.warningStack.stackIndicatorButtonLabel)("link", activeWarningNotification_r11.link)("messageType", activeWarningNotification_r11.type)("methodDescription", ctx_r4.warningStack.methodDescription);
} }
function AvlNotificationContainerComponent_div_0_div_7_button_9_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 25);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationContainerComponent_div_0_div_7_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(3); return ctx_r18.openFromStack(ctx_r18.warningStack.previousNotification); });
    ɵngcc0.ɵɵelementStart(1, "div", 26);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r17 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r17.warningStack.stackIndicatorButtonLabel);
} }
var _c3 = function (a1) { return { "notification": true, "has-action": a1 }; };
function AvlNotificationContainerComponent_div_0_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16, 17);
    ɵngcc0.ɵɵelementStart(2, "div", 18);
    ɵngcc0.ɵɵelementStart(3, "div", 19);
    ɵngcc0.ɵɵelementStart(4, "div", 20);
    ɵngcc0.ɵɵelement(5, "avl-icon", 21);
    ɵngcc0.ɵɵelementStart(6, "p", 22);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "avl-icon-button", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, AvlNotificationContainerComponent_div_0_div_7_button_9_Template, 3, 1, "button", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c3, ctx_r5.warningStack.stackIndicatorButtonLabel));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.warningStack.previousNotification == null ? null : ctx_r5.warningStack.previousNotification.messageText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.warningStack.stackIndicatorButtonLabel);
} }
function AvlNotificationContainerComponent_div_0_avl_snackbar_12_Template(rf, ctx) { if (rf & 1) {
    var _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "avl-snackbar", 27, 28);
    ɵngcc0.ɵɵlistener("buttonClicked", function AvlNotificationContainerComponent_div_0_avl_snackbar_12_Template_avl_snackbar_buttonClicked_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); var ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.onButtonClicked($event); })("notificationDismissed", function AvlNotificationContainerComponent_div_0_avl_snackbar_12_Template_avl_snackbar_notificationDismissed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); var activeInfoNotification_r20 = ctx.ngIf; var ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.onNotificationDismissed($event, activeInfoNotification_r20); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var activeInfoNotification_r20 = ctx.ngIf;
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("message", activeInfoNotification_r20.messageText)("actionButtonLabel", ctx_r8.infoStack.stackIndicatorButtonLabel)("link", activeInfoNotification_r20.link)("messageType", activeInfoNotification_r20.type)("displayIcon", ctx_r8.displayIcon)("methodDescription", ctx_r8.infoStack.methodDescription);
} }
function AvlNotificationContainerComponent_div_0_div_14_button_8_Template(rf, ctx) { if (rf & 1) {
    var _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 25);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationContainerComponent_div_0_div_14_button_8_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); var ctx_r27 = ɵngcc0.ɵɵnextContext(3); return ctx_r27.openFromStack(ctx_r27.infoStack.previousNotification); });
    ɵngcc0.ɵɵelementStart(1, "div", 26);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r26 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r26.infoStack.stackIndicatorButtonLabel);
} }
function AvlNotificationContainerComponent_div_0_div_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16, 29);
    ɵngcc0.ɵɵelementStart(2, "div", 18);
    ɵngcc0.ɵɵelementStart(3, "div", 19);
    ɵngcc0.ɵɵelementStart(4, "div", 20);
    ɵngcc0.ɵɵelementStart(5, "p", 22);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(7, "avl-icon-button", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, AvlNotificationContainerComponent_div_0_div_14_button_8_Template, 3, 1, "button", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c3, ctx_r9.infoStack.stackIndicatorButtonLabel));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r9.infoStack.previousNotification == null ? null : ctx_r9.infoStack.previousNotification.messageText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.infoStack.stackIndicatorButtonLabel);
} }
function AvlNotificationContainerComponent_div_0_div_15_Template(rf, ctx) { if (rf & 1) {
    var _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵelementStart(1, "avl-button", 31);
    ɵngcc0.ɵɵlistener("click", function AvlNotificationContainerComponent_div_0_div_15_Template_avl_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r30); var ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.dismissAll(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    var _r7 = ɵngcc0.ɵɵreference(11);
    var _r3 = ɵngcc0.ɵɵreference(4);
    var ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("infoStackHeight", (ctx_r10.infoStack == null ? null : ctx_r10.infoStack.notificationList == null ? null : ctx_r10.infoStack.notificationList.length) > 0 ? _r7.offsetHeight : 0)("warningStackHeight", (ctx_r10.warningStack == null ? null : ctx_r10.warningStack.notificationList == null ? null : ctx_r10.warningStack.notificationList.length) > 0 ? _r3.offsetHeight : 0)("infoStackIndicatorHeight", ctx_r10.infoStackIndicatorElement == null ? null : ctx_r10.infoStackIndicatorElement.nativeElement == null ? null : ctx_r10.infoStackIndicatorElement.nativeElement.offsetHeight)("warningStackIndicatorHeight", ctx_r10.warningStackIndicatorElement == null ? null : ctx_r10.warningStackIndicatorElement.nativeElement == null ? null : ctx_r10.warningStackIndicatorElement.nativeElement.offsetHeight);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 5, "VizBox.NotificationContainer.DismissAll"));
} }
function AvlNotificationContainerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2, 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4, 5);
    ɵngcc0.ɵɵtemplate(5, AvlNotificationContainerComponent_div_0_avl_snackbar_5_Template, 2, 5, "avl-snackbar", 6);
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, AvlNotificationContainerComponent_div_0_div_7_Template, 10, 5, "div", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 8, 9);
    ɵngcc0.ɵɵelementStart(10, "div", 10, 11);
    ɵngcc0.ɵɵtemplate(12, AvlNotificationContainerComponent_div_0_avl_snackbar_12_Template, 2, 6, "avl-snackbar", 12);
    ɵngcc0.ɵɵpipe(13, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, AvlNotificationContainerComponent_div_0_div_14_Template, 9, 5, "div", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(15, AvlNotificationContainerComponent_div_0_div_15_Template, 4, 7, "div", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r3 = ɵngcc0.ɵɵreference(4);
    var _r7 = ɵngcc0.ɵɵreference(11);
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("animateStack", ctx_r0.warningStack == null ? null : ctx_r0.warningStack.stackAnimation)("previousStackHeight", ctx_r0.infoStack.notificationList.length > 0 ? _r7.offsetHeight : 0)("snackbarMethodDescription", ctx_r0.warningStack.methodDescription);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("animateSnackbar", ctx_r0.warningStack.snackbarAnimation);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(6, 13, ctx_r0.warningStack.activeNotification$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.warningStack.notificationList.length > 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("animateStack", ctx_r0.infoStack == null ? null : ctx_r0.infoStack.stackAnimation)("previousStackHeight", ctx_r0.infoStack.notificationList.length > 0 ? _r3.offsetHeight : 0)("snackbarMethodDescription", ctx_r0.infoStack.methodDescription);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("animateSnackbar", ctx_r0.infoStack.snackbarAnimation);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(13, 15, ctx_r0.infoStack.activeNotification$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.infoStack.notificationList.length > 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r0.notificationList == null ? null : ctx_r0.notificationList.length) > 1);
} }
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { AfterViewChecked, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';
import { Observable } from 'rxjs';
import '@avl-controls/core/dist/avl-snackbar/avl-snackbar';
import { takeUntil } from 'rxjs/operators';
import { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';
import { Subject } from 'rxjs';
import { SnackbarStack } from './snackbar-stack';
import { ANIMATION_DURATION } from './avl-notification-container.consts';
var NOTIFICATION_TYPE = new Map([
    [0 /* Error */, 'Error'],
    [1 /* Warning */, 'Warning'],
    [2 /* Info */, 'Info'],
    [3 /* OK */, 'OK']
]);
var AvlNotificationContainerComponent = /** @class */ (function () {
    function AvlNotificationContainerComponent(cdRef) {
        var _this = this;
        this.cdRef = cdRef;
        /** Observable emits notifications. Default observable emits dummy notifications every 3s for 100s. */
        this.notification$ = new Observable(function subscribe(subscriber) {
            var i = 0;
            var intervalId = setInterval(function () {
                var warning = Math.round(Math.random());
                subscriber.next({
                    id: i++,
                    module: 'notification-container',
                    timestamp: new Date(),
                    type: warning ? 1 /* Warning */ : 2 /* Info */,
                    messageText: 'Snackbar with notification' + new Date().toTimeString(),
                    read: false,
                    link: 'https://vizbox.avl.com'
                });
            }, 3000);
            setTimeout(function () {
                clearInterval(intervalId);
            }, 100000);
        });
        this.openMenu = new EventEmitter();
        /** @hidden */
        this.stackHeight = {};
        /** @hidden */
        this.notificationList = [];
        this.destroyed$ = new Subject();
        /** @hidden */
        this.onButtonClicked = function (event) {
            if (event) {
                _this.openMenu.emit();
                _this.dismissAll();
            }
        };
        /** @hidden */
        this.onNotificationDismissed = function (event, notification) {
            var _a, _b;
            if (event) {
                var snackType = (_b = (_a = event.target) === null || _a === void 0 ? void 0 : _a.id) === null || _b === void 0 ? void 0 : _b.replace('Snackbar', '');
                _this.removeNotification(notification, snackType);
            }
        };
        /** @hidden */
        this.openFromStack = function (notification) {
            var stackName = _this.getStackName(notification.type);
            _this[stackName].methodDescription = new SnackbarMethodDescription('hide', true);
        };
        /** @hidden */
        this.dismissAll = function () {
            _this.notificationList = [];
            _this.warningStack.activeNotification$.next(undefined);
            _this.infoStack.activeNotification$.next(undefined);
        };
        this.handleNotification = function (notification) {
            _this.previousNotification = _this.notificationList[_this.notificationList.length - 1];
            _this.notificationList.push(notification);
            _this.updateStackActiveNotification(notification);
            _this.setStackAnimation(notification.type);
        };
        this.updateStackActiveNotification = function (notification) {
            var _a;
            var stackName = _this.getStack(notification === null || notification === void 0 ? void 0 : notification.type);
            _this.updateStackNotificationList(notification.type);
            _this.activeNotification = notification;
            if (_this[stackName].notificationList.length > 1) {
                _this.reopen = true;
                if (((_a = _this.previousNotification) === null || _a === void 0 ? void 0 : _a.type) === notification.type) {
                    _this[stackName].snackbarAnimation = 3 /* ToStack */;
                    // silently dismiss notification after previous notification animation
                    var timeout_1 = setTimeout(function () {
                        _this.silentlyDismissNotification(stackName);
                        _this[stackName].snackbarAnimation = null;
                        clearTimeout(timeout_1);
                    }, ANIMATION_DURATION);
                }
                else {
                    _this.silentlyDismissNotification(stackName);
                }
            }
            else {
                _this[stackName].activeNotification$.next(notification);
            }
        };
        this.updateStackNotificationList = function (notificationType) {
            var stack = _this[_this.getStack(notificationType)];
            if (stack) {
                stack.notificationList = _this.notificationList.filter(function (item) { return item.type === notificationType; });
            }
            return stack.notificationList;
        };
        this.silentlyDismissNotification = function (stackName) {
            _this[stackName].dismissedSilently = true;
            _this[stackName].methodDescription = new SnackbarMethodDescription('hide', false);
        };
        this.setStackAnimation = function (notificationType, animation) {
            var _a, _b, _c;
            var currentStack = _this.getStack(notificationType);
            var previousStack = _this.getStack(notificationType, true);
            if (((_b = (_a = _this[previousStack]) === null || _a === void 0 ? void 0 : _a.notificationList) === null || _b === void 0 ? void 0 : _b.length) > 0 &&
                ((_c = _this.previousNotification) === null || _c === void 0 ? void 0 : _c.type) !== notificationType) {
                _this[previousStack].stackAnimation = animation || 2 /* ToBottom */;
                _this[currentStack].stackAnimation =
                    animation === 1 /* ToTop */
                        ? 2 /* ToBottom */
                        : 1 /* ToTop */;
            }
        };
        this.removeNotification = function (notification, snackType) {
            var _a;
            var stackName = _this.getStack(notification === null || notification === void 0 ? void 0 : notification.type);
            if (_this[stackName].dismissedSilently) {
                //notification dismissed silently
                var stackName_1 = _this.getStack((_a = _this.activeNotification) === null || _a === void 0 ? void 0 : _a.type);
                _this[stackName_1].activeNotification$.next(_this.activeNotification);
                _this.reopen = false;
            }
            else {
                //notification dismissed
                _this.notificationList = _this.notificationList.filter(function (currentNotification) { return currentNotification.id !== notification.id; });
                _this.reopenLastNotification(notification, stackName);
            }
        };
        this.reopenLastNotification = function (notification, stackName) {
            var _a;
            var stackNotificationList = (_a = _this[stackName]) === null || _a === void 0 ? void 0 : _a.notificationList;
            if (_this.isLastNotificationDismissed(notification, _this[stackName]) &&
                (stackNotificationList === null || stackNotificationList === void 0 ? void 0 : stackNotificationList.length) > 0) {
                _this[stackName].reopen = true;
                stackNotificationList = _this.updateStackNotificationList(notification.type);
                var lastNotification = stackNotificationList[stackNotificationList.length - 1];
                if (lastNotification) {
                    _this[stackName].activeNotification$.next(lastNotification);
                }
                else {
                    _this[stackName].stackIndicator = false;
                    _this[stackName].reopen = false;
                    _this[stackName].animateStack = 2 /* ToBottom */;
                    _this.setStackAnimation(notification.type, 1 /* ToTop */);
                }
            }
        };
        this.isLastNotificationDismissed = function (notification, stack) {
            var lastNotification = stack.notificationList[stack.notificationList.length - 1];
            return (lastNotification === null || lastNotification === void 0 ? void 0 : lastNotification.id) === (notification === null || notification === void 0 ? void 0 : notification.id);
        };
        this.getStackName = function (stackType) {
            return stackType === 1 ? 'warningStack' : 'infoStack';
        };
        this.warningStack = new SnackbarStack(String(NOTIFICATION_TYPE.get(1 /* Warning */)).toLowerCase());
        this.infoStack = new SnackbarStack(String(NOTIFICATION_TYPE.get(2 /* Info */)).toLowerCase());
    }
    AvlNotificationContainerComponent.prototype.ngOnDestroy = function () {
        this.destroyed$.next();
        this.destroyed$.complete();
    };
    AvlNotificationContainerComponent.prototype.ngAfterViewChecked = function () {
        this.cdRef.detectChanges();
    };
    /** @hidden */
    AvlNotificationContainerComponent.prototype.ngOnInit = function () {
        var _this = this;
        var _a, _b;
        this.positionTop = ((_a = document.querySelector('main')) === null || _a === void 0 ? void 0 : _a.offsetTop) + 12 + 'px';
        (_b = this.notification$) === null || _b === void 0 ? void 0 : _b.pipe(takeUntil(this.destroyed$)).subscribe(function (notification) {
            _this.handleNotification(notification);
        });
    };
    AvlNotificationContainerComponent.prototype.getStack = function (notificationType, previous) {
        var stackType;
        if (notificationType === 1 /* Warning */ ||
            notificationType === 0 /* Error */) {
            stackType = previous ? 2 /* Info */ : 1 /* Warning */;
        }
        else {
            stackType = previous ? 1 /* Warning */ : 2 /* Info */;
        }
        return this.getStackName(stackType);
    };
    AvlNotificationContainerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        HostBinding('style.top'),
        __metadata("design:type", String)
    ], AvlNotificationContainerComponent.prototype, "positionTop", void 0);
    __decorate([
        ViewChild('warningStackElement'),
        __metadata("design:type", ElementRef)
    ], AvlNotificationContainerComponent.prototype, "warningStackElement", void 0);
    __decorate([
        ViewChild('infoStackElement'),
        __metadata("design:type", ElementRef)
    ], AvlNotificationContainerComponent.prototype, "infoStackElement", void 0);
    __decorate([
        ViewChild('infoStackIndicatorElement'),
        __metadata("design:type", ElementRef)
    ], AvlNotificationContainerComponent.prototype, "infoStackIndicatorElement", void 0);
    __decorate([
        ViewChild('infoStackIndicatorElement'),
        __metadata("design:type", ElementRef)
    ], AvlNotificationContainerComponent.prototype, "warningStackIndicatorElement", void 0);
    __decorate([
        Input('display-icon'),
        __metadata("design:type", Boolean)
    ], AvlNotificationContainerComponent.prototype, "displayIcon", void 0);
    __decorate([
        Input('notification$'),
        __metadata("design:type", Observable)
    ], AvlNotificationContainerComponent.prototype, "notification$", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlNotificationContainerComponent.prototype, "openMenu", void 0);
    AvlNotificationContainerComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef])
    ], AvlNotificationContainerComponent);
AvlNotificationContainerComponent.ɵfac = function AvlNotificationContainerComponent_Factory(t) { return new (t || AvlNotificationContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
AvlNotificationContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AvlNotificationContainerComponent, selectors: [["avl-notification-container"]], viewQuery: function AvlNotificationContainerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.warningStackElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoStackElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoStackIndicatorElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.warningStackIndicatorElement = _t.first);
    } }, hostVars: 2, hostBindings: function AvlNotificationContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("top", ctx.positionTop);
    } }, inputs: { notification$: "notification$", displayIcon: ["display-icon", "displayIcon"] }, outputs: { openMenu: "openMenu" }, decls: 2, vars: 3, consts: [["class", "snackbar", 4, "ngIf"], [1, "snackbar"], ["id", "warningStack", 1, "snackbar-stack", 3, "animateStack", "previousStackHeight", "snackbarMethodDescription"], ["warningStackElement", ""], ["id", "warningSnack", 3, "animateSnackbar"], ["warningSnackElement", ""], ["id", "warningSnackbar", "sliding", "", "snackbarListener", "", "showHideSnackbar", "warningSnackbar", 3, "message", "actionButtonLabel", "link", "messageType", "methodDescription", "buttonClicked", "notificationDismissed", 4, "ngIf"], ["class", "stack-indicator-container", 4, "ngIf"], ["id", "infoStack", 1, "snackbar-stack", 3, "animateStack", "previousStackHeight", "snackbarMethodDescription"], ["infoStackElement", ""], ["id", "infoSnack", 3, "animateSnackbar"], ["infoSnackElement", ""], ["id", "infoSnackbar", "sliding", "", "snackbarListener", "", "showHideSnackbar", "infoSnackbar", 3, "message", "actionButtonLabel", "link", "messageType", "displayIcon", "methodDescription", "buttonClicked", "notificationDismissed", 4, "ngIf"], ["animateButton", "", "class", "dismiss-all", 3, "infoStackHeight", "warningStackHeight", "infoStackIndicatorHeight", "warningStackIndicatorHeight", 4, "ngIf"], ["id", "warningSnackbar", "sliding", "", "snackbarListener", "", "showHideSnackbar", "warningSnackbar", 3, "message", "actionButtonLabel", "link", "messageType", "methodDescription", "buttonClicked", "notificationDismissed"], ["warningSnackbar", ""], [1, "stack-indicator-container"], ["warningStackIndicator", ""], [1, "stack-indicator"], [1, "notification-container"], [3, "ngClass"], ["icon", "icons:warning", "id", "warningIcon", 1, "warning"], ["id", "snackbarMessage"], ["id", "closeButton", "icon", "icons:close"], ["id", "actionButton", 3, "click", 4, "ngIf"], ["id", "actionButton", 3, "click"], [1, "button-label"], ["id", "infoSnackbar", "sliding", "", "snackbarListener", "", "showHideSnackbar", "infoSnackbar", 3, "message", "actionButtonLabel", "link", "messageType", "displayIcon", "methodDescription", "buttonClicked", "notificationDismissed"], ["infoSnackbar", ""], ["infoStackIndicator", ""], ["animateButton", "", 1, "dismiss-all", 3, "infoStackHeight", "warningStackHeight", "infoStackIndicatorHeight", "warningStackIndicatorHeight"], ["id", "dismissAll", 3, "click"]], template: function AvlNotificationContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AvlNotificationContainerComponent_div_0_Template, 16, 17, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.notification$));
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.AnimateStack, ɵngcc3.AnimateSnackbar, ɵngcc4.AvlInteractionControlDirective, ɵngcc4.AvlSnackbarDirective, ɵngcc5.SnackbarListener, ɵngcc6.ShowHideSnackbarDirective, ɵngcc1.NgClass, ɵngcc4.AvlIconButtonDirective, ɵngcc7.AnimateButton], pipes: [ɵngcc1.AsyncPipe, ɵngcc8.TranslatePipe], styles: ["[_nghost-%COMP%]{position:fixed;right:0;width:445px;display:flex;flex-direction:column;--avl-snackbar-text-color:var(--avl-on-background-info-color)}.snackbar[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:column}.snackbar.displayed[_ngcontent-%COMP%]{flex:1;max-height:100%}.snackbar-stack[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;width:100%}.stack-indicator-container[_ngcontent-%COMP%]{margin:0 12px;position:absolute;width:calc(100% - 12px);top:12px;z-index:-1}.snackbar-container[_ngcontent-%COMP%]{margin-top:0;margin-left:0;margin-right:0;width:100%}.button-label[_ngcontent-%COMP%]{text-align:left;text-transform:none}.stack-indicator[_ngcontent-%COMP%]{background-color:var(--avl-background-message-color);top:0;left:0;width:calc(100% - 24px);border-radius:4px;position:relative;height:100%;z-index:-1;box-shadow:0 3px 5px -1px rgb(0 0 0 / 20%),0 6px 10px 0 rgb(0 0 0 / 14%),0 1px 18px 0 rgb(0 0 0 / 12%)}.notification[_ngcontent-%COMP%]{display:flex;flex:1 1 100%;align-items:center;flex-direction:row;padding:0 12px 0 16px;justify-content:flex-start;cursor:pointer;text-overflow:ellipsis}.notification[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{flex-grow:1;-webkit-line-clamp:3;max-height:48px;text-overflow:ellipsis;line-height:19px;font-size:14px;margin:0 0 0 12px;padding:12px 0;font-family:var(--avl-font-family);color:var(--avl-on-background-info-color)}button#actionButton[_ngcontent-%COMP%]{font-family:var(--avl-font-family);font-weight:500;font-size:14px;color:var(--avl-on-background-message-link-color);background-color:var(--avl-button-background-default-color);max-height:48px;height:48px;width:100%;cursor:pointer;padding:12px;margin:-12px 0 0;border-radius:2px;border:0;outline:0}div#actionButton[_ngcontent-%COMP%]:hover{color:var(--avl-on-background-message-link-hover-color)}#warningIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-on-background-message-warning-color);flex:0 0 24px;--avl-icon-custom-color:var(--avl-warning-color)}#errorIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-on-background-message-error-color);flex:0 0 24px}#infoIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-on-background-message-emphasis-medium-color);flex:0 0 24px}#OKIcon[_ngcontent-%COMP%]{--avl-icon-custom-color:var(--avl-on-background-message-ok-color);flex:0 0 24px}.dismiss-all[_ngcontent-%COMP%]{position:absolute;padding:0 16px;border-radius:25px;background-color:var(--avl-background-message-color);width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;top:12px}#dismissAll[_ngcontent-%COMP%]{--avl-flat-button-label-color:var(--avl-on-background-message-link-color)}avl-icon-button[_ngcontent-%COMP%]{flex:0 0 48px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-on-background-message-icon-default-color);--avl-icon-ink-hover-color:var(--avl-on-background-message-icon-hover-color);--avl-icon-ink-focus-color:var(--avl-on-background-message-icon-focus-color);--avl-icon-ink-pressed-color:var(--avl-on-background-message-icon-pressed-color)}@media only screen and (min-width:320px) and (max-width:376px){[_nghost-%COMP%]{width:calc(100% - 32px)}}@media only screen and (min-width:460px){[_nghost-%COMP%]{width:445px}}@media only screen and (min-width:376px) and (max-width:400px){[_nghost-%COMP%]{width:376px}}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlNotificationContainerComponent, [{
        type: Component,
        args: [{
                selector: 'avl-notification-container',
                template: "<div class=\"snackbar\" *ngIf=\"notification$ | async as notification\">\r\n  <div\r\n    [animateStack]=\"warningStack?.stackAnimation\"\r\n    [previousStackHeight] = \"infoStack.notificationList.length>0 ? infoSnackElement.offsetHeight : 0\"\r\n    [snackbarMethodDescription] = \"warningStack.methodDescription\"\r\n    class=\"snackbar-stack\"\r\n    id=\"warningStack\"\r\n    #warningStackElement\r\n  >\r\n    <div [animateSnackbar]=\"warningStack.snackbarAnimation\" id=\"warningSnack\" #warningSnackElement>\r\n      <avl-snackbar\r\n        *ngIf=\"warningStack.activeNotification$ | async as activeWarningNotification\"\r\n        id=\"warningSnackbar\"\r\n        [message]=\"activeWarningNotification?.messageText\"\r\n        [actionButtonLabel]=\"warningStack.stackIndicatorButtonLabel\"\r\n        [link]=\"activeWarningNotification.link\"\r\n        [messageType]=\"activeWarningNotification.type\"\r\n        sliding\r\n        (buttonClicked)=\"onButtonClicked($event)\"\r\n        (notificationDismissed)=\"onNotificationDismissed($event, activeWarningNotification)\"\r\n        snackbarListener\r\n        #warningSnackbar\r\n        showHideSnackbar=\"warningSnackbar\"\r\n        [methodDescription]=\"warningStack.methodDescription\"\r\n      ></avl-snackbar>\r\n    </div>\r\n\r\n    <div class=\"stack-indicator-container\" *ngIf=\"warningStack.notificationList.length>1\" #warningStackIndicator>\r\n      <div class=\"stack-indicator\">\r\n        <div class=\"notification-container\">\r\n          <div [ngClass]=\"{'notification': true, 'has-action': warningStack.stackIndicatorButtonLabel}\">\r\n            <avl-icon icon=\"icons:warning\" id=\"warningIcon\" class=\"warning\"></avl-icon>\r\n            <p id=\"snackbarMessage\">{{ warningStack.previousNotification?.messageText }}</p>\r\n            <avl-icon-button id=\"closeButton\" icon=\"icons:close\"></avl-icon-button>\r\n          </div>\r\n          <button id=\"actionButton\" *ngIf=\"warningStack.stackIndicatorButtonLabel\" (click)=\"openFromStack(warningStack.previousNotification)\">\r\n            <div class=\"button-label\">{{ warningStack.stackIndicatorButtonLabel }}</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"snackbar-stack\"\r\n    id=\"infoStack\"\r\n    [animateStack]=\"infoStack?.stackAnimation\"\r\n    [previousStackHeight] = \"infoStack.notificationList.length>0 ? warningSnackElement.offsetHeight : 0\"\r\n    [snackbarMethodDescription] = \"infoStack.methodDescription\"\r\n    #infoStackElement\r\n  >\r\n    <div [animateSnackbar]=\"infoStack.snackbarAnimation\" id=\"infoSnack\" #infoSnackElement>\r\n      <avl-snackbar\r\n        id=\"infoSnackbar\"\r\n        *ngIf=\"infoStack.activeNotification$ | async as activeInfoNotification\"\r\n        [message]=\"activeInfoNotification.messageText\"\r\n        [actionButtonLabel]=\"infoStack.stackIndicatorButtonLabel\"\r\n        [link]=\"activeInfoNotification.link\"\r\n        [messageType]=\"activeInfoNotification.type\"\r\n        [displayIcon]=\"displayIcon\"\r\n        sliding\r\n        (buttonClicked)=\"onButtonClicked($event)\"\r\n        (notificationDismissed)=\"onNotificationDismissed($event, activeInfoNotification)\"\r\n        snackbarListener\r\n        #infoSnackbar\r\n        showHideSnackbar=\"infoSnackbar\"\r\n        [methodDescription]=\"infoStack.methodDescription\"\r\n      ></avl-snackbar>\r\n    </div>\r\n\r\n    <div class=\"stack-indicator-container\" *ngIf=\"infoStack.notificationList.length>1\" #infoStackIndicator>\r\n      <div class=\"stack-indicator\">\r\n        <div class=\"notification-container\">\r\n          <div [ngClass]=\"{'notification': true, 'has-action': infoStack.stackIndicatorButtonLabel}\">\r\n            <p id=\"snackbarMessage\">{{ infoStack.previousNotification?.messageText }}</p>\r\n            <avl-icon-button id=\"closeButton\" icon=\"icons:close\"></avl-icon-button>\r\n          </div>\r\n        </div>\r\n        <button id=\"actionButton\" *ngIf=\"infoStack.stackIndicatorButtonLabel\" (click)=\"openFromStack(infoStack.previousNotification)\">\r\n          <div class=\"button-label\">{{ infoStack.stackIndicatorButtonLabel }}</div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    animateButton\r\n    [infoStackHeight]=\"infoStack?.notificationList?.length > 0 ? infoSnackElement.offsetHeight : 0\"\r\n    [warningStackHeight]=\"warningStack?.notificationList?.length > 0 ? warningSnackElement.offsetHeight : 0\"\r\n    [infoStackIndicatorHeight]=\"infoStackIndicatorElement?.nativeElement?.offsetHeight\"\r\n    [warningStackIndicatorHeight]=\"warningStackIndicatorElement?.nativeElement?.offsetHeight\"\r\n    class=\"dismiss-all\"\r\n    *ngIf=\"notificationList?.length > 1\"\r\n  >\r\n    <avl-button id=\"dismissAll\" (click)=\"dismissAll()\">{{'VizBox.NotificationContainer.DismissAll' | translate}}</avl-button>\r\n  </div>\r\n</div>\r\n\r\n\r\n",
                styles: [":host{position:fixed;right:0;width:445px;display:flex;flex-direction:column;--avl-snackbar-text-color:var(--avl-on-background-info-color)}.snackbar{width:100%;display:flex;flex-direction:column}.snackbar.displayed{flex:1;max-height:100%}.snackbar-stack{position:absolute;top:0;left:0;right:0;width:100%}.stack-indicator-container{margin:0 12px;position:absolute;width:calc(100% - 12px);top:12px;z-index:-1}.snackbar-container{margin-top:0;margin-left:0;margin-right:0;width:100%}.button-label{text-align:left;text-transform:none}.stack-indicator{background-color:var(--avl-background-message-color);top:0;left:0;width:calc(100% - 24px);border-radius:4px;position:relative;height:100%;z-index:-1;box-shadow:0 3px 5px -1px rgb(0 0 0 / 20%),0 6px 10px 0 rgb(0 0 0 / 14%),0 1px 18px 0 rgb(0 0 0 / 12%)}.notification{display:flex;flex:1 1 100%;align-items:center;flex-direction:row;padding:0 12px 0 16px;justify-content:flex-start;cursor:pointer;text-overflow:ellipsis}.notification p{flex-grow:1;-webkit-line-clamp:3;max-height:48px;text-overflow:ellipsis;line-height:19px;font-size:14px;margin:0 0 0 12px;padding:12px 0;font-family:var(--avl-font-family);color:var(--avl-on-background-info-color)}button#actionButton{font-family:var(--avl-font-family);font-weight:500;font-size:14px;color:var(--avl-on-background-message-link-color);background-color:var(--avl-button-background-default-color);max-height:48px;height:48px;width:100%;cursor:pointer;padding:12px;margin:-12px 0 0;border-radius:2px;border:0;outline:0}div#actionButton:hover{color:var(--avl-on-background-message-link-hover-color)}#warningIcon{--avl-icon-custom-color:var(--avl-on-background-message-warning-color);flex:0 0 24px;--avl-icon-custom-color:var(--avl-warning-color)}#errorIcon{--avl-icon-custom-color:var(--avl-on-background-message-error-color);flex:0 0 24px}#infoIcon{--avl-icon-custom-color:var(--avl-on-background-message-emphasis-medium-color);flex:0 0 24px}#OKIcon{--avl-icon-custom-color:var(--avl-on-background-message-ok-color);flex:0 0 24px}.dismiss-all{position:absolute;padding:0 16px;border-radius:25px;background-color:var(--avl-background-message-color);width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;top:12px}#dismissAll{--avl-flat-button-label-color:var(--avl-on-background-message-link-color)}avl-icon-button{flex:0 0 48px;margin-left:12px;cursor:pointer;--avl-icon-button-color:var(--avl-on-background-message-icon-default-color);--avl-icon-ink-hover-color:var(--avl-on-background-message-icon-hover-color);--avl-icon-ink-focus-color:var(--avl-on-background-message-icon-focus-color);--avl-icon-ink-pressed-color:var(--avl-on-background-message-icon-pressed-color)}@media only screen and (min-width:320px) and (max-width:376px){:host{width:calc(100% - 32px)}}@media only screen and (min-width:460px){:host{width:445px}}@media only screen and (min-width:376px) and (max-width:400px){:host{width:376px}}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { notification$: [{
            type: Input,
            args: ['notification$']
        }], openMenu: [{
            type: Output
        }], positionTop: [{
            type: HostBinding,
            args: ['style.top']
        }], warningStackElement: [{
            type: ViewChild,
            args: ['warningStackElement']
        }], infoStackElement: [{
            type: ViewChild,
            args: ['infoStackElement']
        }], infoStackIndicatorElement: [{
            type: ViewChild,
            args: ['infoStackIndicatorElement']
        }], warningStackIndicatorElement: [{
            type: ViewChild,
            args: ['infoStackIndicatorElement']
        }], displayIcon: [{
            type: Input,
            args: ['display-icon']
        }] }); })();
    return AvlNotificationContainerComponent;
}());
export { AvlNotificationContainerComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,