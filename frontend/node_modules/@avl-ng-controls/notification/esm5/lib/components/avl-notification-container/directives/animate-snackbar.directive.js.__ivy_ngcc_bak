var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ElementRef, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';
import { animate, AnimationBuilder, AnimationMetadata, AnimationPlayer, AnimationStyleMetadata, style } from '@angular/animations';
import { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';
/** @hidden */
var AnimateSnackbar = /** @class */ (function () {
    function AnimateSnackbar(builder, el) {
        var _this = this;
        this.builder = builder;
        /** @hidden */
        this.defaultClass = true;
        this.getAnimation = function (animationName, initialStyle) {
            var elementWidth = _this.element.nativeElement.offsetWidth - 3 * MARGIN;
            var inStackStyle = style({
                marginTop: MARGIN + 'px',
                marginLeft: MARGIN + 'px',
                marginRight: MARGIN + 'px',
                width: elementWidth + 'px'
            });
            switch (animationName) {
                case 4 /* FromStack */:
                    return [animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle), initialStyle];
                case 3 /* ToStack */: {
                    return [initialStyle, animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle)];
                }
                default:
                    return [initialStyle, animate('1ms ease-in', initialStyle)];
            }
        };
        this.element = el;
    }
    AnimateSnackbar.prototype.ngOnChanges = function (changes) {
        if (changes.animateSnackbar) {
            var isInStack = changes.animateSnackbar.currentValue === 3 /* ToStack */;
            if (isInStack) {
                this.move();
            }
            else if (changes.animateSnackbar.previousValue === 3 /* ToStack */) {
                this.move();
            }
        }
    };
    AnimateSnackbar.prototype.show = function (metadata) {
        if (this.player) {
            this.player.destroy();
        }
        if (metadata) {
            var factory = this.builder.build(metadata);
            var player = factory.create(this.element.nativeElement);
            player.play();
        }
    };
    AnimateSnackbar.prototype.move = function () {
        var animationMetadata = this.animate();
        this.show(animationMetadata);
    };
    AnimateSnackbar.prototype.animate = function () {
        var initialStyle = style({
            marginTop: '0',
            width: '100%',
            marginLeft: '0',
            marginRight: '0'
        });
        return this.getAnimation(this.animateSnackbar, initialStyle);
    };
    AnimateSnackbar.ctorParameters = function () { return [
        { type: AnimationBuilder },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateSnackbar.prototype, "animateSnackbar", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateSnackbar.prototype, "positionAnimation", void 0);
    __decorate([
        Input('notification'),
        __metadata("design:type", Object)
    ], AnimateSnackbar.prototype, "notification", void 0);
    __decorate([
        Input('reopen'),
        __metadata("design:type", Boolean)
    ], AnimateSnackbar.prototype, "reopen", void 0);
    __decorate([
        HostBinding('class.in-stack'),
        __metadata("design:type", Boolean)
    ], AnimateSnackbar.prototype, "inStack", void 0);
    __decorate([
        HostBinding('class.no-animation'),
        __metadata("design:type", Boolean)
    ], AnimateSnackbar.prototype, "noAnimation", void 0);
    __decorate([
        HostBinding('class.snackbar-container'),
        __metadata("design:type", Object)
    ], AnimateSnackbar.prototype, "defaultClass", void 0);
    AnimateSnackbar = __decorate([
        Directive({ selector: '[animateSnackbar]' }),
        __metadata("design:paramtypes", [AnimationBuilder, ElementRef])
    ], AnimateSnackbar);
    return AnimateSnackbar;
}());
export { AnimateSnackbar };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0ZS1zbmFja2Jhci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYXZsLW5nLWNvbnRyb2xzL25vdGlmaWNhdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tY29udGFpbmVyL2RpcmVjdGl2ZXMvYW5pbWF0ZS1zbmFja2Jhci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BHLE9BQU8sRUFDTCxPQUFPLEVBQ1AsZ0JBQWdCLEVBQ2hCLGlCQUFpQixFQUNqQixlQUFlLEVBQ2Ysc0JBQXNCLEVBQ3RCLEtBQUssRUFDTixNQUFNLHFCQUFxQixDQUFDO0FBRzdCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNsRixjQUFjO0FBR2Q7SUF5QkUseUJBQXFCLE9BQXlCLEVBQUUsRUFBYztRQUE5RCxpQkFFQztRQUZvQixZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQU45QyxjQUFjO1FBQzJCLGlCQUFZLEdBQUcsSUFBSSxDQUFDO1FBNENyRCxpQkFBWSxHQUFHLFVBQ3JCLGFBQWdDLEVBQ2hDLFlBQW9DO1lBRXBDLElBQU0sWUFBWSxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1lBQ3pFLElBQU0sWUFBWSxHQUFHLEtBQUssQ0FBQztnQkFDekIsU0FBUyxFQUFFLE1BQU0sR0FBRyxJQUFJO2dCQUN4QixVQUFVLEVBQUUsTUFBTSxHQUFHLElBQUk7Z0JBQ3pCLFdBQVcsRUFBRSxNQUFNLEdBQUcsSUFBSTtnQkFDMUIsS0FBSyxFQUFFLFlBQVksR0FBRyxJQUFJO2FBQzNCLENBQUMsQ0FBQztZQUNILFFBQVEsYUFBYSxFQUFFO2dCQUNyQjtvQkFDRSxPQUFPLENBQUMsT0FBTyxDQUFDLGtCQUFrQixHQUFHLFlBQVksRUFBRSxZQUFZLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFFbEYsb0JBQThCLENBQUMsQ0FBQztvQkFDOUIsT0FBTyxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsa0JBQWtCLEdBQUcsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7aUJBQ2pGO2dCQUNEO29CQUNFLE9BQU8sQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLGFBQWEsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO2FBQy9EO1FBQ0gsQ0FBQyxDQUFDO1FBM0RBLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxxQ0FBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsZUFBZSxFQUFFO1lBQzNCLElBQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsWUFBWSxvQkFBOEIsQ0FBQztZQUNyRixJQUFJLFNBQVMsRUFBRTtnQkFDYixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDYjtpQkFBTSxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsYUFBYSxvQkFBOEIsRUFBRTtnQkFDOUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQ2I7U0FDRjtJQUNILENBQUM7SUFFTyw4QkFBSSxHQUFaLFVBQWEsUUFBNkI7UUFDeEMsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUN2QjtRQUNELElBQUksUUFBUSxFQUFFO1lBQ1osSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDN0MsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQzFELE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNmO0lBQ0gsQ0FBQztJQUNPLDhCQUFJLEdBQVo7UUFDRSxJQUFNLGlCQUFpQixHQUF3QixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDOUQsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFDTyxpQ0FBTyxHQUFmO1FBQ0UsSUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQ3pCLFNBQVMsRUFBRSxHQUFHO1lBQ2QsS0FBSyxFQUFFLE1BQU07WUFDYixVQUFVLEVBQUUsR0FBRztZQUNmLFdBQVcsRUFBRSxHQUFHO1NBQ2pCLENBQUMsQ0FBQztRQUNILE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQy9ELENBQUM7O2dCQXJDNkIsZ0JBQWdCO2dCQUFNLFVBQVU7O0lBdkJyRDtRQUFSLEtBQUssRUFBRTs7NERBQTZDO0lBRzVDO1FBQVIsS0FBSyxFQUFFOzs4REFBK0M7SUFHaEM7UUFBdEIsS0FBSyxDQUFDLGNBQWMsQ0FBQzs7eURBQXdDO0lBRzdDO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O21EQUEwQjtJQUdYO1FBQTlCLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzs7b0RBQWtCO0lBR2I7UUFBbEMsV0FBVyxDQUFDLG9CQUFvQixDQUFDOzt3REFBc0I7SUFHZjtRQUF4QyxXQUFXLENBQUMsMEJBQTBCLENBQUM7O3lEQUFxQjtJQXBCbEQsZUFBZTtRQUQzQixTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQzt5Q0EwQmIsZ0JBQWdCLEVBQU0sVUFBVTtPQXpCbkQsZUFBZSxDQXNGM0I7SUFBRCxzQkFBQztDQUFBLEFBdEZELElBc0ZDO1NBdEZZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgYW5pbWF0ZSxcclxuICBBbmltYXRpb25CdWlsZGVyLFxyXG4gIEFuaW1hdGlvbk1ldGFkYXRhLFxyXG4gIEFuaW1hdGlvblBsYXllcixcclxuICBBbmltYXRpb25TdHlsZU1ldGFkYXRhLFxyXG4gIHN0eWxlXHJcbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XHJcbmltcG9ydCB7IEF2bE5vdGlmaWNhdGlvbiB9IGZyb20gJ0BhdmwtY29udHJvbHMvaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IFBvc2l0aW9uQW5pbWF0aW9uIH0gZnJvbSAnLi9hbmltYXRlLXN0YWNrLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEFOSU1BVElPTl9EVVJBVElPTiwgTUFSR0lOIH0gZnJvbSAnLi4vYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIuY29uc3RzJztcclxuLyoqIEBoaWRkZW4gKi9cclxuXHJcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1thbmltYXRlU25hY2tiYXJdJyB9KVxyXG5leHBvcnQgY2xhc3MgQW5pbWF0ZVNuYWNrYmFyIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICAvKiogQGhpZGRlbiAqL1xyXG4gIEBJbnB1dCgpIHJlYWRvbmx5IGFuaW1hdGVTbmFja2JhcjogUG9zaXRpb25BbmltYXRpb247XHJcblxyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgQElucHV0KCkgcmVhZG9ubHkgcG9zaXRpb25BbmltYXRpb246IFBvc2l0aW9uQW5pbWF0aW9uO1xyXG5cclxuICAvKiogQGhpZGRlbiAqL1xyXG4gIEBJbnB1dCgnbm90aWZpY2F0aW9uJykgcmVhZG9ubHkgbm90aWZpY2F0aW9uOiBBdmxOb3RpZmljYXRpb247XHJcblxyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgQElucHV0KCdyZW9wZW4nKSByZWFkb25seSByZW9wZW46IGJvb2xlYW47XHJcblxyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pbi1zdGFjaycpIGluU3RhY2s6IGJvb2xlYW47XHJcblxyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5uby1hbmltYXRpb24nKSBub0FuaW1hdGlvbjogYm9vbGVhbjtcclxuXHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNuYWNrYmFyLWNvbnRhaW5lcicpIGRlZmF1bHRDbGFzcyA9IHRydWU7XHJcblxyXG4gIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZjtcclxuICBwcml2YXRlIHBsYXllcjogQW5pbWF0aW9uUGxheWVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihyZWFkb25seSBidWlsZGVyOiBBbmltYXRpb25CdWlsZGVyLCBlbDogRWxlbWVudFJlZikge1xyXG4gICAgdGhpcy5lbGVtZW50ID0gZWw7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICBpZiAoY2hhbmdlcy5hbmltYXRlU25hY2tiYXIpIHtcclxuICAgICAgY29uc3QgaXNJblN0YWNrID0gY2hhbmdlcy5hbmltYXRlU25hY2tiYXIuY3VycmVudFZhbHVlID09PSBQb3NpdGlvbkFuaW1hdGlvbi5Ub1N0YWNrO1xyXG4gICAgICBpZiAoaXNJblN0YWNrKSB7XHJcbiAgICAgICAgdGhpcy5tb3ZlKCk7XHJcbiAgICAgIH0gZWxzZSBpZiAoY2hhbmdlcy5hbmltYXRlU25hY2tiYXIucHJldmlvdXNWYWx1ZSA9PT0gUG9zaXRpb25BbmltYXRpb24uVG9TdGFjaykge1xyXG4gICAgICAgIHRoaXMubW92ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHNob3cobWV0YWRhdGE6IEFuaW1hdGlvbk1ldGFkYXRhW10pIHtcclxuICAgIGlmICh0aGlzLnBsYXllcikge1xyXG4gICAgICB0aGlzLnBsYXllci5kZXN0cm95KCk7XHJcbiAgICB9XHJcbiAgICBpZiAobWV0YWRhdGEpIHtcclxuICAgICAgY29uc3QgZmFjdG9yeSA9IHRoaXMuYnVpbGRlci5idWlsZChtZXRhZGF0YSk7XHJcbiAgICAgIGNvbnN0IHBsYXllciA9IGZhY3RvcnkuY3JlYXRlKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50KTtcclxuICAgICAgcGxheWVyLnBsYXkoKTtcclxuICAgIH1cclxuICB9XHJcbiAgcHJpdmF0ZSBtb3ZlKCkge1xyXG4gICAgY29uc3QgYW5pbWF0aW9uTWV0YWRhdGE6IEFuaW1hdGlvbk1ldGFkYXRhW10gPSB0aGlzLmFuaW1hdGUoKTtcclxuICAgIHRoaXMuc2hvdyhhbmltYXRpb25NZXRhZGF0YSk7XHJcbiAgfVxyXG4gIHByaXZhdGUgYW5pbWF0ZSgpOiBBbmltYXRpb25NZXRhZGF0YVtdIHtcclxuICAgIGNvbnN0IGluaXRpYWxTdHlsZSA9IHN0eWxlKHtcclxuICAgICAgbWFyZ2luVG9wOiAnMCcsXHJcbiAgICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICAgIG1hcmdpbkxlZnQ6ICcwJyxcclxuICAgICAgbWFyZ2luUmlnaHQ6ICcwJ1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGhpcy5nZXRBbmltYXRpb24odGhpcy5hbmltYXRlU25hY2tiYXIsIGluaXRpYWxTdHlsZSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldEFuaW1hdGlvbiA9IChcclxuICAgIGFuaW1hdGlvbk5hbWU6IFBvc2l0aW9uQW5pbWF0aW9uLFxyXG4gICAgaW5pdGlhbFN0eWxlOiBBbmltYXRpb25TdHlsZU1ldGFkYXRhXHJcbiAgKTogQW5pbWF0aW9uTWV0YWRhdGFbXSA9PiB7XHJcbiAgICBjb25zdCBlbGVtZW50V2lkdGggPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aCAtIDMgKiBNQVJHSU47XHJcbiAgICBjb25zdCBpblN0YWNrU3R5bGUgPSBzdHlsZSh7XHJcbiAgICAgIG1hcmdpblRvcDogTUFSR0lOICsgJ3B4JyxcclxuICAgICAgbWFyZ2luTGVmdDogTUFSR0lOICsgJ3B4JyxcclxuICAgICAgbWFyZ2luUmlnaHQ6IE1BUkdJTiArICdweCcsXHJcbiAgICAgIHdpZHRoOiBlbGVtZW50V2lkdGggKyAncHgnXHJcbiAgICB9KTtcclxuICAgIHN3aXRjaCAoYW5pbWF0aW9uTmFtZSkge1xyXG4gICAgICBjYXNlIFBvc2l0aW9uQW5pbWF0aW9uLkZyb21TdGFjazpcclxuICAgICAgICByZXR1cm4gW2FuaW1hdGUoQU5JTUFUSU9OX0RVUkFUSU9OICsgJ21zIGVhc2UtaW4nLCBpblN0YWNrU3R5bGUpLCBpbml0aWFsU3R5bGVdO1xyXG5cclxuICAgICAgY2FzZSBQb3NpdGlvbkFuaW1hdGlvbi5Ub1N0YWNrOiB7XHJcbiAgICAgICAgcmV0dXJuIFtpbml0aWFsU3R5bGUsIGFuaW1hdGUoQU5JTUFUSU9OX0RVUkFUSU9OICsgJ21zIGVhc2UtaW4nLCBpblN0YWNrU3R5bGUpXTtcclxuICAgICAgfVxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiBbaW5pdGlhbFN0eWxlLCBhbmltYXRlKCcxbXMgZWFzZS1pbicsIGluaXRpYWxTdHlsZSldO1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuIl19