import * as ɵngcc0 from '@angular/core';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, Input, HostBinding } from '@angular/core';
import { MARGIN } from '../avl-notification-container.consts';
var AnimateButton = /** @class */ (function () {
    function AnimateButton() {
        var _this = this;
        this.getInfoHeight = function () {
            return _this.infoStackHeight > _this.infoStackIndicatorHeight
                ? _this.infoStackHeight
                : _this.infoStackIndicatorHeight;
        };
        this.getWarningHeight = function () {
            return _this.warningStackHeight > _this.warningStackIndicatorHeight
                ? _this.warningStackHeight
                : _this.warningStackIndicatorHeight;
        };
        this.getOffsetHeight = function (height) {
            return height ? height + MARGIN * 2 : 0;
        };
    }
    AnimateButton.prototype.ngOnChanges = function (changes) {
        var infoStackOffsetHeight = this.getOffsetHeight(this.getInfoHeight());
        var warningStackOffsetHeight = this.getOffsetHeight(this.getWarningHeight());
        this.styleTop = infoStackOffsetHeight + warningStackOffsetHeight + 'px';
    };
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateButton.prototype, "increment", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateButton.prototype, "infoStackHeight", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateButton.prototype, "warningStackHeight", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateButton.prototype, "infoStackIndicatorHeight", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AnimateButton.prototype, "warningStackIndicatorHeight", void 0);
    __decorate([
        HostBinding('style.top'),
        __metadata("design:type", String)
    ], AnimateButton.prototype, "styleTop", void 0);
    AnimateButton = __decorate([ __metadata("design:paramtypes", [])
    ], AnimateButton);
AnimateButton.ɵfac = function AnimateButton_Factory(t) { return new (t || AnimateButton)(); };
AnimateButton.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AnimateButton, selectors: [["", "animateButton", ""]], hostVars: 2, hostBindings: function AnimateButton_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("top", ctx.styleTop);
    } }, inputs: { increment: "increment", infoStackHeight: "infoStackHeight", warningStackHeight: "warningStackHeight", infoStackIndicatorHeight: "infoStackIndicatorHeight", warningStackIndicatorHeight: "warningStackIndicatorHeight" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AnimateButton, [{
        type: Directive,
        args: [{ selector: '[animateButton]' }]
    }], function () { return []; }, { styleTop: [{
            type: HostBinding,
            args: ['style.top']
        }], increment: [{
            type: Input
        }], infoStackHeight: [{
            type: Input
        }], warningStackHeight: [{
            type: Input
        }], infoStackIndicatorHeight: [{
            type: Input
        }], warningStackIndicatorHeight: [{
            type: Input
        }] }); })();
    return AnimateButton;
}());
export { AnimateButton };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0ZS1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1uZy1jb250cm9scy9ub3RpZmljYXRpb24vbGliL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIvZGlyZWN0aXZlcy9hbmltYXRlLWJ1dHRvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRzlEO0FBQWlELElBZS9DO0FBQ1EsUUFEUixpQkFBZ0I7QUFDbEIsUUFLVSxrQkFBYSxHQUFHO0FBQWMsWUFDcEMsT0FBTyxLQUFJLENBQUMsZUFBZSxHQUFHLEtBQUksQ0FBQyx3QkFBd0I7QUFDL0QsZ0JBQU0sQ0FBQyxDQUFDLEtBQUksQ0FBQyxlQUFlO0FBQzVCLGdCQUFNLENBQUMsQ0FBQyxLQUFJLENBQUMsd0JBQXdCLENBQUM7QUFDdEMsUUFBRSxDQUFDLENBQUM7QUFDSixRQUFVLHFCQUFnQixHQUFHO0FBQWMsWUFDdkMsT0FBTyxLQUFJLENBQUMsa0JBQWtCLEdBQUcsS0FBSSxDQUFDLDJCQUEyQjtBQUNyRSxnQkFBTSxDQUFDLENBQUMsS0FBSSxDQUFDLGtCQUFrQjtBQUMvQixnQkFBTSxDQUFDLENBQUMsS0FBSSxDQUFDLDJCQUEyQixDQUFDO0FBQ3pDLFFBQUUsQ0FBQyxDQUFDO0FBQ0osUUFDVSxvQkFBZSxHQUFHLFVBQUMsTUFBYztBQUFJLFlBQzNDLE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVDLFFBQUUsQ0FBQyxDQUFDO0FBQ0osSUFwQmlCLENBQUM7QUFDbEIsSUFBRSxtQ0FBVyxHQUFYLFVBQVksT0FBc0I7QUFB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YW5nZXMsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBNQVJHSU4gfSBmcm9tICcuLi9hdmwtbm90aWZpY2F0aW9uLWNvbnRhaW5lci5jb25zdHMnO1xyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2FuaW1hdGVCdXR0b25dJyB9KVxyXG5leHBvcnQgY2xhc3MgQW5pbWF0ZUJ1dHRvbiBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBASW5wdXQoKSBpbmNyZW1lbnQ6IG51bWJlcjtcclxuXHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBASW5wdXQoKSBpbmZvU3RhY2tIZWlnaHQ6IG51bWJlcjtcclxuICAvKiogQGhpZGRlbiAqL1xyXG4gIEBJbnB1dCgpIHdhcm5pbmdTdGFja0hlaWdodDogbnVtYmVyO1xyXG4gIC8qKiBAaGlkZGVuICovXHJcbiAgQElucHV0KCkgaW5mb1N0YWNrSW5kaWNhdG9ySGVpZ2h0OiBudW1iZXI7XHJcbiAgLyoqIEBoaWRkZW4gKi9cclxuICBASW5wdXQoKSB3YXJuaW5nU3RhY2tJbmRpY2F0b3JIZWlnaHQ6IG51bWJlcjtcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS50b3AnKSBzdHlsZVRvcDogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgY29uc3QgaW5mb1N0YWNrT2Zmc2V0SGVpZ2h0ID0gdGhpcy5nZXRPZmZzZXRIZWlnaHQodGhpcy5nZXRJbmZvSGVpZ2h0KCkpO1xyXG4gICAgY29uc3Qgd2FybmluZ1N0YWNrT2Zmc2V0SGVpZ2h0ID0gdGhpcy5nZXRPZmZzZXRIZWlnaHQodGhpcy5nZXRXYXJuaW5nSGVpZ2h0KCkpO1xyXG4gICAgdGhpcy5zdHlsZVRvcCA9IGluZm9TdGFja09mZnNldEhlaWdodCArIHdhcm5pbmdTdGFja09mZnNldEhlaWdodCArICdweCc7XHJcbiAgfVxyXG4gIHByaXZhdGUgZ2V0SW5mb0hlaWdodCA9ICgpOiBudW1iZXIgPT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaW5mb1N0YWNrSGVpZ2h0ID4gdGhpcy5pbmZvU3RhY2tJbmRpY2F0b3JIZWlnaHRcclxuICAgICAgPyB0aGlzLmluZm9TdGFja0hlaWdodFxyXG4gICAgICA6IHRoaXMuaW5mb1N0YWNrSW5kaWNhdG9ySGVpZ2h0O1xyXG4gIH07XHJcbiAgcHJpdmF0ZSBnZXRXYXJuaW5nSGVpZ2h0ID0gKCk6IG51bWJlciA9PiB7XHJcbiAgICByZXR1cm4gdGhpcy53YXJuaW5nU3RhY2tIZWlnaHQgPiB0aGlzLndhcm5pbmdTdGFja0luZGljYXRvckhlaWdodFxyXG4gICAgICA/IHRoaXMud2FybmluZ1N0YWNrSGVpZ2h0XHJcbiAgICAgIDogdGhpcy53YXJuaW5nU3RhY2tJbmRpY2F0b3JIZWlnaHQ7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBnZXRPZmZzZXRIZWlnaHQgPSAoaGVpZ2h0OiBudW1iZXIpOiBudW1iZXIgPT4ge1xyXG4gICAgcmV0dXJuIGhlaWdodCA/IGhlaWdodCArIE1BUkdJTiAqIDIgOiAwO1xyXG4gIH07XHJcbn1cclxuIl19