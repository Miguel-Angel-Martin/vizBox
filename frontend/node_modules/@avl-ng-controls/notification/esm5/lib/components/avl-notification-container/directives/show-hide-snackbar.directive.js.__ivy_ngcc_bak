var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, Input, SimpleChanges, OnChanges, ElementRef } from '@angular/core';
/**@hidden */
var SnackbarMethodDescription = /** @class */ (function () {
    function SnackbarMethodDescription(method, animate) {
        this.method = method;
        this.animate = animate;
    }
    return SnackbarMethodDescription;
}());
export { SnackbarMethodDescription };
var ShowHideSnackbarDirective = /** @class */ (function () {
    function ShowHideSnackbarDirective(el) {
        this.element = el;
    }
    ShowHideSnackbarDirective.prototype.ngOnChanges = function (changes) {
        var _this = this;
        var _a, _b, _c, _d;
        if (changes.methodDescription) {
            if (((_a = changes.methodDescription.currentValue) === null || _a === void 0 ? void 0 : _a.method) === 'show') {
                setTimeout(function () { var _a, _b; return (_a = _this.element.nativeElement) === null || _a === void 0 ? void 0 : _a.showSnackbar('relative', !((_b = changes.methodDescription.currentValue) === null || _b === void 0 ? void 0 : _b.animate)); }, 0);
            }
            else if (((_b = changes.methodDescription.currentValue) === null || _b === void 0 ? void 0 : _b.method) === 'hide') {
                (_c = this.element.nativeElement) === null || _c === void 0 ? void 0 : _c.hideSnackbar((_d = changes.methodDescription.currentValue) === null || _d === void 0 ? void 0 : _d.animate);
            }
        }
    };
    ShowHideSnackbarDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", SnackbarMethodDescription)
    ], ShowHideSnackbarDirective.prototype, "methodDescription", void 0);
    ShowHideSnackbarDirective = __decorate([
        Directive({ selector: '[showHideSnackbar]' }),
        __metadata("design:paramtypes", [ElementRef])
    ], ShowHideSnackbarDirective);
    return ShowHideSnackbarDirective;
}());
export { ShowHideSnackbarDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1oaWRlLXNuYWNrYmFyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtbmctY29udHJvbHMvbm90aWZpY2F0aW9uLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIvZGlyZWN0aXZlcy9zaG93LWhpZGUtc25hY2tiYXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZGLGFBQWE7QUFDYjtJQUlFLG1DQUFZLE1BQXVCLEVBQUUsT0FBZ0I7UUFDbkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztJQUNILGdDQUFDO0FBQUQsQ0FBQyxBQVJELElBUUM7O0FBR0Q7SUFLRSxtQ0FBWSxFQUFjO1FBQ3hCLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFDRCwrQ0FBVyxHQUFYLFVBQVksT0FBc0I7UUFBbEMsaUJBZUM7O1FBZEMsSUFBSSxPQUFPLENBQUMsaUJBQWlCLEVBQUU7WUFDN0IsSUFBSSxPQUFBLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLDBDQUFFLE1BQU0sTUFBSyxNQUFNLEVBQUU7Z0JBQzdELFVBQVUsQ0FDUix1Q0FDRSxLQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsMENBQUUsWUFBWSxDQUN0QyxVQUFVLEVBQ1YsUUFBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsWUFBWSwwQ0FBRSxPQUFPLENBQUEsSUFDakQsRUFDSCxDQUFDLENBQ0YsQ0FBQzthQUNIO2lCQUFNLElBQUksT0FBQSxPQUFPLENBQUMsaUJBQWlCLENBQUMsWUFBWSwwQ0FBRSxNQUFNLE1BQUssTUFBTSxFQUFFO2dCQUNwRSxNQUFBLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSwwQ0FBRSxZQUFZLE9BQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLFlBQVksMENBQUUsT0FBTyxFQUFFO2FBQzNGO1NBQ0Y7SUFDSCxDQUFDOztnQkFsQmUsVUFBVTs7SUFIakI7UUFBUixLQUFLLEVBQUU7a0NBQW9CLHlCQUF5Qjt3RUFBQztJQUYzQyx5QkFBeUI7UUFEckMsU0FBUyxDQUFDLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixFQUFFLENBQUM7eUNBTTVCLFVBQVU7T0FMZix5QkFBeUIsQ0F3QnJDO0lBQUQsZ0NBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXhCWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8qKkBoaWRkZW4gKi9cclxuZXhwb3J0IGNsYXNzIFNuYWNrYmFyTWV0aG9kRGVzY3JpcHRpb24ge1xyXG4gIG1ldGhvZDogJ3Nob3cnIHwgJ2hpZGUnO1xyXG4gIGFuaW1hdGU6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKG1ldGhvZDogJ3Nob3cnIHwgJ2hpZGUnLCBhbmltYXRlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLm1ldGhvZCA9IG1ldGhvZDtcclxuICAgIHRoaXMuYW5pbWF0ZSA9IGFuaW1hdGU7XHJcbiAgfVxyXG59XHJcblxyXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbc2hvd0hpZGVTbmFja2Jhcl0nIH0pXHJcbmV4cG9ydCBjbGFzcyBTaG93SGlkZVNuYWNrYmFyRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICAvKiogQGhpZGRlbiAqL1xyXG4gIEBJbnB1dCgpIG1ldGhvZERlc2NyaXB0aW9uOiBTbmFja2Jhck1ldGhvZERlc2NyaXB0aW9uO1xyXG4gIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZjtcclxuXHJcbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpIHtcclxuICAgIHRoaXMuZWxlbWVudCA9IGVsO1xyXG4gIH1cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICBpZiAoY2hhbmdlcy5tZXRob2REZXNjcmlwdGlvbikge1xyXG4gICAgICBpZiAoY2hhbmdlcy5tZXRob2REZXNjcmlwdGlvbi5jdXJyZW50VmFsdWU/Lm1ldGhvZCA9PT0gJ3Nob3cnKSB7XHJcbiAgICAgICAgc2V0VGltZW91dChcclxuICAgICAgICAgICgpID0+XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50Py5zaG93U25hY2tiYXIoXHJcbiAgICAgICAgICAgICAgJ3JlbGF0aXZlJyxcclxuICAgICAgICAgICAgICAhY2hhbmdlcy5tZXRob2REZXNjcmlwdGlvbi5jdXJyZW50VmFsdWU/LmFuaW1hdGVcclxuICAgICAgICAgICAgKSxcclxuICAgICAgICAgIDBcclxuICAgICAgICApO1xyXG4gICAgICB9IGVsc2UgaWYgKGNoYW5nZXMubWV0aG9kRGVzY3JpcHRpb24uY3VycmVudFZhbHVlPy5tZXRob2QgPT09ICdoaWRlJykge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50Py5oaWRlU25hY2tiYXIoY2hhbmdlcy5tZXRob2REZXNjcmlwdGlvbi5jdXJyZW50VmFsdWU/LmFuaW1hdGUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==