import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@avl-controls/ng-binders';
import * as ɵngcc3 from '@ngx-translate/core';

var _c0 = ["list"];
function AvlNotificationMenuComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" (", ctx_r0.numberOfUnreadNotifications, ") ");
} }
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NOTIFICATIONS_OVERFLOW_MENU, TYPE_ICON_MAPPINGS } from './avl-notification-menu.consts';
var AvlNotificationMenuComponent = /** @class */ (function () {
    function AvlNotificationMenuComponent() {
        var _this = this;
        this.open = false;
        this.openChange = new EventEmitter();
        this.openDetails = new EventEmitter();
        this.notificationStateChanged = new EventEmitter();
        this.markAllAsRead = new EventEmitter();
        this.markAllAsUnread = new EventEmitter();
        this.overflowMenuItems = [];
        this.notificationList = [];
        this.numberOfUnreadNotifications = 0;
        this.overflowMenuHandlers = {
            markAllAsRead: function () {
                _this.markAllAsRead.emit();
                _this.numberOfUnreadNotifications = 0;
            },
            markAllAsUnread: function () {
                _this.markAllAsUnread.emit();
                _this.numberOfUnreadNotifications = _this.notificationList.length;
            },
            undefined: function () { }
        };
        this.translateLabels();
    }
    Object.defineProperty(AvlNotificationMenuComponent.prototype, "notifications", {
        set: function (notifications) {
            this.notificationList = this.prepareNotifications(notifications);
            this.numberOfUnreadNotifications = notifications.filter(function (notif) { return !notif.read; }).length;
        },
        enumerable: true,
        configurable: true
    });
    AvlNotificationMenuComponent.prototype.ngAfterViewInit = function () {
        this.list.nativeElement.revertedList = true;
    };
    AvlNotificationMenuComponent.prototype.onNotificationStateChanged = function (event) {
        var notificationMenuItem = __assign({}, event.detail.value);
        var notification = __assign(__assign({}, notificationMenuItem), { read: notificationMenuItem.iconToggleValue });
        notification.read ? this.numberOfUnreadNotifications-- : this.numberOfUnreadNotifications++;
        this.notificationStateChanged.emit(notification);
        this.list.nativeElement.removeFocus();
    };
    AvlNotificationMenuComponent.prototype.onItemClicked = function (item) {
        this.overflowMenuHandlers[item.action]();
    };
    AvlNotificationMenuComponent.prototype.onOpenChanged = function (event) {
        if (!event.detail.value) {
            this.openChange.emit(false);
        }
        else {
            this.notificationList = __spread(this.notificationList);
        }
    };
    AvlNotificationMenuComponent.prototype.onOverflowMenuClicked = function () {
        this.list.nativeElement.removeFocus();
    };
    AvlNotificationMenuComponent.prototype.onDetailsClicked = function () {
        this.open = false;
        this.openDetails.emit();
        this.openChange.emit(false);
    };
    AvlNotificationMenuComponent.prototype.prepareNotifications = function (notifications) {
        var _this = this;
        return notifications.map(function (notification) { return (__assign(__assign({}, notification), { label: notification.messageText, sublabel: _this.formatDateTime(notification.timestamp), icon: TYPE_ICON_MAPPINGS[notification.type], iconToggleUnchecked: 'mail', iconToggleChecked: 'communication:mail-outline', iconToggleValue: notification.read })); });
    };
    AvlNotificationMenuComponent.prototype.formatDateTime = function (date) {
        return date === null
            ? ''
            : AvlLocalizationService.formatDateTime(date, {
                format: 'date-short'
            }) + " " + AvlLocalizationService.formatDateTime(date, { format: 'time-long' });
    };
    AvlNotificationMenuComponent.prototype.translateLabels = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!AvlLocalizationService || !AvlLocalizationService.translationService) {
                            return [2 /*return*/];
                        }
                        _a = this;
                        return [4 /*yield*/, this.translateMenu(NOTIFICATIONS_OVERFLOW_MENU)];
                    case 1:
                        _a.overflowMenuItems = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AvlNotificationMenuComponent.prototype.translateMenu = function (menu) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all(menu.map(function (group) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, this.translateMenuGroup(group)];
                                case 1: return [2 /*return*/, _a.sent()];
                            }
                        }); }); }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    AvlNotificationMenuComponent.prototype.translateMenuGroup = function (group) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = {};
                        return [4 /*yield*/, Promise.all(group.items.map(function (item) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.translateMenuItem(item)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                }
                            }); }); }))];
                    case 1: return [2 /*return*/, (_a.items = _b.sent(),
                            _a)];
                }
            });
        });
    };
    AvlNotificationMenuComponent.prototype.translateMenuItem = function (item) {
        return __awaiter(this, void 0, void 0, function () {
            var translateService, _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        translateService = AvlLocalizationService.translationService;
                        _a = [__assign({}, item)];
                        _b = {};
                        return [4 /*yield*/, translateService.translate(item.label)];
                    case 1:
                        _b.label = _d.sent();
                        if (!item.sublabel) return [3 /*break*/, 3];
                        return [4 /*yield*/, translateService.translate(item.sublabel)];
                    case 2:
                        _c = _d.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _c = null;
                        _d.label = 4;
                    case 4: return [2 /*return*/, __assign.apply(void 0, _a.concat([(_b.sublabel = _c, _b)]))];
                }
            });
        });
    };
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AvlNotificationMenuComponent.prototype, "open", void 0);
    __decorate([
        Input(),
        __metadata("design:type", HTMLElement)
    ], AvlNotificationMenuComponent.prototype, "trigger", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], AvlNotificationMenuComponent.prototype, "notifications", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AvlNotificationMenuComponent.prototype, "openChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AvlNotificationMenuComponent.prototype, "openDetails", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AvlNotificationMenuComponent.prototype, "notificationStateChanged", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AvlNotificationMenuComponent.prototype, "markAllAsRead", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AvlNotificationMenuComponent.prototype, "markAllAsUnread", void 0);
    __decorate([
        ViewChild('list'),
        __metadata("design:type", ElementRef)
    ], AvlNotificationMenuComponent.prototype, "list", void 0);
    AvlNotificationMenuComponent = __decorate([ __metadata("design:paramtypes", [])
    ], AvlNotificationMenuComponent);
AvlNotificationMenuComponent.ɵfac = function AvlNotificationMenuComponent_Factory(t) { return new (t || AvlNotificationMenuComponent)(); };
AvlNotificationMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AvlNotificationMenuComponent, selectors: [["avl-notification-menu"]], viewQuery: function AvlNotificationMenuComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.list = _t.first);
    } }, inputs: { open: "open", notifications: "notifications", trigger: "trigger" }, outputs: { openChange: "openChange", openDetails: "openDetails", notificationStateChanged: "notificationStateChanged", markAllAsRead: "markAllAsRead", markAllAsUnread: "markAllAsUnread" }, decls: 15, vars: 12, consts: [[3, "noCloseOnInsideClick", "open", "trigger", "open-changed"], ["id", "header"], ["id", "headerText"], [4, "ngIf"], [3, "items", "itemClicked"], ["icon", "more-vert", "slot", "trigger", 3, "click"], [3, "rows", "row-changed"], ["list", ""], ["id", "footer"], [3, "click"]], template: function AvlNotificationMenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "avl-popup", 0);
        ɵngcc0.ɵɵlistener("open-changed", function AvlNotificationMenuComponent_Template_avl_popup_open_changed_0_listener($event) { return ctx.onOpenChanged($event); });
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "span");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, AvlNotificationMenuComponent_span_6_Template, 2, 1, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "avl-overflow-menu", 4);
        ɵngcc0.ɵɵlistener("itemClicked", function AvlNotificationMenuComponent_Template_avl_overflow_menu_itemClicked_7_listener($event) { return ctx.onItemClicked($event); });
        ɵngcc0.ɵɵelementStart(8, "avl-icon-button", 5);
        ɵngcc0.ɵɵlistener("click", function AvlNotificationMenuComponent_Template_avl_icon_button_click_8_listener() { return ctx.onOverflowMenuClicked(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "avl-list", 6, 7);
        ɵngcc0.ɵɵlistener("row-changed", function AvlNotificationMenuComponent_Template_avl_list_row_changed_9_listener($event) { return ctx.onNotificationStateChanged($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 8);
        ɵngcc0.ɵɵelementStart(12, "avl-button", 9);
        ɵngcc0.ɵɵlistener("click", function AvlNotificationMenuComponent_Template_avl_button_click_12_listener() { return ctx.onDetailsClicked(); });
        ɵngcc0.ɵɵtext(13);
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("noCloseOnInsideClick", true)("open", ctx.open)("trigger", ctx.trigger);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 8, "VizBox.NotificationMenu.Notifications"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.numberOfUnreadNotifications);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("items", ctx.overflowMenuItems);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("rows", ctx.notificationList);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 10, "VizBox.NotificationMenu.Details"));
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.AvlOverflowMenuDirective, ɵngcc2.AvlInteractionControlDirective, ɵngcc2.AvlIconButtonDirective, ɵngcc2.AvlMultiSelectControlDirective, ɵngcc2.AvlSingleSelectControlDirective, ɵngcc2.AvlListDirective], pipes: [ɵngcc3.TranslatePipe], styles: ["avl-popup[_ngcontent-%COMP%]{width:40%}avl-list[_ngcontent-%COMP%]{width:100%;height:250px;padding-top:8px;--avl-item-padding-left:16px;--avl-item-padding-right:16px;--notification-item-height:48px}#header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;box-sizing:border-box;height:56px;padding:0 16px;border-bottom:1px solid var(--avl-overflow-menu-divider-color,var(--avl-divider-color))}#footer[_ngcontent-%COMP%]{display:flex;align-items:center;box-sizing:border-box;height:56px;border-top:1px solid var(--avl-overflow-menu-divider-color,var(--avl-divider-color))}#headerText[_ngcontent-%COMP%]{font-size:20px;color:var(--avl-primary-text-color);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlNotificationMenuComponent, [{
        type: Component,
        args: [{
                selector: 'avl-notification-menu',
                template: "<avl-popup\r\n  [noCloseOnInsideClick]=\"true\"\r\n  [open]=\"open\"\r\n  [trigger]=\"trigger\"\r\n  (open-changed)=\"onOpenChanged($event)\"\r\n>\r\n  <div id=\"header\">\r\n    <div id=\"headerText\">\r\n      <span>{{ 'VizBox.NotificationMenu.Notifications' | translate }}</span>\r\n      <span *ngIf=\"numberOfUnreadNotifications\"> ({{ numberOfUnreadNotifications }}) </span>\r\n    </div>\r\n    <avl-overflow-menu (itemClicked)=\"onItemClicked($event)\" [items]=\"overflowMenuItems\">\r\n      <avl-icon-button\r\n        icon=\"more-vert\"\r\n        slot=\"trigger\"\r\n        (click)=\"onOverflowMenuClicked()\"\r\n      ></avl-icon-button>\r\n    </avl-overflow-menu>\r\n  </div>\r\n  <avl-list\r\n    #list\r\n    [rows]=\"notificationList\"\r\n    (row-changed)=\"onNotificationStateChanged($event)\"\r\n  ></avl-list>\r\n  <div id=\"footer\">\r\n    <avl-button (click)=\"onDetailsClicked()\">{{ 'VizBox.NotificationMenu.Details' | translate }}</avl-button>\r\n  </div>\r\n</avl-popup>\r\n",
                styles: ["avl-popup{width:40%}avl-list{width:100%;height:250px;padding-top:8px;--avl-item-padding-left:16px;--avl-item-padding-right:16px;--notification-item-height:48px}#header{display:flex;align-items:center;justify-content:space-between;box-sizing:border-box;height:56px;padding:0 16px;border-bottom:1px solid var(--avl-overflow-menu-divider-color,var(--avl-divider-color))}#footer{display:flex;align-items:center;box-sizing:border-box;height:56px;border-top:1px solid var(--avl-overflow-menu-divider-color,var(--avl-divider-color))}#headerText{font-size:20px;color:var(--avl-primary-text-color);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}"]
            }]
    }], function () { return []; }, { open: [{
            type: Input
        }], openChange: [{
            type: Output
        }], openDetails: [{
            type: Output
        }], notificationStateChanged: [{
            type: Output
        }], markAllAsRead: [{
            type: Output
        }], markAllAsUnread: [{
            type: Output
        }], notifications: [{
            type: Input
        }], trigger: [{
            type: Input
        }], list: [{
            type: ViewChild,
            args: ['list']
        }] }); })();
    return AvlNotificationMenuComponent;
}());
export { AvlNotificationMenuComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,