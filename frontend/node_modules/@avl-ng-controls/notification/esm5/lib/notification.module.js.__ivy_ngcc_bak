var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
import { CommonModule } from '@angular/common';
import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';
import { TranslateModule } from "@ngx-translate/core";
import { AvlNgBindersModule } from '@avl-controls/ng-binders';
import { FormsModule } from '@angular/forms';
import { AvlNotificationMenuComponent } from './components/avl-notification-menu/avl-notification-menu.component';
import { AnimateButton } from './components/avl-notification-container/directives/animate-button.directive';
import { AnimateSnackbar } from './components/avl-notification-container/directives/animate-snackbar.directive';
import { AnimateStack } from './components/avl-notification-container/directives/animate-stack.directive';
import { ShowHideSnackbarDirective } from './components/avl-notification-container/directives/show-hide-snackbar.directive';
import { SnackbarListener } from './components/avl-notification-container/directives/snackbar-listener.directive';
import { AvlNotificationContainerComponent } from './components/avl-notification-container/avl-notification-container.component';
import { AvlNotificationDialogComponent } from './components/avl-notification-dialog/avl-notification-dialog.component';
import { AvlDialogModule } from '@avl-ng-controls/dialog';
import { AvlNavigationModule } from '@avl-ng-controls/navigation';
var componentsAndDirectives = [
    AvlNotificationMenuComponent,
    AvlNotificationContainerComponent,
    SnackbarListener,
    AnimateStack,
    AnimateSnackbar,
    ShowHideSnackbarDirective,
    AnimateButton,
    AvlNotificationDialogComponent
];
var AvlNotificationModule = /** @class */ (function () {
    function AvlNotificationModule() {
    }
    AvlNotificationModule = __decorate([
        NgModule({
            declarations: __spread(componentsAndDirectives),
            imports: [CommonModule, TranslateModule, AvlNgBindersModule, AvlDialogModule, AvlNavigationModule, FormsModule],
            schemas: [CUSTOM_ELEMENTS_SCHEMA],
            exports: __spread(componentsAndDirectives)
        })
    ], AvlNotificationModule);
    return AvlNotificationModule;
}());
export { AvlNotificationModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtbmctY29udHJvbHMvbm90aWZpY2F0aW9uLyIsInNvdXJjZXMiOlsibGliL25vdGlmaWNhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ2xILE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw2RUFBNkUsQ0FBQztBQUM1RyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0VBQStFLENBQUM7QUFDaEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRFQUE0RSxDQUFDO0FBQzFHLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlGQUFpRixDQUFDO0FBQzVILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdGQUFnRixDQUFDO0FBQ2xILE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLDhFQUE4RSxDQUFDO0FBQ2pJLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHdFQUF3RSxDQUFDO0FBRXhILE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUVsRSxJQUFNLHVCQUF1QixHQUFHO0lBQzlCLDRCQUE0QjtJQUM1QixpQ0FBaUM7SUFDakMsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYiw4QkFBOEI7Q0FDL0IsQ0FBQztBQU9GO0lBQUE7SUFBb0MsQ0FBQztJQUF4QixxQkFBcUI7UUFOakMsUUFBUSxDQUFDO1lBQ1IsWUFBWSxXQUFNLHVCQUF1QixDQUFDO1lBQzFDLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxlQUFlLEVBQUUsa0JBQWtCLEVBQUUsZUFBZSxFQUFFLG1CQUFtQixFQUFFLFdBQVcsQ0FBQztZQUMvRyxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztZQUNqQyxPQUFPLFdBQU0sdUJBQXVCLENBQUM7U0FDdEMsQ0FBQztPQUNXLHFCQUFxQixDQUFHO0lBQUQsNEJBQUM7Q0FBQSxBQUFyQyxJQUFxQztTQUF4QixxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBDVVNUT01fRUxFTUVOVFNfU0NIRU1BLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tIFwiQG5neC10cmFuc2xhdGUvY29yZVwiO1xyXG5pbXBvcnQgeyBBdmxOZ0JpbmRlcnNNb2R1bGUgfSBmcm9tICdAYXZsLWNvbnRyb2xzL25nLWJpbmRlcnMnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7IEF2bE5vdGlmaWNhdGlvbk1lbnVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1tZW51L2F2bC1ub3RpZmljYXRpb24tbWVudS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBbmltYXRlQnV0dG9uIH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tY29udGFpbmVyL2RpcmVjdGl2ZXMvYW5pbWF0ZS1idXR0b24uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgQW5pbWF0ZVNuYWNrYmFyIH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tY29udGFpbmVyL2RpcmVjdGl2ZXMvYW5pbWF0ZS1zbmFja2Jhci5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBBbmltYXRlU3RhY2sgfSBmcm9tICcuL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIvZGlyZWN0aXZlcy9hbmltYXRlLXN0YWNrLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFNob3dIaWRlU25hY2tiYXJEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIvZGlyZWN0aXZlcy9zaG93LWhpZGUtc25hY2tiYXIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgU25hY2tiYXJMaXN0ZW5lciB9IGZyb20gJy4vY29tcG9uZW50cy9hdmwtbm90aWZpY2F0aW9uLWNvbnRhaW5lci9kaXJlY3RpdmVzL3NuYWNrYmFyLWxpc3RlbmVyLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEF2bE5vdGlmaWNhdGlvbkNvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hdmwtbm90aWZpY2F0aW9uLWNvbnRhaW5lci9hdmwtbm90aWZpY2F0aW9uLWNvbnRhaW5lci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBdmxOb3RpZmljYXRpb25EaWFsb2dDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1kaWFsb2cvYXZsLW5vdGlmaWNhdGlvbi1kaWFsb2cuY29tcG9uZW50JztcclxuXHJcbmltcG9ydCB7IEF2bERpYWxvZ01vZHVsZSB9IGZyb20gJ0BhdmwtbmctY29udHJvbHMvZGlhbG9nJztcclxuaW1wb3J0IHsgQXZsTmF2aWdhdGlvbk1vZHVsZSB9IGZyb20gJ0BhdmwtbmctY29udHJvbHMvbmF2aWdhdGlvbic7XHJcblxyXG5jb25zdCBjb21wb25lbnRzQW5kRGlyZWN0aXZlcyA9IFtcclxuICBBdmxOb3RpZmljYXRpb25NZW51Q29tcG9uZW50LFxyXG4gIEF2bE5vdGlmaWNhdGlvbkNvbnRhaW5lckNvbXBvbmVudCxcclxuICBTbmFja2Jhckxpc3RlbmVyLFxyXG4gIEFuaW1hdGVTdGFjayxcclxuICBBbmltYXRlU25hY2tiYXIsXHJcbiAgU2hvd0hpZGVTbmFja2JhckRpcmVjdGl2ZSxcclxuICBBbmltYXRlQnV0dG9uLFxyXG4gIEF2bE5vdGlmaWNhdGlvbkRpYWxvZ0NvbXBvbmVudFxyXG5dO1xyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogWy4uLmNvbXBvbmVudHNBbmREaXJlY3RpdmVzXSxcclxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBUcmFuc2xhdGVNb2R1bGUsIEF2bE5nQmluZGVyc01vZHVsZSwgQXZsRGlhbG9nTW9kdWxlLCBBdmxOYXZpZ2F0aW9uTW9kdWxlLCBGb3Jtc01vZHVsZV0sXHJcbiAgc2NoZW1hczogW0NVU1RPTV9FTEVNRU5UU19TQ0hFTUFdLFxyXG4gIGV4cG9ydHM6IFsuLi5jb21wb25lbnRzQW5kRGlyZWN0aXZlc11cclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bE5vdGlmaWNhdGlvbk1vZHVsZSB7fVxyXG4iXX0=