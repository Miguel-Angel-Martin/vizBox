{"version":3,"file":"avl-ng-controls-notification.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/notification/src/lib/components/avl-notification-menu/avl-notification-menu.consts.ts","../../../projects/notification/src/lib/components/avl-notification-dialog/avl-notification-dialog.consts.ts","../../../projects/notification/src/lib/pipes/prepare-notifications.pipe.ts","../../../projects/notification/src/lib/components/avl-notification-menu/avl-notification-menu.component.ts","../../../projects/notification/src/lib/components/avl-notification-menu/avl-notification-menu.component.html","../../../projects/notification/src/lib/components/avl-notification-container/avl-notification-container.consts.ts","../../../projects/notification/src/lib/components/avl-notification-container/directives/animate-button.directive.ts","../../../projects/notification/src/lib/components/avl-notification-container/directives/animate-snackbar.directive.ts","../../../projects/notification/src/lib/components/avl-notification-container/directives/animate-stack.directive.ts","../../../projects/notification/src/lib/components/avl-notification-container/directives/show-hide-snackbar.directive.ts","../../../projects/notification/src/lib/components/avl-notification-container/directives/snackbar-listener.directive.ts","../../../projects/notification/src/lib/components/avl-notification-container/snackbar-stack.ts","../../../projects/notification/src/lib/components/avl-notification-container/avl-notification-container.component.ts","../../../projects/notification/src/lib/components/avl-notification-container/avl-notification-container.component.html","../../../projects/notification/src/lib/components/avl-notification-dialog/date-validator.directive.ts","../../../projects/notification/src/lib/pipes/iterable-object.pipe.ts","../../../projects/notification/src/lib/pipes/capitalize.pipe.ts","../../../projects/notification/src/lib/components/avl-notification-dialog/avl-notification-dialog.component.ts","../../../projects/notification/src/lib/components/avl-notification-dialog/avl-notification-dialog.component.html","../../../projects/notification/src/lib/notification.module.ts","../../../projects/notification/src/public-api.ts","../../../projects/notification/src/avl-ng-controls-notification.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { AvlOverflowMenuGroup } from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu';\r\nimport { AvlNotificationType } from '@avl-interfaces/interfaces';\r\n\r\nexport const NOTIFICATIONS_OVERFLOW_MENU: AvlOverflowMenuGroup[] = [\r\n  {\r\n    items: [\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsRead',\r\n        action: 'markAllAsRead'\r\n      },\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsUnread',\r\n        action: 'markAllAsUnread'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n","import { PageSizeOption } from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport {\r\n  Column,\r\n  ColumnType,\r\n  LeafColumn\r\n} from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport { AvlNotificationType } from '@avl-interfaces/interfaces';\r\n\r\nexport const DEFAULT_PAGE_SIZE_OPTIONS: PageSizeOption[] = [\r\n  { value: 15, label: 'Show 15 per page' },\r\n  { value: 50, label: 'Show 50 per page' },\r\n  { value: Number.MAX_SAFE_INTEGER, label: 'Show all' }\r\n];\r\n\r\nexport const DEFAULT_FILTERS = {\r\n  type: {\r\n    warning: undefined,\r\n    error: undefined,\r\n    info: undefined,\r\n    ok: undefined\r\n  },\r\n  state: {\r\n    read: undefined,\r\n    unread: undefined\r\n  },\r\n  date: {\r\n    dateFrom: undefined,\r\n    dateTo: undefined\r\n  },\r\n  search: undefined\r\n};\r\n\r\nexport const DEFAULT_COLUMN_DEFINITIONS = [\r\n  new LeafColumn('VizBox.NotificationDialog.Type', 'icon', ColumnType.Icon, false, false, 0.5),\r\n  new LeafColumn('VizBox.NotificationDialog.Module', 'module', ColumnType.Text, true, false, 3),\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.Message',\r\n    'messageText',\r\n    ColumnType.Text,\r\n    true,\r\n    false,\r\n    8\r\n  ),\r\n  new LeafColumn('VizBox.NotificationDialog.Id', 'id', ColumnType.Number, false, false, 1),\r\n  <Column>{\r\n    caption: 'VizBox.NotificationDialog.Timestamp',\r\n    valueField: 'timestamp',\r\n    type: ColumnType.Date,\r\n    sortable: false,\r\n    filterable: false,\r\n    flexWidth: 3,\r\n    dateTimeOptions: { format: 'date-time-short' }\r\n  },\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.State',\r\n    'currentIconToggle',\r\n    ColumnType.Icon,\r\n    false,\r\n    false,\r\n    1\r\n  )\r\n];\r\n\r\nexport const NOTIFICATION_TYPE_MAPPINGS = new Map<number | boolean, string>([\r\n  [AvlNotificationType.Error, 'error'],\r\n  [AvlNotificationType.Warning, 'warning'],\r\n  [AvlNotificationType.Info, 'info'],\r\n  [AvlNotificationType.OK, 'ok'],\r\n  [false, 'unread'],\r\n  [true, 'read']\r\n]);\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n\r\nexport const STATE_ICON_MAPPINGS = {\r\n  false: 'mail',\r\n  true: 'communication:mail-outline'\r\n};\r\n\r\nexport const DEFAULT_ICON_STYLE = 'height:24px; width:24px;';\r\n\r\nexport const TYPE_ICON_STYLE_MAPPINGS = {\r\n  [AvlNotificationType.Error]: `--avl-icon-custom-color: var(--avl-error-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Warning]: `--avl-icon-custom-color: var(--avl-warning-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Info]: `--avl-icon-custom-color: var(--avl-icon-default-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.OK]: `--avl-icon-custom-color: var(--avl-ok-color); ${DEFAULT_ICON_STYLE}`\r\n};\r\n\r\nexport const TRANSLATION_BASE = 'VizBox.NotificationDialog.';\r\n\r\nexport const ACTION_BUTTONS = [\r\n  {\r\n    id: 'unread',\r\n    tooltip: TRANSLATION_BASE + \"MarkSelectedAsUnread\"\r\n  },\r\n  {\r\n    id: 'read',\r\n    tooltip: TRANSLATION_BASE + \"MarkSelectedAsRead\"\r\n  }\r\n];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AvlNotification } from '@avl-interfaces/interfaces';\r\nimport { AvlNotificationTableItem } from '../models/notification-dialog.model';\r\nimport { AvlNotificationMenuItem } from '../models/notification-menu.model';\r\nimport {\r\n  DEFAULT_ICON_STYLE,\r\n  STATE_ICON_MAPPINGS,\r\n  TYPE_ICON_MAPPINGS,\r\n  TYPE_ICON_STYLE_MAPPINGS\r\n} from '../components/avl-notification-dialog/avl-notification-dialog.consts';\r\n\r\n@Pipe({\r\n  name: 'prepareNotifications'\r\n})\r\n\r\n/** Maps general avl notification list to table specific list */\r\nexport class PrepareNotificationsPipe implements PipeTransform {\r\n  transform(\r\n    notifications: AvlNotification[],\r\n    prepareFor: 'dialog' | 'menu'\r\n  ): AvlNotificationTableItem[] | AvlNotificationMenuItem[] {\r\n    return this[prepareFor](notifications);\r\n  }\r\n  dialog(notifications: AvlNotification[]): AvlNotificationTableItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconStyle: TYPE_ICON_STYLE_MAPPINGS[notification.type],\r\n      currentIconToggle: STATE_ICON_MAPPINGS[String(notification.read)],\r\n      currentIconToggleStyle: DEFAULT_ICON_STYLE,\r\n      state: notification.read\r\n    }));\r\n  }\r\n  menu(notifications: AvlNotification[]): AvlNotificationMenuItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      label: notification.messageText,\r\n      sublabel: this.formatDateTime(notification.timestamp),\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconToggleUnchecked: 'mail',\r\n      iconToggleChecked: 'communication:mail-outline',\r\n      iconToggleValue: notification.read\r\n    }));\r\n  }\r\n  private formatDateTime(date: Date): string {\r\n    return date === null\r\n      ? ''\r\n      : `${AvlLocalizationService.formatDateTime(date, {\r\n          format: 'date-short'\r\n        })} ${AvlLocalizationService.formatDateTime(date, { format: 'time-long' })}`;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AvlList } from '@avl-controls/core/dist/avl-list/avl-list.api';\r\nimport {\r\n  AvlOverflowMenuGroup,\r\n  AvlOverflowMenuItem\r\n} from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\nimport { AvlNotification } from '@avl-interfaces/interfaces';\r\nimport { AvlNotificationMenuItem } from '../../models/notification-menu.model';\r\nimport { NOTIFICATIONS_OVERFLOW_MENU } from './avl-notification-menu.consts';\r\n\r\n@Component({\r\n  selector: 'avl-notification-menu',\r\n  templateUrl: './avl-notification-menu.component.html',\r\n  styleUrls: ['./avl-notification-menu.component.css']\r\n})\r\nexport class AvlNotificationMenuComponent implements OnInit, AfterViewInit {\r\n  @Input() open: boolean = false;\r\n  @Input() trigger: HTMLElement;\r\n  @Input()\r\n  set notifications(notifications: AvlNotification[]) {\r\n    this.numberOfUnreadNotifications = notifications.filter(notif => !notif.read).length;\r\n    this._notifications = notifications;\r\n  }\r\n  get notifications() {\r\n    return this._notifications;\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n  @Output() openDetails = new EventEmitter<void>();\r\n  @Output() notificationStateChanged = new EventEmitter<AvlNotification>();\r\n  @Output() markAllAsRead = new EventEmitter<void>();\r\n  @Output() markAllAsUnread = new EventEmitter<void>();\r\n\r\n  @ViewChild('list') list: ElementRef<AvlList>;\r\n\r\n  public overflowMenuItems: AvlOverflowMenuGroup[] = [];\r\n  public numberOfUnreadNotifications: number = 0;\r\n\r\n  private _notifications: AvlNotification[] = [];\r\n\r\n  private overflowMenuHandlers: { [key: string]: () => void } = {\r\n    markAllAsRead: () => {\r\n      this.markAllAsRead.emit();\r\n      this.numberOfUnreadNotifications = 0;\r\n    },\r\n    markAllAsUnread: () => {\r\n      this.markAllAsUnread.emit();\r\n      this.numberOfUnreadNotifications = this.notifications.length;\r\n    },\r\n    undefined: () => {}\r\n  };\r\n\r\n  public ngOnInit(): void {\r\n    this.translateLabels();\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.list.nativeElement.revertedList = true;\r\n  }\r\n\r\n  public onNotificationStateChanged(event: Event): void {\r\n    const notificationMenuItem: AvlNotificationMenuItem = { ...(<CustomEvent>event).detail.value };\r\n    const notification = {\r\n      ...notificationMenuItem,\r\n      read: notificationMenuItem.iconToggleValue\r\n    } as AvlNotification;\r\n    notification.read ? this.numberOfUnreadNotifications-- : this.numberOfUnreadNotifications++;\r\n    this.notificationStateChanged.emit(notification);\r\n\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onItemClicked(item: AvlOverflowMenuItem): void {\r\n    this.overflowMenuHandlers[item.action]();\r\n  }\r\n\r\n  public onOpenChanged(event: Event): void {\r\n    if (!(<CustomEvent>event).detail.value) {\r\n      this.openChange.emit(false);\r\n    }\r\n  }\r\n\r\n  public onOverflowMenuClicked(): void {\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onDetailsClicked(): void {\r\n    this.open = false;\r\n    this.openDetails.emit();\r\n    this.openChange.emit(false);\r\n  }\r\n\r\n  /**Event fired when list item is clicked on\r\n   * depending on the notification flag it opens in new tab\r\n   */\r\n  public onListItemClicked(event: Event): void {\r\n    const item = (<CustomEvent>event).detail;\r\n    if (item.link) {\r\n      if (item.openInNewTab) {\r\n        window.open(item.link, '_blank');\r\n      } else {\r\n        window.open(item.link, '_self');\r\n      }\r\n    }\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    this.overflowMenuItems = await this.translateMenu(NOTIFICATIONS_OVERFLOW_MENU);\r\n  }\r\n\r\n  private async translateMenu(menu: AvlOverflowMenuGroup[]): Promise<AvlOverflowMenuGroup[]> {\r\n    return await Promise.all(menu.map(async group => await this.translateMenuGroup(group)));\r\n  }\r\n\r\n  private async translateMenuGroup(group: AvlOverflowMenuGroup): Promise<AvlOverflowMenuGroup> {\r\n    return {\r\n      items: await Promise.all(group.items.map(async item => await this.translateMenuItem(item)))\r\n    };\r\n  }\r\n\r\n  private async translateMenuItem(item: AvlOverflowMenuItem): Promise<AvlOverflowMenuItem> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label: await translateService.translate(item.label),\r\n      sublabel: item.sublabel ? await translateService.translate(item.sublabel) : null\r\n    };\r\n  }\r\n}\r\n","<avl-popup\r\n  [noCloseOnInsideClick]=\"true\"\r\n  [open]=\"open\"\r\n  [trigger]=\"trigger\"\r\n  (open-changed)=\"onOpenChanged($event)\"\r\n>\r\n  <div id=\"header\">\r\n    <div id=\"headerText\">\r\n      <span>{{ 'VizBox.NotificationMenu.Notifications' | translate }}</span>\r\n      <span *ngIf=\"numberOfUnreadNotifications\"> ({{ numberOfUnreadNotifications }}) </span>\r\n    </div>\r\n    <avl-overflow-menu (itemClicked)=\"onItemClicked($event)\" [items]=\"overflowMenuItems\">\r\n      <avl-icon-button\r\n        icon=\"more-vert\"\r\n        slot=\"trigger\"\r\n        (click)=\"onOverflowMenuClicked()\"\r\n      ></avl-icon-button>\r\n    </avl-overflow-menu>\r\n  </div>\r\n  <avl-list\r\n    #list\r\n    [rows]=\"notifications | prepareNotifications: 'menu'\"\r\n    (row-changed)=\"onNotificationStateChanged($event)\"\r\n    (list-item-clicked)=\"onListItemClicked($event)\"\r\n  ></avl-list>\r\n  <div id=\"footer\">\r\n    <avl-button (click)=\"onDetailsClicked()\">{{\r\n      'VizBox.NotificationMenu.Details' | translate\r\n    }}</avl-button>\r\n  </div>\r\n</avl-popup>\r\n","\r\n/** @hidden */\r\nexport const ANIMATION_DURATION = 400;\r\n\r\n/** @hidden */\r\nexport const ACTION_BUTTON_MESSAGE = '_X more _TYPE notifications';\r\n\r\n/** @hidden */\r\nexport const MARGIN = 12;\r\n\r\n\r\n\r\n\r\n","import { Directive, Input, HostBinding, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { MARGIN } from '../avl-notification-container.consts';\r\n\r\n@Directive({ selector: '[animateButton]' })\r\nexport class AnimateButton implements OnChanges {\r\n  /** @hidden */\r\n  @Input() increment: number;\r\n\r\n  /** @hidden */\r\n  @Input() infoStackHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackHeight: number;\r\n  /** @hidden */\r\n  @Input() infoStackIndicatorHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackIndicatorHeight: number;\r\n\r\n  @HostBinding('style.top') styleTop: string;\r\n\r\n  constructor() {}\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const infoStackOffsetHeight = this.getOffsetHeight(this.getInfoHeight());\r\n    const warningStackOffsetHeight = this.getOffsetHeight(this.getWarningHeight());\r\n    this.styleTop = infoStackOffsetHeight + warningStackOffsetHeight + 'px';\r\n  }\r\n  private getInfoHeight = (): number => {\r\n    return this.infoStackHeight > this.infoStackIndicatorHeight\r\n      ? this.infoStackHeight\r\n      : this.infoStackIndicatorHeight;\r\n  };\r\n  private getWarningHeight = (): number => {\r\n    return this.warningStackHeight > this.warningStackIndicatorHeight\r\n      ? this.warningStackHeight\r\n      : this.warningStackIndicatorHeight;\r\n  };\r\n\r\n  private getOffsetHeight = (height: number): number => {\r\n    return height ? height + MARGIN * 2 : 0;\r\n  };\r\n}\r\n","import { Directive, ElementRef, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-interfaces/interfaces';\r\nimport { PositionAnimation } from './animate-stack.directive';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\n/** @hidden */\r\n\r\n@Directive({ selector: '[animateSnackbar]' })\r\nexport class AnimateSnackbar implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateSnackbar: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly positionAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input('notification') readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input('reopen') readonly reopen: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.in-stack') inStack: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.no-animation') noAnimation: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.snackbar-container') defaultClass = true;\r\n\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateSnackbar) {\r\n      const isInStack = changes.animateSnackbar.currentValue === PositionAnimation.ToStack;\r\n      if (isInStack) {\r\n        this.move();\r\n      } else if (changes.animateSnackbar.previousValue === PositionAnimation.ToStack) {\r\n        this.move();\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move() {\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      marginTop: '0',\r\n      width: '100%',\r\n      marginLeft: '0',\r\n      marginRight: '0'\r\n    });\r\n    return this.getAnimation(this.animateSnackbar, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const elementWidth = this.element.nativeElement.offsetWidth - 3 * MARGIN;\r\n    const inStackStyle = style({\r\n      marginTop: MARGIN + 'px',\r\n      marginLeft: MARGIN + 'px',\r\n      marginRight: MARGIN + 'px',\r\n      width: elementWidth + 'px'\r\n    });\r\n    switch (animationName) {\r\n      case PositionAnimation.FromStack:\r\n        return [animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle), initialStyle];\r\n\r\n      case PositionAnimation.ToStack: {\r\n        return [initialStyle, animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('1ms ease-in', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-interfaces/interfaces';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './show-hide-snackbar.directive';\r\n/** @hidden */\r\nexport const enum PositionAnimation {\r\n  ToLowerStack,\r\n  ToTop,\r\n  ToBottom,\r\n  ToStack,\r\n  FromStack\r\n}\r\n@Directive({ selector: '[animateStack]' })\r\nexport class AnimateStack implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateStack: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input() readonly previousStackHeight: number;\r\n\r\n  /** @hidden */\r\n  @Input() readonly snackbarMethodDescription: SnackbarMethodDescription;\r\n\r\n  /** @hidden */\r\n  @Input() readonly reopen: boolean;\r\n\r\n  private styleTop: number;\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateStack) {\r\n      this.move(this.previousStackHeight);\r\n    } else if (changes.previousStackHeight) {\r\n      this.move(changes?.previousStackHeight.currentValue);\r\n    } else if (changes.snackbarMethodDescription) {\r\n      if (changes.snackbarMethodDescription.currentValue?.method === 'show') {\r\n        this.move(this.previousStackHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move(height: number) {\r\n    if (this.animateStack === PositionAnimation.ToBottom) {\r\n      this.styleTop = height + MARGIN * 2;\r\n    }\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      top: '0',\r\n      width: '100%',\r\n      left: '0',\r\n      zIndex: 1\r\n    });\r\n    return this.getAnimation(this.animateStack, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const allStyle = style('*');\r\n\r\n    switch (animationName) {\r\n      case PositionAnimation.ToBottom: {\r\n        return [\r\n          allStyle,\r\n          animate(\r\n            ANIMATION_DURATION + 'ms ease-in',\r\n            style({\r\n              top: this.styleTop + 'px',\r\n              zIndex: 0\r\n            })\r\n          )\r\n        ];\r\n      }\r\n      case PositionAnimation.ToTop: {\r\n        return [allStyle, animate(ANIMATION_DURATION + 'ms ease-in', initialStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('0ms', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, Input, SimpleChanges, OnChanges, ElementRef } from '@angular/core';\r\n\r\n/**@hidden */\r\nexport class SnackbarMethodDescription {\r\n  method: 'show' | 'hide';\r\n  animate: boolean;\r\n\r\n  constructor(method: 'show' | 'hide', animate: boolean) {\r\n    this.method = method;\r\n    this.animate = animate;\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[showHideSnackbar]' })\r\nexport class ShowHideSnackbarDirective implements OnChanges {\r\n  /** @hidden */\r\n  @Input() methodDescription: SnackbarMethodDescription;\r\n  private element: ElementRef;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.methodDescription) {\r\n      if (changes.methodDescription.currentValue?.method === 'show') {\r\n        setTimeout(\r\n          () =>\r\n            this.element.nativeElement?.showSnackbar(\r\n              'relative',\r\n              !changes.methodDescription.currentValue?.animate\r\n            ),\r\n          0\r\n        );\r\n      } else if (changes.methodDescription.currentValue?.method === 'hide') {\r\n        this.element.nativeElement?.hideSnackbar(changes.methodDescription.currentValue?.animate);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({ selector: '[snackbarListener]' })\r\nexport class SnackbarListener {\r\n  /** @hidden */\r\n  @Output() notificationClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() buttonClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() notificationDismissed: EventEmitter<Event> = new EventEmitter();\r\n  @HostListener('notification-clicked', ['$event']) onNotificationClicked(event: Event) {\r\n    this.notificationClicked.emit(event);\r\n  }\r\n  @HostListener('button-clicked', ['$event']) onButtonClicked(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.buttonClicked.emit(event);\r\n    }\r\n  }\r\n  @HostListener('notification-dismissed', ['$event']) onNotificationDismissed(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.notificationDismissed.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { AvlNotification } from '@avl-interfaces/interfaces';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { skipWhile } from 'rxjs/operators';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { ANIMATION_DURATION, ACTION_BUTTON_MESSAGE } from './avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\n\r\n/** @hidden */\r\nexport class SnackbarStack {\r\n  /** @hidden */\r\n  public buttonLabel: string;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  /** @hidden */\r\n  public activeNotification$: BehaviorSubject<AvlNotification> = new BehaviorSubject(undefined);\r\n\r\n  /** @hidden */\r\n  public stackAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public snackbarAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public stackIndicator = false;\r\n\r\n  /** @hidden */\r\n  public stackIndicatorButtonLabel: string;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public methodDescription: SnackbarMethodDescription;\r\n  \r\n  /** @hidden */\r\n  public reopen: boolean;\r\n  \r\n  /** @hidden */\r\n  public dismissedSilently: boolean;\r\n\r\n  /** @hidden */\r\n  public actionButtonMessage = ACTION_BUTTON_MESSAGE;\r\n\r\n  constructor(stackType: string) {\r\n    this.translateLabels();\r\n    this.methodDescription = new SnackbarMethodDescription(undefined, undefined)\r\n    this.activeNotification$\r\n      .pipe(skipWhile(notification => notification === undefined))\r\n      .subscribe((notification: AvlNotification) => {\r\n        if (notification) {\r\n          if (this.notificationList.length > 0) {\r\n            const timeout = setTimeout(\r\n              () => {\r\n                this.openNextNotification(stackType);\r\n                clearTimeout(timeout);\r\n              },\r\n              this.previousNotification ? ANIMATION_DURATION : 0\r\n            );\r\n          } else {\r\n            this.openNextNotification(stackType);\r\n          }\r\n        } else {\r\n          this.resetValues();\r\n        }\r\n      });\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.actionButtonMessage = await translationService.translate('VizBox.NotificationContainer._X_more_TYPE_notifications');\r\n  }\r\n\r\n  private openNextNotification = (stackType): void => {\r\n    this.methodDescription = new SnackbarMethodDescription('show', !this.reopen);\r\n    if (!this.reopen) {\r\n      this.stackAnimation = PositionAnimation.ToTop;\r\n    } else {\r\n      this.stackAnimation = PositionAnimation.FromStack;\r\n    }\r\n    this.setStackIndicatorProperties(stackType);\r\n    this.reopen = false;\r\n    this.dismissedSilently = false;\r\n  };\r\n\r\n  private resetValues = () => {\r\n    this.notificationList = [];\r\n    this.previousNotification = undefined;\r\n    this.stackIndicator = undefined;\r\n  };\r\n  private setStackIndicatorProperties = (stackType: string): void => {\r\n    const notificationsCount = this.notificationList.length;\r\n    this.stackIndicator = notificationsCount > 1;\r\n    const timeout = setTimeout(\r\n      () => {\r\n        this.previousNotification = this.notificationList[notificationsCount-1];\r\n        this.buttonLabel = this.setButtonLabel(notificationsCount, stackType);\r\n        this.stackIndicatorButtonLabel = this.setButtonLabel(notificationsCount - 1, stackType);\r\n        clearTimeout(timeout);\r\n      },\r\n      this.previousNotification ? ANIMATION_DURATION : 0\r\n    );\r\n  };\r\n  private setButtonLabel = (notificationsCount: number, type: string): string => {\r\n    return notificationsCount > 0\r\n      ? this.actionButtonMessage\r\n        .replace('_TYPE ', type === 'info' ? '' : type + ' ')\r\n        .replace('_X', String(notificationsCount))\r\n      : null;\r\n  };\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-snackbar/avl-snackbar';\r\nimport { AvlNotification, AvlNotificationType } from '@avl-interfaces/interfaces';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\nimport { Subject } from 'rxjs';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { SnackbarStack } from './snackbar-stack';\r\nimport { ANIMATION_DURATION } from './avl-notification-container.consts';\r\n\r\nconst NOTIFICATION_TYPE = new Map<number, string>([\r\n  [AvlNotificationType.Error, 'Error'],\r\n  [AvlNotificationType.Warning, 'Warning'],\r\n  [AvlNotificationType.Info, 'Info'],\r\n  [AvlNotificationType.OK, 'OK']\r\n]);\r\n@Component({\r\n  selector: 'avl-notification-container',\r\n  templateUrl: './avl-notification-container.component.html',\r\n  styleUrls: ['./avl-notification-container.component.css']\r\n})\r\nexport class AvlNotificationContainerComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  /** @hidden */\r\n  @HostBinding('style.top') positionTop: string;\r\n\r\n  /** @hidden */\r\n  @ViewChild('warningStackElement') warningStackElement: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('infoStackElement') infoStackElement: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') infoStackIndicatorElement: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') warningStackIndicatorElement: ElementRef;\r\n\r\n  /** If set optional icon (for info and OK notifications) is displayed, hidden otherwise. */\r\n  @Input('display-icon') public displayIcon: boolean;\r\n\r\n  /** Observable emits notifications. Default observable emits dummy notifications every 3s for 100s. */\r\n  @Input('notification$') public notification$: Observable<AvlNotification> = new Observable(\r\n    function subscribe(subscriber) {\r\n      let i = 0;\r\n      const intervalId = setInterval(() => {\r\n        const warning = Math.round(Math.random());\r\n        subscriber.next({\r\n          id: i++,\r\n          module: 'notification-container',\r\n          timestamp: new Date(),\r\n          type: warning ? AvlNotificationType.Warning : AvlNotificationType.Info,\r\n          messageText: 'Snackbar with notification' + new Date().toTimeString(),\r\n          read: false,\r\n          link: 'https://vizbox.avl.com'\r\n        });\r\n      }, 3000);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(intervalId);\r\n      }, 100000);\r\n    }\r\n  );\r\n\r\n  @Output() openMenu: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public warningStack: SnackbarStack;\r\n  /** @hidden */\r\n  public infoStack: SnackbarStack;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public stackHeight: { [key: string]: number } = {};\r\n\r\n  /** @hidden */\r\n  public reopen: boolean;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  private activeNotification: AvlNotification;\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  constructor(readonly cdRef: ChangeDetectorRef) {\r\n    this.warningStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Warning)).toLowerCase()\r\n    );\r\n\r\n    this.infoStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Info)).toLowerCase()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** @hidden */\r\n  public ngOnInit(): void {\r\n    this.positionTop = document.querySelector('main')?.offsetTop + 12 + 'px';\r\n    this.notification$?.pipe(takeUntil(this.destroyed$)).subscribe(notification => {\r\n      this.handleNotification(notification);\r\n    });\r\n  }\r\n\r\n  /** @hidden */\r\n  public onButtonClicked = (event: any): void => {\r\n    if (event) {\r\n      this.openMenu.emit();\r\n      this.dismissAll();\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public onNotificationDismissed = (event: any, notification: AvlNotification): void => {\r\n    if (event) {\r\n      const snackType = (event.target as HTMLElement)?.id?.replace('Snackbar', '');\r\n      this.removeNotification(notification, snackType);\r\n    }\r\n  };\r\n  /** @hidden */\r\n  /** Event fired when notification snackbar is clicked \r\n   * depending on the notification flag it opens in new tab\r\n  */\r\n  public onNotificationSnackbarClicked(event: Event): void {\r\n    const snackbar = (<CustomEvent>event).detail;\r\n    if (snackbar.link) {\r\n      if (snackbar.openInNewTab) {\r\n        window.open(snackbar.link, '_blank');\r\n      } else {\r\n        window.open(snackbar.link, '_self');\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @hidden */\r\n  public openFromStack = (notification: AvlNotification): void => {\r\n    const stackName = this.getStackName(notification.type);\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', true);\r\n  };\r\n\r\n  /** @hidden */\r\n  public dismissAll = (): void => {\r\n    this.notificationList = [];\r\n    this.warningStack.activeNotification$.next(undefined);\r\n    this.infoStack.activeNotification$.next(undefined);\r\n  };\r\n\r\n  private handleNotification = (notification: any): void => {\r\n    this.previousNotification = this.notificationList[this.notificationList.length - 1];\r\n    this.notificationList.push(notification);\r\n    this.updateStackActiveNotification(notification);\r\n    this.setStackAnimation(notification.type);\r\n  };\r\n\r\n  private updateStackActiveNotification = (notification: AvlNotification): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    this.updateStackNotificationList(notification.type);\r\n    this.activeNotification = notification;\r\n\r\n    if (this[stackName].notificationList.length > 1) {\r\n      this.reopen = true;\r\n      if (this.previousNotification?.type === notification.type) {\r\n        this[stackName].snackbarAnimation = PositionAnimation.ToStack;\r\n\r\n        // silently dismiss notification after previous notification animation\r\n        const timeout = setTimeout(() => {\r\n          this.silentlyDismissNotification(stackName);\r\n          this[stackName].snackbarAnimation = null;\r\n          clearTimeout(timeout);\r\n        }, ANIMATION_DURATION);\r\n      } else {\r\n        this.silentlyDismissNotification(stackName);\r\n      }\r\n    } else {\r\n      this[stackName].activeNotification$.next(notification);\r\n    }\r\n  };\r\n  private updateStackNotificationList = (\r\n    notificationType: AvlNotificationType\r\n  ): AvlNotification[] => {\r\n    const stack = this[this.getStack(notificationType)];\r\n    if (stack) {\r\n      stack.notificationList = this.notificationList.filter(item => item.type === notificationType);\r\n    }\r\n    return stack.notificationList;\r\n  };\r\n\r\n  private silentlyDismissNotification = (stackName: string): void => {\r\n    this[stackName].dismissedSilently = true;\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', false);\r\n  };\r\n\r\n  private setStackAnimation = (\r\n    notificationType: AvlNotificationType,\r\n    animation?: PositionAnimation\r\n  ): void => {\r\n    const currentStack = this.getStack(notificationType);\r\n    const previousStack = this.getStack(notificationType, true);\r\n\r\n    if (\r\n      this[previousStack]?.notificationList?.length > 0 &&\r\n      this.previousNotification?.type !== notificationType\r\n    ) {\r\n      this[previousStack].stackAnimation = animation || PositionAnimation.ToBottom;\r\n\r\n      this[currentStack].stackAnimation =\r\n        animation === PositionAnimation.ToTop\r\n          ? PositionAnimation.ToBottom\r\n          : PositionAnimation.ToTop;\r\n    }\r\n  };\r\n\r\n  private removeNotification = (notification: AvlNotification, snackType?: string): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    if (this[stackName].dismissedSilently) {\r\n      //notification dismissed silently\r\n      const stackName: string = this.getStack(this.activeNotification?.type);\r\n      this[stackName].activeNotification$.next(this.activeNotification);\r\n      this.reopen = false;\r\n    } else {\r\n      //notification dismissed\r\n      this.notificationList = this.notificationList.filter(\r\n        currentNotification => currentNotification.id !== notification.id\r\n      );\r\n      this.reopenLastNotification(notification, stackName);\r\n    }\r\n  };\r\n\r\n  private reopenLastNotification = (notification: AvlNotification, stackName: string): void => {\r\n    let stackNotificationList: AvlNotification[] = this[stackName]?.notificationList;\r\n    if (\r\n      this.isLastNotificationDismissed(notification, this[stackName]) &&\r\n      stackNotificationList?.length > 0\r\n    ) {\r\n      this[stackName].reopen = true;\r\n\r\n      stackNotificationList = this.updateStackNotificationList(notification.type);\r\n      const lastNotification = stackNotificationList[stackNotificationList.length - 1];\r\n      if (lastNotification) {\r\n        this[stackName].activeNotification$.next(lastNotification);\r\n      } else {\r\n        this[stackName].stackIndicator = false;\r\n        this[stackName].reopen = false;\r\n        this[stackName].animateStack = PositionAnimation.ToBottom;\r\n        this.setStackAnimation(notification.type, PositionAnimation.ToTop);\r\n      }\r\n    }\r\n  };\r\n\r\n  private isLastNotificationDismissed = (\r\n    notification: AvlNotification,\r\n    stack: SnackbarStack\r\n  ): boolean => {\r\n    const lastNotification: AvlNotification =\r\n      stack.notificationList[stack.notificationList.length - 1];\r\n    return lastNotification?.id === notification?.id;\r\n  };\r\n  private getStack(notificationType: number, previous?: boolean): string {\r\n    let stackType: AvlNotificationType;\r\n    if (\r\n      notificationType === AvlNotificationType.Warning ||\r\n      notificationType === AvlNotificationType.Error\r\n    ) {\r\n      stackType = previous ? AvlNotificationType.Info : AvlNotificationType.Warning;\r\n    } else {\r\n      stackType = previous ? AvlNotificationType.Warning : AvlNotificationType.Info;\r\n    }\r\n    return this.getStackName(stackType);\r\n  }\r\n\r\n  private getStackName = (stackType: AvlNotificationType): string => {\r\n    return stackType === 1 ? 'warningStack' : 'infoStack';\r\n  };\r\n}\r\n","<div class=\"snackbar\" *ngIf=\"notification$ | async as notification\">\r\n  <div\r\n    [animateStack]=\"warningStack?.stackAnimation\"\r\n    [previousStackHeight] = \"infoStack.notificationList.length>0 ? infoSnackElement.offsetHeight : 0\"\r\n    [snackbarMethodDescription] = \"warningStack.methodDescription\"\r\n    class=\"snackbar-stack\"\r\n    id=\"warningStack\"\r\n    #warningStackElement\r\n  >\r\n    <div [animateSnackbar]=\"warningStack.snackbarAnimation\" id=\"warningSnack\" #warningSnackElement>\r\n      <avl-snackbar\r\n        *ngIf=\"warningStack.activeNotification$ | async as activeWarningNotification\"\r\n        id=\"warningSnackbar\"\r\n        [message]=\"activeWarningNotification?.messageText\"\r\n        [openInNewTab]=\"activeWarningNotification.openInNewTab\"\r\n        [actionButtonLabel]=\"warningStack.stackIndicatorButtonLabel\"\r\n        [link]=\"activeWarningNotification.link\"\r\n        [messageType]=\"activeWarningNotification.type\"\r\n        sliding\r\n        (buttonClicked)=\"onButtonClicked($event)\"\r\n        (notificationDismissed)=\"onNotificationDismissed($event, activeWarningNotification)\"\r\n        snackbarListener\r\n        #warningSnackbar\r\n        showHideSnackbar=\"warningSnackbar\"\r\n        [methodDescription]=\"warningStack.methodDescription\"\r\n        (snackbar-clicked)=\"onNotificationSnackbarClicked($event)\"\r\n      ></avl-snackbar>\r\n    </div>\r\n\r\n    <div class=\"stack-indicator-container\" *ngIf=\"warningStack.notificationList.length>1\" #warningStackIndicator>\r\n      <div class=\"stack-indicator\">\r\n        <div class=\"notification-container\">\r\n          <div [ngClass]=\"{'notification': true, 'has-action': warningStack.stackIndicatorButtonLabel}\">\r\n            <avl-icon icon=\"icons:warning\" id=\"warningIcon\" class=\"warning\"></avl-icon>\r\n            <p id=\"snackbarMessage\">{{ warningStack.previousNotification?.messageText }}</p>\r\n            <avl-icon-button id=\"closeButton\" icon=\"icons:close\"></avl-icon-button>\r\n          </div>\r\n          <button id=\"actionButton\" *ngIf=\"warningStack.stackIndicatorButtonLabel\" (click)=\"openFromStack(warningStack.previousNotification)\">\r\n            <div class=\"button-label\">{{ warningStack.stackIndicatorButtonLabel }}</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"snackbar-stack\"\r\n    id=\"infoStack\"\r\n    [animateStack]=\"infoStack?.stackAnimation\"\r\n    [previousStackHeight] = \"infoStack.notificationList.length>0 ? warningSnackElement.offsetHeight : 0\"\r\n    [snackbarMethodDescription] = \"infoStack.methodDescription\"\r\n    #infoStackElement\r\n  >\r\n    <div [animateSnackbar]=\"infoStack.snackbarAnimation\" id=\"infoSnack\" #infoSnackElement>\r\n      <avl-snackbar\r\n        id=\"infoSnackbar\"\r\n        *ngIf=\"infoStack.activeNotification$ | async as activeInfoNotification\"\r\n        [message]=\"activeInfoNotification.messageText\"\r\n        [openInNewTab]=\"activeInfoNotification.openInNewTab\"\r\n        [actionButtonLabel]=\"infoStack.stackIndicatorButtonLabel\"\r\n        [link]=\"activeInfoNotification.link\"\r\n        [messageType]=\"activeInfoNotification.type\"\r\n        [displayIcon]=\"displayIcon\"\r\n        sliding\r\n        (buttonClicked)=\"onButtonClicked($event)\"\r\n        (notificationDismissed)=\"onNotificationDismissed($event, activeInfoNotification)\"\r\n        snackbarListener\r\n        #infoSnackbar\r\n        showHideSnackbar=\"infoSnackbar\"\r\n        [methodDescription]=\"infoStack.methodDescription\"\r\n        (snackbar-clicked)=\"onNotificationSnackbarClicked($event)\"\r\n      ></avl-snackbar>\r\n    </div>\r\n\r\n    <div class=\"stack-indicator-container\" *ngIf=\"infoStack.notificationList.length>1\" #infoStackIndicator>\r\n      <div class=\"stack-indicator\">\r\n        <div class=\"notification-container\">\r\n          <div [ngClass]=\"{'notification': true, 'has-action': infoStack.stackIndicatorButtonLabel}\">\r\n            <p id=\"snackbarMessage\">{{ infoStack.previousNotification?.messageText }}</p>\r\n            <avl-icon-button id=\"closeButton\" icon=\"icons:close\"></avl-icon-button>\r\n          </div>\r\n        </div>\r\n        <button id=\"actionButton\" *ngIf=\"infoStack.stackIndicatorButtonLabel\" (click)=\"openFromStack(infoStack.previousNotification)\">\r\n          <div class=\"button-label\">{{ infoStack.stackIndicatorButtonLabel }}</div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    animateButton\r\n    [infoStackHeight]=\"infoStack?.notificationList?.length > 0 ? infoSnackElement.offsetHeight : 0\"\r\n    [warningStackHeight]=\"warningStack?.notificationList?.length > 0 ? warningSnackElement.offsetHeight : 0\"\r\n    [infoStackIndicatorHeight]=\"infoStackIndicatorElement?.nativeElement?.offsetHeight\"\r\n    [warningStackIndicatorHeight]=\"warningStackIndicatorElement?.nativeElement?.offsetHeight\"\r\n    class=\"dismiss-all\"\r\n    *ngIf=\"notificationList?.length > 1\"\r\n  >\r\n    <avl-button id=\"dismissAll\" (click)=\"dismissAll()\">{{'VizBox.NotificationContainer.DismissAll' | translate}}</avl-button>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Directive, Input } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  NG_VALIDATORS,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn\r\n} from '@angular/forms';\r\nimport { AvlDate } from '@avl-controls/core/dist/avl-date/avl-date';\r\nexport function dateValidator(date: AvlDate): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    return date.invalid ? { date: { value: control.value } } : null;\r\n  };\r\n}\r\n\r\n@Directive({\r\n  selector: '[dateInvalid]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: DateInvalidValidatorDirective, multi: true }]\r\n})\r\nexport class DateInvalidValidatorDirective implements Validator {\r\n  @Input('dateInvalid') dateInvalid: HTMLElement;\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    return this.dateInvalid ? dateValidator(this.dateInvalid as AvlDate)(control) : null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'iterableObject'\r\n})\r\n\r\nexport class IterableObjectPipe implements PipeTransform {\r\n  transform(object: object): string[] {\r\n    if (!object) {\r\n      return undefined\r\n    }\r\n    return Object.keys(object);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'capitalize'\r\n})\r\n\r\nexport class CapitalizePipe implements PipeTransform {\r\n  transform(text: string): string {\r\n    let firstLetter = text.substr(0, 1).toUpperCase();\r\n    return firstLetter + text.substr(1);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Column } from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport {\r\n  AvlDatatable,\r\n  PageSizeOption\r\n} from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport { DateRange } from '@avl-controls/core/dist/avl-date/avl-date';\r\nimport { AvlNotification, AvlNotificationsCount } from '@avl-interfaces/interfaces';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-side-sheet/avl-side-sheet';\r\nimport '@avl-controls/core/dist/avl-checkbox/avl-checkbox';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\nimport '@avl-controls/core/dist/avl-date/avl-date';\r\nimport { AvlNotificationTableItem } from '../../models/notification-dialog.model';\r\nimport {\r\n  DEFAULT_COLUMN_DEFINITIONS,\r\n  DEFAULT_FILTERS,\r\n  DEFAULT_PAGE_SIZE_OPTIONS,\r\n  STATE_ICON_MAPPINGS,\r\n  TYPE_ICON_MAPPINGS,\r\n  TRANSLATION_BASE,\r\n  ACTION_BUTTONS\r\n} from './avl-notification-dialog.consts';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\r\nimport { NOTIFICATION_TYPE_MAPPINGS } from './avl-notification-dialog.consts';\r\n\r\n@Component({\r\n  selector: 'avl-notification-dialog',\r\n  templateUrl: './avl-notification-dialog.component.html',\r\n  styleUrls: ['./avl-notification-dialog.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AvlNotificationDialogComponent implements OnInit {\r\n  @Input() open: boolean = false;\r\n  @Input() pageSizeOptions: PageSizeOption[] = DEFAULT_PAGE_SIZE_OPTIONS;\r\n  @Input() columnDefinitions: Column[] = DEFAULT_COLUMN_DEFINITIONS;\r\n  @Input() notificationsCount: AvlNotificationsCount = {\r\n    warning: 0,\r\n    info: 0,\r\n    ok: 0,\r\n    error: 0,\r\n    unread: 0,\r\n    read: 0,\r\n    total: 0\r\n  };\r\n  @Input() refreshBadge: boolean;\r\n  @Input()\r\n  get notifications(): AvlNotification[] {\r\n    return this._notifications || [];\r\n  }\r\n\r\n  set notifications(notifications: AvlNotification[]) {\r\n    this._notifications = notifications;\r\n  }\r\n\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() filtersChange: EventEmitter<CustomEvent> = new EventEmitter<CustomEvent>();\r\n  @Output() markSelectedAsRead: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() markSelectedAsUnread: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() tableRefresh: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() selectedPageChanged: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() pageSizeChanged: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n\r\n  @ViewChild('notificationTable') public table: ElementRef<AvlDatatable>;\r\n\r\n  public badge: boolean = false;\r\n  public disableMarkingSelected: boolean = true;\r\n  public filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n  public filtersOpen = true;\r\n  public activeFilters: {[key:string]: object};\r\n\r\n  private filterFormSubscription: Subscription;\r\n\r\n  @ViewChild('filterForm', { read: NgForm }) set filterForm(filterForm: NgForm) {\r\n    this.filterFormSubscription?.unsubscribe();\r\n    this.filterFormSubscription = filterForm?.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.destroyed$),\r\n        filter(_ => filterForm.valid)\r\n      )\r\n      .subscribe(value => this.handleFiltersChanged(value));\r\n  }\r\n\r\n  public translationBase = TRANSLATION_BASE;\r\n  public actionButtons = ACTION_BUTTONS;\r\n  public disabledRange: { [key: string]: DateRange[] } = {};\r\n  private dateFilterGroupInitHeader = 'Date';\r\n  public dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n\r\n  //notification datatable options\r\n  public selectedRows: AvlNotificationTableItem[] = [];\r\n  public pageSize = 15;\r\n\r\n  private _notifications: AvlNotification[] = [];\r\n  protected destroyed$: Subject<void> = new Subject();\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.translateLabels();\r\n  }\r\n\r\n  public getIconByType(type: string): string {\r\n    switch (type) {\r\n      case 'unread':\r\n        return STATE_ICON_MAPPINGS['false'];\r\n      case 'read':\r\n        return STATE_ICON_MAPPINGS['true'];\r\n      default:\r\n        for (let [typeKey, typeValue] of NOTIFICATION_TYPE_MAPPINGS) {\r\n          if (typeValue === type && typeof typeKey === 'number') {\r\n            return TYPE_ICON_MAPPINGS[typeKey];\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  /** Emits event when dialog opens or closes */\r\n  public openChanged(open: boolean): void {\r\n    this.openChange.emit(open);\r\n  }\r\n\r\n  public onSelectedPageChanged(event) {\r\n    this.selectedPageChanged.emit(event);\r\n  }\r\n\r\n  public onPageSizeChanged(event) {\r\n    this.pageSizeChanged.emit(event);\r\n  }\r\n\r\n  /** Toggles displaying of filter sheet */\r\n  public toggleFilters(): void {\r\n    this.filtersOpen = !this.filtersOpen;\r\n  }\r\n\r\n  /** Refreshes the datatable when refresh button is clicked */\r\n  public refreshTable(): void {\r\n    this.tableRefresh.emit();\r\n  }\r\n\r\n  public markAs(state: string) {\r\n    state === NOTIFICATION_TYPE_MAPPINGS.get(true) ? this.markAsRead() : this.markAsUnread();\r\n  }\r\n\r\n  /** Changes selected notification state to read */\r\n  public markAsRead(): void {\r\n    this.markSelectedAsRead.emit(this.selectedRows);\r\n  }\r\n\r\n  /** Changes selected notification state to unread */\r\n  public markAsUnread(): void {\r\n    this.markSelectedAsUnread.emit(this.selectedRows);\r\n  }\r\n\r\n  /**\r\n   * Resets all filters.\r\n   */\r\n  public reset(): void {\r\n    this.filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.updateLabels();\r\n    this.badge = false;\r\n  }\r\n\r\n  /** Called when selection is applied to the table rows */\r\n  public selectedValuesChanged() {\r\n    this.disableMarkingSelected = false;\r\n    if (this.selectedRows.length == 0) {\r\n      this.disableMarkingSelected = true;\r\n    }\r\n  }\r\n\r\n  /** Updates date filter header labels when date changes */\r\n  public async updateLabels(): Promise<void> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    const { dateFrom, dateTo } = this.filters.date;\r\n    if (!dateFrom && !dateTo) {\r\n      this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    } else {\r\n      this.dateFilterGroupHeader = await translationService.translate(\r\n        'VizBox.NotificationDialog.DateRange',\r\n        {\r\n          dateFrom: this.formatDateTime(dateFrom),\r\n          dateTo: this.formatDateTime(dateTo)\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Event fired when table row is clicked\r\n   * depending on the notification flag it opens in new tab\r\n   */\r\n  public onRowClicked(event: Event): void {\r\n    const row = (<CustomEvent>event).detail;\r\n    if (row.link) {\r\n      if (row.openInNewTab) {\r\n        window.open(row.link, '_blank');\r\n      } else {\r\n        window.open(row.link, '_self');\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleFiltersChanged(value): void {\r\n    this.activeFilters = this.getActiveFilters(value);\r\n    if (this.activeFilters?.date) {\r\n      this.disabledRange = this.getDisabledRange();\r\n    }\r\n    this.badge = Boolean(this.activeFilters);\r\n    const event = new CustomEvent('filtersChange', { detail: this.activeFilters });\r\n    this.filtersChange.emit(event);\r\n  }\r\n\r\n  /** Calculates active filters from filter object */\r\n  public getActiveFilters(filters: object): any {\r\n    Object.keys(filters).forEach(key => {\r\n      const filter = filters[key];\r\n      //don't iterate through search\r\n      if (filter && typeof filter !== 'string') {\r\n        filters[key] = this.removeInactiveFilterKeys(filter);\r\n      }\r\n    });\r\n\r\n    return this.removeInactiveFilterKeys(filters);\r\n  }\r\n\r\n  /** disable dates before dateFrom in dateTo, and dates after dateTo in dateFrom  */\r\n  private getDisabledRange(): { [key: string]: DateRange[] } {\r\n    const { dateFrom, dateTo } = this.filters.date;\r\n    return {\r\n      dateFrom: dateTo ? [{ from: dateTo }] : undefined,\r\n      dateTo: dateFrom ? [{ to: dateFrom }] : undefined\r\n    };\r\n  }\r\n\r\n  /** Removes inactive filters from filter object and returns it */\r\n  private removeInactiveFilterKeys(filter): object {\r\n    Object.keys(filter)\r\n      .filter(secondLevelKey => !Boolean(filter[secondLevelKey]))\r\n      .forEach(secondLevelKey => delete filter[secondLevelKey]);\r\n    return Object.keys(filter)?.length ? filter : undefined;\r\n  }\r\n\r\n  /** Formats date time to date-short */\r\n  private formatDateTime(d: Date): string {\r\n    return d ? AvlLocalizationService.formatDateTime(d, { format: 'date-short' }) : '(-)';\r\n  }\r\n\r\n  /** Deep copy of filters object */\r\n  private deepCopyObject(object: any): any {\r\n    const copiedObject = {};\r\n    Object.keys(object).forEach(key => {\r\n      copiedObject[key] =\r\n        typeof object[key] === 'object' ? Object.assign({}, object[key]) : object[key];\r\n    });\r\n    return copiedObject;\r\n  }\r\n\r\n  // Translations\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.dateFilterGroupInitHeader = await translationService.translate(\r\n      'VizBox.NotificationDialog.Date'\r\n    );\r\n    this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    this.pageSizeOptions = await this.translatePageSizeOptions(this.pageSizeOptions);\r\n    this.columnDefinitions = await this.translateColumns(this.columnDefinitions);\r\n  }\r\n\r\n  private async translatePageSizeOptions(options: PageSizeOption[]): Promise<PageSizeOption[]> {\r\n    return Promise.all(options.map(async option => this.translatePageSizeOption(option)));\r\n  }\r\n\r\n  private async translatePageSizeOption(item: PageSizeOption): Promise<PageSizeOption> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label:\r\n        item.value === Number.MAX_SAFE_INTEGER\r\n          ? await translationService.translate('VizBox.NotificationDialog.ShowAll')\r\n          : await translationService.translate('VizBox.NotificationDialog.ShowXPerPage', {\r\n              rows: item.value\r\n            })\r\n    };\r\n  }\r\n\r\n  private async translateColumns(column: Column[]): Promise<Column[]> {\r\n    return Promise.all(column.map(async item => this.translateColumnItem(item)));\r\n  }\r\n\r\n  private async translateColumnItem(item: Column): Promise<Column> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      caption: await translateService.translate(item.caption)\r\n    };\r\n  }\r\n}\r\n","<avl-dialog\r\n  id=\"outerDialog\"\r\n  [open]=\"open\"\r\n  (openChange)=\"openChanged($event)\"\r\n  [closeOnScrimClick]=\"false\"\r\n  [fullscreen]=\"true\"\r\n>\r\n  <ng-template #content>\r\n    <avl-dialog-header>{{ translationBase + 'Details' | translate }}</avl-dialog-header>\r\n    <avl-dialog-content>\r\n      <div class=\"main-container\">\r\n        <div class=\"content\">\r\n          <div class=\"table-header\">\r\n            <h1>\r\n              {{ translationBase + 'Notifications' | translate }} ({{ notifications?.length }}\r\n              <span\r\n                *ngIf=\"\r\n                  notificationsCount.total && notificationsCount.total !== notifications?.length\r\n                \"\r\n              >\r\n                /{{ notificationsCount.total }} </span\r\n              >)\r\n            </h1>\r\n            <div class=\"table-header-right\">\r\n              <avl-icon-button\r\n                id=\"updateIcon\"\r\n                (click)=\"refreshTable()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:refresh\"\r\n                [badge]=\"refreshBadge\"\r\n              >\r\n              </avl-icon-button>\r\n              <avl-tooltip for=\"updateIcon\">\r\n                {{ translationBase + 'Refresh' | translate }}</avl-tooltip\r\n              >\r\n              <div class=\"divider vertical\"></div>\r\n              <div *ngFor=\"let button of actionButtons\">\r\n                <avl-icon-button\r\n                  id=\"{{ button.id }}Icon\"\r\n                  (click)=\"markAs(button.id)\"\r\n                  class=\"pointer\"\r\n                  [icon]=\"getIconByType(button.id)\"\r\n                  [disabled]=\"disableMarkingSelected\"\r\n                >\r\n                </avl-icon-button>\r\n                <avl-tooltip for=\"{{ button.id }}Icon\">{{\r\n                  button.tooltip | translate\r\n                }}</avl-tooltip>\r\n              </div>\r\n              <div class=\"divider vertical\"></div>\r\n              <div *ngIf=\"!filtersOpen\" class=\"search-bar-holder\">\r\n                <div *ngTemplateOutlet=\"searchBar\"></div>\r\n              </div>\r\n              <avl-icon-button\r\n                (click)=\"toggleFilters()\"\r\n                class=\"pointer\"\r\n                icon=\"icons:filter-list\"\r\n                [badge]=\"badge\"\r\n              ></avl-icon-button>\r\n            </div>\r\n          </div>\r\n          <avl-datatable\r\n            #notificationTable\r\n            class=\"filterDatatable\"\r\n            multi-select\r\n            allow-active-row\r\n            pagination\r\n            [columnDefinitions]=\"columnDefinitions\"\r\n            [pageSize]=\"pageSize\"\r\n            [data]=\"notifications | prepareNotifications: 'dialog'\"\r\n            [pageSizeOptions]=\"pageSizeOptions\"\r\n            [(selectedValues)]=\"selectedRows\"\r\n            (selectedValuesChange)=\"selectedValuesChanged()\"\r\n            (page-size-changed)=\"onPageSizeChanged($event)\"\r\n            (selected-page-changed)=\"onSelectedPageChanged($event)\"\r\n            (on-row-clicked)=\"onRowClicked($event)\"\r\n          >\r\n          </avl-datatable>\r\n        </div>\r\n        <avl-side-sheet class=\"filter-sheet\" divider [(open)]=\"filtersOpen\" #filterSheet>\r\n          <div slot=\"title\">\r\n            <h2>{{ translationBase + 'Filters' | translate }}</h2>\r\n          </div>\r\n          <div slot=\"content\">\r\n            <form #filterForm=\"ngForm\">\r\n              <!--ngIf is needed to rerender template on filtersheet toggle-->\r\n              <div *ngIf=\"filtersOpen\" class=\"search-bar-holder\">\r\n                <div *ngTemplateOutlet=\"searchBar\"></div>\r\n              </div>\r\n\r\n              <avl-list-expander\r\n                [open]=\"true\"\r\n                [narrow]=\"true\"\r\n                #filterFormType=\"ngModelGroup\"\r\n                ngModelGroup=\"type\"\r\n              >\r\n                <div role=\"header\">\r\n                  <h3>\r\n                    <span>{{ translationBase + 'Type' | translate }}</span>\r\n                    <span *ngIf=\"activeFilters?.type | iterableObject as activeFilterGroup\">\r\n                      <ng-container\r\n                        *ngTemplateOutlet=\"\r\n                          currentHeader;\r\n                          context: {\r\n                            activeFilterGroup: activeFilterGroup,\r\n                            filterGroup: filters?.type | iterableObject\r\n                          }\r\n                        \"\r\n                      ></ng-container>\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                <div role=\"content\" class=\"filterContent\">\r\n                  <div *ngFor=\"let type of filters?.type | iterableObject\">\r\n                    <avl-checkbox name=\"{{ type }}\" [(ngModel)]=\"filters.type[type]\">\r\n                      {{ translationBase + (type | titlecase) | translate }}\r\n                      <span *ngIf=\"notifications.length\">({{ notificationsCount[type] }})</span>\r\n                    </avl-checkbox>\r\n                    <avl-icon\r\n                      id=\"{{ type }}Icon\"\r\n                      class=\"typeIcons\"\r\n                      icon=\"icons:{{ getIconByType(type) }}\"\r\n                    ></avl-icon>\r\n                  </div>\r\n                </div>\r\n              </avl-list-expander>\r\n              <avl-list-expander\r\n                [open]=\"true\"\r\n                [narrow]=\"true\"\r\n                #filterFormState=\"ngModelGroup\"\r\n                ngModelGroup=\"state\"\r\n              >\r\n                <div role=\"header\">\r\n                  <h3>\r\n                    <span>{{ translationBase + 'State' | translate }}</span>\r\n                    <span *ngIf=\"activeFilters?.state | iterableObject as activeFilterGroup\">\r\n                      <ng-container\r\n                        *ngTemplateOutlet=\"\r\n                          currentHeader;\r\n                          context: {\r\n                            activeFilterGroup: activeFilterGroup,\r\n                            filterGroup: filters?.state | iterableObject\r\n                          }\r\n                        \"\r\n                      ></ng-container>\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                <div role=\"content\" class=\"filterContent\">\r\n                  <div *ngFor=\"let state of filters?.state | iterableObject\">\r\n                    <avl-checkbox name=\"{{ state }}\" [(ngModel)]=\"filters.state[state]\">\r\n                      {{ translationBase + (state | titlecase) | translate }} ({{\r\n                        notificationsCount[state]\r\n                      }})\r\n                    </avl-checkbox>\r\n                    <avl-icon\r\n                      id=\"{{ state }}Icon\"\r\n                      class=\"typeIcons\"\r\n                      icon=\"icons:{{ getIconByType(state) }}\"\r\n                    ></avl-icon>\r\n                  </div>\r\n                </div>\r\n              </avl-list-expander>\r\n              <avl-list-expander\r\n                [open]=\"true\"\r\n                [narrow]=\"true\"\r\n                #filterFormDate=\"ngModelGroup\"\r\n                ngModelGroup=\"date\"\r\n              >\r\n                <div role=\"header\">\r\n                  <h3 id=\"date-group\" #dateGroup>\r\n                    {{ dateFilterGroupHeader }}\r\n                  </h3>\r\n                  <avl-tooltip\r\n                    for=\"date-group\"\r\n                    *ngIf=\"dateGroup.scrollWidth > dateGroup.clientWidth\"\r\n                  >\r\n                    {{ dateFilterGroupHeader }}\r\n                  </avl-tooltip>\r\n                </div>\r\n                <div role=\"content\">\r\n                  <avl-date\r\n                    *ngFor=\"let date of filters?.date | iterableObject\"\r\n                    class=\"date-control\"\r\n                    [(ngModel)]=\"filters.date[date]\"\r\n                    name=\"{{ date }}\"\r\n                    (valueChange)=\"updateLabels()\"\r\n                    [label]=\"translationBase + (date | capitalize) | translate\"\r\n                    [disabledRanges]=\"disabledRange[date]\"\r\n                    #dateEl\r\n                    auto-validate\r\n                    [dateInvalid]=\"dateEl\"\r\n                  ></avl-date>\r\n                </div>\r\n              </avl-list-expander>\r\n              <ng-template #searchBar>\r\n                <avl-search-bar\r\n                  placeholder=\"{{ translationBase + 'Search' | translate }}\"\r\n                  always-open\r\n                  #searchBarElement\r\n                  name=\"search\"\r\n                  [(ngModel)]=\"filters.search\"\r\n                ></avl-search-bar>\r\n              </ng-template>\r\n            </form>\r\n          </div>\r\n          <div slot=\"actions\">\r\n            <avl-button (click)=\"reset()\">{{ translationBase + 'Reset' | translate }}</avl-button>\r\n          </div>\r\n        </avl-side-sheet>\r\n      </div>\r\n    </avl-dialog-content>\r\n  </ng-template>\r\n\r\n  <ng-template\r\n    #currentHeader\r\n    let-activeFilterGroup=\"activeFilterGroup\"\r\n    let-filterGroup=\"filterGroup\"\r\n  >\r\n    <span>: </span><span *ngIf=\"activeFilterGroup.length === filterGroup.length\">all</span>\r\n    <span *ngIf=\"activeFilterGroup.length !== filterGroup.length\">\r\n      <span *ngFor=\"let item of activeFilterGroup; index as i\">\r\n        <span>{{ translationBase + (item | titlecase) | translate }}</span>\r\n        <span *ngIf=\"i < activeFilterGroup.length - 1\">, </span>\r\n      </span>\r\n    </span>\r\n  </ng-template>\r\n</avl-dialog>\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AvlNotificationMenuComponent } from './components/avl-notification-menu/avl-notification-menu.component';\r\nimport { AnimateButton } from './components/avl-notification-container/directives/animate-button.directive';\r\nimport { AnimateSnackbar } from './components/avl-notification-container/directives/animate-snackbar.directive';\r\nimport { AnimateStack } from './components/avl-notification-container/directives/animate-stack.directive';\r\nimport { ShowHideSnackbarDirective } from './components/avl-notification-container/directives/show-hide-snackbar.directive';\r\nimport { SnackbarListener } from './components/avl-notification-container/directives/snackbar-listener.directive';\r\nimport { AvlNotificationContainerComponent } from './components/avl-notification-container/avl-notification-container.component';\r\nimport { AvlNotificationDialogComponent } from './components/avl-notification-dialog/avl-notification-dialog.component';\r\n\r\nimport { AvlDialogModule } from '@avl-ng-controls/dialog';\r\nimport { AvlNavigationModule } from '@avl-ng-controls/navigation';\r\nimport { PrepareNotificationsPipe } from './pipes/prepare-notifications.pipe';\r\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\r\nimport { DateInvalidValidatorDirective } from './components/avl-notification-dialog/date-validator.directive';\r\nimport { IterableObjectPipe } from './pipes/iterable-object.pipe';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlNotificationMenuComponent,\r\n  AvlNotificationContainerComponent,\r\n  SnackbarListener,\r\n  AnimateStack,\r\n  AnimateSnackbar,\r\n  ShowHideSnackbarDirective,\r\n  AnimateButton,\r\n  AvlNotificationDialogComponent,\r\n  PrepareNotificationsPipe,\r\n  CapitalizePipe,\r\n  IterableObjectPipe,\r\n  DateInvalidValidatorDirective\r\n];\r\n@NgModule({\r\n  declarations: [...componentsAndDirectives],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    AvlNgBindersModule,\r\n    AvlDialogModule,\r\n    AvlNavigationModule,\r\n    FormsModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [\r\n    AvlNotificationMenuComponent,\r\n    AvlNotificationContainerComponent,\r\n    AvlNotificationDialogComponent\r\n  ]\r\n})\r\nexport class AvlNotificationModule {}\r\n","/*\r\n * Public API Surface of notification\r\n */\r\n\r\nexport { AvlNotificationModule } from './lib/notification.module';\r\nexport { AvlNotificationMenuComponent } from './lib/components/avl-notification-menu/avl-notification-menu.component';\r\nexport { AvlNotificationMenuItem } from './lib/models/notification-menu.model'\r\n\r\nexport { AvlNotificationDialogComponent } from './lib/components/avl-notification-dialog/avl-notification-dialog.component';\r\nexport { AvlNotificationContainerComponent } from './lib/components/avl-notification-container/avl-notification-container.component';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["__awaiter","TYPE_ICON_MAPPINGS","_a","LeafColumn","ColumnType","Pipe","EventEmitter","Component","Input","Output","ViewChild","Directive","HostBinding","style","animate","HostListener","BehaviorSubject","skipWhile","Observable","Subject","takeUntil","NG_VALIDATORS","debounceTime","distinctUntilChanged","filter","NgForm","ChangeDetectionStrategy","CommonModule","TranslateModule","AvlNgBindersModule","AvlDialogModule","AvlNavigationModule","FormsModule","NgModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}