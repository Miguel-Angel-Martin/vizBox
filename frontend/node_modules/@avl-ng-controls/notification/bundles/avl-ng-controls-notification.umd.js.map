{"version":3,"file":"avl-ng-controls-notification.umd.js","sources":["ng:/@avl-ng-controls/notification/lib/components/avl-notification-menu/avl-notification-menu.consts.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-menu/avl-notification-menu.component.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/avl-notification-container.consts.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-button.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-snackbar.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/show-hide-snackbar.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-stack.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/snackbar-listener.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/snackbar-stack.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/avl-notification-container.component.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-dialog/avl-notification-dialog.consts.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-dialog/avl-notification-dialog.component.ts","ng:/@avl-ng-controls/notification/lib/notification.module.ts"],"names":["EventEmitter","Input","Output","ViewChild","ElementRef","Component","__decorate","HostBinding","Directive","style","animate","AnimationBuilder","HostListener","BehaviorSubject","skipWhile","Observable","Subject","takeUntil","ChangeDetectorRef","LeafColumn","ColumnType","_a","TYPE_ICON_MAPPINGS","NgForm","NgModule","CommonModule","TranslateModule","AvlNgBindersModule","AvlDialogModule","AvlNavigationModule","FormsModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import { AvlOverflowMenuGroup } from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu';\r\nimport { AvlNotificationType } from '@avl-controls/interfaces';\r\n\r\nexport const NOTIFICATIONS_OVERFLOW_MENU: AvlOverflowMenuGroup[] = [\r\n  {\r\n    items: [\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsRead',\r\n        action: 'markAllAsRead'\r\n      },\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsUnread',\r\n        action: 'markAllAsUnread'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AvlList } from '@avl-controls/core/dist/avl-list/avl-list.api';\r\nimport {\r\n  AvlOverflowMenuGroup,\r\n  AvlOverflowMenuItem\r\n} from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { AvlNotificationMenuItem } from '../../models/notification-menu.model';\r\nimport { NOTIFICATIONS_OVERFLOW_MENU, TYPE_ICON_MAPPINGS } from './avl-notification-menu.consts';\r\n\r\n@Component({\r\n  selector: 'avl-notification-menu',\r\n  templateUrl: './avl-notification-menu.component.html',\r\n  styleUrls: ['./avl-notification-menu.component.css']\r\n})\r\nexport class AvlNotificationMenuComponent implements AfterViewInit {\r\n  @Input() open: boolean = false;\r\n  @Input() trigger: HTMLElement;\r\n  @Input() \r\n  set notifications(notifications: AvlNotification[]) {\r\n    this.notificationList = this.prepareNotifications(notifications);\r\n    this.numberOfUnreadNotifications = notifications.filter(notif => !notif.read).length;\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n  @Output() openDetails = new EventEmitter<void>();\r\n  @Output() notificationStateChanged = new EventEmitter<AvlNotification>();\r\n  @Output() markAllAsRead = new EventEmitter<void>();\r\n  @Output() markAllAsUnread = new EventEmitter<void>();\r\n\r\n  @ViewChild('list') list: ElementRef<AvlList>;\r\n\r\n  public overflowMenuItems: AvlOverflowMenuGroup[] = [];\r\n  public notificationList: AvlNotificationMenuItem[] = [];\r\n  public numberOfUnreadNotifications: number = 0;\r\n\r\n  private overflowMenuHandlers: { [key: string]: () => void } = {\r\n    markAllAsRead: () => {\r\n      this.markAllAsRead.emit();\r\n      this.numberOfUnreadNotifications = 0;\r\n    },\r\n    markAllAsUnread: () => {\r\n      this.markAllAsUnread.emit();\r\n      this.numberOfUnreadNotifications = this.notificationList.length;\r\n    },\r\n    undefined: () => {}\r\n  };\r\n\r\n  constructor() {\r\n    this.translateLabels();\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.list.nativeElement.revertedList = true;\r\n  }\r\n\r\n  public onNotificationStateChanged(event: Event): void {\r\n    const notificationMenuItem: AvlNotificationMenuItem = { ...(<CustomEvent>event).detail.value };\r\n    const notification = {\r\n      ...notificationMenuItem,\r\n      read: notificationMenuItem.iconToggleValue\r\n    } as AvlNotification;\r\n    notification.read ? this.numberOfUnreadNotifications-- : this.numberOfUnreadNotifications++;\r\n    this.notificationStateChanged.emit(notification);\r\n\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onItemClicked(item: AvlOverflowMenuItem): void {\r\n    this.overflowMenuHandlers[item.action]();\r\n  }\r\n\r\n  public onOpenChanged(event: Event): void {\r\n    if (!(<CustomEvent>event).detail.value) {\r\n      this.openChange.emit(false);\r\n    } else {\r\n      this.notificationList = [...this.notificationList];\r\n    }\r\n  }\r\n\r\n  public onOverflowMenuClicked(): void {\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onDetailsClicked(): void {\r\n    this.open = false;\r\n    this.openDetails.emit();\r\n    this.openChange.emit(false);\r\n  }\r\n\r\n  private prepareNotifications(notifications: AvlNotification[]): AvlNotificationMenuItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      label: notification.messageText,\r\n      sublabel: this.formatDateTime(notification.timestamp),\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconToggleUnchecked: 'mail',\r\n      iconToggleChecked: 'communication:mail-outline',\r\n      iconToggleValue: notification.read\r\n    }));\r\n  }\r\n\r\n  private formatDateTime(date: Date): string {\r\n    return date === null\r\n      ? ''\r\n      : `${AvlLocalizationService.formatDateTime(date, {\r\n          format: 'date-short'\r\n        })} ${AvlLocalizationService.formatDateTime(date, { format: 'time-long' })}`;\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    this.overflowMenuItems = await this.translateMenu(NOTIFICATIONS_OVERFLOW_MENU);\r\n  }\r\n\r\n  private async translateMenu(menu: AvlOverflowMenuGroup[]): Promise<AvlOverflowMenuGroup[]> {\r\n    return await Promise.all(menu.map(async group => await this.translateMenuGroup(group)));\r\n  }\r\n\r\n  private async translateMenuGroup(group: AvlOverflowMenuGroup): Promise<AvlOverflowMenuGroup> {\r\n    return {\r\n      items: await Promise.all(group.items.map(async item => await this.translateMenuItem(item)))\r\n    };\r\n  }\r\n\r\n  private async translateMenuItem(item: AvlOverflowMenuItem): Promise<AvlOverflowMenuItem> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label: await translateService.translate(item.label),\r\n      sublabel: item.sublabel ? await translateService.translate(item.sublabel) : null\r\n    };\r\n  }\r\n}\r\n","\r\n/** @hidden */\r\nexport const ANIMATION_DURATION = 400;\r\n\r\n/** @hidden */\r\nexport const ACTION_BUTTON_MESSAGE = '_X more _TYPE notifications';\r\n\r\n/** @hidden */\r\nexport const MARGIN = 12;\r\n\r\n\r\n\r\n\r\n","import { Directive, Input, HostBinding, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { MARGIN } from '../avl-notification-container.consts';\r\n\r\n@Directive({ selector: '[animateButton]' })\r\nexport class AnimateButton implements OnChanges {\r\n  /** @hidden */\r\n  @Input() increment: number;\r\n\r\n  /** @hidden */\r\n  @Input() infoStackHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackHeight: number;\r\n  /** @hidden */\r\n  @Input() infoStackIndicatorHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackIndicatorHeight: number;\r\n\r\n  @HostBinding('style.top') styleTop: string;\r\n\r\n  constructor() {}\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const infoStackOffsetHeight = this.getOffsetHeight(this.getInfoHeight());\r\n    const warningStackOffsetHeight = this.getOffsetHeight(this.getWarningHeight());\r\n    this.styleTop = infoStackOffsetHeight + warningStackOffsetHeight + 'px';\r\n  }\r\n  private getInfoHeight = (): number => {\r\n    return this.infoStackHeight > this.infoStackIndicatorHeight\r\n      ? this.infoStackHeight\r\n      : this.infoStackIndicatorHeight;\r\n  };\r\n  private getWarningHeight = (): number => {\r\n    return this.warningStackHeight > this.warningStackIndicatorHeight\r\n      ? this.warningStackHeight\r\n      : this.warningStackIndicatorHeight;\r\n  };\r\n\r\n  private getOffsetHeight = (height: number): number => {\r\n    return height ? height + MARGIN * 2 : 0;\r\n  };\r\n}\r\n","import { Directive, ElementRef, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { PositionAnimation } from './animate-stack.directive';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\n/** @hidden */\r\n\r\n@Directive({ selector: '[animateSnackbar]' })\r\nexport class AnimateSnackbar implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateSnackbar: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly positionAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input('notification') readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input('reopen') readonly reopen: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.in-stack') inStack: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.no-animation') noAnimation: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.snackbar-container') defaultClass = true;\r\n\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateSnackbar) {\r\n      const isInStack = changes.animateSnackbar.currentValue === PositionAnimation.ToStack;\r\n      if (isInStack) {\r\n        this.move();\r\n      } else if (changes.animateSnackbar.previousValue === PositionAnimation.ToStack) {\r\n        this.move();\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move() {\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      marginTop: '0',\r\n      width: '100%',\r\n      marginLeft: '0',\r\n      marginRight: '0'\r\n    });\r\n    return this.getAnimation(this.animateSnackbar, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const elementWidth = this.element.nativeElement.offsetWidth - 3 * MARGIN;\r\n    const inStackStyle = style({\r\n      marginTop: MARGIN + 'px',\r\n      marginLeft: MARGIN + 'px',\r\n      marginRight: MARGIN + 'px',\r\n      width: elementWidth + 'px'\r\n    });\r\n    switch (animationName) {\r\n      case PositionAnimation.FromStack:\r\n        return [animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle), initialStyle];\r\n\r\n      case PositionAnimation.ToStack: {\r\n        return [initialStyle, animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('1ms ease-in', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, Input, SimpleChanges, OnChanges, ElementRef } from '@angular/core';\r\n\r\n/**@hidden */\r\nexport class SnackbarMethodDescription {\r\n  method: 'show' | 'hide';\r\n  animate: boolean;\r\n\r\n  constructor(method: 'show' | 'hide', animate: boolean) {\r\n    this.method = method;\r\n    this.animate = animate;\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[showHideSnackbar]' })\r\nexport class ShowHideSnackbarDirective implements OnChanges {\r\n  /** @hidden */\r\n  @Input() methodDescription: SnackbarMethodDescription;\r\n  private element: ElementRef;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.methodDescription) {\r\n      if (changes.methodDescription.currentValue?.method === 'show') {\r\n        setTimeout(\r\n          () =>\r\n            this.element.nativeElement?.showSnackbar(\r\n              'relative',\r\n              !changes.methodDescription.currentValue?.animate\r\n            ),\r\n          0\r\n        );\r\n      } else if (changes.methodDescription.currentValue?.method === 'hide') {\r\n        this.element.nativeElement?.hideSnackbar(changes.methodDescription.currentValue?.animate);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './show-hide-snackbar.directive';\r\n/** @hidden */\r\nexport const enum PositionAnimation {\r\n  ToLowerStack,\r\n  ToTop,\r\n  ToBottom,\r\n  ToStack,\r\n  FromStack\r\n}\r\n@Directive({ selector: '[animateStack]' })\r\nexport class AnimateStack implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateStack: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input() readonly previousStackHeight: number;\r\n\r\n  /** @hidden */\r\n  @Input() readonly snackbarMethodDescription: SnackbarMethodDescription;\r\n\r\n  /** @hidden */\r\n  @Input() readonly reopen: boolean;\r\n\r\n  private styleTop: number;\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateStack) {\r\n      this.move(this.previousStackHeight);\r\n    } else if (changes.previousStackHeight) {\r\n      this.move(changes?.previousStackHeight.currentValue);\r\n    } else if (changes.snackbarMethodDescription) {\r\n      if (changes.snackbarMethodDescription.currentValue?.method === 'show') {\r\n        this.move(this.previousStackHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move(height: number) {\r\n    if (this.animateStack === PositionAnimation.ToBottom) {\r\n      this.styleTop = height + MARGIN * 2;\r\n    }\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      top: '0',\r\n      width: '100%',\r\n      left: '0',\r\n      zIndex: 1\r\n    });\r\n    return this.getAnimation(this.animateStack, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const allStyle = style('*');\r\n\r\n    switch (animationName) {\r\n      case PositionAnimation.ToBottom: {\r\n        return [\r\n          allStyle,\r\n          animate(\r\n            ANIMATION_DURATION + 'ms ease-in',\r\n            style({\r\n              top: this.styleTop + 'px',\r\n              zIndex: 0\r\n            })\r\n          )\r\n        ];\r\n      }\r\n      case PositionAnimation.ToTop: {\r\n        return [allStyle, animate(ANIMATION_DURATION + 'ms ease-in', initialStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('0ms', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({ selector: '[snackbarListener]' })\r\nexport class SnackbarListener {\r\n  /** @hidden */\r\n  @Output() notificationClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() buttonClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() notificationDismissed: EventEmitter<Event> = new EventEmitter();\r\n  @HostListener('notification-clicked', ['$event']) onNotificationClicked(event: Event) {\r\n    this.notificationClicked.emit(event);\r\n  }\r\n  @HostListener('button-clicked', ['$event']) onButtonClicked(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.buttonClicked.emit(event);\r\n    }\r\n  }\r\n  @HostListener('notification-dismissed', ['$event']) onNotificationDismissed(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.notificationDismissed.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { AvlNotification } from '@avl-controls/interfaces';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { skipWhile } from 'rxjs/operators';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { ANIMATION_DURATION, ACTION_BUTTON_MESSAGE } from './avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\n\r\n/** @hidden */\r\nexport class SnackbarStack {\r\n  /** @hidden */\r\n  public buttonLabel: string;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  /** @hidden */\r\n  public activeNotification$: BehaviorSubject<AvlNotification> = new BehaviorSubject(undefined);\r\n\r\n  /** @hidden */\r\n  public stackAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public snackbarAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public stackIndicator = false;\r\n\r\n  /** @hidden */\r\n  public stackIndicatorButtonLabel: string;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public methodDescription: SnackbarMethodDescription;\r\n  \r\n  /** @hidden */\r\n  public reopen: boolean;\r\n  \r\n  /** @hidden */\r\n  public dismissedSilently: boolean;\r\n\r\n  /** @hidden */\r\n  public actionButtonMessage = ACTION_BUTTON_MESSAGE;\r\n\r\n  constructor(stackType: string) {\r\n    this.translateLabels();\r\n    this.methodDescription = new SnackbarMethodDescription(undefined, undefined)\r\n    this.activeNotification$\r\n      .pipe(skipWhile(notification => notification === undefined))\r\n      .subscribe((notification: AvlNotification) => {\r\n        if (notification) {\r\n          if (this.notificationList.length > 0) {\r\n            const timeout = setTimeout(\r\n              () => {\r\n                this.openNextNotification(stackType);\r\n                clearTimeout(timeout);\r\n              },\r\n              this.previousNotification ? ANIMATION_DURATION : 0\r\n            );\r\n          } else {\r\n            this.openNextNotification(stackType);\r\n          }\r\n        } else {\r\n          this.resetValues();\r\n        }\r\n      });\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.actionButtonMessage = await translationService.translate('VizBox.NotificationContainer._X_more_TYPE_notifications');\r\n  }\r\n\r\n  private openNextNotification = (stackType): void => {\r\n    this.methodDescription = new SnackbarMethodDescription('show', !this.reopen);\r\n    if (!this.reopen) {\r\n      this.stackAnimation = PositionAnimation.ToTop;\r\n    } else {\r\n      this.stackAnimation = PositionAnimation.FromStack;\r\n    }\r\n    this.setStackIndicatorProperties(stackType);\r\n    this.reopen = false;\r\n    this.dismissedSilently = false;\r\n  };\r\n\r\n  private resetValues = () => {\r\n    this.notificationList = [];\r\n    this.previousNotification = undefined;\r\n    this.stackIndicator = undefined;\r\n  };\r\n  private setStackIndicatorProperties = (stackType: string): void => {\r\n    const notificationsCount = this.notificationList.length;\r\n    this.stackIndicator = notificationsCount > 1;\r\n    const timeout = setTimeout(\r\n      () => {\r\n        this.previousNotification = this.notificationList[notificationsCount-1];\r\n        this.buttonLabel = this.setButtonLabel(notificationsCount, stackType);\r\n        this.stackIndicatorButtonLabel = this.setButtonLabel(notificationsCount - 1, stackType);\r\n        clearTimeout(timeout);\r\n      },\r\n      this.previousNotification ? ANIMATION_DURATION : 0\r\n    );\r\n  };\r\n  private setButtonLabel = (notificationsCount: number, type: string): string => {\r\n    return notificationsCount > 0\r\n      ? this.actionButtonMessage\r\n        .replace('_TYPE ', type === 'info' ? '' : type + ' ')\r\n        .replace('_X', String(notificationsCount))\r\n      : null;\r\n  };\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-snackbar/avl-snackbar';\r\nimport { AvlNotification, AvlNotificationType } from '@avl-controls/interfaces';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\nimport { Subject } from 'rxjs';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { SnackbarStack } from './snackbar-stack';\r\nimport { ANIMATION_DURATION } from './avl-notification-container.consts';\r\n\r\nconst NOTIFICATION_TYPE = new Map<number, string>([\r\n  [AvlNotificationType.Error, 'Error'],\r\n  [AvlNotificationType.Warning, 'Warning'],\r\n  [AvlNotificationType.Info, 'Info'],\r\n  [AvlNotificationType.OK, 'OK']\r\n]);\r\n@Component({\r\n  selector: 'avl-notification-container',\r\n  templateUrl: './avl-notification-container.component.html',\r\n  styleUrls: ['./avl-notification-container.component.css']\r\n})\r\nexport class AvlNotificationContainerComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  /** @hidden */\r\n  @HostBinding('style.top') positionTop: string;\r\n\r\n  /** @hidden */\r\n  @ViewChild('warningStackElement') warningStackElement: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('infoStackElement') infoStackElement: ElementRef;\r\n \r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') infoStackIndicatorElement: ElementRef;\r\n  \r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') warningStackIndicatorElement: ElementRef;\r\n\r\n  /** If set optional icon (for info and OK notifications) is displayed, hidden otherwise. */\r\n  @Input('display-icon') public displayIcon: boolean;\r\n\r\n  /** Observable emits notifications. Default observable emits dummy notifications every 3s for 100s. */\r\n  @Input('notification$') public notification$: Observable<AvlNotification> = new Observable(\r\n    function subscribe(subscriber) {\r\n      let i = 0;\r\n      const intervalId = setInterval(() => {\r\n        const warning = Math.round(Math.random());\r\n        subscriber.next({\r\n          id: i++,\r\n          module: 'notification-container',\r\n          timestamp: new Date(),\r\n          type: warning ? AvlNotificationType.Warning : AvlNotificationType.Info,\r\n          messageText: 'Snackbar with notification' + new Date().toTimeString(),\r\n          read: false,\r\n          link: 'https://vizbox.avl.com'\r\n        });\r\n      }, 3000);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(intervalId);\r\n      }, 100000);\r\n    }\r\n  );\r\n\r\n  @Output() openMenu: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public warningStack: SnackbarStack;\r\n  /** @hidden */\r\n  public infoStack: SnackbarStack;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public stackHeight: { [key: string]: number } = {};\r\n\r\n  /** @hidden */\r\n  public reopen: boolean;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  private activeNotification: AvlNotification;\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  constructor(readonly cdRef: ChangeDetectorRef) {\r\n    this.warningStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Warning)).toLowerCase()\r\n    );\r\n\r\n    this.infoStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Info)).toLowerCase()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** @hidden */\r\n  public ngOnInit(): void {\r\n    this.positionTop = document.querySelector('main')?.offsetTop + 12 + 'px';\r\n    this.notification$?.pipe(takeUntil(this.destroyed$)).subscribe(notification => {\r\n      this.handleNotification(notification);\r\n    });\r\n  }\r\n\r\n  /** @hidden */\r\n  public onButtonClicked = (event: any): void => {\r\n    if (event) {\r\n      this.openMenu.emit();\r\n      this.dismissAll();\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public onNotificationDismissed = (event: any, notification: AvlNotification): void => {\r\n    if (event) {\r\n      const snackType = (event.target as HTMLElement)?.id?.replace('Snackbar', '');\r\n      this.removeNotification(notification, snackType);\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public openFromStack = (notification: AvlNotification): void => {\r\n    const stackName = this.getStackName(notification.type);\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', true);\r\n  };\r\n\r\n  /** @hidden */\r\n  public dismissAll = (): void => {\r\n    this.notificationList = [];\r\n    this.warningStack.activeNotification$.next(undefined);\r\n    this.infoStack.activeNotification$.next(undefined);\r\n  };\r\n\r\n  private handleNotification = (notification: any): void => {\r\n    this.previousNotification = this.notificationList[this.notificationList.length - 1];\r\n    this.notificationList.push(notification);\r\n    this.updateStackActiveNotification(notification);\r\n    this.setStackAnimation(notification.type);\r\n  };\r\n\r\n  private updateStackActiveNotification = (notification: AvlNotification): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    this.updateStackNotificationList(notification.type);\r\n    this.activeNotification = notification;\r\n\r\n    if (this[stackName].notificationList.length > 1) {\r\n      this.reopen = true;\r\n      if (this.previousNotification?.type === notification.type) {\r\n        this[stackName].snackbarAnimation = PositionAnimation.ToStack;\r\n\r\n        // silently dismiss notification after previous notification animation\r\n        const timeout = setTimeout(() => {\r\n          this.silentlyDismissNotification(stackName);\r\n          this[stackName].snackbarAnimation = null;\r\n          clearTimeout(timeout);\r\n        }, ANIMATION_DURATION);\r\n      } else {\r\n        this.silentlyDismissNotification(stackName);\r\n      }\r\n    } else {\r\n      this[stackName].activeNotification$.next(notification);\r\n    }\r\n  };\r\n  private updateStackNotificationList = (\r\n    notificationType: AvlNotificationType\r\n  ): AvlNotification[] => {\r\n    const stack = this[this.getStack(notificationType)];\r\n    if (stack) {\r\n      stack.notificationList = this.notificationList.filter(item => item.type === notificationType);\r\n    }\r\n    return stack.notificationList;\r\n  };\r\n\r\n  private silentlyDismissNotification = (stackName: string): void => {\r\n    this[stackName].dismissedSilently = true;\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', false);\r\n  };\r\n\r\n  private setStackAnimation = (\r\n    notificationType: AvlNotificationType,\r\n    animation?: PositionAnimation\r\n  ): void => {\r\n    const currentStack = this.getStack(notificationType);\r\n    const previousStack = this.getStack(notificationType, true);\r\n\r\n    if (\r\n      this[previousStack]?.notificationList?.length > 0 &&\r\n      this.previousNotification?.type !== notificationType\r\n    ) {\r\n      this[previousStack].stackAnimation = animation || PositionAnimation.ToBottom;\r\n\r\n      this[currentStack].stackAnimation =\r\n        animation === PositionAnimation.ToTop\r\n          ? PositionAnimation.ToBottom\r\n          : PositionAnimation.ToTop;\r\n    }\r\n  };\r\n\r\n  private removeNotification = (notification: AvlNotification, snackType?: string): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    if (this[stackName].dismissedSilently) {\r\n      //notification dismissed silently\r\n      const stackName: string = this.getStack(this.activeNotification?.type);\r\n      this[stackName].activeNotification$.next(this.activeNotification);\r\n      this.reopen = false;\r\n    } else {\r\n      //notification dismissed\r\n      this.notificationList = this.notificationList.filter(\r\n        currentNotification => currentNotification.id !== notification.id\r\n      );\r\n      this.reopenLastNotification(notification, stackName);\r\n    }\r\n  };\r\n\r\n  private reopenLastNotification = (notification: AvlNotification, stackName: string): void => {\r\n    let stackNotificationList: AvlNotification[] = this[stackName]?.notificationList;\r\n    if (\r\n      this.isLastNotificationDismissed(notification, this[stackName]) &&\r\n      stackNotificationList?.length > 0\r\n    ) {\r\n      this[stackName].reopen = true;\r\n\r\n      stackNotificationList = this.updateStackNotificationList(notification.type);\r\n      const lastNotification = stackNotificationList[stackNotificationList.length - 1];\r\n      if (lastNotification) {\r\n        this[stackName].activeNotification$.next(lastNotification);\r\n      } else {\r\n        this[stackName].stackIndicator = false;\r\n        this[stackName].reopen = false;\r\n        this[stackName].animateStack = PositionAnimation.ToBottom;\r\n        this.setStackAnimation(notification.type, PositionAnimation.ToTop);\r\n      }\r\n    }\r\n  };\r\n\r\n  private isLastNotificationDismissed = (\r\n    notification: AvlNotification,\r\n    stack: SnackbarStack\r\n  ): boolean => {\r\n    const lastNotification: AvlNotification =\r\n      stack.notificationList[stack.notificationList.length - 1];\r\n    return lastNotification?.id === notification?.id;\r\n  };\r\n  private getStack(notificationType: number, previous?: boolean): string {\r\n    let stackType: AvlNotificationType;\r\n    if (\r\n      notificationType === AvlNotificationType.Warning ||\r\n      notificationType === AvlNotificationType.Error\r\n    ) {\r\n      stackType = previous ? AvlNotificationType.Info : AvlNotificationType.Warning;\r\n    } else {\r\n      stackType = previous ? AvlNotificationType.Warning : AvlNotificationType.Info;\r\n    }\r\n    return this.getStackName(stackType);\r\n  }\r\n\r\n  private getStackName = (stackType: AvlNotificationType): string => {\r\n    return stackType === 1 ? 'warningStack' : 'infoStack';\r\n  };\r\n}\r\n","import { PageSizeOption } from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport {\r\n  Column,\r\n  ColumnType,\r\n  LeafColumn\r\n} from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport { AvlNotificationType } from '@avl-controls/interfaces';\r\n\r\nexport const DEFAULT_PAGE_SIZE_OPTIONS: PageSizeOption[] = [\r\n  { value: 15, label: 'Show 15 per page' },\r\n  { value: 50, label: 'Show 50 per page' },\r\n  { value: Number.MAX_SAFE_INTEGER, label: 'Show all' }\r\n];\r\n\r\nexport const DEFAULT_FILTERS = {\r\n  type: {\r\n    warning: undefined,\r\n    error: undefined,\r\n    info: undefined,\r\n    ok: undefined\r\n  },\r\n  state: {\r\n    read: undefined,\r\n    unread: undefined\r\n  },\r\n  date: {\r\n    dateFromValue: undefined,\r\n    dateToValue: undefined\r\n  }\r\n};\r\n\r\nexport const DEFAULT_COLUMN_DEFINITIONS = [\r\n  new LeafColumn('VizBox.NotificationDialog.Type', 'icon', ColumnType.Icon, false, false, 0.5),\r\n  new LeafColumn('VizBox.NotificationDialog.Module', 'module', ColumnType.Text, true, false, 3),\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.Message',\r\n    'messageText',\r\n    ColumnType.Text,\r\n    true,\r\n    false,\r\n    8\r\n  ),\r\n  new LeafColumn('VizBox.NotificationDialog.Id', 'id', ColumnType.Number, false, false, 1),\r\n  <Column>{\r\n    caption: 'VizBox.NotificationDialog.Timestamp',\r\n    valueField: 'timestamp',\r\n    type: ColumnType.Date,\r\n    sortable: false,\r\n    filterable: false,\r\n    flexWidth: 3,\r\n    dateTimeOptions: { format: 'date-time-short' }\r\n  },\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.State',\r\n    'currentIconToggle',\r\n    ColumnType.Icon,\r\n    false,\r\n    false,\r\n    1\r\n  )\r\n];\r\n\r\nexport const NOTIFICATION_TYPE_MAPPINGS = {\r\n  [0]: 'error',\r\n  [1]: 'warning',\r\n  [2]: 'info',\r\n  [3]: 'ok',\r\n  false: 'unread',\r\n  true: 'read'\r\n};\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n\r\nexport const STATE_ICON_MAPPINGS = {\r\n  false: 'mail',\r\n  true: 'communication:mail-outline'\r\n};\r\n\r\nexport const DEFAULT_ICON_STYLE = 'height:24px; width:24px;';\r\n\r\nexport const TYPE_ICON_STYLE_MAPPINGS = {\r\n  [AvlNotificationType.Error]: `--avl-icon-custom-color: var(--avl-error-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Warning]: `--avl-icon-custom-color: var(--avl-warning-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Info]: `--avl-icon-custom-color: var(--avl-icon-default-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.OK]: `--avl-icon-custom-color: var(--avl-ok-color); ${DEFAULT_ICON_STYLE}`\r\n};\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  AfterViewChecked\r\n} from '@angular/core';\r\nimport { Column } from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport {\r\n  AvlDatatable,\r\n  PageSizeOption\r\n} from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\n\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\n\r\nimport '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-side-sheet/avl-side-sheet';\r\nimport '@avl-controls/core/dist/avl-checkbox/avl-checkbox';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\nimport '@avl-controls/core/dist/avl-date/avl-date';\r\nimport { AvlNotificationTableItem } from '../../models/notification-dialog.model';\r\nimport {\r\n  DEFAULT_COLUMN_DEFINITIONS,\r\n  DEFAULT_FILTERS,\r\n  DEFAULT_PAGE_SIZE_OPTIONS,\r\n  TYPE_ICON_STYLE_MAPPINGS,\r\n  TYPE_ICON_MAPPINGS,\r\n  STATE_ICON_MAPPINGS,\r\n  NOTIFICATION_TYPE_MAPPINGS,\r\n  DEFAULT_ICON_STYLE\r\n} from './avl-notification-dialog.consts';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'avl-notification-dialog',\r\n  templateUrl: './avl-notification-dialog.component.html',\r\n  styleUrls: ['./avl-notification-dialog.component.css']\r\n})\r\nexport class AvlNotificationDialogComponent implements OnInit, AfterViewChecked {\r\n  @Input() open: boolean = false;\r\n  @Input() pageSizeOptions: PageSizeOption[] = DEFAULT_PAGE_SIZE_OPTIONS;\r\n  @Input() columnDefinitions: Column[] = DEFAULT_COLUMN_DEFINITIONS;\r\n  @Input()\r\n  get notifications(): AvlNotification[] {\r\n    return this._notifications;\r\n  }\r\n\r\n  set notifications(notifications: AvlNotification[]) {\r\n    if (this._notifications.length === notifications.length) {\r\n      return;\r\n    }\r\n\r\n    this.showRefreshButton = true;\r\n    this._notifications = notifications;\r\n  }\r\n\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() markSelectedAsRead: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() markSelectedAsUnread: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n\r\n  @ViewChild('notificationTable') public table: ElementRef<AvlDatatable>;\r\n  @ViewChild('filterForm', { read: NgForm }) filterForm: NgForm;\r\n\r\n  public tableData: AvlNotificationTableItem[] = [];\r\n  public filteredData: AvlNotificationTableItem[] = [];\r\n  public badge: boolean = false;\r\n  public disableMarkingSelected: boolean = true;\r\n  public filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n  public filtersOpen = true;\r\n  public showRefreshButton = false;\r\n  public dateFromLabel = 'Date from';\r\n  public dateToLabel = 'Date to';\r\n\r\n  private dateFilterGroupInitHeader = 'Date';\r\n  public dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n\r\n  //notification datatable options\r\n  public selectedRows: AvlNotificationTableItem[] = [];\r\n  public pageSize = 15;\r\n\r\n  public appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);\r\n\r\n  private _notifications: AvlNotification[] = [];\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.translateLabels();\r\n    this.refreshTable();\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** Emits event when dialog opens or closes */\r\n  public openChanged(open: boolean): void {\r\n    this.openChange.emit(open);\r\n  }\r\n\r\n  /** Toggles displaying of filter sheet */\r\n  public toggleFilters(): void {\r\n    this.filtersOpen = !this.filtersOpen;\r\n  }\r\n\r\n  /** Refreshes the datatable when refresh button is clicked */\r\n  public refreshTable(): void {\r\n    this.showRefreshButton = false;\r\n    this.tableData = this.prepareNotifications(this._notifications);\r\n    this.filters = this.deepCopyObject(this.appliedFilters);\r\n    this.filterData();\r\n  }\r\n\r\n  /**\r\n   * Invoked when clicking apply button - filters data by given filters.\r\n   */\r\n  public applyFilters(): void {\r\n    this.appliedFilters = this.deepCopyObject(this.filters);\r\n    this.filterData();\r\n  }\r\n\r\n  /** Filters notifications according to applied filters */\r\n  public filterData(): void {\r\n    this.filteredData = [];\r\n    const filters = this.getActiveFilters();\r\n    for (const element of this.tableData) {\r\n      if (this.doesElementPassEveryFilter(filters, element)) {\r\n        this.filteredData.push(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Changes selected notification state to read */\r\n  public markAsRead(): void {\r\n    this.updateStateOfSelectedRowsTo(true);\r\n    this.markSelectedAsRead.emit(this.selectedRows);\r\n  }\r\n\r\n  /** Changes selected notification state to unread */\r\n  public markAsUnread(): void {\r\n    this.updateStateOfSelectedRowsTo(false);\r\n    this.markSelectedAsUnread.emit(this.selectedRows);\r\n  }\r\n\r\n  /**\r\n   * Resets all filters.\r\n   */\r\n  public reset(): void {\r\n    this.filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.filterData();\r\n    this.updateLabels();\r\n    this.badge = false;\r\n  }\r\n\r\n  /** Calculates active filters from filter object */\r\n  public getActiveFilters(): Object {\r\n    this.badge = false;\r\n    const setFilters = {};\r\n    // Mapping applied filters object to better format used for filtering, \r\n    // creates arrays from objects\r\n    for (const item of Object.keys(this.appliedFilters)) {\r\n      const secondLevelFilter = [];\r\n      for (const filter of Object.keys(this.appliedFilters[item])) {\r\n        if (this.appliedFilters[item][filter] === true) {\r\n          secondLevelFilter.push(filter);\r\n          this.badge = true;\r\n        }\r\n      }\r\n\r\n      if (secondLevelFilter.length) {\r\n        setFilters[item] = secondLevelFilter;\r\n      }\r\n\r\n      if (item === 'date') {\r\n        setFilters[item] = [\r\n          this.appliedFilters[item]['dateFromValue'],\r\n          this.appliedFilters[item]['dateToValue']\r\n        ];\r\n      }\r\n    }\r\n    return setFilters;\r\n  }\r\n\r\n  /** Called when selection is applied to the table rows */\r\n  public selectedValuesChanged() {\r\n    this.disableMarkingSelected = false;\r\n    if (this.selectedRows.length == 0) {\r\n      this.disableMarkingSelected = true;\r\n    }\r\n  }\r\n\r\n  /** Updates date filter header labels when date changes */\r\n  public async updateLabels(): Promise<void> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    const { dateFromValue, dateToValue } = this.filters.date;\r\n    if (!dateFromValue && !dateToValue) {\r\n      this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    } else {\r\n      this.dateFilterGroupHeader = await translationService.translate(\r\n        'VizBox.NotificationDialog.DateRange',\r\n        {\r\n          dateFrom: this.formatDateTime(dateFromValue),\r\n          dateTo: this.formatDateTime(dateToValue)\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Calculates number of notifications with specific type */\r\n  public getNumberOfNotificationsWithType(data: AvlNotificationTableItem[], type: string): number {\r\n    return data.filter(element => NOTIFICATION_TYPE_MAPPINGS[element.type] === type).length;\r\n  }\r\n\r\n  /** Calculates number of unread notifications */\r\n  public getNumberOfUnreadNotifications(data: AvlNotificationTableItem[]): number {\r\n    return data.filter(element => !element.state).length;\r\n  }\r\n\r\n  /** Calculates number of notifications currently displayed in datatable */\r\n  public getNumberOfNotifications(): string {\r\n    if (this.filteredData.length === this.tableData.length && !this.badge) {\r\n      return this.filteredData.length.toString();\r\n    } else {\r\n      return `${this.filteredData.length}/${this.tableData.length}`;\r\n    }\r\n  }\r\n\r\n  /** Opens link in new tab when table row is clicked */\r\n  public onRowClicked(event: Event): void {\r\n    const row = (<CustomEvent>event).detail;\r\n    if (row.link) {\r\n      window.open(row.link, '_blank');\r\n    }\r\n  }\r\n\r\n  /** Maps general avl notification list to table specific list */\r\n  private prepareNotifications(notifications: AvlNotification[]): AvlNotificationTableItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconStyle: TYPE_ICON_STYLE_MAPPINGS[notification.type],\r\n      currentIconToggle: STATE_ICON_MAPPINGS[String(notification.read)],\r\n      currentIconToggleStyle: DEFAULT_ICON_STYLE,\r\n      state: notification.read\r\n    }));\r\n  }\r\n\r\n  /** Formats date time to date-short */\r\n  private formatDateTime(d: Date): string {\r\n    return d ? AvlLocalizationService.formatDateTime(d, { format: 'date-short' }) : '(-)';\r\n  }\r\n\r\n  /** Deep copy of filters object */\r\n  private deepCopyObject(object: any): any {\r\n    const copiedObject = {};\r\n    Object.keys(object).forEach(key => {\r\n      copiedObject[key] = Object.assign({}, object[key]);\r\n    });\r\n    return copiedObject;\r\n  }\r\n\r\n  /** Determines if element satisfies filter for every key in this.apppliedFilters */\r\n  private doesElementPassEveryFilter(activeFilters: any, element: any): boolean {\r\n    return Object.keys(activeFilters).every(key => {\r\n      if (key === 'date') {\r\n        const [dateFrom, dateTo] = this.prepareDates(activeFilters[key]);\r\n\r\n        // If dates not set, filter this element as well\r\n        if (!dateFrom.getTime() && !dateTo.getTime()) {\r\n          return true;\r\n        }\r\n\r\n        this.badge = true;\r\n\r\n        // If timestamp is not a Date, don't filter this element\r\n        const timestamp = new Date(element.timestamp);\r\n        if (!timestamp.getTime()) {\r\n          return false;\r\n        }\r\n        return this.compareDates(timestamp, dateFrom, dateTo);\r\n      }\r\n\r\n      return activeFilters[key].includes(NOTIFICATION_TYPE_MAPPINGS[element[key]]);\r\n    });\r\n  }\r\n\r\n  private prepareDates(dates: string[]): [Date, Date] {\r\n    const dateFrom = new Date(dates[0]);\r\n    const dateTo = new Date(dates[1]);\r\n    dateFrom.setHours(0, 0, 0, 0);\r\n    dateTo.setHours(23, 59, 59, 999);\r\n    return [dateFrom, dateTo];\r\n  }\r\n\r\n  private compareDates(timestamp: Date, from: Date, to: Date): boolean {\r\n    const ts = timestamp.getTime();\r\n    const fromTs = from?.getTime();\r\n    const toTs = to?.getTime();\r\n\r\n    if (fromTs && toTs) {\r\n      return ts >= fromTs && ts <= toTs;\r\n    } else if (fromTs) {\r\n      return ts >= fromTs;\r\n    } else if (toTs) {\r\n      return ts <= toTs;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private updateStateOfSelectedRowsTo(state: boolean): void {\r\n    this.tableData\r\n      .filter(notification => this.isRowSelected(notification.id))\r\n      .forEach(notification => {\r\n        notification.state = state;\r\n        notification.currentIconToggle = STATE_ICON_MAPPINGS[String(state)];\r\n      });\r\n    this.tableData = [...this.tableData];\r\n    this.filterData();\r\n  }\r\n\r\n  private isRowSelected(id: number): boolean {\r\n    return this.selectedRows.map(row => row.id).includes(id);\r\n  }\r\n\r\n  // Translations\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.dateFilterGroupInitHeader = await translationService.translate(\r\n      'VizBox.NotificationDialog.Date'\r\n    );\r\n    this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    this.dateFromLabel = await translationService.translate('VizBox.NotificationDialog.DateFrom');\r\n    this.dateToLabel = await translationService.translate('VizBox.NotificationDialog.DateTo');\r\n    this.pageSizeOptions = await this.translatePageSizeOptions(this.pageSizeOptions);\r\n    this.columnDefinitions = await this.translateColumns(this.columnDefinitions);\r\n  }\r\n\r\n  private async translatePageSizeOptions(options: PageSizeOption[]): Promise<PageSizeOption[]> {\r\n    return await Promise.all(\r\n      options.map(async option => await this.translatePageSizeOption(option))\r\n    );\r\n  }\r\n\r\n  private async translatePageSizeOption(item: PageSizeOption): Promise<PageSizeOption> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label:\r\n        item.value === Number.MAX_SAFE_INTEGER\r\n          ? await translationService.translate('VizBox.NotificationDialog.ShowAll')\r\n          : await translationService.translate('VizBox.NotificationDialog.ShowXPerPage', {\r\n              rows: item.value\r\n            })\r\n    };\r\n  }\r\n\r\n  private async translateColumns(column: Column[]): Promise<Column[]> {\r\n    return await Promise.all(column.map(async item => await this.translateColumnItem(item)));\r\n  }\r\n\r\n  private async translateColumnItem(item: Column): Promise<Column> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      caption: await translateService.translate(item.caption)\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AvlNotificationMenuComponent } from './components/avl-notification-menu/avl-notification-menu.component';\r\nimport { AnimateButton } from './components/avl-notification-container/directives/animate-button.directive';\r\nimport { AnimateSnackbar } from './components/avl-notification-container/directives/animate-snackbar.directive';\r\nimport { AnimateStack } from './components/avl-notification-container/directives/animate-stack.directive';\r\nimport { ShowHideSnackbarDirective } from './components/avl-notification-container/directives/show-hide-snackbar.directive';\r\nimport { SnackbarListener } from './components/avl-notification-container/directives/snackbar-listener.directive';\r\nimport { AvlNotificationContainerComponent } from './components/avl-notification-container/avl-notification-container.component';\r\nimport { AvlNotificationDialogComponent } from './components/avl-notification-dialog/avl-notification-dialog.component';\r\n\r\nimport { AvlDialogModule } from '@avl-ng-controls/dialog';\r\nimport { AvlNavigationModule } from '@avl-ng-controls/navigation';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlNotificationMenuComponent,\r\n  AvlNotificationContainerComponent,\r\n  SnackbarListener,\r\n  AnimateStack,\r\n  AnimateSnackbar,\r\n  ShowHideSnackbarDirective,\r\n  AnimateButton,\r\n  AvlNotificationDialogComponent\r\n];\r\n@NgModule({\r\n  declarations: [...componentsAndDirectives],\r\n  imports: [CommonModule, TranslateModule, AvlNgBindersModule, AvlDialogModule, AvlNavigationModule, FormsModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [...componentsAndDirectives]\r\n})\r\nexport class AvlNotificationModule {}\r\n"]}