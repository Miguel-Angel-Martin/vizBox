{"version":3,"file":"avl-ng-controls-notification.umd.js","sources":["ng://@avl-ng-controls/notification/lib/components/avl-notification-menu/avl-notification-menu.consts.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-menu/avl-notification-menu.component.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/avl-notification-container.consts.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-button.directive.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-snackbar.directive.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/directives/show-hide-snackbar.directive.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-stack.directive.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/directives/snackbar-listener.directive.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/snackbar-stack.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-container/avl-notification-container.component.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-dialog/avl-notification-dialog.consts.ts","ng://@avl-ng-controls/notification/lib/components/avl-notification-dialog/avl-notification-dialog.component.ts","ng://@avl-ng-controls/notification/lib/notification.module.ts"],"sourcesContent":["import { AvlOverflowMenuGroup } from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu';\r\nimport { AvlNotificationType } from '@avl-controls/interfaces';\r\n\r\nexport const NOTIFICATIONS_OVERFLOW_MENU: AvlOverflowMenuGroup[] = [\r\n  {\r\n    items: [\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsRead',\r\n        action: 'markAllAsRead'\r\n      },\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsUnread',\r\n        action: 'markAllAsUnread'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AvlList } from '@avl-controls/core/dist/avl-list/avl-list.api';\r\nimport {\r\n  AvlOverflowMenuGroup,\r\n  AvlOverflowMenuItem\r\n} from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { AvlNotificationMenuItem } from '../../models/notification-menu.model';\r\nimport { NOTIFICATIONS_OVERFLOW_MENU, TYPE_ICON_MAPPINGS } from './avl-notification-menu.consts';\r\n\r\n@Component({\r\n  selector: 'avl-notification-menu',\r\n  templateUrl: './avl-notification-menu.component.html',\r\n  styleUrls: ['./avl-notification-menu.component.css']\r\n})\r\nexport class AvlNotificationMenuComponent implements AfterViewInit {\r\n  @Input() open: boolean = false;\r\n  @Input() trigger: HTMLElement;\r\n  @Input() \r\n  set notifications(notifications: AvlNotification[]) {\r\n    this.notificationList = this.prepareNotifications(notifications);\r\n    this.numberOfUnreadNotifications = notifications.filter(notif => !notif.read).length;\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n  @Output() openDetails = new EventEmitter<void>();\r\n  @Output() notificationStateChanged = new EventEmitter<AvlNotification>();\r\n  @Output() markAllAsRead = new EventEmitter<void>();\r\n  @Output() markAllAsUnread = new EventEmitter<void>();\r\n\r\n  @ViewChild('list') list: ElementRef<AvlList>;\r\n\r\n  public overflowMenuItems: AvlOverflowMenuGroup[] = [];\r\n  public notificationList: AvlNotificationMenuItem[] = [];\r\n  public numberOfUnreadNotifications: number = 0;\r\n\r\n  private overflowMenuHandlers: { [key: string]: () => void } = {\r\n    markAllAsRead: () => {\r\n      this.markAllAsRead.emit();\r\n      this.numberOfUnreadNotifications = 0;\r\n    },\r\n    markAllAsUnread: () => {\r\n      this.markAllAsUnread.emit();\r\n      this.numberOfUnreadNotifications = this.notificationList.length;\r\n    },\r\n    undefined: () => {}\r\n  };\r\n\r\n  constructor() {\r\n    this.translateLabels();\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.list.nativeElement.revertedList = true;\r\n  }\r\n\r\n  public onNotificationStateChanged(event: Event): void {\r\n    const notificationMenuItem: AvlNotificationMenuItem = { ...(<CustomEvent>event).detail.value };\r\n    const notification = {\r\n      ...notificationMenuItem,\r\n      read: notificationMenuItem.iconToggleValue\r\n    } as AvlNotification;\r\n    notification.read ? this.numberOfUnreadNotifications-- : this.numberOfUnreadNotifications++;\r\n    this.notificationStateChanged.emit(notification);\r\n\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onItemClicked(item: AvlOverflowMenuItem): void {\r\n    this.overflowMenuHandlers[item.action]();\r\n  }\r\n\r\n  public onOpenChanged(event: Event): void {\r\n    if (!(<CustomEvent>event).detail.value) {\r\n      this.openChange.emit(false);\r\n    } else {\r\n      this.notificationList = [...this.notificationList];\r\n    }\r\n  }\r\n\r\n  public onOverflowMenuClicked(): void {\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onDetailsClicked(): void {\r\n    this.open = false;\r\n    this.openDetails.emit();\r\n    this.openChange.emit(false);\r\n  }\r\n\r\n  private prepareNotifications(notifications: AvlNotification[]): AvlNotificationMenuItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      label: notification.messageText,\r\n      sublabel: this.formatDateTime(notification.timestamp),\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconToggleUnchecked: 'mail',\r\n      iconToggleChecked: 'communication:mail-outline',\r\n      iconToggleValue: notification.read\r\n    }));\r\n  }\r\n\r\n  private formatDateTime(date: Date): string {\r\n    return date === null\r\n      ? ''\r\n      : `${AvlLocalizationService.formatDateTime(date, {\r\n          format: 'date-short'\r\n        })} ${AvlLocalizationService.formatDateTime(date, { format: 'time-long' })}`;\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    this.overflowMenuItems = await this.translateMenu(NOTIFICATIONS_OVERFLOW_MENU);\r\n  }\r\n\r\n  private async translateMenu(menu: AvlOverflowMenuGroup[]): Promise<AvlOverflowMenuGroup[]> {\r\n    return await Promise.all(menu.map(async group => await this.translateMenuGroup(group)));\r\n  }\r\n\r\n  private async translateMenuGroup(group: AvlOverflowMenuGroup): Promise<AvlOverflowMenuGroup> {\r\n    return {\r\n      items: await Promise.all(group.items.map(async item => await this.translateMenuItem(item)))\r\n    };\r\n  }\r\n\r\n  private async translateMenuItem(item: AvlOverflowMenuItem): Promise<AvlOverflowMenuItem> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label: await translateService.translate(item.label),\r\n      sublabel: item.sublabel ? await translateService.translate(item.sublabel) : null\r\n    };\r\n  }\r\n}\r\n","\r\n/** @hidden */\r\nexport const ANIMATION_DURATION = 400;\r\n\r\n/** @hidden */\r\nexport const ACTION_BUTTON_MESSAGE = '_X more _TYPE notifications';\r\n\r\n/** @hidden */\r\nexport const MARGIN = 12;\r\n\r\n\r\n\r\n\r\n","import { Directive, Input, HostBinding, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { MARGIN } from '../avl-notification-container.consts';\r\n\r\n@Directive({ selector: '[animateButton]' })\r\nexport class AnimateButton implements OnChanges {\r\n  /** @hidden */\r\n  @Input() increment: number;\r\n\r\n  /** @hidden */\r\n  @Input() infoStackHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackHeight: number;\r\n  /** @hidden */\r\n  @Input() infoStackIndicatorHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackIndicatorHeight: number;\r\n\r\n  @HostBinding('style.top') styleTop: string;\r\n\r\n  constructor() {}\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const infoStackOffsetHeight = this.getOffsetHeight(this.getInfoHeight());\r\n    const warningStackOffsetHeight = this.getOffsetHeight(this.getWarningHeight());\r\n    this.styleTop = infoStackOffsetHeight + warningStackOffsetHeight + 'px';\r\n  }\r\n  private getInfoHeight = (): number => {\r\n    return this.infoStackHeight > this.infoStackIndicatorHeight\r\n      ? this.infoStackHeight\r\n      : this.infoStackIndicatorHeight;\r\n  };\r\n  private getWarningHeight = (): number => {\r\n    return this.warningStackHeight > this.warningStackIndicatorHeight\r\n      ? this.warningStackHeight\r\n      : this.warningStackIndicatorHeight;\r\n  };\r\n\r\n  private getOffsetHeight = (height: number): number => {\r\n    return height ? height + MARGIN * 2 : 0;\r\n  };\r\n}\r\n","import { Directive, ElementRef, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { PositionAnimation } from './animate-stack.directive';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\n/** @hidden */\r\n\r\n@Directive({ selector: '[animateSnackbar]' })\r\nexport class AnimateSnackbar implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateSnackbar: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly positionAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input('notification') readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input('reopen') readonly reopen: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.in-stack') inStack: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.no-animation') noAnimation: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.snackbar-container') defaultClass = true;\r\n\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateSnackbar) {\r\n      const isInStack = changes.animateSnackbar.currentValue === PositionAnimation.ToStack;\r\n      if (isInStack) {\r\n        this.move();\r\n      } else if (changes.animateSnackbar.previousValue === PositionAnimation.ToStack) {\r\n        this.move();\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move() {\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      marginTop: '0',\r\n      width: '100%',\r\n      marginLeft: '0',\r\n      marginRight: '0'\r\n    });\r\n    return this.getAnimation(this.animateSnackbar, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const elementWidth = this.element.nativeElement.offsetWidth - 3 * MARGIN;\r\n    const inStackStyle = style({\r\n      marginTop: MARGIN + 'px',\r\n      marginLeft: MARGIN + 'px',\r\n      marginRight: MARGIN + 'px',\r\n      width: elementWidth + 'px'\r\n    });\r\n    switch (animationName) {\r\n      case PositionAnimation.FromStack:\r\n        return [animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle), initialStyle];\r\n\r\n      case PositionAnimation.ToStack: {\r\n        return [initialStyle, animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('1ms ease-in', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, Input, SimpleChanges, OnChanges, ElementRef } from '@angular/core';\r\n\r\n/**@hidden */\r\nexport class SnackbarMethodDescription {\r\n  method: 'show' | 'hide';\r\n  animate: boolean;\r\n\r\n  constructor(method: 'show' | 'hide', animate: boolean) {\r\n    this.method = method;\r\n    this.animate = animate;\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[showHideSnackbar]' })\r\nexport class ShowHideSnackbarDirective implements OnChanges {\r\n  /** @hidden */\r\n  @Input() methodDescription: SnackbarMethodDescription;\r\n  private element: ElementRef;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.methodDescription) {\r\n      if (changes.methodDescription.currentValue?.method === 'show') {\r\n        setTimeout(\r\n          () =>\r\n            this.element.nativeElement?.showSnackbar(\r\n              'relative',\r\n              !changes.methodDescription.currentValue?.animate\r\n            ),\r\n          0\r\n        );\r\n      } else if (changes.methodDescription.currentValue?.method === 'hide') {\r\n        this.element.nativeElement?.hideSnackbar(changes.methodDescription.currentValue?.animate);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './show-hide-snackbar.directive';\r\n/** @hidden */\r\nexport const enum PositionAnimation {\r\n  ToLowerStack,\r\n  ToTop,\r\n  ToBottom,\r\n  ToStack,\r\n  FromStack\r\n}\r\n@Directive({ selector: '[animateStack]' })\r\nexport class AnimateStack implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateStack: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input() readonly previousStackHeight: number;\r\n\r\n  /** @hidden */\r\n  @Input() readonly snackbarMethodDescription: SnackbarMethodDescription;\r\n\r\n  /** @hidden */\r\n  @Input() readonly reopen: boolean;\r\n\r\n  private styleTop: number;\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateStack) {\r\n      this.move(this.previousStackHeight);\r\n    } else if (changes.previousStackHeight) {\r\n      this.move(changes?.previousStackHeight.currentValue);\r\n    } else if (changes.snackbarMethodDescription) {\r\n      if (changes.snackbarMethodDescription.currentValue?.method === 'show') {\r\n        this.move(this.previousStackHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move(height: number) {\r\n    if (this.animateStack === PositionAnimation.ToBottom) {\r\n      this.styleTop = height + MARGIN * 2;\r\n    }\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      top: '0',\r\n      width: '100%',\r\n      left: '0',\r\n      zIndex: 1\r\n    });\r\n    return this.getAnimation(this.animateStack, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const allStyle = style('*');\r\n\r\n    switch (animationName) {\r\n      case PositionAnimation.ToBottom: {\r\n        return [\r\n          allStyle,\r\n          animate(\r\n            ANIMATION_DURATION + 'ms ease-in',\r\n            style({\r\n              top: this.styleTop + 'px',\r\n              zIndex: 0\r\n            })\r\n          )\r\n        ];\r\n      }\r\n      case PositionAnimation.ToTop: {\r\n        return [allStyle, animate(ANIMATION_DURATION + 'ms ease-in', initialStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('0ms', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({ selector: '[snackbarListener]' })\r\nexport class SnackbarListener {\r\n  /** @hidden */\r\n  @Output() notificationClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() buttonClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() notificationDismissed: EventEmitter<Event> = new EventEmitter();\r\n  @HostListener('notification-clicked', ['$event']) onNotificationClicked(event: Event) {\r\n    this.notificationClicked.emit(event);\r\n  }\r\n  @HostListener('button-clicked', ['$event']) onButtonClicked(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.buttonClicked.emit(event);\r\n    }\r\n  }\r\n  @HostListener('notification-dismissed', ['$event']) onNotificationDismissed(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.notificationDismissed.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { AvlNotification } from '@avl-controls/interfaces';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { skipWhile } from 'rxjs/operators';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { ANIMATION_DURATION, ACTION_BUTTON_MESSAGE } from './avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\n\r\n/** @hidden */\r\nexport class SnackbarStack {\r\n  /** @hidden */\r\n  public buttonLabel: string;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  /** @hidden */\r\n  public activeNotification$: BehaviorSubject<AvlNotification> = new BehaviorSubject(undefined);\r\n\r\n  /** @hidden */\r\n  public stackAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public snackbarAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public stackIndicator = false;\r\n\r\n  /** @hidden */\r\n  public stackIndicatorButtonLabel: string;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public methodDescription: SnackbarMethodDescription;\r\n  \r\n  /** @hidden */\r\n  public reopen: boolean;\r\n  \r\n  /** @hidden */\r\n  public dismissedSilently: boolean;\r\n\r\n  /** @hidden */\r\n  public actionButtonMessage = ACTION_BUTTON_MESSAGE;\r\n\r\n  constructor(stackType: string) {\r\n    this.translateLabels();\r\n    this.methodDescription = new SnackbarMethodDescription(undefined, undefined)\r\n    this.activeNotification$\r\n      .pipe(skipWhile(notification => notification === undefined))\r\n      .subscribe((notification: AvlNotification) => {\r\n        if (notification) {\r\n          if (this.notificationList.length > 0) {\r\n            const timeout = setTimeout(\r\n              () => {\r\n                this.openNextNotification(stackType);\r\n                clearTimeout(timeout);\r\n              },\r\n              this.previousNotification ? ANIMATION_DURATION : 0\r\n            );\r\n          } else {\r\n            this.openNextNotification(stackType);\r\n          }\r\n        } else {\r\n          this.resetValues();\r\n        }\r\n      });\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.actionButtonMessage = await translationService.translate('VizBox.NotificationContainer._X_more_TYPE_notifications');\r\n  }\r\n\r\n  private openNextNotification = (stackType): void => {\r\n    this.methodDescription = new SnackbarMethodDescription('show', !this.reopen);\r\n    if (!this.reopen) {\r\n      this.stackAnimation = PositionAnimation.ToTop;\r\n    } else {\r\n      this.stackAnimation = PositionAnimation.FromStack;\r\n    }\r\n    this.setStackIndicatorProperties(stackType);\r\n    this.reopen = false;\r\n    this.dismissedSilently = false;\r\n  };\r\n\r\n  private resetValues = () => {\r\n    this.notificationList = [];\r\n    this.previousNotification = undefined;\r\n    this.stackIndicator = undefined;\r\n  };\r\n  private setStackIndicatorProperties = (stackType: string): void => {\r\n    const notificationsCount = this.notificationList.length;\r\n    this.stackIndicator = notificationsCount > 1;\r\n    const timeout = setTimeout(\r\n      () => {\r\n        this.previousNotification = this.notificationList[notificationsCount-1];\r\n        this.buttonLabel = this.setButtonLabel(notificationsCount, stackType);\r\n        this.stackIndicatorButtonLabel = this.setButtonLabel(notificationsCount - 1, stackType);\r\n        clearTimeout(timeout);\r\n      },\r\n      this.previousNotification ? ANIMATION_DURATION : 0\r\n    );\r\n  };\r\n  private setButtonLabel = (notificationsCount: number, type: string): string => {\r\n    return notificationsCount > 0\r\n      ? this.actionButtonMessage\r\n        .replace('_TYPE ', type === 'info' ? '' : type + ' ')\r\n        .replace('_X', String(notificationsCount))\r\n      : null;\r\n  };\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-snackbar/avl-snackbar';\r\nimport { AvlNotification, AvlNotificationType } from '@avl-controls/interfaces';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\nimport { Subject } from 'rxjs';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { SnackbarStack } from './snackbar-stack';\r\nimport { ANIMATION_DURATION } from './avl-notification-container.consts';\r\n\r\nconst NOTIFICATION_TYPE = new Map<number, string>([\r\n  [AvlNotificationType.Error, 'Error'],\r\n  [AvlNotificationType.Warning, 'Warning'],\r\n  [AvlNotificationType.Info, 'Info'],\r\n  [AvlNotificationType.OK, 'OK']\r\n]);\r\n@Component({\r\n  selector: 'avl-notification-container',\r\n  templateUrl: './avl-notification-container.component.html',\r\n  styleUrls: ['./avl-notification-container.component.css']\r\n})\r\nexport class AvlNotificationContainerComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  /** @hidden */\r\n  @HostBinding('style.top') positionTop: string;\r\n\r\n  /** @hidden */\r\n  @ViewChild('warningStackElement') warningStackElement: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('infoStackElement') infoStackElement: ElementRef;\r\n \r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') infoStackIndicatorElement: ElementRef;\r\n  \r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') warningStackIndicatorElement: ElementRef;\r\n\r\n  /** If set optional icon (for info and OK notifications) is displayed, hidden otherwise. */\r\n  @Input('display-icon') public displayIcon: boolean;\r\n\r\n  /** Observable emits notifications. Default observable emits dummy notifications every 3s for 100s. */\r\n  @Input('notification$') public notification$: Observable<AvlNotification> = new Observable(\r\n    function subscribe(subscriber) {\r\n      let i = 0;\r\n      const intervalId = setInterval(() => {\r\n        const warning = Math.round(Math.random());\r\n        subscriber.next({\r\n          id: i++,\r\n          module: 'notification-container',\r\n          timestamp: new Date(),\r\n          type: warning ? AvlNotificationType.Warning : AvlNotificationType.Info,\r\n          messageText: 'Snackbar with notification' + new Date().toTimeString(),\r\n          read: false,\r\n          link: 'https://vizbox.avl.com'\r\n        });\r\n      }, 3000);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(intervalId);\r\n      }, 100000);\r\n    }\r\n  );\r\n\r\n  @Output() openMenu: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public warningStack: SnackbarStack;\r\n  /** @hidden */\r\n  public infoStack: SnackbarStack;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public stackHeight: { [key: string]: number } = {};\r\n\r\n  /** @hidden */\r\n  public reopen: boolean;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  private activeNotification: AvlNotification;\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  constructor(readonly cdRef: ChangeDetectorRef) {\r\n    this.warningStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Warning)).toLowerCase()\r\n    );\r\n\r\n    this.infoStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Info)).toLowerCase()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** @hidden */\r\n  public ngOnInit(): void {\r\n    this.positionTop = document.querySelector('main')?.offsetTop + 12 + 'px';\r\n    this.notification$?.pipe(takeUntil(this.destroyed$)).subscribe(notification => {\r\n      this.handleNotification(notification);\r\n    });\r\n  }\r\n\r\n  /** @hidden */\r\n  public onButtonClicked = (event: any): void => {\r\n    if (event) {\r\n      this.openMenu.emit();\r\n      this.dismissAll();\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public onNotificationDismissed = (event: any, notification: AvlNotification): void => {\r\n    if (event) {\r\n      const snackType = (event.target as HTMLElement)?.id?.replace('Snackbar', '');\r\n      this.removeNotification(notification, snackType);\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public openFromStack = (notification: AvlNotification): void => {\r\n    const stackName = this.getStackName(notification.type);\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', true);\r\n  };\r\n\r\n  /** @hidden */\r\n  public dismissAll = (): void => {\r\n    this.notificationList = [];\r\n    this.warningStack.activeNotification$.next(undefined);\r\n    this.infoStack.activeNotification$.next(undefined);\r\n  };\r\n\r\n  private handleNotification = (notification: any): void => {\r\n    this.previousNotification = this.notificationList[this.notificationList.length - 1];\r\n    this.notificationList.push(notification);\r\n    this.updateStackActiveNotification(notification);\r\n    this.setStackAnimation(notification.type);\r\n  };\r\n\r\n  private updateStackActiveNotification = (notification: AvlNotification): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    this.updateStackNotificationList(notification.type);\r\n    this.activeNotification = notification;\r\n\r\n    if (this[stackName].notificationList.length > 1) {\r\n      this.reopen = true;\r\n      if (this.previousNotification?.type === notification.type) {\r\n        this[stackName].snackbarAnimation = PositionAnimation.ToStack;\r\n\r\n        // silently dismiss notification after previous notification animation\r\n        const timeout = setTimeout(() => {\r\n          this.silentlyDismissNotification(stackName);\r\n          this[stackName].snackbarAnimation = null;\r\n          clearTimeout(timeout);\r\n        }, ANIMATION_DURATION);\r\n      } else {\r\n        this.silentlyDismissNotification(stackName);\r\n      }\r\n    } else {\r\n      this[stackName].activeNotification$.next(notification);\r\n    }\r\n  };\r\n  private updateStackNotificationList = (\r\n    notificationType: AvlNotificationType\r\n  ): AvlNotification[] => {\r\n    const stack = this[this.getStack(notificationType)];\r\n    if (stack) {\r\n      stack.notificationList = this.notificationList.filter(item => item.type === notificationType);\r\n    }\r\n    return stack.notificationList;\r\n  };\r\n\r\n  private silentlyDismissNotification = (stackName: string): void => {\r\n    this[stackName].dismissedSilently = true;\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', false);\r\n  };\r\n\r\n  private setStackAnimation = (\r\n    notificationType: AvlNotificationType,\r\n    animation?: PositionAnimation\r\n  ): void => {\r\n    const currentStack = this.getStack(notificationType);\r\n    const previousStack = this.getStack(notificationType, true);\r\n\r\n    if (\r\n      this[previousStack]?.notificationList?.length > 0 &&\r\n      this.previousNotification?.type !== notificationType\r\n    ) {\r\n      this[previousStack].stackAnimation = animation || PositionAnimation.ToBottom;\r\n\r\n      this[currentStack].stackAnimation =\r\n        animation === PositionAnimation.ToTop\r\n          ? PositionAnimation.ToBottom\r\n          : PositionAnimation.ToTop;\r\n    }\r\n  };\r\n\r\n  private removeNotification = (notification: AvlNotification, snackType?: string): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    if (this[stackName].dismissedSilently) {\r\n      //notification dismissed silently\r\n      const stackName: string = this.getStack(this.activeNotification?.type);\r\n      this[stackName].activeNotification$.next(this.activeNotification);\r\n      this.reopen = false;\r\n    } else {\r\n      //notification dismissed\r\n      this.notificationList = this.notificationList.filter(\r\n        currentNotification => currentNotification.id !== notification.id\r\n      );\r\n      this.reopenLastNotification(notification, stackName);\r\n    }\r\n  };\r\n\r\n  private reopenLastNotification = (notification: AvlNotification, stackName: string): void => {\r\n    let stackNotificationList: AvlNotification[] = this[stackName]?.notificationList;\r\n    if (\r\n      this.isLastNotificationDismissed(notification, this[stackName]) &&\r\n      stackNotificationList?.length > 0\r\n    ) {\r\n      this[stackName].reopen = true;\r\n\r\n      stackNotificationList = this.updateStackNotificationList(notification.type);\r\n      const lastNotification = stackNotificationList[stackNotificationList.length - 1];\r\n      if (lastNotification) {\r\n        this[stackName].activeNotification$.next(lastNotification);\r\n      } else {\r\n        this[stackName].stackIndicator = false;\r\n        this[stackName].reopen = false;\r\n        this[stackName].animateStack = PositionAnimation.ToBottom;\r\n        this.setStackAnimation(notification.type, PositionAnimation.ToTop);\r\n      }\r\n    }\r\n  };\r\n\r\n  private isLastNotificationDismissed = (\r\n    notification: AvlNotification,\r\n    stack: SnackbarStack\r\n  ): boolean => {\r\n    const lastNotification: AvlNotification =\r\n      stack.notificationList[stack.notificationList.length - 1];\r\n    return lastNotification?.id === notification?.id;\r\n  };\r\n  private getStack(notificationType: number, previous?: boolean): string {\r\n    let stackType: AvlNotificationType;\r\n    if (\r\n      notificationType === AvlNotificationType.Warning ||\r\n      notificationType === AvlNotificationType.Error\r\n    ) {\r\n      stackType = previous ? AvlNotificationType.Info : AvlNotificationType.Warning;\r\n    } else {\r\n      stackType = previous ? AvlNotificationType.Warning : AvlNotificationType.Info;\r\n    }\r\n    return this.getStackName(stackType);\r\n  }\r\n\r\n  private getStackName = (stackType: AvlNotificationType): string => {\r\n    return stackType === 1 ? 'warningStack' : 'infoStack';\r\n  };\r\n}\r\n","import { PageSizeOption } from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport {\r\n  Column,\r\n  ColumnType,\r\n  LeafColumn\r\n} from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport { AvlNotificationType } from '@avl-controls/interfaces';\r\n\r\nexport const DEFAULT_PAGE_SIZE_OPTIONS: PageSizeOption[] = [\r\n  { value: 15, label: 'Show 15 per page' },\r\n  { value: 50, label: 'Show 50 per page' },\r\n  { value: Number.MAX_SAFE_INTEGER, label: 'Show all' }\r\n];\r\n\r\nexport const DEFAULT_FILTERS = {\r\n  type: {\r\n    warning: undefined,\r\n    error: undefined,\r\n    info: undefined,\r\n    ok: undefined\r\n  },\r\n  state: {\r\n    read: undefined,\r\n    unread: undefined\r\n  },\r\n  date: {\r\n    dateFromValue: undefined,\r\n    dateToValue: undefined\r\n  }\r\n};\r\n\r\nexport const DEFAULT_COLUMN_DEFINITIONS = [\r\n  new LeafColumn('VizBox.NotificationDialog.Type', 'icon', ColumnType.Icon, false, false, 0.5),\r\n  new LeafColumn('VizBox.NotificationDialog.Module', 'module', ColumnType.Text, true, false, 3),\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.Message',\r\n    'messageText',\r\n    ColumnType.Text,\r\n    true,\r\n    false,\r\n    8\r\n  ),\r\n  new LeafColumn('VizBox.NotificationDialog.Id', 'id', ColumnType.Number, false, false, 1),\r\n  <Column>{\r\n    caption: 'VizBox.NotificationDialog.Timestamp',\r\n    valueField: 'timestamp',\r\n    type: ColumnType.Date,\r\n    sortable: false,\r\n    filterable: false,\r\n    flexWidth: 3,\r\n    dateTimeOptions: { format: 'date-time-short' }\r\n  },\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.State',\r\n    'currentIconToggle',\r\n    ColumnType.Icon,\r\n    false,\r\n    false,\r\n    1\r\n  )\r\n];\r\n\r\nexport const NOTIFICATION_TYPE_MAPPINGS = {\r\n  [0]: 'error',\r\n  [1]: 'warning',\r\n  [2]: 'info',\r\n  [3]: 'ok',\r\n  false: 'unread',\r\n  true: 'read'\r\n};\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n\r\nexport const STATE_ICON_MAPPINGS = {\r\n  false: 'mail',\r\n  true: 'communication:mail-outline'\r\n};\r\n\r\nexport const DEFAULT_ICON_STYLE = 'height:24px; width:24px;';\r\n\r\nexport const TYPE_ICON_STYLE_MAPPINGS = {\r\n  [AvlNotificationType.Error]: `--avl-icon-custom-color: var(--avl-error-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Warning]: `--avl-icon-custom-color: var(--avl-warning-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Info]: `--avl-icon-custom-color: var(--avl-icon-default-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.OK]: `--avl-icon-custom-color: var(--avl-ok-color); ${DEFAULT_ICON_STYLE}`\r\n};\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  AfterViewChecked\r\n} from '@angular/core';\r\nimport { Column } from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport {\r\n  AvlDatatable,\r\n  PageSizeOption\r\n} from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\n\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\n\r\nimport '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-side-sheet/avl-side-sheet';\r\nimport '@avl-controls/core/dist/avl-checkbox/avl-checkbox';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\nimport '@avl-controls/core/dist/avl-date/avl-date';\r\nimport { AvlNotificationTableItem } from '../../models/notification-dialog.model';\r\nimport {\r\n  DEFAULT_COLUMN_DEFINITIONS,\r\n  DEFAULT_FILTERS,\r\n  DEFAULT_PAGE_SIZE_OPTIONS,\r\n  TYPE_ICON_STYLE_MAPPINGS,\r\n  TYPE_ICON_MAPPINGS,\r\n  STATE_ICON_MAPPINGS,\r\n  NOTIFICATION_TYPE_MAPPINGS,\r\n  DEFAULT_ICON_STYLE\r\n} from './avl-notification-dialog.consts';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'avl-notification-dialog',\r\n  templateUrl: './avl-notification-dialog.component.html',\r\n  styleUrls: ['./avl-notification-dialog.component.css']\r\n})\r\nexport class AvlNotificationDialogComponent implements OnInit, AfterViewChecked {\r\n  @Input() open: boolean = false;\r\n  @Input() pageSizeOptions: PageSizeOption[] = DEFAULT_PAGE_SIZE_OPTIONS;\r\n  @Input() columnDefinitions: Column[] = DEFAULT_COLUMN_DEFINITIONS;\r\n  @Input()\r\n  get notifications(): AvlNotification[] {\r\n    return this._notifications;\r\n  }\r\n\r\n  set notifications(notifications: AvlNotification[]) {\r\n    if (this._notifications.length === notifications.length) {\r\n      return;\r\n    }\r\n\r\n    this.showRefreshButton = true;\r\n    this._notifications = notifications;\r\n  }\r\n\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() markSelectedAsRead: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() markSelectedAsUnread: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n\r\n  @ViewChild('notificationTable') public table: ElementRef<AvlDatatable>;\r\n  @ViewChild('filterForm', { read: NgForm }) filterForm: NgForm;\r\n\r\n  public tableData: AvlNotificationTableItem[] = [];\r\n  public filteredData: AvlNotificationTableItem[] = [];\r\n  public badge: boolean = false;\r\n  public disableMarkingSelected: boolean = true;\r\n  public filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n  public filtersOpen = true;\r\n  public showRefreshButton = false;\r\n  public dateFromLabel = 'Date from';\r\n  public dateToLabel = 'Date to';\r\n\r\n  private dateFilterGroupInitHeader = 'Date';\r\n  public dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n\r\n  //notification datatable options\r\n  public selectedRows: AvlNotificationTableItem[] = [];\r\n  public pageSize = 15;\r\n\r\n  public appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);\r\n\r\n  private _notifications: AvlNotification[] = [];\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.translateLabels();\r\n    this.refreshTable();\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** Emits event when dialog opens or closes */\r\n  public openChanged(open: boolean): void {\r\n    this.openChange.emit(open);\r\n  }\r\n\r\n  /** Toggles displaying of filter sheet */\r\n  public toggleFilters(): void {\r\n    this.filtersOpen = !this.filtersOpen;\r\n  }\r\n\r\n  /** Refreshes the datatable when refresh button is clicked */\r\n  public refreshTable(): void {\r\n    this.showRefreshButton = false;\r\n    this.tableData = this.prepareNotifications(this._notifications);\r\n    this.filters = this.deepCopyObject(this.appliedFilters);\r\n    this.filterData();\r\n  }\r\n\r\n  /**\r\n   * Invoked when clicking apply button - filters data by given filters.\r\n   */\r\n  public applyFilters(): void {\r\n    this.appliedFilters = this.deepCopyObject(this.filters);\r\n    this.filterData();\r\n  }\r\n\r\n  /** Filters notifications according to applied filters */\r\n  public filterData(): void {\r\n    this.filteredData = [];\r\n    const filters = this.getActiveFilters();\r\n    for (const element of this.tableData) {\r\n      if (this.doesElementPassEveryFilter(filters, element)) {\r\n        this.filteredData.push(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Changes selected notification state to read */\r\n  public markAsRead(): void {\r\n    this.updateStateOfSelectedRowsTo(true);\r\n    this.markSelectedAsRead.emit(this.selectedRows);\r\n  }\r\n\r\n  /** Changes selected notification state to unread */\r\n  public markAsUnread(): void {\r\n    this.updateStateOfSelectedRowsTo(false);\r\n    this.markSelectedAsUnread.emit(this.selectedRows);\r\n  }\r\n\r\n  /**\r\n   * Resets all filters.\r\n   */\r\n  public reset(): void {\r\n    this.filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.filterData();\r\n    this.updateLabels();\r\n    this.badge = false;\r\n  }\r\n\r\n  /** Calculates active filters from filter object */\r\n  public getActiveFilters(): Object {\r\n    this.badge = false;\r\n    const setFilters = {};\r\n    // Mapping applied filters object to better format used for filtering, \r\n    // creates arrays from objects\r\n    for (const item of Object.keys(this.appliedFilters)) {\r\n      const secondLevelFilter = [];\r\n      for (const filter of Object.keys(this.appliedFilters[item])) {\r\n        if (this.appliedFilters[item][filter] === true) {\r\n          secondLevelFilter.push(filter);\r\n          this.badge = true;\r\n        }\r\n      }\r\n\r\n      if (secondLevelFilter.length) {\r\n        setFilters[item] = secondLevelFilter;\r\n      }\r\n\r\n      if (item === 'date') {\r\n        setFilters[item] = [\r\n          this.appliedFilters[item]['dateFromValue'],\r\n          this.appliedFilters[item]['dateToValue']\r\n        ];\r\n      }\r\n    }\r\n    return setFilters;\r\n  }\r\n\r\n  /** Called when selection is applied to the table rows */\r\n  public selectedValuesChanged() {\r\n    this.disableMarkingSelected = false;\r\n    if (this.selectedRows.length == 0) {\r\n      this.disableMarkingSelected = true;\r\n    }\r\n  }\r\n\r\n  /** Updates date filter header labels when date changes */\r\n  public async updateLabels(): Promise<void> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    const { dateFromValue, dateToValue } = this.filters.date;\r\n    if (!dateFromValue && !dateToValue) {\r\n      this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    } else {\r\n      this.dateFilterGroupHeader = await translationService.translate(\r\n        'VizBox.NotificationDialog.DateRange',\r\n        {\r\n          dateFrom: this.formatDateTime(dateFromValue),\r\n          dateTo: this.formatDateTime(dateToValue)\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Calculates number of notifications with specific type */\r\n  public getNumberOfNotificationsWithType(data: AvlNotificationTableItem[], type: string): number {\r\n    return data.filter(element => NOTIFICATION_TYPE_MAPPINGS[element.type] === type).length;\r\n  }\r\n\r\n  /** Calculates number of unread notifications */\r\n  public getNumberOfUnreadNotifications(data: AvlNotificationTableItem[]): number {\r\n    return data.filter(element => !element.state).length;\r\n  }\r\n\r\n  /** Calculates number of notifications currently displayed in datatable */\r\n  public getNumberOfNotifications(): string {\r\n    if (this.filteredData.length === this.tableData.length && !this.badge) {\r\n      return this.filteredData.length.toString();\r\n    } else {\r\n      return `${this.filteredData.length}/${this.tableData.length}`;\r\n    }\r\n  }\r\n\r\n  /** Opens link in new tab when table row is clicked */\r\n  public onRowClicked(event: Event): void {\r\n    const row = (<CustomEvent>event).detail;\r\n    if (row.link) {\r\n      window.open(row.link, '_blank');\r\n    }\r\n  }\r\n\r\n  /** Maps general avl notification list to table specific list */\r\n  private prepareNotifications(notifications: AvlNotification[]): AvlNotificationTableItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconStyle: TYPE_ICON_STYLE_MAPPINGS[notification.type],\r\n      currentIconToggle: STATE_ICON_MAPPINGS[String(notification.read)],\r\n      currentIconToggleStyle: DEFAULT_ICON_STYLE,\r\n      state: notification.read\r\n    }));\r\n  }\r\n\r\n  /** Formats date time to date-short */\r\n  private formatDateTime(d: Date): string {\r\n    return d ? AvlLocalizationService.formatDateTime(d, { format: 'date-short' }) : '(-)';\r\n  }\r\n\r\n  /** Deep copy of filters object */\r\n  private deepCopyObject(object: any): any {\r\n    const copiedObject = {};\r\n    Object.keys(object).forEach(key => {\r\n      copiedObject[key] = Object.assign({}, object[key]);\r\n    });\r\n    return copiedObject;\r\n  }\r\n\r\n  /** Determines if element satisfies filter for every key in this.apppliedFilters */\r\n  private doesElementPassEveryFilter(activeFilters: any, element: any): boolean {\r\n    return Object.keys(activeFilters).every(key => {\r\n      if (key === 'date') {\r\n        const [dateFrom, dateTo] = this.prepareDates(activeFilters[key]);\r\n\r\n        // If dates not set, filter this element as well\r\n        if (!dateFrom.getTime() && !dateTo.getTime()) {\r\n          return true;\r\n        }\r\n\r\n        this.badge = true;\r\n\r\n        // If timestamp is not a Date, don't filter this element\r\n        const timestamp = new Date(element.timestamp);\r\n        if (!timestamp.getTime()) {\r\n          return false;\r\n        }\r\n        return this.compareDates(timestamp, dateFrom, dateTo);\r\n      }\r\n\r\n      return activeFilters[key].includes(NOTIFICATION_TYPE_MAPPINGS[element[key]]);\r\n    });\r\n  }\r\n\r\n  private prepareDates(dates: string[]): [Date, Date] {\r\n    const dateFrom = new Date(dates[0]);\r\n    const dateTo = new Date(dates[1]);\r\n    dateFrom.setHours(0, 0, 0, 0);\r\n    dateTo.setHours(23, 59, 59, 999);\r\n    return [dateFrom, dateTo];\r\n  }\r\n\r\n  private compareDates(timestamp: Date, from: Date, to: Date): boolean {\r\n    const ts = timestamp.getTime();\r\n    const fromTs = from?.getTime();\r\n    const toTs = to?.getTime();\r\n\r\n    if (fromTs && toTs) {\r\n      return ts >= fromTs && ts <= toTs;\r\n    } else if (fromTs) {\r\n      return ts >= fromTs;\r\n    } else if (toTs) {\r\n      return ts <= toTs;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private updateStateOfSelectedRowsTo(state: boolean): void {\r\n    this.tableData\r\n      .filter(notification => this.isRowSelected(notification.id))\r\n      .forEach(notification => {\r\n        notification.state = state;\r\n        notification.currentIconToggle = STATE_ICON_MAPPINGS[String(state)];\r\n      });\r\n    this.tableData = [...this.tableData];\r\n    this.filterData();\r\n  }\r\n\r\n  private isRowSelected(id: number): boolean {\r\n    return this.selectedRows.map(row => row.id).includes(id);\r\n  }\r\n\r\n  // Translations\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.dateFilterGroupInitHeader = await translationService.translate(\r\n      'VizBox.NotificationDialog.Date'\r\n    );\r\n    this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    this.dateFromLabel = await translationService.translate('VizBox.NotificationDialog.DateFrom');\r\n    this.dateToLabel = await translationService.translate('VizBox.NotificationDialog.DateTo');\r\n    this.pageSizeOptions = await this.translatePageSizeOptions(this.pageSizeOptions);\r\n    this.columnDefinitions = await this.translateColumns(this.columnDefinitions);\r\n  }\r\n\r\n  private async translatePageSizeOptions(options: PageSizeOption[]): Promise<PageSizeOption[]> {\r\n    return await Promise.all(\r\n      options.map(async option => await this.translatePageSizeOption(option))\r\n    );\r\n  }\r\n\r\n  private async translatePageSizeOption(item: PageSizeOption): Promise<PageSizeOption> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label:\r\n        item.value === Number.MAX_SAFE_INTEGER\r\n          ? await translationService.translate('VizBox.NotificationDialog.ShowAll')\r\n          : await translationService.translate('VizBox.NotificationDialog.ShowXPerPage', {\r\n              rows: item.value\r\n            })\r\n    };\r\n  }\r\n\r\n  private async translateColumns(column: Column[]): Promise<Column[]> {\r\n    return await Promise.all(column.map(async item => await this.translateColumnItem(item)));\r\n  }\r\n\r\n  private async translateColumnItem(item: Column): Promise<Column> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      caption: await translateService.translate(item.caption)\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AvlNotificationMenuComponent } from './components/avl-notification-menu/avl-notification-menu.component';\r\nimport { AnimateButton } from './components/avl-notification-container/directives/animate-button.directive';\r\nimport { AnimateSnackbar } from './components/avl-notification-container/directives/animate-snackbar.directive';\r\nimport { AnimateStack } from './components/avl-notification-container/directives/animate-stack.directive';\r\nimport { ShowHideSnackbarDirective } from './components/avl-notification-container/directives/show-hide-snackbar.directive';\r\nimport { SnackbarListener } from './components/avl-notification-container/directives/snackbar-listener.directive';\r\nimport { AvlNotificationContainerComponent } from './components/avl-notification-container/avl-notification-container.component';\r\nimport { AvlNotificationDialogComponent } from './components/avl-notification-dialog/avl-notification-dialog.component';\r\n\r\nimport { AvlDialogModule } from '@avl-ng-controls/dialog';\r\nimport { AvlNavigationModule } from '@avl-ng-controls/navigation';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlNotificationMenuComponent,\r\n  AvlNotificationContainerComponent,\r\n  SnackbarListener,\r\n  AnimateStack,\r\n  AnimateSnackbar,\r\n  ShowHideSnackbarDirective,\r\n  AnimateButton,\r\n  AvlNotificationDialogComponent\r\n];\r\n@NgModule({\r\n  declarations: [...componentsAndDirectives],\r\n  imports: [CommonModule, TranslateModule, AvlNgBindersModule, AvlDialogModule, AvlNavigationModule, FormsModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [...componentsAndDirectives]\r\n})\r\nexport class AvlNotificationModule {}\r\n"],"names":["EventEmitter","Input","Output","ViewChild","ElementRef","Component","__decorate","HostBinding","Directive","style","animate","AnimationBuilder","HostListener","BehaviorSubject","skipWhile","Observable","Subject","takeUntil","ChangeDetectorRef","LeafColumn","ColumnType","_a","TYPE_ICON_MAPPINGS","NgForm","NgModule","CommonModule","TranslateModule","AvlNgBindersModule","AvlDialogModule","AvlNavigationModule","FormsModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}