import { CommonModule } from '@angular/common';
import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { AvlNgBindersModule } from '@avl-controls/ng-binders';
import { FormsModule } from '@angular/forms';
import { AvlNotificationMenuComponent } from './components/avl-notification-menu/avl-notification-menu.component';
import { AnimateButton } from './components/avl-notification-container/directives/animate-button.directive';
import { AnimateSnackbar } from './components/avl-notification-container/directives/animate-snackbar.directive';
import { AnimateStack } from './components/avl-notification-container/directives/animate-stack.directive';
import { ShowHideSnackbarDirective } from './components/avl-notification-container/directives/show-hide-snackbar.directive';
import { SnackbarListener } from './components/avl-notification-container/directives/snackbar-listener.directive';
import { AvlNotificationContainerComponent } from './components/avl-notification-container/avl-notification-container.component';
import { AvlNotificationDialogComponent } from './components/avl-notification-dialog/avl-notification-dialog.component';
import { AvlDialogModule } from '@avl-ng-controls/dialog';
import { AvlNavigationModule } from '@avl-ng-controls/navigation';
import { PrepareNotificationsPipe } from './pipes/prepare-notifications.pipe';
import { CapitalizePipe } from './pipes/capitalize.pipe';
import { DateInvalidValidatorDirective } from './components/avl-notification-dialog/date-validator.directive';
import { IterableObjectPipe } from './pipes/iterable-object.pipe';
import * as i0 from "@angular/core";
const componentsAndDirectives = [
    AvlNotificationMenuComponent,
    AvlNotificationContainerComponent,
    SnackbarListener,
    AnimateStack,
    AnimateSnackbar,
    ShowHideSnackbarDirective,
    AnimateButton,
    AvlNotificationDialogComponent,
    PrepareNotificationsPipe,
    CapitalizePipe,
    IterableObjectPipe,
    DateInvalidValidatorDirective
];
export class AvlNotificationModule {
}
AvlNotificationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlNotificationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AvlNotificationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlNotificationModule, declarations: [AvlNotificationMenuComponent,
        AvlNotificationContainerComponent,
        SnackbarListener,
        AnimateStack,
        AnimateSnackbar,
        ShowHideSnackbarDirective,
        AnimateButton,
        AvlNotificationDialogComponent,
        PrepareNotificationsPipe,
        CapitalizePipe,
        IterableObjectPipe,
        DateInvalidValidatorDirective], imports: [CommonModule,
        TranslateModule,
        AvlNgBindersModule,
        AvlDialogModule,
        AvlNavigationModule,
        FormsModule], exports: [AvlNotificationMenuComponent,
        AvlNotificationContainerComponent,
        AvlNotificationDialogComponent] });
AvlNotificationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlNotificationModule, imports: [[
            CommonModule,
            TranslateModule,
            AvlNgBindersModule,
            AvlDialogModule,
            AvlNavigationModule,
            FormsModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.3", ngImport: i0, type: AvlNotificationModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...componentsAndDirectives],
                    imports: [
                        CommonModule,
                        TranslateModule,
                        AvlNgBindersModule,
                        AvlDialogModule,
                        AvlNavigationModule,
                        FormsModule
                    ],
                    schemas: [CUSTOM_ELEMENTS_SCHEMA],
                    exports: [
                        AvlNotificationMenuComponent,
                        AvlNotificationContainerComponent,
                        AvlNotificationDialogComponent
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25vdGlmaWNhdGlvbi9zcmMvbGliL25vdGlmaWNhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQztBQUNsSCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkVBQTZFLENBQUM7QUFDNUcsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtFQUErRSxDQUFDO0FBQ2hILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0RUFBNEUsQ0FBQztBQUMxRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpRkFBaUYsQ0FBQztBQUM1SCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnRkFBZ0YsQ0FBQztBQUNsSCxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSw4RUFBOEUsQ0FBQztBQUNqSSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSx3RUFBd0UsQ0FBQztBQUV4SCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDOUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBQzlHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUVsRSxNQUFNLHVCQUF1QixHQUFHO0lBQzlCLDRCQUE0QjtJQUM1QixpQ0FBaUM7SUFDakMsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsd0JBQXdCO0lBQ3hCLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsNkJBQTZCO0NBQzlCLENBQUM7QUFrQkYsTUFBTSxPQUFPLHFCQUFxQjs7a0hBQXJCLHFCQUFxQjttSEFBckIscUJBQXFCLGlCQTlCaEMsNEJBQTRCO1FBQzVCLGlDQUFpQztRQUNqQyxnQkFBZ0I7UUFDaEIsWUFBWTtRQUNaLGVBQWU7UUFDZix5QkFBeUI7UUFDekIsYUFBYTtRQUNiLDhCQUE4QjtRQUM5Qix3QkFBd0I7UUFDeEIsY0FBYztRQUNkLGtCQUFrQjtRQUNsQiw2QkFBNkIsYUFLM0IsWUFBWTtRQUNaLGVBQWU7UUFDZixrQkFBa0I7UUFDbEIsZUFBZTtRQUNmLG1CQUFtQjtRQUNuQixXQUFXLGFBSVgsNEJBQTRCO1FBQzVCLGlDQUFpQztRQUNqQyw4QkFBOEI7bUhBR3JCLHFCQUFxQixZQWZ2QjtZQUNQLFlBQVk7WUFDWixlQUFlO1lBQ2Ysa0JBQWtCO1lBQ2xCLGVBQWU7WUFDZixtQkFBbUI7WUFDbkIsV0FBVztTQUNaOzJGQVFVLHFCQUFxQjtrQkFqQmpDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsR0FBRyx1QkFBdUIsQ0FBQztvQkFDMUMsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YsbUJBQW1CO3dCQUNuQixXQUFXO3FCQUNaO29CQUNELE9BQU8sRUFBRSxDQUFDLHNCQUFzQixDQUFDO29CQUNqQyxPQUFPLEVBQUU7d0JBQ1AsNEJBQTRCO3dCQUM1QixpQ0FBaUM7d0JBQ2pDLDhCQUE4QjtxQkFDL0I7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBDVVNUT01fRUxFTUVOVFNfU0NIRU1BLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcclxuaW1wb3J0IHsgQXZsTmdCaW5kZXJzTW9kdWxlIH0gZnJvbSAnQGF2bC1jb250cm9scy9uZy1iaW5kZXJzJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBBdmxOb3RpZmljYXRpb25NZW51Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tbWVudS9hdmwtbm90aWZpY2F0aW9uLW1lbnUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQW5pbWF0ZUJ1dHRvbiB9IGZyb20gJy4vY29tcG9uZW50cy9hdmwtbm90aWZpY2F0aW9uLWNvbnRhaW5lci9kaXJlY3RpdmVzL2FuaW1hdGUtYnV0dG9uLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEFuaW1hdGVTbmFja2JhciB9IGZyb20gJy4vY29tcG9uZW50cy9hdmwtbm90aWZpY2F0aW9uLWNvbnRhaW5lci9kaXJlY3RpdmVzL2FuaW1hdGUtc25hY2tiYXIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgQW5pbWF0ZVN0YWNrIH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tY29udGFpbmVyL2RpcmVjdGl2ZXMvYW5pbWF0ZS1zdGFjay5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBTaG93SGlkZVNuYWNrYmFyRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tY29udGFpbmVyL2RpcmVjdGl2ZXMvc2hvdy1oaWRlLXNuYWNrYmFyLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFNuYWNrYmFyTGlzdGVuZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIvZGlyZWN0aXZlcy9zbmFja2Jhci1saXN0ZW5lci5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBBdmxOb3RpZmljYXRpb25Db250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIvYXZsLW5vdGlmaWNhdGlvbi1jb250YWluZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQXZsTm90aWZpY2F0aW9uRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tZGlhbG9nL2F2bC1ub3RpZmljYXRpb24tZGlhbG9nLmNvbXBvbmVudCc7XHJcblxyXG5pbXBvcnQgeyBBdmxEaWFsb2dNb2R1bGUgfSBmcm9tICdAYXZsLW5nLWNvbnRyb2xzL2RpYWxvZyc7XHJcbmltcG9ydCB7IEF2bE5hdmlnYXRpb25Nb2R1bGUgfSBmcm9tICdAYXZsLW5nLWNvbnRyb2xzL25hdmlnYXRpb24nO1xyXG5pbXBvcnQgeyBQcmVwYXJlTm90aWZpY2F0aW9uc1BpcGUgfSBmcm9tICcuL3BpcGVzL3ByZXBhcmUtbm90aWZpY2F0aW9ucy5waXBlJztcclxuaW1wb3J0IHsgQ2FwaXRhbGl6ZVBpcGUgfSBmcm9tICcuL3BpcGVzL2NhcGl0YWxpemUucGlwZSc7XHJcbmltcG9ydCB7IERhdGVJbnZhbGlkVmFsaWRhdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL2F2bC1ub3RpZmljYXRpb24tZGlhbG9nL2RhdGUtdmFsaWRhdG9yLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEl0ZXJhYmxlT2JqZWN0UGlwZSB9IGZyb20gJy4vcGlwZXMvaXRlcmFibGUtb2JqZWN0LnBpcGUnO1xyXG5cclxuY29uc3QgY29tcG9uZW50c0FuZERpcmVjdGl2ZXMgPSBbXHJcbiAgQXZsTm90aWZpY2F0aW9uTWVudUNvbXBvbmVudCxcclxuICBBdmxOb3RpZmljYXRpb25Db250YWluZXJDb21wb25lbnQsXHJcbiAgU25hY2tiYXJMaXN0ZW5lcixcclxuICBBbmltYXRlU3RhY2ssXHJcbiAgQW5pbWF0ZVNuYWNrYmFyLFxyXG4gIFNob3dIaWRlU25hY2tiYXJEaXJlY3RpdmUsXHJcbiAgQW5pbWF0ZUJ1dHRvbixcclxuICBBdmxOb3RpZmljYXRpb25EaWFsb2dDb21wb25lbnQsXHJcbiAgUHJlcGFyZU5vdGlmaWNhdGlvbnNQaXBlLFxyXG4gIENhcGl0YWxpemVQaXBlLFxyXG4gIEl0ZXJhYmxlT2JqZWN0UGlwZSxcclxuICBEYXRlSW52YWxpZFZhbGlkYXRvckRpcmVjdGl2ZVxyXG5dO1xyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogWy4uLmNvbXBvbmVudHNBbmREaXJlY3RpdmVzXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBUcmFuc2xhdGVNb2R1bGUsXHJcbiAgICBBdmxOZ0JpbmRlcnNNb2R1bGUsXHJcbiAgICBBdmxEaWFsb2dNb2R1bGUsXHJcbiAgICBBdmxOYXZpZ2F0aW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGVcclxuICBdLFxyXG4gIHNjaGVtYXM6IFtDVVNUT01fRUxFTUVOVFNfU0NIRU1BXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBBdmxOb3RpZmljYXRpb25NZW51Q29tcG9uZW50LFxyXG4gICAgQXZsTm90aWZpY2F0aW9uQ29udGFpbmVyQ29tcG9uZW50LFxyXG4gICAgQXZsTm90aWZpY2F0aW9uRGlhbG9nQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsTm90aWZpY2F0aW9uTW9kdWxlIHt9XHJcbiJdfQ==