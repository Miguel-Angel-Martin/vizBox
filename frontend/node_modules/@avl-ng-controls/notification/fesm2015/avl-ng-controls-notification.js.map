{"version":3,"file":"avl-ng-controls-notification.js","sources":["ng:/@avl-ng-controls/notification/lib/components/avl-notification-menu/avl-notification-menu.consts.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-menu/avl-notification-menu.component.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/avl-notification-container.consts.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-button.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-snackbar.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/show-hide-snackbar.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/animate-stack.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/directives/snackbar-listener.directive.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/snackbar-stack.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-container/avl-notification-container.component.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-dialog/avl-notification-dialog.consts.ts","ng:/@avl-ng-controls/notification/lib/components/avl-notification-dialog/avl-notification-dialog.component.ts","ng:/@avl-ng-controls/notification/lib/notification.module.ts","ng:/@avl-ng-controls/notification/public-api.ts","ng:/@avl-ng-controls/notification/avl-ng-controls-notification.ts"],"names":["__decorate","TYPE_ICON_MAPPINGS"],"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","sourcesContent":["import { AvlOverflowMenuGroup } from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu';\r\nimport { AvlNotificationType } from '@avl-controls/interfaces';\r\n\r\nexport const NOTIFICATIONS_OVERFLOW_MENU: AvlOverflowMenuGroup[] = [\r\n  {\r\n    items: [\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsRead',\r\n        action: 'markAllAsRead'\r\n      },\r\n      {\r\n        label: 'VizBox.NotificationMenu.MarkAllAsUnread',\r\n        action: 'markAllAsUnread'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AvlList } from '@avl-controls/core/dist/avl-list/avl-list.api';\r\nimport {\r\n  AvlOverflowMenuGroup,\r\n  AvlOverflowMenuItem\r\n} from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { AvlNotificationMenuItem } from '../../models/notification-menu.model';\r\nimport { NOTIFICATIONS_OVERFLOW_MENU, TYPE_ICON_MAPPINGS } from './avl-notification-menu.consts';\r\n\r\n@Component({\r\n  selector: 'avl-notification-menu',\r\n  templateUrl: './avl-notification-menu.component.html',\r\n  styleUrls: ['./avl-notification-menu.component.css']\r\n})\r\nexport class AvlNotificationMenuComponent implements AfterViewInit {\r\n  @Input() open: boolean = false;\r\n  @Input() trigger: HTMLElement;\r\n  @Input() \r\n  set notifications(notifications: AvlNotification[]) {\r\n    this.notificationList = this.prepareNotifications(notifications);\r\n    this.numberOfUnreadNotifications = notifications.filter(notif => !notif.read).length;\r\n  }\r\n\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n  @Output() openDetails = new EventEmitter<void>();\r\n  @Output() notificationStateChanged = new EventEmitter<AvlNotification>();\r\n  @Output() markAllAsRead = new EventEmitter<void>();\r\n  @Output() markAllAsUnread = new EventEmitter<void>();\r\n\r\n  @ViewChild('list') list: ElementRef<AvlList>;\r\n\r\n  public overflowMenuItems: AvlOverflowMenuGroup[] = [];\r\n  public notificationList: AvlNotificationMenuItem[] = [];\r\n  public numberOfUnreadNotifications: number = 0;\r\n\r\n  private overflowMenuHandlers: { [key: string]: () => void } = {\r\n    markAllAsRead: () => {\r\n      this.markAllAsRead.emit();\r\n      this.numberOfUnreadNotifications = 0;\r\n    },\r\n    markAllAsUnread: () => {\r\n      this.markAllAsUnread.emit();\r\n      this.numberOfUnreadNotifications = this.notificationList.length;\r\n    },\r\n    undefined: () => {}\r\n  };\r\n\r\n  constructor() {\r\n    this.translateLabels();\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.list.nativeElement.revertedList = true;\r\n  }\r\n\r\n  public onNotificationStateChanged(event: Event): void {\r\n    const notificationMenuItem: AvlNotificationMenuItem = { ...(<CustomEvent>event).detail.value };\r\n    const notification = {\r\n      ...notificationMenuItem,\r\n      read: notificationMenuItem.iconToggleValue\r\n    } as AvlNotification;\r\n    notification.read ? this.numberOfUnreadNotifications-- : this.numberOfUnreadNotifications++;\r\n    this.notificationStateChanged.emit(notification);\r\n\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onItemClicked(item: AvlOverflowMenuItem): void {\r\n    this.overflowMenuHandlers[item.action]();\r\n  }\r\n\r\n  public onOpenChanged(event: Event): void {\r\n    if (!(<CustomEvent>event).detail.value) {\r\n      this.openChange.emit(false);\r\n    } else {\r\n      this.notificationList = [...this.notificationList];\r\n    }\r\n  }\r\n\r\n  public onOverflowMenuClicked(): void {\r\n    this.list.nativeElement.removeFocus();\r\n  }\r\n\r\n  public onDetailsClicked(): void {\r\n    this.open = false;\r\n    this.openDetails.emit();\r\n    this.openChange.emit(false);\r\n  }\r\n\r\n  private prepareNotifications(notifications: AvlNotification[]): AvlNotificationMenuItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      label: notification.messageText,\r\n      sublabel: this.formatDateTime(notification.timestamp),\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconToggleUnchecked: 'mail',\r\n      iconToggleChecked: 'communication:mail-outline',\r\n      iconToggleValue: notification.read\r\n    }));\r\n  }\r\n\r\n  private formatDateTime(date: Date): string {\r\n    return date === null\r\n      ? ''\r\n      : `${AvlLocalizationService.formatDateTime(date, {\r\n          format: 'date-short'\r\n        })} ${AvlLocalizationService.formatDateTime(date, { format: 'time-long' })}`;\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    this.overflowMenuItems = await this.translateMenu(NOTIFICATIONS_OVERFLOW_MENU);\r\n  }\r\n\r\n  private async translateMenu(menu: AvlOverflowMenuGroup[]): Promise<AvlOverflowMenuGroup[]> {\r\n    return await Promise.all(menu.map(async group => await this.translateMenuGroup(group)));\r\n  }\r\n\r\n  private async translateMenuGroup(group: AvlOverflowMenuGroup): Promise<AvlOverflowMenuGroup> {\r\n    return {\r\n      items: await Promise.all(group.items.map(async item => await this.translateMenuItem(item)))\r\n    };\r\n  }\r\n\r\n  private async translateMenuItem(item: AvlOverflowMenuItem): Promise<AvlOverflowMenuItem> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label: await translateService.translate(item.label),\r\n      sublabel: item.sublabel ? await translateService.translate(item.sublabel) : null\r\n    };\r\n  }\r\n}\r\n","\r\n/** @hidden */\r\nexport const ANIMATION_DURATION = 400;\r\n\r\n/** @hidden */\r\nexport const ACTION_BUTTON_MESSAGE = '_X more _TYPE notifications';\r\n\r\n/** @hidden */\r\nexport const MARGIN = 12;\r\n\r\n\r\n\r\n\r\n","import { Directive, Input, HostBinding, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { MARGIN } from '../avl-notification-container.consts';\r\n\r\n@Directive({ selector: '[animateButton]' })\r\nexport class AnimateButton implements OnChanges {\r\n  /** @hidden */\r\n  @Input() increment: number;\r\n\r\n  /** @hidden */\r\n  @Input() infoStackHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackHeight: number;\r\n  /** @hidden */\r\n  @Input() infoStackIndicatorHeight: number;\r\n  /** @hidden */\r\n  @Input() warningStackIndicatorHeight: number;\r\n\r\n  @HostBinding('style.top') styleTop: string;\r\n\r\n  constructor() {}\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const infoStackOffsetHeight = this.getOffsetHeight(this.getInfoHeight());\r\n    const warningStackOffsetHeight = this.getOffsetHeight(this.getWarningHeight());\r\n    this.styleTop = infoStackOffsetHeight + warningStackOffsetHeight + 'px';\r\n  }\r\n  private getInfoHeight = (): number => {\r\n    return this.infoStackHeight > this.infoStackIndicatorHeight\r\n      ? this.infoStackHeight\r\n      : this.infoStackIndicatorHeight;\r\n  };\r\n  private getWarningHeight = (): number => {\r\n    return this.warningStackHeight > this.warningStackIndicatorHeight\r\n      ? this.warningStackHeight\r\n      : this.warningStackIndicatorHeight;\r\n  };\r\n\r\n  private getOffsetHeight = (height: number): number => {\r\n    return height ? height + MARGIN * 2 : 0;\r\n  };\r\n}\r\n","import { Directive, ElementRef, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { PositionAnimation } from './animate-stack.directive';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\n/** @hidden */\r\n\r\n@Directive({ selector: '[animateSnackbar]' })\r\nexport class AnimateSnackbar implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateSnackbar: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly positionAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input('notification') readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input('reopen') readonly reopen: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.in-stack') inStack: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.no-animation') noAnimation: boolean;\r\n\r\n  /** @hidden */\r\n  @HostBinding('class.snackbar-container') defaultClass = true;\r\n\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateSnackbar) {\r\n      const isInStack = changes.animateSnackbar.currentValue === PositionAnimation.ToStack;\r\n      if (isInStack) {\r\n        this.move();\r\n      } else if (changes.animateSnackbar.previousValue === PositionAnimation.ToStack) {\r\n        this.move();\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move() {\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      marginTop: '0',\r\n      width: '100%',\r\n      marginLeft: '0',\r\n      marginRight: '0'\r\n    });\r\n    return this.getAnimation(this.animateSnackbar, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const elementWidth = this.element.nativeElement.offsetWidth - 3 * MARGIN;\r\n    const inStackStyle = style({\r\n      marginTop: MARGIN + 'px',\r\n      marginLeft: MARGIN + 'px',\r\n      marginRight: MARGIN + 'px',\r\n      width: elementWidth + 'px'\r\n    });\r\n    switch (animationName) {\r\n      case PositionAnimation.FromStack:\r\n        return [animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle), initialStyle];\r\n\r\n      case PositionAnimation.ToStack: {\r\n        return [initialStyle, animate(ANIMATION_DURATION + 'ms ease-in', inStackStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('1ms ease-in', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, Input, SimpleChanges, OnChanges, ElementRef } from '@angular/core';\r\n\r\n/**@hidden */\r\nexport class SnackbarMethodDescription {\r\n  method: 'show' | 'hide';\r\n  animate: boolean;\r\n\r\n  constructor(method: 'show' | 'hide', animate: boolean) {\r\n    this.method = method;\r\n    this.animate = animate;\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[showHideSnackbar]' })\r\nexport class ShowHideSnackbarDirective implements OnChanges {\r\n  /** @hidden */\r\n  @Input() methodDescription: SnackbarMethodDescription;\r\n  private element: ElementRef;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.methodDescription) {\r\n      if (changes.methodDescription.currentValue?.method === 'show') {\r\n        setTimeout(\r\n          () =>\r\n            this.element.nativeElement?.showSnackbar(\r\n              'relative',\r\n              !changes.methodDescription.currentValue?.animate\r\n            ),\r\n          0\r\n        );\r\n      } else if (changes.methodDescription.currentValue?.method === 'hide') {\r\n        this.element.nativeElement?.hideSnackbar(changes.methodDescription.currentValue?.animate);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  animate,\r\n  AnimationBuilder,\r\n  AnimationMetadata,\r\n  AnimationPlayer,\r\n  AnimationStyleMetadata,\r\n  style\r\n} from '@angular/animations';\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\nimport { ANIMATION_DURATION, MARGIN } from '../avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './show-hide-snackbar.directive';\r\n/** @hidden */\r\nexport const enum PositionAnimation {\r\n  ToLowerStack,\r\n  ToTop,\r\n  ToBottom,\r\n  ToStack,\r\n  FromStack\r\n}\r\n@Directive({ selector: '[animateStack]' })\r\nexport class AnimateStack implements OnChanges {\r\n  /** @hidden */\r\n  @Input() readonly animateStack: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  @Input() readonly notification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  @Input() readonly previousStackHeight: number;\r\n\r\n  /** @hidden */\r\n  @Input() readonly snackbarMethodDescription: SnackbarMethodDescription;\r\n\r\n  /** @hidden */\r\n  @Input() readonly reopen: boolean;\r\n\r\n  private styleTop: number;\r\n  private element: ElementRef;\r\n  private player: AnimationPlayer;\r\n\r\n  constructor(readonly builder: AnimationBuilder, el: ElementRef) {\r\n    this.element = el;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.animateStack) {\r\n      this.move(this.previousStackHeight);\r\n    } else if (changes.previousStackHeight) {\r\n      this.move(changes?.previousStackHeight.currentValue);\r\n    } else if (changes.snackbarMethodDescription) {\r\n      if (changes.snackbarMethodDescription.currentValue?.method === 'show') {\r\n        this.move(this.previousStackHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  private show(metadata: AnimationMetadata[]) {\r\n    if (this.player) {\r\n      this.player.destroy();\r\n    }\r\n    if (metadata) {\r\n      const factory = this.builder.build(metadata);\r\n      const player = factory.create(this.element.nativeElement);\r\n      player.play();\r\n    }\r\n  }\r\n  private move(height: number) {\r\n    if (this.animateStack === PositionAnimation.ToBottom) {\r\n      this.styleTop = height + MARGIN * 2;\r\n    }\r\n    const animationMetadata: AnimationMetadata[] = this.animate();\r\n    this.show(animationMetadata);\r\n  }\r\n  private animate(): AnimationMetadata[] {\r\n    const initialStyle = style({\r\n      top: '0',\r\n      width: '100%',\r\n      left: '0',\r\n      zIndex: 1\r\n    });\r\n    return this.getAnimation(this.animateStack, initialStyle);\r\n  }\r\n\r\n  private getAnimation = (\r\n    animationName: PositionAnimation,\r\n    initialStyle: AnimationStyleMetadata\r\n  ): AnimationMetadata[] => {\r\n    const allStyle = style('*');\r\n\r\n    switch (animationName) {\r\n      case PositionAnimation.ToBottom: {\r\n        return [\r\n          allStyle,\r\n          animate(\r\n            ANIMATION_DURATION + 'ms ease-in',\r\n            style({\r\n              top: this.styleTop + 'px',\r\n              zIndex: 0\r\n            })\r\n          )\r\n        ];\r\n      }\r\n      case PositionAnimation.ToTop: {\r\n        return [allStyle, animate(ANIMATION_DURATION + 'ms ease-in', initialStyle)];\r\n      }\r\n      default:\r\n        return [initialStyle, animate('0ms', initialStyle)];\r\n    }\r\n  };\r\n}\r\n","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({ selector: '[snackbarListener]' })\r\nexport class SnackbarListener {\r\n  /** @hidden */\r\n  @Output() notificationClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() buttonClicked: EventEmitter<Event> = new EventEmitter();\r\n  /** @hidden */\r\n  @Output() notificationDismissed: EventEmitter<Event> = new EventEmitter();\r\n  @HostListener('notification-clicked', ['$event']) onNotificationClicked(event: Event) {\r\n    this.notificationClicked.emit(event);\r\n  }\r\n  @HostListener('button-clicked', ['$event']) onButtonClicked(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.buttonClicked.emit(event);\r\n    }\r\n  }\r\n  @HostListener('notification-dismissed', ['$event']) onNotificationDismissed(event: Event) {\r\n    if (event instanceof Event) {\r\n        this.notificationDismissed.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { AvlNotification } from '@avl-controls/interfaces';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { skipWhile } from 'rxjs/operators';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { ANIMATION_DURATION, ACTION_BUTTON_MESSAGE } from './avl-notification-container.consts';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\n\r\n/** @hidden */\r\nexport class SnackbarStack {\r\n  /** @hidden */\r\n  public buttonLabel: string;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  /** @hidden */\r\n  public activeNotification$: BehaviorSubject<AvlNotification> = new BehaviorSubject(undefined);\r\n\r\n  /** @hidden */\r\n  public stackAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public snackbarAnimation: PositionAnimation;\r\n\r\n  /** @hidden */\r\n  public stackIndicator = false;\r\n\r\n  /** @hidden */\r\n  public stackIndicatorButtonLabel: string;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public methodDescription: SnackbarMethodDescription;\r\n  \r\n  /** @hidden */\r\n  public reopen: boolean;\r\n  \r\n  /** @hidden */\r\n  public dismissedSilently: boolean;\r\n\r\n  /** @hidden */\r\n  public actionButtonMessage = ACTION_BUTTON_MESSAGE;\r\n\r\n  constructor(stackType: string) {\r\n    this.translateLabels();\r\n    this.methodDescription = new SnackbarMethodDescription(undefined, undefined)\r\n    this.activeNotification$\r\n      .pipe(skipWhile(notification => notification === undefined))\r\n      .subscribe((notification: AvlNotification) => {\r\n        if (notification) {\r\n          if (this.notificationList.length > 0) {\r\n            const timeout = setTimeout(\r\n              () => {\r\n                this.openNextNotification(stackType);\r\n                clearTimeout(timeout);\r\n              },\r\n              this.previousNotification ? ANIMATION_DURATION : 0\r\n            );\r\n          } else {\r\n            this.openNextNotification(stackType);\r\n          }\r\n        } else {\r\n          this.resetValues();\r\n        }\r\n      });\r\n  }\r\n\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.actionButtonMessage = await translationService.translate('VizBox.NotificationContainer._X_more_TYPE_notifications');\r\n  }\r\n\r\n  private openNextNotification = (stackType): void => {\r\n    this.methodDescription = new SnackbarMethodDescription('show', !this.reopen);\r\n    if (!this.reopen) {\r\n      this.stackAnimation = PositionAnimation.ToTop;\r\n    } else {\r\n      this.stackAnimation = PositionAnimation.FromStack;\r\n    }\r\n    this.setStackIndicatorProperties(stackType);\r\n    this.reopen = false;\r\n    this.dismissedSilently = false;\r\n  };\r\n\r\n  private resetValues = () => {\r\n    this.notificationList = [];\r\n    this.previousNotification = undefined;\r\n    this.stackIndicator = undefined;\r\n  };\r\n  private setStackIndicatorProperties = (stackType: string): void => {\r\n    const notificationsCount = this.notificationList.length;\r\n    this.stackIndicator = notificationsCount > 1;\r\n    const timeout = setTimeout(\r\n      () => {\r\n        this.previousNotification = this.notificationList[notificationsCount-1];\r\n        this.buttonLabel = this.setButtonLabel(notificationsCount, stackType);\r\n        this.stackIndicatorButtonLabel = this.setButtonLabel(notificationsCount - 1, stackType);\r\n        clearTimeout(timeout);\r\n      },\r\n      this.previousNotification ? ANIMATION_DURATION : 0\r\n    );\r\n  };\r\n  private setButtonLabel = (notificationsCount: number, type: string): string => {\r\n    return notificationsCount > 0\r\n      ? this.actionButtonMessage\r\n        .replace('_TYPE ', type === 'info' ? '' : type + ' ')\r\n        .replace('_X', String(notificationsCount))\r\n      : null;\r\n  };\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport '@avl-controls/core/dist/avl-snackbar/avl-snackbar';\r\nimport { AvlNotification, AvlNotificationType } from '@avl-controls/interfaces';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SnackbarMethodDescription } from './directives/show-hide-snackbar.directive';\r\nimport { Subject } from 'rxjs';\r\nimport { PositionAnimation } from './directives/animate-stack.directive';\r\nimport { SnackbarStack } from './snackbar-stack';\r\nimport { ANIMATION_DURATION } from './avl-notification-container.consts';\r\n\r\nconst NOTIFICATION_TYPE = new Map<number, string>([\r\n  [AvlNotificationType.Error, 'Error'],\r\n  [AvlNotificationType.Warning, 'Warning'],\r\n  [AvlNotificationType.Info, 'Info'],\r\n  [AvlNotificationType.OK, 'OK']\r\n]);\r\n@Component({\r\n  selector: 'avl-notification-container',\r\n  templateUrl: './avl-notification-container.component.html',\r\n  styleUrls: ['./avl-notification-container.component.css']\r\n})\r\nexport class AvlNotificationContainerComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  /** @hidden */\r\n  @HostBinding('style.top') positionTop: string;\r\n\r\n  /** @hidden */\r\n  @ViewChild('warningStackElement') warningStackElement: ElementRef;\r\n\r\n  /** @hidden */\r\n  @ViewChild('infoStackElement') infoStackElement: ElementRef;\r\n \r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') infoStackIndicatorElement: ElementRef;\r\n  \r\n  /** @hidden */\r\n  @ViewChild('infoStackIndicatorElement') warningStackIndicatorElement: ElementRef;\r\n\r\n  /** If set optional icon (for info and OK notifications) is displayed, hidden otherwise. */\r\n  @Input('display-icon') public displayIcon: boolean;\r\n\r\n  /** Observable emits notifications. Default observable emits dummy notifications every 3s for 100s. */\r\n  @Input('notification$') public notification$: Observable<AvlNotification> = new Observable(\r\n    function subscribe(subscriber) {\r\n      let i = 0;\r\n      const intervalId = setInterval(() => {\r\n        const warning = Math.round(Math.random());\r\n        subscriber.next({\r\n          id: i++,\r\n          module: 'notification-container',\r\n          timestamp: new Date(),\r\n          type: warning ? AvlNotificationType.Warning : AvlNotificationType.Info,\r\n          messageText: 'Snackbar with notification' + new Date().toTimeString(),\r\n          read: false,\r\n          link: 'https://vizbox.avl.com'\r\n        });\r\n      }, 3000);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(intervalId);\r\n      }, 100000);\r\n    }\r\n  );\r\n\r\n  @Output() openMenu: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** @hidden */\r\n  public warningStack: SnackbarStack;\r\n  /** @hidden */\r\n  public infoStack: SnackbarStack;\r\n\r\n  /** @hidden */\r\n  public previousNotification: AvlNotification;\r\n\r\n  /** @hidden */\r\n  public stackHeight: { [key: string]: number } = {};\r\n\r\n  /** @hidden */\r\n  public reopen: boolean;\r\n\r\n  /** @hidden */\r\n  public notificationList: AvlNotification[] = [];\r\n\r\n  private activeNotification: AvlNotification;\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  constructor(readonly cdRef: ChangeDetectorRef) {\r\n    this.warningStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Warning)).toLowerCase()\r\n    );\r\n\r\n    this.infoStack = new SnackbarStack(\r\n      String(NOTIFICATION_TYPE.get(AvlNotificationType.Info)).toLowerCase()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** @hidden */\r\n  public ngOnInit(): void {\r\n    this.positionTop = document.querySelector('main')?.offsetTop + 12 + 'px';\r\n    this.notification$?.pipe(takeUntil(this.destroyed$)).subscribe(notification => {\r\n      this.handleNotification(notification);\r\n    });\r\n  }\r\n\r\n  /** @hidden */\r\n  public onButtonClicked = (event: any): void => {\r\n    if (event) {\r\n      this.openMenu.emit();\r\n      this.dismissAll();\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public onNotificationDismissed = (event: any, notification: AvlNotification): void => {\r\n    if (event) {\r\n      const snackType = (event.target as HTMLElement)?.id?.replace('Snackbar', '');\r\n      this.removeNotification(notification, snackType);\r\n    }\r\n  };\r\n\r\n  /** @hidden */\r\n  public openFromStack = (notification: AvlNotification): void => {\r\n    const stackName = this.getStackName(notification.type);\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', true);\r\n  };\r\n\r\n  /** @hidden */\r\n  public dismissAll = (): void => {\r\n    this.notificationList = [];\r\n    this.warningStack.activeNotification$.next(undefined);\r\n    this.infoStack.activeNotification$.next(undefined);\r\n  };\r\n\r\n  private handleNotification = (notification: any): void => {\r\n    this.previousNotification = this.notificationList[this.notificationList.length - 1];\r\n    this.notificationList.push(notification);\r\n    this.updateStackActiveNotification(notification);\r\n    this.setStackAnimation(notification.type);\r\n  };\r\n\r\n  private updateStackActiveNotification = (notification: AvlNotification): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    this.updateStackNotificationList(notification.type);\r\n    this.activeNotification = notification;\r\n\r\n    if (this[stackName].notificationList.length > 1) {\r\n      this.reopen = true;\r\n      if (this.previousNotification?.type === notification.type) {\r\n        this[stackName].snackbarAnimation = PositionAnimation.ToStack;\r\n\r\n        // silently dismiss notification after previous notification animation\r\n        const timeout = setTimeout(() => {\r\n          this.silentlyDismissNotification(stackName);\r\n          this[stackName].snackbarAnimation = null;\r\n          clearTimeout(timeout);\r\n        }, ANIMATION_DURATION);\r\n      } else {\r\n        this.silentlyDismissNotification(stackName);\r\n      }\r\n    } else {\r\n      this[stackName].activeNotification$.next(notification);\r\n    }\r\n  };\r\n  private updateStackNotificationList = (\r\n    notificationType: AvlNotificationType\r\n  ): AvlNotification[] => {\r\n    const stack = this[this.getStack(notificationType)];\r\n    if (stack) {\r\n      stack.notificationList = this.notificationList.filter(item => item.type === notificationType);\r\n    }\r\n    return stack.notificationList;\r\n  };\r\n\r\n  private silentlyDismissNotification = (stackName: string): void => {\r\n    this[stackName].dismissedSilently = true;\r\n    this[stackName].methodDescription = new SnackbarMethodDescription('hide', false);\r\n  };\r\n\r\n  private setStackAnimation = (\r\n    notificationType: AvlNotificationType,\r\n    animation?: PositionAnimation\r\n  ): void => {\r\n    const currentStack = this.getStack(notificationType);\r\n    const previousStack = this.getStack(notificationType, true);\r\n\r\n    if (\r\n      this[previousStack]?.notificationList?.length > 0 &&\r\n      this.previousNotification?.type !== notificationType\r\n    ) {\r\n      this[previousStack].stackAnimation = animation || PositionAnimation.ToBottom;\r\n\r\n      this[currentStack].stackAnimation =\r\n        animation === PositionAnimation.ToTop\r\n          ? PositionAnimation.ToBottom\r\n          : PositionAnimation.ToTop;\r\n    }\r\n  };\r\n\r\n  private removeNotification = (notification: AvlNotification, snackType?: string): void => {\r\n    const stackName: string = this.getStack(notification?.type);\r\n    if (this[stackName].dismissedSilently) {\r\n      //notification dismissed silently\r\n      const stackName: string = this.getStack(this.activeNotification?.type);\r\n      this[stackName].activeNotification$.next(this.activeNotification);\r\n      this.reopen = false;\r\n    } else {\r\n      //notification dismissed\r\n      this.notificationList = this.notificationList.filter(\r\n        currentNotification => currentNotification.id !== notification.id\r\n      );\r\n      this.reopenLastNotification(notification, stackName);\r\n    }\r\n  };\r\n\r\n  private reopenLastNotification = (notification: AvlNotification, stackName: string): void => {\r\n    let stackNotificationList: AvlNotification[] = this[stackName]?.notificationList;\r\n    if (\r\n      this.isLastNotificationDismissed(notification, this[stackName]) &&\r\n      stackNotificationList?.length > 0\r\n    ) {\r\n      this[stackName].reopen = true;\r\n\r\n      stackNotificationList = this.updateStackNotificationList(notification.type);\r\n      const lastNotification = stackNotificationList[stackNotificationList.length - 1];\r\n      if (lastNotification) {\r\n        this[stackName].activeNotification$.next(lastNotification);\r\n      } else {\r\n        this[stackName].stackIndicator = false;\r\n        this[stackName].reopen = false;\r\n        this[stackName].animateStack = PositionAnimation.ToBottom;\r\n        this.setStackAnimation(notification.type, PositionAnimation.ToTop);\r\n      }\r\n    }\r\n  };\r\n\r\n  private isLastNotificationDismissed = (\r\n    notification: AvlNotification,\r\n    stack: SnackbarStack\r\n  ): boolean => {\r\n    const lastNotification: AvlNotification =\r\n      stack.notificationList[stack.notificationList.length - 1];\r\n    return lastNotification?.id === notification?.id;\r\n  };\r\n  private getStack(notificationType: number, previous?: boolean): string {\r\n    let stackType: AvlNotificationType;\r\n    if (\r\n      notificationType === AvlNotificationType.Warning ||\r\n      notificationType === AvlNotificationType.Error\r\n    ) {\r\n      stackType = previous ? AvlNotificationType.Info : AvlNotificationType.Warning;\r\n    } else {\r\n      stackType = previous ? AvlNotificationType.Warning : AvlNotificationType.Info;\r\n    }\r\n    return this.getStackName(stackType);\r\n  }\r\n\r\n  private getStackName = (stackType: AvlNotificationType): string => {\r\n    return stackType === 1 ? 'warningStack' : 'infoStack';\r\n  };\r\n}\r\n","import { PageSizeOption } from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport {\r\n  Column,\r\n  ColumnType,\r\n  LeafColumn\r\n} from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport { AvlNotificationType } from '@avl-controls/interfaces';\r\n\r\nexport const DEFAULT_PAGE_SIZE_OPTIONS: PageSizeOption[] = [\r\n  { value: 15, label: 'Show 15 per page' },\r\n  { value: 50, label: 'Show 50 per page' },\r\n  { value: Number.MAX_SAFE_INTEGER, label: 'Show all' }\r\n];\r\n\r\nexport const DEFAULT_FILTERS = {\r\n  type: {\r\n    warning: undefined,\r\n    error: undefined,\r\n    info: undefined,\r\n    ok: undefined\r\n  },\r\n  state: {\r\n    read: undefined,\r\n    unread: undefined\r\n  },\r\n  date: {\r\n    dateFromValue: undefined,\r\n    dateToValue: undefined\r\n  }\r\n};\r\n\r\nexport const DEFAULT_COLUMN_DEFINITIONS = [\r\n  new LeafColumn('VizBox.NotificationDialog.Type', 'icon', ColumnType.Icon, false, false, 0.5),\r\n  new LeafColumn('VizBox.NotificationDialog.Module', 'module', ColumnType.Text, true, false, 3),\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.Message',\r\n    'messageText',\r\n    ColumnType.Text,\r\n    true,\r\n    false,\r\n    8\r\n  ),\r\n  new LeafColumn('VizBox.NotificationDialog.Id', 'id', ColumnType.Number, false, false, 1),\r\n  <Column>{\r\n    caption: 'VizBox.NotificationDialog.Timestamp',\r\n    valueField: 'timestamp',\r\n    type: ColumnType.Date,\r\n    sortable: false,\r\n    filterable: false,\r\n    flexWidth: 3,\r\n    dateTimeOptions: { format: 'date-time-short' }\r\n  },\r\n  new LeafColumn(\r\n    'VizBox.NotificationDialog.State',\r\n    'currentIconToggle',\r\n    ColumnType.Icon,\r\n    false,\r\n    false,\r\n    1\r\n  )\r\n];\r\n\r\nexport const NOTIFICATION_TYPE_MAPPINGS = {\r\n  [0]: 'error',\r\n  [1]: 'warning',\r\n  [2]: 'info',\r\n  [3]: 'ok',\r\n  false: 'unread',\r\n  true: 'read'\r\n};\r\n\r\nexport const TYPE_ICON_MAPPINGS = {\r\n  [AvlNotificationType.Error]: 'cancel',\r\n  [AvlNotificationType.Warning]: 'warning',\r\n  [AvlNotificationType.Info]: 'info-outline',\r\n  [AvlNotificationType.OK]: 'check'\r\n};\r\n\r\nexport const STATE_ICON_MAPPINGS = {\r\n  false: 'mail',\r\n  true: 'communication:mail-outline'\r\n};\r\n\r\nexport const DEFAULT_ICON_STYLE = 'height:24px; width:24px;';\r\n\r\nexport const TYPE_ICON_STYLE_MAPPINGS = {\r\n  [AvlNotificationType.Error]: `--avl-icon-custom-color: var(--avl-error-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Warning]: `--avl-icon-custom-color: var(--avl-warning-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.Info]: `--avl-icon-custom-color: var(--avl-icon-default-color); ${DEFAULT_ICON_STYLE}`,\r\n  [AvlNotificationType.OK]: `--avl-icon-custom-color: var(--avl-ok-color); ${DEFAULT_ICON_STYLE}`\r\n};\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  AfterViewChecked\r\n} from '@angular/core';\r\nimport { Column } from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport {\r\n  AvlDatatable,\r\n  PageSizeOption\r\n} from '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\n\r\nimport { AvlNotification } from '@avl-controls/interfaces';\r\n\r\nimport '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-side-sheet/avl-side-sheet';\r\nimport '@avl-controls/core/dist/avl-checkbox/avl-checkbox';\r\nimport '@avl-controls/core/dist/avl-tooltip/avl-tooltip';\r\nimport '@avl-controls/core/dist/avl-date/avl-date';\r\nimport { AvlNotificationTableItem } from '../../models/notification-dialog.model';\r\nimport {\r\n  DEFAULT_COLUMN_DEFINITIONS,\r\n  DEFAULT_FILTERS,\r\n  DEFAULT_PAGE_SIZE_OPTIONS,\r\n  TYPE_ICON_STYLE_MAPPINGS,\r\n  TYPE_ICON_MAPPINGS,\r\n  STATE_ICON_MAPPINGS,\r\n  NOTIFICATION_TYPE_MAPPINGS,\r\n  DEFAULT_ICON_STYLE\r\n} from './avl-notification-dialog.consts';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'avl-notification-dialog',\r\n  templateUrl: './avl-notification-dialog.component.html',\r\n  styleUrls: ['./avl-notification-dialog.component.css']\r\n})\r\nexport class AvlNotificationDialogComponent implements OnInit, AfterViewChecked {\r\n  @Input() open: boolean = false;\r\n  @Input() pageSizeOptions: PageSizeOption[] = DEFAULT_PAGE_SIZE_OPTIONS;\r\n  @Input() columnDefinitions: Column[] = DEFAULT_COLUMN_DEFINITIONS;\r\n  @Input()\r\n  get notifications(): AvlNotification[] {\r\n    return this._notifications;\r\n  }\r\n\r\n  set notifications(notifications: AvlNotification[]) {\r\n    if (this._notifications.length === notifications.length) {\r\n      return;\r\n    }\r\n\r\n    this.showRefreshButton = true;\r\n    this._notifications = notifications;\r\n  }\r\n\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() markSelectedAsRead: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n  @Output() markSelectedAsUnread: EventEmitter<any[]> = new EventEmitter<AvlNotification[]>();\r\n\r\n  @ViewChild('notificationTable') public table: ElementRef<AvlDatatable>;\r\n  @ViewChild('filterForm', { read: NgForm }) filterForm: NgForm;\r\n\r\n  public tableData: AvlNotificationTableItem[] = [];\r\n  public filteredData: AvlNotificationTableItem[] = [];\r\n  public badge: boolean = false;\r\n  public disableMarkingSelected: boolean = true;\r\n  public filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n  public filtersOpen = true;\r\n  public showRefreshButton = false;\r\n  public dateFromLabel = 'Date from';\r\n  public dateToLabel = 'Date to';\r\n\r\n  private dateFilterGroupInitHeader = 'Date';\r\n  public dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n\r\n  //notification datatable options\r\n  public selectedRows: AvlNotificationTableItem[] = [];\r\n  public pageSize = 15;\r\n\r\n  public appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);\r\n\r\n  private _notifications: AvlNotification[] = [];\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.translateLabels();\r\n    this.refreshTable();\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /** Emits event when dialog opens or closes */\r\n  public openChanged(open: boolean): void {\r\n    this.openChange.emit(open);\r\n  }\r\n\r\n  /** Toggles displaying of filter sheet */\r\n  public toggleFilters(): void {\r\n    this.filtersOpen = !this.filtersOpen;\r\n  }\r\n\r\n  /** Refreshes the datatable when refresh button is clicked */\r\n  public refreshTable(): void {\r\n    this.showRefreshButton = false;\r\n    this.tableData = this.prepareNotifications(this._notifications);\r\n    this.filters = this.deepCopyObject(this.appliedFilters);\r\n    this.filterData();\r\n  }\r\n\r\n  /**\r\n   * Invoked when clicking apply button - filters data by given filters.\r\n   */\r\n  public applyFilters(): void {\r\n    this.appliedFilters = this.deepCopyObject(this.filters);\r\n    this.filterData();\r\n  }\r\n\r\n  /** Filters notifications according to applied filters */\r\n  public filterData(): void {\r\n    this.filteredData = [];\r\n    const filters = this.getActiveFilters();\r\n    for (const element of this.tableData) {\r\n      if (this.doesElementPassEveryFilter(filters, element)) {\r\n        this.filteredData.push(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Changes selected notification state to read */\r\n  public markAsRead(): void {\r\n    this.updateStateOfSelectedRowsTo(true);\r\n    this.markSelectedAsRead.emit(this.selectedRows);\r\n  }\r\n\r\n  /** Changes selected notification state to unread */\r\n  public markAsUnread(): void {\r\n    this.updateStateOfSelectedRowsTo(false);\r\n    this.markSelectedAsUnread.emit(this.selectedRows);\r\n  }\r\n\r\n  /**\r\n   * Resets all filters.\r\n   */\r\n  public reset(): void {\r\n    this.filters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.appliedFilters = this.deepCopyObject(DEFAULT_FILTERS);\r\n    this.filterData();\r\n    this.updateLabels();\r\n    this.badge = false;\r\n  }\r\n\r\n  /** Calculates active filters from filter object */\r\n  public getActiveFilters(): Object {\r\n    this.badge = false;\r\n    const setFilters = {};\r\n    // Mapping applied filters object to better format used for filtering, \r\n    // creates arrays from objects\r\n    for (const item of Object.keys(this.appliedFilters)) {\r\n      const secondLevelFilter = [];\r\n      for (const filter of Object.keys(this.appliedFilters[item])) {\r\n        if (this.appliedFilters[item][filter] === true) {\r\n          secondLevelFilter.push(filter);\r\n          this.badge = true;\r\n        }\r\n      }\r\n\r\n      if (secondLevelFilter.length) {\r\n        setFilters[item] = secondLevelFilter;\r\n      }\r\n\r\n      if (item === 'date') {\r\n        setFilters[item] = [\r\n          this.appliedFilters[item]['dateFromValue'],\r\n          this.appliedFilters[item]['dateToValue']\r\n        ];\r\n      }\r\n    }\r\n    return setFilters;\r\n  }\r\n\r\n  /** Called when selection is applied to the table rows */\r\n  public selectedValuesChanged() {\r\n    this.disableMarkingSelected = false;\r\n    if (this.selectedRows.length == 0) {\r\n      this.disableMarkingSelected = true;\r\n    }\r\n  }\r\n\r\n  /** Updates date filter header labels when date changes */\r\n  public async updateLabels(): Promise<void> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    const { dateFromValue, dateToValue } = this.filters.date;\r\n    if (!dateFromValue && !dateToValue) {\r\n      this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    } else {\r\n      this.dateFilterGroupHeader = await translationService.translate(\r\n        'VizBox.NotificationDialog.DateRange',\r\n        {\r\n          dateFrom: this.formatDateTime(dateFromValue),\r\n          dateTo: this.formatDateTime(dateToValue)\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Calculates number of notifications with specific type */\r\n  public getNumberOfNotificationsWithType(data: AvlNotificationTableItem[], type: string): number {\r\n    return data.filter(element => NOTIFICATION_TYPE_MAPPINGS[element.type] === type).length;\r\n  }\r\n\r\n  /** Calculates number of unread notifications */\r\n  public getNumberOfUnreadNotifications(data: AvlNotificationTableItem[]): number {\r\n    return data.filter(element => !element.state).length;\r\n  }\r\n\r\n  /** Calculates number of notifications currently displayed in datatable */\r\n  public getNumberOfNotifications(): string {\r\n    if (this.filteredData.length === this.tableData.length && !this.badge) {\r\n      return this.filteredData.length.toString();\r\n    } else {\r\n      return `${this.filteredData.length}/${this.tableData.length}`;\r\n    }\r\n  }\r\n\r\n  /** Opens link in new tab when table row is clicked */\r\n  public onRowClicked(event: Event): void {\r\n    const row = (<CustomEvent>event).detail;\r\n    if (row.link) {\r\n      window.open(row.link, '_blank');\r\n    }\r\n  }\r\n\r\n  /** Maps general avl notification list to table specific list */\r\n  private prepareNotifications(notifications: AvlNotification[]): AvlNotificationTableItem[] {\r\n    return notifications.map(notification => ({\r\n      ...notification,\r\n      icon: TYPE_ICON_MAPPINGS[notification.type],\r\n      iconStyle: TYPE_ICON_STYLE_MAPPINGS[notification.type],\r\n      currentIconToggle: STATE_ICON_MAPPINGS[String(notification.read)],\r\n      currentIconToggleStyle: DEFAULT_ICON_STYLE,\r\n      state: notification.read\r\n    }));\r\n  }\r\n\r\n  /** Formats date time to date-short */\r\n  private formatDateTime(d: Date): string {\r\n    return d ? AvlLocalizationService.formatDateTime(d, { format: 'date-short' }) : '(-)';\r\n  }\r\n\r\n  /** Deep copy of filters object */\r\n  private deepCopyObject(object: any): any {\r\n    const copiedObject = {};\r\n    Object.keys(object).forEach(key => {\r\n      copiedObject[key] = Object.assign({}, object[key]);\r\n    });\r\n    return copiedObject;\r\n  }\r\n\r\n  /** Determines if element satisfies filter for every key in this.apppliedFilters */\r\n  private doesElementPassEveryFilter(activeFilters: any, element: any): boolean {\r\n    return Object.keys(activeFilters).every(key => {\r\n      if (key === 'date') {\r\n        const [dateFrom, dateTo] = this.prepareDates(activeFilters[key]);\r\n\r\n        // If dates not set, filter this element as well\r\n        if (!dateFrom.getTime() && !dateTo.getTime()) {\r\n          return true;\r\n        }\r\n\r\n        this.badge = true;\r\n\r\n        // If timestamp is not a Date, don't filter this element\r\n        const timestamp = new Date(element.timestamp);\r\n        if (!timestamp.getTime()) {\r\n          return false;\r\n        }\r\n        return this.compareDates(timestamp, dateFrom, dateTo);\r\n      }\r\n\r\n      return activeFilters[key].includes(NOTIFICATION_TYPE_MAPPINGS[element[key]]);\r\n    });\r\n  }\r\n\r\n  private prepareDates(dates: string[]): [Date, Date] {\r\n    const dateFrom = new Date(dates[0]);\r\n    const dateTo = new Date(dates[1]);\r\n    dateFrom.setHours(0, 0, 0, 0);\r\n    dateTo.setHours(23, 59, 59, 999);\r\n    return [dateFrom, dateTo];\r\n  }\r\n\r\n  private compareDates(timestamp: Date, from: Date, to: Date): boolean {\r\n    const ts = timestamp.getTime();\r\n    const fromTs = from?.getTime();\r\n    const toTs = to?.getTime();\r\n\r\n    if (fromTs && toTs) {\r\n      return ts >= fromTs && ts <= toTs;\r\n    } else if (fromTs) {\r\n      return ts >= fromTs;\r\n    } else if (toTs) {\r\n      return ts <= toTs;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private updateStateOfSelectedRowsTo(state: boolean): void {\r\n    this.tableData\r\n      .filter(notification => this.isRowSelected(notification.id))\r\n      .forEach(notification => {\r\n        notification.state = state;\r\n        notification.currentIconToggle = STATE_ICON_MAPPINGS[String(state)];\r\n      });\r\n    this.tableData = [...this.tableData];\r\n    this.filterData();\r\n  }\r\n\r\n  private isRowSelected(id: number): boolean {\r\n    return this.selectedRows.map(row => row.id).includes(id);\r\n  }\r\n\r\n  // Translations\r\n  private async translateLabels() {\r\n    if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\r\n      return;\r\n    }\r\n\r\n    const translationService = AvlLocalizationService.translationService;\r\n    this.dateFilterGroupInitHeader = await translationService.translate(\r\n      'VizBox.NotificationDialog.Date'\r\n    );\r\n    this.dateFilterGroupHeader = this.dateFilterGroupInitHeader;\r\n    this.dateFromLabel = await translationService.translate('VizBox.NotificationDialog.DateFrom');\r\n    this.dateToLabel = await translationService.translate('VizBox.NotificationDialog.DateTo');\r\n    this.pageSizeOptions = await this.translatePageSizeOptions(this.pageSizeOptions);\r\n    this.columnDefinitions = await this.translateColumns(this.columnDefinitions);\r\n  }\r\n\r\n  private async translatePageSizeOptions(options: PageSizeOption[]): Promise<PageSizeOption[]> {\r\n    return await Promise.all(\r\n      options.map(async option => await this.translatePageSizeOption(option))\r\n    );\r\n  }\r\n\r\n  private async translatePageSizeOption(item: PageSizeOption): Promise<PageSizeOption> {\r\n    const translationService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      label:\r\n        item.value === Number.MAX_SAFE_INTEGER\r\n          ? await translationService.translate('VizBox.NotificationDialog.ShowAll')\r\n          : await translationService.translate('VizBox.NotificationDialog.ShowXPerPage', {\r\n              rows: item.value\r\n            })\r\n    };\r\n  }\r\n\r\n  private async translateColumns(column: Column[]): Promise<Column[]> {\r\n    return await Promise.all(column.map(async item => await this.translateColumnItem(item)));\r\n  }\r\n\r\n  private async translateColumnItem(item: Column): Promise<Column> {\r\n    const translateService = AvlLocalizationService.translationService;\r\n    return {\r\n      ...item,\r\n      caption: await translateService.translate(item.caption)\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AvlNotificationMenuComponent } from './components/avl-notification-menu/avl-notification-menu.component';\r\nimport { AnimateButton } from './components/avl-notification-container/directives/animate-button.directive';\r\nimport { AnimateSnackbar } from './components/avl-notification-container/directives/animate-snackbar.directive';\r\nimport { AnimateStack } from './components/avl-notification-container/directives/animate-stack.directive';\r\nimport { ShowHideSnackbarDirective } from './components/avl-notification-container/directives/show-hide-snackbar.directive';\r\nimport { SnackbarListener } from './components/avl-notification-container/directives/snackbar-listener.directive';\r\nimport { AvlNotificationContainerComponent } from './components/avl-notification-container/avl-notification-container.component';\r\nimport { AvlNotificationDialogComponent } from './components/avl-notification-dialog/avl-notification-dialog.component';\r\n\r\nimport { AvlDialogModule } from '@avl-ng-controls/dialog';\r\nimport { AvlNavigationModule } from '@avl-ng-controls/navigation';\r\n\r\nconst componentsAndDirectives = [\r\n  AvlNotificationMenuComponent,\r\n  AvlNotificationContainerComponent,\r\n  SnackbarListener,\r\n  AnimateStack,\r\n  AnimateSnackbar,\r\n  ShowHideSnackbarDirective,\r\n  AnimateButton,\r\n  AvlNotificationDialogComponent\r\n];\r\n@NgModule({\r\n  declarations: [...componentsAndDirectives],\r\n  imports: [CommonModule, TranslateModule, AvlNgBindersModule, AvlDialogModule, AvlNavigationModule, FormsModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [...componentsAndDirectives]\r\n})\r\nexport class AvlNotificationModule {}\r\n","/*\r\n * Public API Surface of notification\r\n */\r\n\r\nexport { AvlNotificationModule } from './lib/notification.module';\r\nexport { AvlNotificationMenuComponent } from './lib/components/avl-notification-menu/avl-notification-menu.component';\r\nexport { AvlNotificationMenuItem } from './lib/models/notification-menu.model'\r\n\r\nexport { AvlNotificationDialogComponent } from './lib/components/avl-notification-dialog/avl-notification-dialog.component';\r\nexport { AvlNotificationContainerComponent } from './lib/components/avl-notification-container/avl-notification-container.component';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AnimateButton as ɵe} from './lib/components/avl-notification-container/directives/animate-button.directive';\nexport {AnimateSnackbar as ɵc} from './lib/components/avl-notification-container/directives/animate-snackbar.directive';\nexport {AnimateStack as ɵb} from './lib/components/avl-notification-container/directives/animate-stack.directive';\nexport {ShowHideSnackbarDirective as ɵd} from './lib/components/avl-notification-container/directives/show-hide-snackbar.directive';\nexport {SnackbarListener as ɵa} from './lib/components/avl-notification-container/directives/snackbar-listener.directive';"]}