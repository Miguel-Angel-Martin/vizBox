import { BehaviorSubject } from 'rxjs';
export class AvlAuthService {
    constructor() {
        /**
         * User data is held in this property
         */
        this.userSubject = new BehaviorSubject(undefined);
        /**
         * Current user as Observable
         */
        this.user$ = this.userSubject.asObservable();
        /**
         * String holding error message in case user couldn't authenticate
         */
        this.errorMessageSubject = new BehaviorSubject(undefined);
        /**
         * Error messsage in case failed authentication as Observable
         */
        this.errorMessage$ = this.errorMessageSubject.asObservable();
    }
    /**
     * Currently authenticated user data
     */
    get currentUser() {
        return this.userSubject.value;
    }
    /**
     * Current error message for fail authentication
     * Undefined when user is logged in
     */
    get errorMessage() {
        return this.errorMessageSubject.value;
    }
    /**
     * Use to clear error message after user is informed
     */
    clearErrorMessage() {
        this.errorMessageSubject.next(undefined);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWF1dGguc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtbmctY29udHJvbHMvYXV0aC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9hdmwtYXV0aC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBYyxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFbkQsTUFBTSxPQUFnQixjQUFjO0lBQXBDO1FBQ0U7O1dBRUc7UUFDTyxnQkFBVyxHQUFHLElBQUksZUFBZSxDQUFPLFNBQVMsQ0FBQyxDQUFDO1FBRTdEOztXQUVHO1FBQ0ksVUFBSyxHQUFxQixJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRWpFOztXQUVHO1FBQ08sd0JBQW1CLEdBQUcsSUFBSSxlQUFlLENBQVMsU0FBUyxDQUFDLENBQUM7UUFFdkU7O1dBRUc7UUFDSSxrQkFBYSxHQUF1QixJQUFJLENBQUMsbUJBQW1CLENBQUMsWUFBWSxFQUFFLENBQUM7SUFpRnJGLENBQUM7SUFoREM7O09BRUc7SUFDSCxJQUFXLFdBQVc7UUFDcEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBVyxZQUFZO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQztJQUN4QyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxpQkFBaUI7UUFDdEIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzQyxDQUFDO0NBNEJGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi91c2VyLm1vZGVsJztcclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEF2bEF1dGhTZXJ2aWNlIHtcclxuICAvKipcclxuICAgKiBVc2VyIGRhdGEgaXMgaGVsZCBpbiB0aGlzIHByb3BlcnR5XHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIHVzZXJTdWJqZWN0ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxVc2VyPih1bmRlZmluZWQpO1xyXG5cclxuICAvKipcclxuICAgKiBDdXJyZW50IHVzZXIgYXMgT2JzZXJ2YWJsZVxyXG4gICAqL1xyXG4gIHB1YmxpYyB1c2VyJDogT2JzZXJ2YWJsZTxVc2VyPiA9IHRoaXMudXNlclN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0cmluZyBob2xkaW5nIGVycm9yIG1lc3NhZ2UgaW4gY2FzZSB1c2VyIGNvdWxkbid0IGF1dGhlbnRpY2F0ZVxyXG4gICAqL1xyXG4gIHByb3RlY3RlZCBlcnJvck1lc3NhZ2VTdWJqZWN0ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+KHVuZGVmaW5lZCk7XHJcblxyXG4gIC8qKlxyXG4gICAqIEVycm9yIG1lc3NzYWdlIGluIGNhc2UgZmFpbGVkIGF1dGhlbnRpY2F0aW9uIGFzIE9ic2VydmFibGVcclxuICAgKi9cclxuICBwdWJsaWMgZXJyb3JNZXNzYWdlJDogT2JzZXJ2YWJsZTxzdHJpbmc+ID0gdGhpcy5lcnJvck1lc3NhZ2VTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpO1xyXG5cclxuICAvKipcclxuICAgKiBPYnNlcnZhYmxlIHRyYWNraW5nIGF1dGhlbnRpY2F0ZWQgc3RhdGVcclxuICAgKiBSZXNvbHZlcyB0byB0cnVlIG9uIHN1Y2Nlc3NmdWwgbG9nIGluLCBmYWxzZSBvdGhlcndpc2VcclxuICAgKi9cclxuICBwdWJsaWMgYWJzdHJhY3QgaXNMb2dnZWRJbiQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcblxyXG4gIC8qKlxyXG4gICAqIE9ic2VydmFibGUgdHJhY2tpbmcgaWYgcmVkaXJlY3RlZCBmcm9tIGlkYlxyXG4gICAqIFJlc29sdmVzIHRvIHRydWUgb24gcmVkaXJlY3Rpb24sIGZhbHNlIG90aGVyd2lzZVxyXG4gICAqL1xyXG4gIHB1YmxpYyBhYnN0cmFjdCByZWRpcmVjdGVkRnJvbUxvZ0luOiBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj47XHJcblxyXG4gIC8qKlxyXG4gICAqIExvZ2luIHVzZXIgYW5kIHJlZGlyZWN0IGFmdGVyIHN1Y2Nlc3NmdWwgYXV0aGVudGljYXRpb24uXHJcbiAgICogQ3VzdG9tIGF1dGggc2VydmljZXMgbmVlZCB0byBwcm92aWRlIGltcGxlbWVudGF0aW9uXHJcbiAgICogQHBhcmFtIHJlZGlyZWN0VXJsIFVybCB0byByZWRpcmVjdCBhZnRlciBzdWNjZXNmdWwgYXV0aGVudGljYXRpb25cclxuICAgKi9cclxuICBwdWJsaWMgYWJzdHJhY3QgbG9naW4ocmVkaXJlY3RVcmw/OiBzdHJpbmcpOiB2b2lkO1xyXG5cclxuICAvKipcclxuICAqIElmIHRva2VucyBhcmUgcGVyaXN0ZWQgaW4gbG9jYWwgc3RvcmFnZSwgc2V0IGN1cnJlbnQgdXNlciBkYXRhXHJcbiAgKi9cclxuICBwdWJsaWMgYWJzdHJhY3QgcmVsb2FkUGVyc2lzdGVkVXNlckRhdGEoKTogdm9pZDtcclxuXHJcbiAgLyoqXHJcbiAgICogTG9nIG91dCB1c2VyIGFuZCByZWRpcmVjdCBhZnRlci5cclxuICAgKiBDdXN0b20gYXV0aCBzZXJ2aWNlcyBuZWVkIHRvIHByb3ZpZGUgaW1wbGVtZW50YXRpb25cclxuICAgKiBAcGFyYW0gcmVkaXJlY3RVcmwgVXJsIHRvIHJlZGlyZWN0IGFmdGVyIGxvZ2dpbmcgb3V0XHJcbiAgICovXHJcbiAgcHVibGljIGFic3RyYWN0IGxvZ291dChyZWRpcmVjdFVybD86IHN0cmluZyk6IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIEN1cnJlbnRseSBhdXRoZW50aWNhdGVkIHVzZXIgZGF0YVxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgY3VycmVudFVzZXIoKTogVXNlciB7XHJcbiAgICByZXR1cm4gdGhpcy51c2VyU3ViamVjdC52YWx1ZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEN1cnJlbnQgZXJyb3IgbWVzc2FnZSBmb3IgZmFpbCBhdXRoZW50aWNhdGlvblxyXG4gICAqIFVuZGVmaW5lZCB3aGVuIHVzZXIgaXMgbG9nZ2VkIGluXHJcbiAgICovXHJcbiAgcHVibGljIGdldCBlcnJvck1lc3NhZ2UoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVycm9yTWVzc2FnZVN1YmplY3QudmFsdWU7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVc2UgdG8gY2xlYXIgZXJyb3IgbWVzc2FnZSBhZnRlciB1c2VyIGlzIGluZm9ybWVkXHJcbiAgICovXHJcbiAgcHVibGljIGNsZWFyRXJyb3JNZXNzYWdlKCkge1xyXG4gICAgdGhpcy5lcnJvck1lc3NhZ2VTdWJqZWN0Lm5leHQodW5kZWZpbmVkKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZvciB0b2tlbiBiYXNlZCBhdXRoZXRpY2F0aW9uLlxyXG4gICAqIFByb3ZpZGUgZnVuY3Rpb25hbGl0eSB0byByZWZyZXNoIHRva2Vuc1xyXG4gICAqL1xyXG4gIHB1YmxpYyByZWZyZXNoVG9rZW5zPygpOiBQcm9taXNlPGFueT47XHJcblxyXG4gIC8qKlxyXG4gICAqIEZvciB0b2tlbiBiYXNlZCBhdXRoZXRpY2F0aW9uLlxyXG4gICAqIFVwZGF0ZXMgdXNlciBhdXRoZW50aWNhdGlvbiB3aXRoIHJlZnJlc2ggdG9rZW5zXHJcbiAgICovXHJcbiAgIHB1YmxpYyBhYnN0cmFjdCByZWZyZXNoVXNlcklmTmVlZGVkKCk6IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICogUmVhZCB1c2VyIGZyb20gc2Vzc2lvbiBzdG9yYWdlXHJcbiAgKi9cclxuICAgcHVibGljIGFic3RyYWN0IHJlYWRVc2VyRnJvbVNlc3Npb25TdG9yYWdlKCk6IFVzZXI7XHJcblxyXG4gIC8qKlxyXG4gICogU3RvcmUgdXNlciB0byBzZXNzaW9uIHN0b3JhZ2VcclxuICAqL1xyXG4gICBwdWJsaWMgYWJzdHJhY3Qgc3RvcmVVc2VyVG9TZXNzaW9uU3RvcmFnZSh1c2VyOiBVc2VyKTogdm9pZDtcclxuICAgXHJcbiAgLyoqXHJcbiAgKiBDbGVhciB1c2VyIGZyb20gc2Vzc2lvbiBzdG9yYWdlXHJcbiAgKi9cclxuICAgcHVibGljIGFic3RyYWN0IGNsZWFyVXNlckZyb21TZXNzaW9uU3RvcmFnZSgpOiB2b2lkO1xyXG59XHJcbiJdfQ==