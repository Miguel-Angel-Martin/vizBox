import { StorageNames } from './storage-names';
var TokenStorage = /** @class */ (function () {
    function TokenStorage(prefix) {
        if (prefix === void 0) { prefix = ''; }
        this.prefix = '';
        this.prefix = prefix;
    }
    TokenStorage.prototype.readUser = function () {
        var roles = JSON.parse(this.getItem(StorageNames.Roles));
        return {
            username: this.getItem(StorageNames.UserName),
            name: this.getItem(StorageNames.Name),
            access_token: this.getItem(StorageNames.AccessToken),
            access_token_expires: this.getNumber(StorageNames.AccessTokenExpiresAt),
            access_token_stored: this.getNumber(StorageNames.AccessTokenStoredAt),
            refresh_token: this.getItem(StorageNames.RefreshToken),
            refresh_token_expires: this.getNumber(StorageNames.RefreshTokenExpiresAt),
            id_token: this.getItem(StorageNames.IdToken),
            roles: roles
        };
    };
    TokenStorage.prototype.storeUser = function (user) {
        this.setItem(StorageNames.UserName, user.username);
        this.setItem(StorageNames.Name, user.name);
        this.setItem(StorageNames.AccessToken, user.access_token);
        this.setItem(StorageNames.AccessTokenExpiresAt, "" + user.access_token_expires);
        this.setItem(StorageNames.AccessTokenStoredAt, "" + user.access_token_stored);
        this.setItem(StorageNames.RefreshToken, user.refresh_token);
        this.setItem(StorageNames.RefreshTokenExpiresAt, "" + user.refresh_token_expires);
        this.setItem(StorageNames.IdToken, user.id_token);
        var rolesStr = JSON.stringify(user.roles);
        sessionStorage.setItem(StorageNames.Roles, "" + rolesStr);
    };
    TokenStorage.prototype.clearUser = function () {
        for (var name_1 in StorageNames) {
            if (StorageNames.hasOwnProperty(name_1)) {
                this.removeItem(StorageNames[name_1]);
            }
        }
    };
    TokenStorage.prototype.getNumber = function (key) {
        return parseInt(this.getItem(key), 10);
    };
    TokenStorage.prototype.getItem = function (key) {
        return sessionStorage.getItem(this.prefix + key);
    };
    TokenStorage.prototype.setItem = function (key, value) {
        sessionStorage.setItem(this.prefix + key, value);
    };
    TokenStorage.prototype.removeItem = function (key) {
        sessionStorage.removeItem(this.prefix + key);
    };
    return TokenStorage;
}());
export { TokenStorage };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tc3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtbmctY29udHJvbHMvYXV0aC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy90b2tlbi1zdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQztJQUdFLHNCQUFZLE1BQW1CO1FBQW5CLHVCQUFBLEVBQUEsV0FBbUI7UUFGdkIsV0FBTSxHQUFHLEVBQUUsQ0FBQztRQUdsQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRUQsK0JBQVEsR0FBUjtRQUNFLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQWEsQ0FBQztRQUN2RSxPQUFPO1lBQ0wsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztZQUM3QyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO1lBQ3JDLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUM7WUFDcEQsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUM7WUFDdkUsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsbUJBQW1CLENBQUM7WUFDckUsYUFBYSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQztZQUN0RCxxQkFBcUIsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQztZQUN6RSxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDO1lBQzVDLEtBQUssT0FBQTtTQUNOLENBQUM7SUFDSixDQUFDO0lBRUQsZ0NBQVMsR0FBVCxVQUFVLElBQVU7UUFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsb0JBQW9CLEVBQUUsS0FBRyxJQUFJLENBQUMsb0JBQXNCLENBQUMsQ0FBQztRQUNoRixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxtQkFBbUIsRUFBRSxLQUFHLElBQUksQ0FBQyxtQkFBcUIsQ0FBQyxDQUFDO1FBQzlFLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUUsS0FBRyxJQUFJLENBQUMscUJBQXVCLENBQUMsQ0FBQztRQUNsRixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRWxELElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLGNBQWMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxLQUFHLFFBQVUsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxnQ0FBUyxHQUFUO1FBQ0UsS0FBSyxJQUFNLE1BQUksSUFBSSxZQUFZLEVBQUU7WUFDL0IsSUFBSSxZQUFZLENBQUMsY0FBYyxDQUFDLE1BQUksQ0FBQyxFQUFFO2dCQUNyQyxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxNQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ3JDO1NBQ0Y7SUFDSCxDQUFDO0lBRU8sZ0NBQVMsR0FBakIsVUFBa0IsR0FBVztRQUMzQixPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCw4QkFBTyxHQUFQLFVBQVEsR0FBVztRQUNqQixPQUFPLGNBQWMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsOEJBQU8sR0FBUCxVQUFRLEdBQVcsRUFBRSxLQUFhO1FBQ2hDLGNBQWMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELGlDQUFVLEdBQVYsVUFBVyxHQUFXO1FBQ3BCLGNBQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDLEFBM0RELElBMkRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uL3VzZXIubW9kZWwnO1xyXG5pbXBvcnQgeyBTdG9yYWdlTmFtZXMgfSBmcm9tICcuL3N0b3JhZ2UtbmFtZXMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRva2VuU3RvcmFnZSB7XHJcbiAgcHJpdmF0ZSBwcmVmaXggPSAnJztcclxuXHJcbiAgY29uc3RydWN0b3IocHJlZml4OiBzdHJpbmcgPSAnJykge1xyXG4gICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XHJcbiAgfVxyXG5cclxuICByZWFkVXNlcigpOiBVc2VyIHtcclxuICAgIGNvbnN0IHJvbGVzID0gSlNPTi5wYXJzZSh0aGlzLmdldEl0ZW0oU3RvcmFnZU5hbWVzLlJvbGVzKSkgYXMgc3RyaW5nW107XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB1c2VybmFtZTogdGhpcy5nZXRJdGVtKFN0b3JhZ2VOYW1lcy5Vc2VyTmFtZSksXHJcbiAgICAgIG5hbWU6IHRoaXMuZ2V0SXRlbShTdG9yYWdlTmFtZXMuTmFtZSksXHJcbiAgICAgIGFjY2Vzc190b2tlbjogdGhpcy5nZXRJdGVtKFN0b3JhZ2VOYW1lcy5BY2Nlc3NUb2tlbiksXHJcbiAgICAgIGFjY2Vzc190b2tlbl9leHBpcmVzOiB0aGlzLmdldE51bWJlcihTdG9yYWdlTmFtZXMuQWNjZXNzVG9rZW5FeHBpcmVzQXQpLFxyXG4gICAgICBhY2Nlc3NfdG9rZW5fc3RvcmVkOiB0aGlzLmdldE51bWJlcihTdG9yYWdlTmFtZXMuQWNjZXNzVG9rZW5TdG9yZWRBdCksXHJcbiAgICAgIHJlZnJlc2hfdG9rZW46IHRoaXMuZ2V0SXRlbShTdG9yYWdlTmFtZXMuUmVmcmVzaFRva2VuKSxcclxuICAgICAgcmVmcmVzaF90b2tlbl9leHBpcmVzOiB0aGlzLmdldE51bWJlcihTdG9yYWdlTmFtZXMuUmVmcmVzaFRva2VuRXhwaXJlc0F0KSxcclxuICAgICAgaWRfdG9rZW46IHRoaXMuZ2V0SXRlbShTdG9yYWdlTmFtZXMuSWRUb2tlbiksXHJcbiAgICAgIHJvbGVzXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc3RvcmVVc2VyKHVzZXI6IFVzZXIpIHtcclxuICAgIHRoaXMuc2V0SXRlbShTdG9yYWdlTmFtZXMuVXNlck5hbWUsIHVzZXIudXNlcm5hbWUpO1xyXG4gICAgdGhpcy5zZXRJdGVtKFN0b3JhZ2VOYW1lcy5OYW1lLCB1c2VyLm5hbWUpO1xyXG4gICAgdGhpcy5zZXRJdGVtKFN0b3JhZ2VOYW1lcy5BY2Nlc3NUb2tlbiwgdXNlci5hY2Nlc3NfdG9rZW4pO1xyXG4gICAgdGhpcy5zZXRJdGVtKFN0b3JhZ2VOYW1lcy5BY2Nlc3NUb2tlbkV4cGlyZXNBdCwgYCR7dXNlci5hY2Nlc3NfdG9rZW5fZXhwaXJlc31gKTtcclxuICAgIHRoaXMuc2V0SXRlbShTdG9yYWdlTmFtZXMuQWNjZXNzVG9rZW5TdG9yZWRBdCwgYCR7dXNlci5hY2Nlc3NfdG9rZW5fc3RvcmVkfWApO1xyXG4gICAgdGhpcy5zZXRJdGVtKFN0b3JhZ2VOYW1lcy5SZWZyZXNoVG9rZW4sIHVzZXIucmVmcmVzaF90b2tlbik7XHJcbiAgICB0aGlzLnNldEl0ZW0oU3RvcmFnZU5hbWVzLlJlZnJlc2hUb2tlbkV4cGlyZXNBdCwgYCR7dXNlci5yZWZyZXNoX3Rva2VuX2V4cGlyZXN9YCk7XHJcbiAgICB0aGlzLnNldEl0ZW0oU3RvcmFnZU5hbWVzLklkVG9rZW4sIHVzZXIuaWRfdG9rZW4pO1xyXG5cclxuICAgIGNvbnN0IHJvbGVzU3RyID0gSlNPTi5zdHJpbmdpZnkodXNlci5yb2xlcyk7XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFN0b3JhZ2VOYW1lcy5Sb2xlcywgYCR7cm9sZXNTdHJ9YCk7XHJcbiAgfVxyXG5cclxuICBjbGVhclVzZXIoKSB7XHJcbiAgICBmb3IgKGNvbnN0IG5hbWUgaW4gU3RvcmFnZU5hbWVzKSB7XHJcbiAgICAgIGlmIChTdG9yYWdlTmFtZXMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUl0ZW0oU3RvcmFnZU5hbWVzW25hbWVdKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXROdW1iZXIoa2V5OiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHBhcnNlSW50KHRoaXMuZ2V0SXRlbShrZXkpLCAxMCk7XHJcbiAgfVxyXG5cclxuICBnZXRJdGVtKGtleTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIHJldHVybiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHRoaXMucHJlZml4ICsga2V5KTtcclxuICB9XHJcblxyXG4gIHNldEl0ZW0oa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0odGhpcy5wcmVmaXggKyBrZXksIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUl0ZW0oa2V5OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5wcmVmaXggKyBrZXkpO1xyXG4gIH1cclxufVxyXG4iXX0=