import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';
import { Observable } from 'rxjs';
import { AvlAuthService } from './avl-auth.service';
import * as ɵngcc0 from '@angular/core';
export declare class AvlTokenInterceptor implements HttpInterceptor {
    auth: AvlAuthService;
    protected basePaths: string[];
    constructor(auth: AvlAuthService, basePaths: string[]);
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    private handleHttpError;
    /** Check if request URL is in provided basePaths
     * @param request Http request instance whose URL is checked.
     */
    private isUrlInBasePaths;
    /** Sets access token to authorization header of HTTP request
     * @param request HTTP request instance
     * @returns Cloned HTTP with adapted headers
     */
    private setAuthHeader;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AvlTokenInterceptor, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AvlTokenInterceptor>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXRva2VuLmludGVyY2VwdG9yLmQudHMiLCJzb3VyY2VzIjpbImF2bC10b2tlbi5pbnRlcmNlcHRvci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFJlcXVlc3QsIEh0dHBIYW5kbGVyLCBIdHRwRXZlbnQsIEh0dHBJbnRlcmNlcHRvciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBBdmxBdXRoU2VydmljZSB9IGZyb20gJy4vYXZsLWF1dGguc2VydmljZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEF2bFRva2VuSW50ZXJjZXB0b3IgaW1wbGVtZW50cyBIdHRwSW50ZXJjZXB0b3Ige1xyXG4gICAgYXV0aDogQXZsQXV0aFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgYmFzZVBhdGhzOiBzdHJpbmdbXTtcclxuICAgIGNvbnN0cnVjdG9yKGF1dGg6IEF2bEF1dGhTZXJ2aWNlLCBiYXNlUGF0aHM6IHN0cmluZ1tdKTtcclxuICAgIGludGVyY2VwdChyZXE6IEh0dHBSZXF1ZXN0PGFueT4sIG5leHQ6IEh0dHBIYW5kbGVyKTogT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj47XHJcbiAgICBwcml2YXRlIGhhbmRsZUh0dHBFcnJvcjtcclxuICAgIC8qKiBDaGVjayBpZiByZXF1ZXN0IFVSTCBpcyBpbiBwcm92aWRlZCBiYXNlUGF0aHNcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0IEh0dHAgcmVxdWVzdCBpbnN0YW5jZSB3aG9zZSBVUkwgaXMgY2hlY2tlZC5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBpc1VybEluQmFzZVBhdGhzO1xyXG4gICAgLyoqIFNldHMgYWNjZXNzIHRva2VuIHRvIGF1dGhvcml6YXRpb24gaGVhZGVyIG9mIEhUVFAgcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIHJlcXVlc3QgSFRUUCByZXF1ZXN0IGluc3RhbmNlXHJcbiAgICAgKiBAcmV0dXJucyBDbG9uZWQgSFRUUCB3aXRoIGFkYXB0ZWQgaGVhZGVyc1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHNldEF1dGhIZWFkZXI7XHJcbn1cclxuIl19