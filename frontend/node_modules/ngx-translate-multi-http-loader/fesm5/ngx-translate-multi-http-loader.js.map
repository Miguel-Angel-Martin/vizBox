{"version":3,"file":"ngx-translate-multi-http-loader.js","sources":["ng:/ngx-translate-multi-http-loader/projects/ngx-translate/multi-http-loader/src/lib/multi-http-loader.ts"],"names":[],"mappings":";;;;;;;;AAYA,IAAA,wBAAA,kBAAA,YAAA;AAAE;AAAQ;AAAuB;AAA4B;AAC3D,IAAA,SAAF,wBAAA,CAAA,IAAA,EAAA,SAAA,EAAA;AAAE,QACU,IAAZ,CAAA,IAAgB,GAAJ,IAAI,CAAhB;AAAC,QACW,IAAZ,CAAA,SAAqB,GAAT,SAAS,CAArB;AAAC,KACK;AACN;AACO;AAAuB;AAAmB;AACjD,IADS,wBAAT,CAAA,SAAA,CAAA,cAAA,GAAA,UAAA,IAAA,EAAA;AAAE,QACE,IAAJ,KAAA,GAAA,IAAA,CAAA;AAAC,QACD,qBAAA,QAAA,GAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,UAAA,QAAA,EAAA;AAAE,YACI,qBAAqB,IAAI,GAA/B,QAAA,CAAA,MAAiD,GAAG,IAApD,GAAA,QAAA,CAAA,MAAA,CAAA;AAAC,YACD,OAAA,KAAgB,CAAhB,IAAqB,CAAC,GAAtB,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,UAA0D,GAA1D,EAA+D;AAC/D,gBAAQ,OAAO,CAAf,KAAqB,CAAC,kCAAtB,EAAA,IAAA,CAAA,CAAA;AAAC,gBACS,OAAV,EAAA,CAAA,EAAA,CAAA,CAAA;AAAC,aACD,CAAA,CAAA,CAAA;AAAC,SACD,CAAA,CAAA;AAAC;AAGkB,KADnB,CAAA;AAAC;AACmC;AAAM;AAAC;AAAI;AAAkC;AAAyC;AAAI;AAAC;AAAI;AAAkC;AAAyC;AAAI;AAAC;AAAqC","sourcesContent":["import {HttpClient} from \"@angular/common/http\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {Observable, forkJoin, of} from \"rxjs\";\nimport {catchError, map} from \"rxjs/operators\";\nimport merge from 'deepmerge';\n\n\nexport interface ITranslationResource {\n  prefix: string;\n  suffix: string;\n}\n\nexport class MultiTranslateHttpLoader implements TranslateLoader {\n  constructor(\n    private http: HttpClient,\n    private resources: ITranslationResource[],\n  ) {}\n\n  public getTranslation(lang: string): Observable<any> {\n    const requests = this.resources.map(resource => {\n      const path = resource.prefix + lang + resource.suffix;\n      return this.http.get(path).pipe(catchError(res => {\n        console.error(\"Could not find translation file:\", path);\n        return of({});\n      }));\n    });\n    return forkJoin(requests).pipe(map(response => merge.all(response)));\n  }\n}\n"]}