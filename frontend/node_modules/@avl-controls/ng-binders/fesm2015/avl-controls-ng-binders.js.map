{"version":3,"file":"avl-controls-ng-binders.js","sources":["../../../projects/ng-binders/src/lib/controls/avl-breadcrumb.directive.ts","../../../projects/ng-binders/src/lib/binding-utils.ts","../../../projects/ng-binders/src/lib/controls/avl-checkbox.directive.ts","../../../projects/ng-binders/src/lib/interface/avl-control.directive.ts","../../../projects/ng-binders/src/lib/interface/avl-interaction-control.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-combo-box.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-overflow-menu.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-search-bar.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-textarea.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-date.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-side-sheet.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-textfield.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-timespan.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-upload.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-tab-bar.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-dropdown.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-time.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-list.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-context-menu.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-numberfield.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-icon-button.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-datatable.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-snackbar.directive.ts","../../../projects/ng-binders/src/lib/controls/avl-step-progress.directive.ts","../../../projects/ng-binders/src/lib/interface/avl-checkable-control.directive.ts","../../../projects/ng-binders/src/lib/interface/avl-multi-select-control.directive.ts","../../../projects/ng-binders/src/lib/interface/avl-single-select-control.directive.ts","../../../projects/ng-binders/src/lib/interface/avl-form-control.directive.ts","../../../projects/ng-binders/src/lib/avl-ng-binders.module.ts","../../../projects/ng-binders/src/public_api.ts","../../../projects/ng-binders/src/avl-controls-ng-binders.ts"],"sourcesContent":["import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'avl-breadcrumb'\r\n})\r\nexport class AvlBreadcrumbDirective {\r\n  @Output() itemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostListener('item-clicked', ['$event'])\r\n  itemClickedListener(e: CustomEvent) {\r\n    this.itemClicked.emit(e.detail.item);\r\n  }\r\n}\r\n\r\n  ","import { ElementRef, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Maps Polymer 'changed' events to Angular 'change' events so it can be used in 2-way binding.\r\n * HostListener can't be used because when a polymer control has a default value polymer will emit a changed event\r\n * which will overwrite the value in the bound angular variable. So the event listener is added after the constructor\r\n * so the default value changed event will be skipped.\r\n * TODO: There is still a problem if the bound variable is not set. If the default changed event is skipped the variable\r\n * will not get the default value so the control and the variable will have missmatching values.\r\n */\r\nexport async function addEventListenerForEmittingChangedEvents<TEvent>(elementRef: ElementRef, polymerEventName: string,\r\n  angularEventEmmiter: EventEmitter<TEvent>) {\r\n  Promise.resolve().then(() => {\r\n    const nativeElement = elementRef.nativeElement as HTMLElement;\r\n    return nativeElement.addEventListener( polymerEventName, (e: CustomEvent) => {\r\n      angularEventEmmiter.emit(e.detail.value);\r\n    });\r\n  });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-checkbox'\r\n})\r\nexport class AvlCheckboxDirective {\r\n  @Output() indeterminateChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'indeterminate-changed', this.indeterminateChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlControl]. */\r\n@Directive({\r\n  selector: 'avl-breadcrumb,avl-context-menu,avl-header-bar,avl-menu-button,avl-user-info'\r\n})\r\nexport class AvlControlDirective {\r\n  @Output() disabledChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'disabled-changed', this.disabledChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\nimport { AvlControlDirective } from './avl-control.directive';\r\n\r\n/** Directive for controls implementing [AvlInteractionControl]. */\r\n@Directive({\r\n  selector: 'avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar'\r\n})\r\nexport class AvlInteractionControlDirective extends AvlControlDirective {\r\n  @Output() focusedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    super(elementRef);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'focused-changed', this.focusedChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, forwardRef, HostListener, Output, Renderer2, Input } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\r\nimport { AvlFormControl } from '@avl-interfaces/interfaces';\r\nimport { AvlInteractionControlDirective } from '../interface/avl-interaction-control.directive';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-combo-box',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AvlComboBoxDirective), multi: true },\r\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AvlComboBoxDirective), multi: true }]\r\n})\r\nexport class AvlComboBoxDirective extends AvlInteractionControlDirective implements ControlValueAccessor, Validator {\r\n  @Output() invalidChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  private onChangeCallback: (value: any) => void;\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n    super(elementRef);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'invalid-changed', this.focusedChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n\r\n  // Angular writes readonly attributes to a readOnly property,\r\n  // because that's how it's called on the native input element.\r\n  @Input()\r\n  public set readonly(value: boolean) {\r\n    this.elementRef.nativeElement.readonly = value;\r\n  }\r\n\r\n  @HostListener('value-changed', ['$event'])\r\n  valueChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && this.isAllowNewValues()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('selected-value-changed', ['$event'])\r\n  selectedValueChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && !this.isAllowNewValues()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    const property = this.isAllowNewValues() ? 'value' : 'selectedValue';\r\n    this.renderer.setProperty(this.elementRef.nativeElement, property, value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  // Since avl-combo-box doesn't have validate-on-leave, there's no touching\r\n  registerOnTouched(fn: any) { }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  private isAllowNewValues(): boolean {\r\n    return (this.elementRef.nativeElement && this.elementRef.nativeElement.allowNewValues === true);\r\n  }\r\n\r\n  //#region Validator\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const formControl = this.elementRef.nativeElement as AvlFormControl;\r\n    if (formControl.invalid) {\r\n      return { invalid: formControl.errorMessage };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-overflow-menu'\r\n})\r\nexport class AvlOverflowMenuDirective {\r\n  @Output() itemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'item-clicked', this.itemClicked);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-search-bar'\r\n})\r\nexport class AvlSearchBarDirective {\r\n  @Output() queryChange: EventEmitter<string> = new EventEmitter();\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'query-changed', this.queryChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-textarea'\r\n})\r\nexport class AvlTextareaDirective {\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-date'\r\n})\r\nexport class AvlDateDirective {\r\n  @Output() valueChange: EventEmitter<Date | undefined> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-side-sheet'\r\n})\r\nexport class AvlSideSheetDirective {\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-textfield'\r\n})\r\nexport class AvlTextfieldDirective {\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-timespan'\r\n})\r\nexport class AvlTimespanDirective {\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, HostListener, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { AvlFile, AvlUploadService } from '@avl-interfaces/interfaces';\r\nimport { UploadService, UPLOAD_SERVICE } from '@avl-services/ng-services';\r\n\r\n@Directive({\r\n  selector: 'avl-upload',\r\n  providers: [{provide: UPLOAD_SERVICE, useClass: UploadService }]\r\n})\r\nexport class AvlUploadDirective implements OnInit {\r\n  @Output() uploadComplete: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() uploadAbort: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() uploadFail: EventEmitter<any> = new EventEmitter();\r\n  @Output() uploadStart: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() filesChanged: EventEmitter<AvlFile[]> = new EventEmitter();\r\n  @Output() fileRejected: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() menuItemClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() downloadFail: EventEmitter<any> = new EventEmitter();\r\n  @Output() downloadAbort: EventEmitter<AvlFile> = new EventEmitter();\r\n\r\n  constructor(private element: ElementRef, @Inject(UPLOAD_SERVICE) private uploadService: AvlUploadService) {}\r\n\r\n  ngOnInit() {\r\n    const element = <any>this.element.nativeElement;\r\n    element.uploadService = this.uploadService;\r\n  }\r\n\r\n  @HostListener('upload-complete', ['$event'])\r\n  uploadCompleteHandler(e: CustomEvent) {\r\n    this.uploadComplete.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('upload-abort', ['$event'])\r\n  uploadCanceledHandler(e: CustomEvent) {\r\n    this.uploadAbort.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('upload-start', ['$event'])\r\n  uploadStartedHandler(e: CustomEvent) {\r\n    this.uploadStart.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('upload-fail', ['$event'])\r\n  uploadFailedHandler(e: CustomEvent) {\r\n    this.uploadFail.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('files-changed', ['$event'])\r\n  filesChangedHandler(e: CustomEvent) {\r\n    this.filesChanged.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('file-rejected', ['$event'])\r\n  fileRejectedHandler(e: CustomEvent) {\r\n    this.fileRejected.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('menu-item-clicked', ['$event'])\r\n  menuItemClickedHandler(e: CustomEvent) {\r\n    this.menuItemClicked.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('download-fail', ['$event'])\r\n  downloadFailedHandler(e: CustomEvent) {\r\n    this.downloadFail.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('download-abort', ['$event'])\r\n  downloadCanceledHandler(e: CustomEvent) {\r\n    this.downloadAbort.emit(e.detail.value);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'avl-tab-bar',\r\n})\r\nexport class AvlTabBarDirective {\r\n  @Output() selectedIndexChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() selectedValueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  private tabBar: any;\r\n\r\n  private async setEventListeners(el: any) {\r\n    el.addEventListener('selected-value-changed', (event) => {\r\n      Promise.resolve().then(() => {\r\n        this.selectedValueChange.emit(event.detail.value);\r\n      });\r\n    });\r\n    el.addEventListener('selected-index-changed', (event) => {\r\n      Promise.resolve().then(() => {\r\n        this.selectedIndexChange.emit(event.detail.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.tabBar = this.el.nativeElement;\r\n    Promise.resolve().then(() => {\r\n      this.setEventListeners(el.nativeElement);\r\n    });\r\n  }\r\n\r\n  setTab(index: number, value: { label: string, disabled?: boolean, [key: string]: any }) {\r\n    const tabs = this.tabBar.tabs;\r\n    for (const prop in value) {\r\n      if (value.hasOwnProperty(prop)) {\r\n        tabs[index][prop] = value[prop];\r\n        this.tabBar.notifyPath(`tabs.${index}.${prop}`);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-dropdown'\r\n})\r\nexport class AvlDropdownDirective {\r\n  @Output() openChanged: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChanged);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-time'\r\n})\r\nexport class AvlTimeDirective {\r\n  @Output() valueChange: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, forwardRef, HostListener, Output, Renderer2, Input } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\r\nimport { AvlFormControl } from '@avl-interfaces/interfaces';\r\nimport { AvlInteractionControlDirective } from '../interface/avl-interaction-control.directive';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-list',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AvlListDirective), multi: true },\r\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AvlListDirective), multi: true }]\r\n})\r\nexport class AvlListDirective extends AvlInteractionControlDirective implements ControlValueAccessor, Validator {\r\n  @Output() invalidChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() overflowMenuItemClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() rightCheckboxChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output() activeRowChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output() rowReordered: EventEmitter<any> = new EventEmitter();\r\n\r\n  // Angular writes readonly attributes to a readOnly property,\r\n  // because that's how it's called on the native input element.\r\n  @Input()\r\n  public set readonly(value: boolean) {\r\n    this.elementRef.nativeElement.readonly = value;\r\n  }\r\n\r\n  private onChangeCallback: (value: any) => void;\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n    super(elementRef);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'invalid-changed', this.focusedChange);\r\n  }\r\n\r\n  @HostListener('selected-value-changed', ['$event'])\r\n  selectedValueChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && !this.isMulti()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('selected-values-changed', ['$event'])\r\n  selectedValuesChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && this.isMulti()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('overflow-menu-item-clicked', ['$event'])\r\n  overflowMenuItemClickListener(e: CustomEvent) {\r\n    this.overflowMenuItemClicked.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('right-checkbox-changed', ['$event'])\r\n  rightCheckboxChangeListener(e: CustomEvent) {\r\n    this.rightCheckboxChanged.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('active-row-changed', ['$event'])\r\n  activatedRowChangeListener(e: CustomEvent) {\r\n    this.activeRowChanged.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('row-reordered', ['$event'])\r\n  rowReorderedListener(e: CustomEvent) {\r\n    this.rowReordered.emit(e.detail);\r\n  }\r\n\r\n\r\n  writeValue(value: any) {\r\n    const property = this.isMulti() ? 'selectedValues' : 'selectedValue';\r\n    this.renderer.setProperty(this.elementRef.nativeElement, property, value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  // Since avl-list doesn't have validate-on-leave, there's no touching\r\n  registerOnTouched(fn: any) { }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  private isMulti(): boolean {\r\n    return (this.elementRef.nativeElement && this.elementRef.nativeElement.multi === true);\r\n  }\r\n\r\n  //#region Validator\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const formControl = this.elementRef.nativeElement as AvlFormControl;\r\n    if (formControl.invalid) {\r\n      return { invalid: formControl.errorMessage };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'avl-context-menu'\r\n})\r\nexport class AvlContextMenuDirective {\r\n  @Output() itemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostListener('item-clicked', ['$event'])\r\n  itemClickedListener(e: CustomEvent) {\r\n    this.itemClicked.emit(e.detail.value);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-numberfield'\r\n})\r\nexport class AvlNumberfieldDirective {\r\n  @Output() valueChange: EventEmitter<string[]> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-icon-button'\r\n})\r\nexport class AvlIconButtonDirective {\r\n  @Output() badgeChange: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() badgeValueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'badge-changed', this.badgeChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'badge-value-changed', this.badgeValueChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-datatable'\r\n})\r\nexport class AvlDatatableDirective {\r\n  @Output() buttonClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() overflowMenuItemClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() linkClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() pageSizeChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() selectedPageChange: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'page-size-changed', this.pageSizeChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-page-changed', this.selectedPageChange);\r\n  }\r\n\r\n  @HostListener('button-click', ['$event'])\r\n  buttonClickListener(e: CustomEvent) {\r\n    this.buttonClick.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('overflow-menu-item-click', ['$event'])\r\n  overflowMenuItemClickListener(e: CustomEvent) {\r\n    this.overflowMenuItemClick.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('link-click', ['$event'])\r\n  linkClickListener(e: CustomEvent) {\r\n    this.linkClick.emit(e.detail);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, HostListener } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n@Directive({\r\n  selector: 'avl-snackbar'\r\n})\r\nexport class AvlSnackbarDirective {\r\n  @Output() buttonClicked: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() displayedChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @HostListener('button-clicked', ['$event'])\r\n  buttonClickedHandler(e: CustomEvent) {\r\n    this.buttonClicked.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('displayed-changed', ['$event'])\r\n  displayedChangeHandler(e: CustomEvent) {\r\n    this.displayedChange.emit(e.detail.value);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-step-progress'\r\n})\r\nexport class AvlStepProgressDirective {\r\n  @Output() activeChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'active-changed', this.activeChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlCheckableControl]. */\r\n@Directive({\r\n  selector: 'avl-checkbox,avl-radio-button, avl-icon-toggle, avl-switch'\r\n})\r\nexport class AvlCheckableControlDirective {\r\n  @Output() checkedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'checked-changed', this.checkedChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlMultiSelectControl]. */\r\n@Directive({\r\n  selector: 'avl-datatable,avl-list,avl-chip-list, avl-chip-input'\r\n})\r\nexport class AvlMultiSelectControlDirective {\r\n  @Output() selectedIndexesChange: EventEmitter<Array<number>> = new EventEmitter();\r\n  @Output() selectedValuesChange: EventEmitter<Array<any>> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-indexes-changed', this.selectedIndexesChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-values-changed', this.selectedValuesChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlSingleSelectControl]. */\r\n@Directive({\r\n  selector: 'avl-datatable,avl-dropdown,avl-list,avl-radio-group,avl-app-switcher,avl-chip-list,avl-combo-box'\r\n})\r\nexport class AvlSingleSelectControlDirective {\r\n  @Output() selectedIndexChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() selectedValueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-index-changed', this.selectedIndexChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-value-changed', this.selectedValueChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output, OnInit, OnDestroy, ElementRef, Renderer2, forwardRef, Input } from '@angular/core';\r\nimport { AvlInteractionControlDirective } from './avl-interaction-control.directive';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\r\nimport { AvlFormControl } from '@avl-interfaces/interfaces';\r\n\r\n// Defines which property is used as the 'value' for the ControlValueAccessor\r\nconst valuePropertyNameMap = {\r\n  // TODO: is there a nameof function is typescript?\r\n  'avl-checkbox': 'checked',\r\n  'avl-date': 'value',\r\n  'avl-dropdown': 'selectedValue',\r\n  'avl-time': 'value',\r\n  'avl-numberfield': 'value',\r\n  'avl-radio-group': 'selectedValue',\r\n  'avl-slider': 'value',\r\n  'avl-textarea': 'value',\r\n  'avl-textfield': 'value',\r\n  'avl-timespan': 'value',\r\n  'avl-chip-list' : 'selectedValue',\r\n  'avl-chip-input': 'selectedValues',\r\n  'avl-upload': 'files',\r\n  'avl-search-bar': 'query',\r\n  'avl-icon-toggle': 'checked',\r\n  'avl-switch': 'checked'\r\n};\r\n\r\n/** Directive for controls implementing [AvlFormControl]. */\r\n@Directive({\r\n  selector: 'avl-date,avl-dropdown,avl-time,avl-icon-toggle,avl-numberfield,avl-radio-group,avl-slider,avl-textarea,avl-textfield,avl-timespan,avl-checkbox,avl-switch,avl-chip-list,avl-upload,avl-search-bar,avl-chip-input',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AvlFormControlDirective), multi: true },\r\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AvlFormControlDirective), multi: true }]\r\n})\r\nexport class AvlFormControlDirective extends AvlInteractionControlDirective implements OnInit, OnDestroy, ControlValueAccessor, Validator {\r\n  //#region ControlValueAccessor\r\n  private valuePropertyName;\r\n  private onTouchedCallback: () => {};\r\n  private onChangeCallback: (value: any) => void;\r\n\r\n  private unlistenPropertyChangedEvent: () => void;\r\n\r\n  private writeValueAlreadyCalled = false;\r\n\r\n  // Angular writes readonly attributes to a readOnly property,\r\n  // because that's how it's called on the native input element.\r\n  @Input()\r\n  public set readonly(value: any) {\r\n    if (typeof value === 'boolean') {\r\n      this.elementRef.nativeElement.readonly = value;\r\n    } else {\r\n      this.elementRef.nativeElement.readonly = value != null;\r\n    }\r\n  }\r\n\r\n  constructor(protected elementRef: ElementRef, private renderer: Renderer2) {\r\n    super(elementRef);\r\n    const controlTag = (this.elementRef.nativeElement as HTMLElement).tagName.toLowerCase();\r\n    this.valuePropertyName = valuePropertyNameMap[controlTag];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.unlistenPropertyChangedEvent =\r\n      this.renderer.listen(this.elementRef.nativeElement, `${this.toKebabCase(this.valuePropertyName)}-changed`, (e: CustomEvent) => {\r\n        if (this.onChangeCallback) {\r\n          this.onChangeCallback(e.detail.value);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.unlistenPropertyChangedEvent) {\r\n      this.unlistenPropertyChangedEvent();\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    // Because of a bug in Angular writeValue sometimes gets called with a null before being called with the real value,\r\n    // so the null is discarded.\r\n    // TODO: remove when issue is fixed: https://github.com/angular/angular/issues/14988\r\n    if (!this.writeValueAlreadyCalled && value == null) {\r\n      this.writeValueAlreadyCalled = true;\r\n      return;\r\n    }\r\n    this.renderer.setProperty(this.elementRef.nativeElement, this.valuePropertyName, value);\r\n    this.writeValueAlreadyCalled = true;\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur() {\r\n    if (this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n  }\r\n\r\n  @HostListener('focused-changed', ['$event.detail.value'])\r\n  onFocusedChanged(focused) {\r\n    if (!focused && this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n  }\r\n\r\n  private toKebabCase(camelCaseString: string): string {\r\n    return camelCaseString.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n  }\r\n  //#endregion\r\n\r\n  //#region AvlFormControl\r\n  // tslint:disable-next-line:member-ordering\r\n  @Output() invalidChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostListener('invalid-changed', ['$event'])\r\n  invalidChanged(e: CustomEvent) {\r\n    this.invalidChange.emit(e.detail.value);\r\n    // Trigger validation\r\n    if (this.onChangeCallback) {\r\n      this.onChangeCallback(this.elementRef.nativeElement[this.valuePropertyName]);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Validator\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const formControl = this.elementRef.nativeElement as AvlFormControl;\r\n    if (formControl.invalid) {\r\n      return { invalid: formControl.errorMessage };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AvlContextMenuDirective } from './controls/avl-context-menu.directive';\r\nimport { AvlDateDirective } from './controls/avl-date.directive';\r\nimport { AvlDropdownDirective } from './controls/avl-dropdown.directive';\r\nimport { AvlListDirective } from './controls/avl-list.directive';\r\nimport { AvlOverflowMenuDirective } from './controls/avl-overflow-menu.directive';\r\nimport { AvlSearchBarDirective } from './controls/avl-search-bar.directive';\r\nimport { AvlTextareaDirective } from './controls/avl-textarea.directive';\r\nimport { AvlSideSheetDirective} from './controls/avl-side-sheet.directive';\r\nimport { AvlTimeDirective} from './controls/avl-time.directive';\r\nimport { AvlTextfieldDirective } from './controls/avl-textfield.directive';\r\nimport { AvlTimespanDirective } from './controls/avl-timespan.directive';\r\nimport { AvlUploadDirective } from './controls/avl-upload.directive';\r\nimport { AvlCheckableControlDirective } from './interface/avl-checkable-control.directive';\r\nimport { AvlControlDirective } from './interface/avl-control.directive';\r\nimport { AvlFormControlDirective } from './interface/avl-form-control.directive';\r\nimport { AvlInteractionControlDirective } from './interface/avl-interaction-control.directive';\r\nimport { AvlMultiSelectControlDirective } from './interface/avl-multi-select-control.directive';\r\nimport { AvlSingleSelectControlDirective } from './interface/avl-single-select-control.directive';\r\nimport { AvlNumberfieldDirective } from './controls/avl-numberfield.directive';\r\nimport { AvlIconButtonDirective } from './controls/avl-icon-button.directive';\r\nimport { AvlCheckboxDirective } from './controls/avl-checkbox.directive';\r\nimport { AvlDatatableDirective } from './controls/avl-datatable.directive';\r\nimport { AvlComboBoxDirective } from './controls/avl-combo-box.directive';\r\nimport { AvlBreadcrumbDirective } from './controls/avl-breadcrumb.directive';\r\nimport { AvlTabBarDirective } from './controls/avl-tab-bar.directive';\r\nimport { AvlSnackbarDirective } from './controls/avl-snackbar.directive';\r\nimport { AvlStepProgressDirective } from './controls/avl-step-progress.directive';\r\n\r\nconst binders = [\r\n  AvlBreadcrumbDirective,\r\n  AvlOverflowMenuDirective,\r\n  AvlSearchBarDirective,\r\n  AvlTextareaDirective,\r\n  AvlDateDirective,\r\n  AvlSideSheetDirective,\r\n  AvlTextfieldDirective,\r\n  AvlTimespanDirective,\r\n  AvlCheckableControlDirective,\r\n  AvlControlDirective,\r\n  AvlFormControlDirective,\r\n  AvlInteractionControlDirective,\r\n  AvlMultiSelectControlDirective,\r\n  AvlSingleSelectControlDirective,\r\n  AvlDropdownDirective,\r\n  AvlTimeDirective,\r\n  AvlListDirective,\r\n  AvlUploadDirective,\r\n  AvlContextMenuDirective,\r\n  AvlNumberfieldDirective,\r\n  AvlCheckboxDirective,\r\n  AvlDatatableDirective,\r\n  AvlComboBoxDirective,\r\n  AvlTabBarDirective,\r\n  AvlSnackbarDirective,\r\n  AvlStepProgressDirective,\r\n  AvlIconButtonDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    ...binders\r\n  ],\r\n  exports: [\r\n    ...binders\r\n  ]\r\n})\r\nexport class AvlNgBindersModule { }\r\n","/*\r\n * Public API Surface of ng-binders\r\n */\r\n\r\nexport * from './lib/controls/avl-breadcrumb.directive';\r\nexport * from './lib/controls/avl-checkbox.directive';\r\nexport * from './lib/controls/avl-combo-box.directive';\r\nexport * from './lib/controls/avl-overflow-menu.directive';\r\nexport * from './lib/controls/avl-search-bar.directive';\r\nexport * from './lib/controls/avl-textarea.directive';\r\nexport * from './lib/controls/avl-date.directive';\r\nexport * from './lib/controls/avl-side-sheet.directive';\r\nexport * from './lib/controls/avl-textfield.directive';\r\nexport * from './lib/controls/avl-timespan.directive';\r\nexport * from './lib/controls/avl-upload.directive';\r\nexport * from './lib/controls/avl-tab-bar.directive';\r\nexport * from './lib/controls/avl-dropdown.directive';\r\nexport * from './lib/controls/avl-time.directive';\r\nexport * from './lib/controls/avl-list.directive';\r\nexport * from './lib/controls/avl-context-menu.directive';\r\nexport * from './lib/controls/avl-numberfield.directive';\r\nexport * from './lib/controls/avl-icon-button.directive';\r\nexport * from './lib/controls/avl-datatable.directive';\r\nexport * from './lib/controls/avl-snackbar.directive';\r\nexport * from './lib/controls/avl-step-progress.directive';\r\nexport * from './lib/interface/avl-checkable-control.directive';\r\nexport * from './lib/interface/avl-control.directive';\r\nexport * from './lib/interface/avl-interaction-control.directive';\r\nexport * from './lib/interface/avl-multi-select-control.directive';\r\nexport * from './lib/interface/avl-single-select-control.directive';\r\nexport * from './lib/interface/avl-form-control.directive';\r\nexport * from './lib/avl-ng-binders.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}