import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-translate/core';
var NgxTranslateTranslationService = /** @class */ (function () {
    function NgxTranslateTranslationService(translateService) {
        this.translateService = translateService;
    }
    Object.defineProperty(NgxTranslateTranslationService.prototype, "language", {
        get: function () {
            return this.translateService.currentLang;
        },
        enumerable: true,
        configurable: true
    });
    NgxTranslateTranslationService.prototype.translate = function (key, interpolateParams) {
        return this.translateService.get(key, interpolateParams).toPromise();
    };
    NgxTranslateTranslationService.ctorParameters = function () { return [
        { type: TranslateService }
    ]; };
    NgxTranslateTranslationService = __decorate([ __metadata("design:paramtypes", [TranslateService])
    ], NgxTranslateTranslationService);
NgxTranslateTranslationService.ɵfac = function NgxTranslateTranslationService_Factory(t) { return new (t || NgxTranslateTranslationService)(ɵngcc0.ɵɵinject(ɵngcc1.TranslateService)); };
NgxTranslateTranslationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxTranslateTranslationService, factory: function (t) { return NgxTranslateTranslationService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxTranslateTranslationService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.TranslateService }]; }, null); })();
    return NgxTranslateTranslationService;
}());
export { NgxTranslateTranslationService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS10cmFuc2xhdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1jb250cm9scy9uZy1iaW5kZXJzL2xpYi9zZXJ2aWNlcy9uZ3gtdHJhbnNsYXRlLXRyYW5zbGF0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQUd2RDtBQUFrRSxJQU1oRSx3Q0FBb0IsZ0JBQWtDO0FBQUksUUFBdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtBQUFDLElBQUcsQ0FBQztBQUM3RCxJQUxFLHNCQUFXLG9EQUFRO0FBQUksYUFBdkI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQztBQUM3QyxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUEyQixPQUZsRDtBQUNILElBR1Msa0RBQVMsR0FBaEIsVUFBaUIsR0FBVyxFQUFFLGlCQUEwQjtBQUFJLFFBQzFELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztBQUN6RSxJQUFFLENBQUM7QUFDRjtBQUN5RSxnQkFObEMsZ0JBQWdCO0FBQUc7QUFFckQsSUFSTyw4QkFBOEIsd0JBRDFDLFVBQVUsRUFBRSxyQkFDTCxrQ0FNZ0MsZ0JBQWdCO0FBQUcsT0FOOUMsOEJBQThCLENBVzFDOzs7OztpRkFDRDtBQUFDLElBREQscUNBQUM7QUFDQSxDQURBLEFBWEQsSUFXQzs7QUFmQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUpBLEFBQUEsQUFOQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQU5BLEFBQUEsQUFXQSxBQUFBLEFBQUEsQUFBQSxBQVhBLEFBV0EsQUFYQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXZsVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnQGF2bC1jb250cm9scy9pbnRlcmZhY2VzL3NyYy9hdmwtdHJhbnNsYXRpb24tc2VydmljZSc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTmd4VHJhbnNsYXRlVHJhbnNsYXRpb25TZXJ2aWNlIGltcGxlbWVudHMgQXZsVHJhbnNsYXRpb25TZXJ2aWNlIHtcclxuXHJcbiAgcHVibGljIGdldCBsYW5ndWFnZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlU2VydmljZS5jdXJyZW50TGFuZztcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSkgeyB9XHJcblxyXG4gIHB1YmxpYyB0cmFuc2xhdGUoa2V5OiBzdHJpbmcsIGludGVycG9sYXRlUGFyYW1zPzogb2JqZWN0KTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICAgIHJldHVybiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuZ2V0KGtleSwgaW50ZXJwb2xhdGVQYXJhbXMpLnRvUHJvbWlzZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=