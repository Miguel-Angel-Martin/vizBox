import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
/** Directive for controls implementing [AvlMultiSelectControl]. */
var AvlMultiSelectControlDirective = /** @class */ (function () {
    function AvlMultiSelectControlDirective(elementRef) {
        this.selectedIndexesChange = new EventEmitter();
        this.selectedValuesChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'selected-indexes-changed', this.selectedIndexesChange);
        addEventListenerForEmittingChangedEvents(elementRef, 'selected-values-changed', this.selectedValuesChange);
    }
    AvlMultiSelectControlDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlMultiSelectControlDirective.prototype, "selectedIndexesChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlMultiSelectControlDirective.prototype, "selectedValuesChange", void 0);
    AvlMultiSelectControlDirective = __decorate([
        Directive({
            selector: 'avl-datatable,avl-list,avl-chip-list, avl-chip-input'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], AvlMultiSelectControlDirective);
    return AvlMultiSelectControlDirective;
}());
export { AvlMultiSelectControlDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLW11bHRpLXNlbGVjdC1jb250cm9sLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtY29udHJvbHMvbmctYmluZGVycy8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmZhY2UvYXZsLW11bHRpLXNlbGVjdC1jb250cm9sLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsd0NBQXdDLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUU1RSxtRUFBbUU7QUFJbkU7SUFJRSx3Q0FBWSxVQUFzQjtRQUh4QiwwQkFBcUIsR0FBZ0MsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN4RSx5QkFBb0IsR0FBNkIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUc1RSx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsMEJBQTBCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDN0csd0NBQXdDLENBQUMsVUFBVSxFQUFFLHlCQUF5QixFQUFFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQzdHLENBQUM7O2dCQUh1QixVQUFVOztJQUh4QjtRQUFULE1BQU0sRUFBRTtrQ0FBd0IsWUFBWTtpRkFBcUM7SUFDeEU7UUFBVCxNQUFNLEVBQUU7a0NBQXVCLFlBQVk7Z0ZBQWtDO0lBRm5FLDhCQUE4QjtRQUgxQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsc0RBQXNEO1NBQ2pFLENBQUM7eUNBS3dCLFVBQVU7T0FKdkIsOEJBQThCLENBUTFDO0lBQUQscUNBQUM7Q0FBQSxBQVJELElBUUM7U0FSWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMgfSBmcm9tICcuLi9iaW5kaW5nLXV0aWxzJztcclxuXHJcbi8qKiBEaXJlY3RpdmUgZm9yIGNvbnRyb2xzIGltcGxlbWVudGluZyBbQXZsTXVsdGlTZWxlY3RDb250cm9sXS4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtZGF0YXRhYmxlLGF2bC1saXN0LGF2bC1jaGlwLWxpc3QsIGF2bC1jaGlwLWlucHV0J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsTXVsdGlTZWxlY3RDb250cm9sRGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgc2VsZWN0ZWRJbmRleGVzQ2hhbmdlOiBFdmVudEVtaXR0ZXI8QXJyYXk8bnVtYmVyPj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkVmFsdWVzQ2hhbmdlOiBFdmVudEVtaXR0ZXI8QXJyYXk8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ3NlbGVjdGVkLWluZGV4ZXMtY2hhbmdlZCcsIHRoaXMuc2VsZWN0ZWRJbmRleGVzQ2hhbmdlKTtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ3NlbGVjdGVkLXZhbHVlcy1jaGFuZ2VkJywgdGhpcy5zZWxlY3RlZFZhbHVlc0NoYW5nZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==