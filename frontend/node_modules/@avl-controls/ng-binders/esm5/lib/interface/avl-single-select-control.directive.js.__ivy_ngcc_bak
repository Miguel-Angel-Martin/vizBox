import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
/** Directive for controls implementing [AvlSingleSelectControl]. */
var AvlSingleSelectControlDirective = /** @class */ (function () {
    function AvlSingleSelectControlDirective(elementRef) {
        this.selectedIndexChange = new EventEmitter();
        this.selectedValueChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'selected-index-changed', this.selectedIndexChange);
        addEventListenerForEmittingChangedEvents(elementRef, 'selected-value-changed', this.selectedValueChange);
    }
    AvlSingleSelectControlDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlSingleSelectControlDirective.prototype, "selectedIndexChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlSingleSelectControlDirective.prototype, "selectedValueChange", void 0);
    AvlSingleSelectControlDirective = __decorate([
        Directive({
            selector: 'avl-datatable,avl-dropdown,avl-list,avl-radio-group,avl-app-switcher,avl-chip-list,avl-combo-box'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], AvlSingleSelectControlDirective);
    return AvlSingleSelectControlDirective;
}());
export { AvlSingleSelectControlDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXNpbmdsZS1zZWxlY3QtY29udHJvbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYXZsLWNvbnRyb2xzL25nLWJpbmRlcnMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJmYWNlL2F2bC1zaW5nbGUtc2VsZWN0LWNvbnRyb2wuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTVFLG9FQUFvRTtBQUlwRTtJQUlFLHlDQUFZLFVBQXNCO1FBSHhCLHdCQUFtQixHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9ELHdCQUFtQixHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3BFLHdDQUF3QyxDQUFDLFVBQVUsRUFBRSx3QkFBd0IsRUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUN6Ryx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDM0csQ0FBQzs7Z0JBSHVCLFVBQVU7O0lBSHhCO1FBQVQsTUFBTSxFQUFFO2tDQUFzQixZQUFZO2dGQUE4QjtJQUMvRDtRQUFULE1BQU0sRUFBRTtrQ0FBc0IsWUFBWTtnRkFBMkI7SUFGM0QsK0JBQStCO1FBSDNDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxrR0FBa0c7U0FDN0csQ0FBQzt5Q0FLd0IsVUFBVTtPQUp2QiwrQkFBK0IsQ0FRM0M7SUFBRCxzQ0FBQztDQUFBLEFBUkQsSUFRQztTQVJZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyB9IGZyb20gJy4uL2JpbmRpbmctdXRpbHMnO1xyXG5cclxuLyoqIERpcmVjdGl2ZSBmb3IgY29udHJvbHMgaW1wbGVtZW50aW5nIFtBdmxTaW5nbGVTZWxlY3RDb250cm9sXS4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtZGF0YXRhYmxlLGF2bC1kcm9wZG93bixhdmwtbGlzdCxhdmwtcmFkaW8tZ3JvdXAsYXZsLWFwcC1zd2l0Y2hlcixhdmwtY2hpcC1saXN0LGF2bC1jb21iby1ib3gnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdmxTaW5nbGVTZWxlY3RDb250cm9sRGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgc2VsZWN0ZWRJbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkVmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdzZWxlY3RlZC1pbmRleC1jaGFuZ2VkJywgdGhpcy5zZWxlY3RlZEluZGV4Q2hhbmdlKTtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ3NlbGVjdGVkLXZhbHVlLWNoYW5nZWQnLCB0aGlzLnNlbGVjdGVkVmFsdWVDaGFuZ2UpO1xyXG4gIH1cclxufVxyXG4iXX0=