import { __decorate, __extends, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import { AvlControlDirective } from './avl-control.directive';
/** Directive for controls implementing [AvlInteractionControl]. */
var AvlInteractionControlDirective = /** @class */ (function (_super) {
    __extends(AvlInteractionControlDirective, _super);
    function AvlInteractionControlDirective(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.focusedChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'focused-changed', _this.focusedChange);
        return _this;
    }
    AvlInteractionControlDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlInteractionControlDirective.prototype, "focusedChange", void 0);
    AvlInteractionControlDirective = __decorate([
        Directive({
            selector: 'avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], AvlInteractionControlDirective);
    return AvlInteractionControlDirective;
}(AvlControlDirective));
export { AvlInteractionControlDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWludGVyYWN0aW9uLWNvbnRyb2wuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGF2bC1jb250cm9scy9uZy1iaW5kZXJzLyIsInNvdXJjZXMiOlsibGliL2ludGVyZmFjZS9hdmwtaW50ZXJhY3Rpb24tY29udHJvbC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsbUVBQW1FO0FBSW5FO0lBQW9ELGtEQUFtQjtJQUdyRSx3Q0FBWSxVQUFzQjtRQUFsQyxZQUNFLGtCQUFNLFVBQVUsQ0FBQyxTQUVsQjtRQUxTLG1CQUFhLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFJOUQsd0NBQXdDLENBQUMsVUFBVSxFQUFFLGlCQUFpQixFQUFFLEtBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQzs7SUFDOUYsQ0FBQzs7Z0JBSHVCLFVBQVU7O0lBRnhCO1FBQVQsTUFBTSxFQUFFO2tDQUFnQixZQUFZO3lFQUEyQjtJQURyRCw4QkFBOEI7UUFIMUMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDZGQUE2RjtTQUN4RyxDQUFDO3lDQUl3QixVQUFVO09BSHZCLDhCQUE4QixDQU8xQztJQUFELHFDQUFDO0NBQUEsQUFQRCxDQUFvRCxtQkFBbUIsR0FPdEU7U0FQWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMgfSBmcm9tICcuLi9iaW5kaW5nLXV0aWxzJztcclxuaW1wb3J0IHsgQXZsQ29udHJvbERpcmVjdGl2ZSB9IGZyb20gJy4vYXZsLWNvbnRyb2wuZGlyZWN0aXZlJztcclxuXHJcbi8qKiBEaXJlY3RpdmUgZm9yIGNvbnRyb2xzIGltcGxlbWVudGluZyBbQXZsSW50ZXJhY3Rpb25Db250cm9sXS4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtYnV0dG9uLGF2bC1pY29uLWJ1dHRvbixhdmwtaXRlbSxhdmwtc2VhcmNoLWJhcixhdmwtcmFkaW8tYnV0dG9uLGF2bC11cGxvYWQsYXZsLXNuYWNrYmFyJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsSW50ZXJhY3Rpb25Db250cm9sRGlyZWN0aXZlIGV4dGVuZHMgQXZsQ29udHJvbERpcmVjdGl2ZSB7XHJcbiAgQE91dHB1dCgpIGZvY3VzZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBzdXBlcihlbGVtZW50UmVmKTtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ2ZvY3VzZWQtY2hhbmdlZCcsIHRoaXMuZm9jdXNlZENoYW5nZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==