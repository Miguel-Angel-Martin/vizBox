import { __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
var AvlTextfieldDirective = /** @class */ (function () {
    function AvlTextfieldDirective(elementRef) {
        this.valueChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);
    }
    AvlTextfieldDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlTextfieldDirective.prototype, "valueChange", void 0);
    AvlTextfieldDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], AvlTextfieldDirective);
AvlTextfieldDirective.ɵfac = function AvlTextfieldDirective_Factory(t) { return new (t || AvlTextfieldDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlTextfieldDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlTextfieldDirective, selectors: [["avl-textfield"]], outputs: { valueChange: "valueChange" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlTextfieldDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-textfield'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { valueChange: [{
            type: Output
        }] }); })();
    return AvlTextfieldDirective;
}());
export { AvlTextfieldDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXRleHRmaWVsZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9AYXZsLWNvbnRyb2xzL25nLWJpbmRlcnMvbGliL2NvbnRyb2xzL2F2bC10ZXh0ZmllbGQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQU01RTtBQUNvQixJQUVsQiwrQkFBWSxVQUFzQjtBQUNwQyxRQUhZLGdCQUFXLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDbkUsUUFFSSx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsZUFBZSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM1RixJQUFFLENBQUM7QUFDSDtBQUNnRSxnQkFKdEMsVUFBVTtBQUFHO0FBQzlCLElBSEc7QUFBYSxRQUF0QixNQUFNLEVBQUU7QUFBRSxrQ0FBWSxZQUFZO0FBQUUsOERBQTRCO0FBRW5FLElBSGEscUJBQXFCLHdCQUhqQyxTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsM0NBRUosa0NBR2tCLFVBQVU7V0FMVCxVQUMxQixDQUFDLHRCQUlxQyxPQUgxQixxQkFBcUIsQ0FNakM7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELDRCQUFDO0FBQ0EsQ0FEQSxBQU5ELElBTUM7O0FBYkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUdBLEFBQUEsQUFBQSxBQUZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUZBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUFBLEFBSEEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBTkEsQUFNQSxBQU5BLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMgfSBmcm9tICcuLi9iaW5kaW5nLXV0aWxzJztcclxuXHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ2F2bC10ZXh0ZmllbGQnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdmxUZXh0ZmllbGREaXJlY3RpdmUge1xyXG4gIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ3ZhbHVlLWNoYW5nZWQnLCB0aGlzLnZhbHVlQ2hhbmdlKTtcclxuICB9XHJcbn1cclxuIl19