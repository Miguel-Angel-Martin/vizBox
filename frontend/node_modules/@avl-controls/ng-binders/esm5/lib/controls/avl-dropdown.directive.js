import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
var AvlDropdownDirective = /** @class */ (function () {
    function AvlDropdownDirective(elementRef) {
        this.openChanged = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChanged);
    }
    AvlDropdownDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], AvlDropdownDirective.prototype, "openChanged", void 0);
    AvlDropdownDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], AvlDropdownDirective);
AvlDropdownDirective.ɵfac = function AvlDropdownDirective_Factory(t) { return new (t || AvlDropdownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlDropdownDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlDropdownDirective, selectors: [["avl-dropdown"]], outputs: { openChanged: "openChanged" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlDropdownDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-dropdown'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { openChanged: [{
            type: Output
        }] }); })();
    return AvlDropdownDirective;
}());
export { AvlDropdownDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRyb3Bkb3duLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsibmc6L0BhdmwtY29udHJvbHMvbmctYmluZGVycy9saWIvY29udHJvbHMvYXZsLWRyb3Bkb3duLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsd0NBQXdDLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFLNUU7QUFDb0IsSUFFbEIsOEJBQVksVUFBc0I7QUFDcEMsUUFIWSxnQkFBVyxHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ25FLFFBRUksd0NBQXdDLENBQUMsVUFBVSxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDM0YsSUFBRSxDQUFDO0FBQ0g7QUFDK0QsZ0JBSnJDLFVBQVU7QUFBRztBQUM5QixJQUhHO0FBQWEsUUFBdEIsTUFBTSxFQUFFO0FBQUUsa0NBQVksWUFBWTtBQUFFLDZEQUE0QjtBQUVuRSxJQUhhLG9CQUFvQix3QkFIaEMsU0FBUyxDQUFDLGNBQ1QsUUFBUSxFQUFFLDNDQUVKLGtDQUdrQixVQUFVO1VBTFYsVUFDekIsQ0FBQyxyQkFJcUMsT0FIMUIsb0JBQW9CLENBTWhDOzs7Ozs7Ozs7O29CQUNEO0FBQUMsSUFERCwyQkFBQztBQUNBLENBREEsQUFORCxJQU1DOztBQVpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFHQSxBQUFBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFGQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFEQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUhBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQU5BLEFBTUEsQUFOQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzIH0gZnJvbSAnLi4vYmluZGluZy11dGlscyc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ2F2bC1kcm9wZG93bidcclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bERyb3Bkb3duRGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgb3BlbkNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdvcGVuLWNoYW5nZWQnLCB0aGlzLm9wZW5DaGFuZ2VkKTtcclxuICB9XHJcbn1cclxuIl19