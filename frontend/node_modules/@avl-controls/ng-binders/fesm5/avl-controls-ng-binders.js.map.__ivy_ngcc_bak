{"version":3,"file":"avl-controls-ng-binders.js","sources":["ng://@avl-controls/ng-binders/lib/controls/avl-breadcrumb.directive.ts","ng://@avl-controls/ng-binders/lib/binding-utils.ts","ng://@avl-controls/ng-binders/lib/controls/avl-checkbox.directive.ts","ng://@avl-controls/ng-binders/lib/interface/avl-control.directive.ts","ng://@avl-controls/ng-binders/lib/interface/avl-interaction-control.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-combo-box.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-overflow-menu.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-search-bar.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-textarea.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-date.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-side-sheet.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-textfield.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-timespan.directive.ts","ng://@avl-controls/ng-binders/lib/services/variables.ts","ng://@avl-controls/ng-binders/lib/controls/avl-upload.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-tab-bar.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-dropdown.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-time.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-list.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-context-menu.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-numberfield.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-icon-button.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-datatable.directive.ts","ng://@avl-controls/ng-binders/lib/controls/avl-snackbar.directive.ts","ng://@avl-controls/ng-binders/lib/interface/avl-checkable-control.directive.ts","ng://@avl-controls/ng-binders/lib/interface/avl-multi-select-control.directive.ts","ng://@avl-controls/ng-binders/lib/interface/avl-single-select-control.directive.ts","ng://@avl-controls/ng-binders/lib/interface/avl-form-control.directive.ts","ng://@avl-controls/ng-binders/lib/services/upload.service.ts","ng://@avl-controls/ng-binders/lib/controls/avl-step-progress.directive.ts","ng://@avl-controls/ng-binders/lib/avl-ng-binders.module.ts","ng://@avl-controls/ng-binders/lib/services/ngx-translate-translation.service.ts","ng://@avl-controls/ng-binders/public_api.ts","ng://@avl-controls/ng-binders/avl-controls-ng-binders.ts"],"sourcesContent":["import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'avl-breadcrumb'\r\n})\r\nexport class AvlBreadcrumbDirective {\r\n  @Output() itemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostListener('item-clicked', ['$event'])\r\n  itemClickedListener(e: CustomEvent) {\r\n    this.itemClicked.emit(e.detail.item);\r\n  }\r\n}\r\n  ","import { ElementRef, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Maps Polymer 'changed' events to Angular 'change' events so it can be used in 2-way binding.\r\n * HostListener can't be used because when a polymer control has a default value polymer will emit a changed event\r\n * which will overwrite the value in the bound angular variable. So the event listener is added after the constructor\r\n * so the default value changed event will be skipped.\r\n * TODO: There is still a problem if the bound variable is not set. If the default changed event is skipped the variable\r\n * will not get the default value so the control and the variable will have missmatching values.\r\n */\r\nexport async function addEventListenerForEmittingChangedEvents<TEvent>(elementRef: ElementRef, polymerEventName: string,\r\n  angularEventEmmiter: EventEmitter<TEvent>) {\r\n  Promise.resolve().then(() =>{\r\n    const nativeElement = elementRef.nativeElement as HTMLElement;\r\n    return nativeElement.addEventListener(polymerEventName, (e: CustomEvent) => {\r\n      angularEventEmmiter.emit(e.detail.value);\r\n    });\r\n  })\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-checkbox'\r\n})\r\nexport class AvlCheckboxDirective {\r\n  @Output() indeterminateChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'indeterminate-changed', this.indeterminateChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlControl]. */\r\n@Directive({\r\n  selector: 'avl-breadcrumb,avl-context-menu,avl-header-bar,avl-menu-button,avl-user-info'\r\n})\r\nexport class AvlControlDirective {\r\n  @Output() disabledChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'disabled-changed', this.disabledChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\nimport { AvlControlDirective } from './avl-control.directive';\r\n\r\n/** Directive for controls implementing [AvlInteractionControl]. */\r\n@Directive({\r\n  selector: 'avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar'\r\n})\r\nexport class AvlInteractionControlDirective extends AvlControlDirective {\r\n  @Output() focusedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    super(elementRef);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'focused-changed', this.focusedChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, forwardRef, HostListener, Output, Renderer2, Input } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\r\nimport { AvlFormControl } from '@avl-controls/interfaces';\r\nimport { AvlInteractionControlDirective } from '../interface/avl-interaction-control.directive';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-combo-box',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AvlComboBoxDirective), multi: true },\r\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AvlComboBoxDirective), multi: true }]\r\n})\r\nexport class AvlComboBoxDirective extends AvlInteractionControlDirective implements ControlValueAccessor, Validator {\r\n  @Output() invalidChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  private onChangeCallback: (value: any) => void;\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n    super(elementRef);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'invalid-changed', this.focusedChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n\r\n  // Angular writes readonly attributes to a readOnly property,\r\n  // because that's how it's called on the native input element.\r\n  @Input()\r\n  public set readonly(value: boolean) {\r\n    this.elementRef.nativeElement.readonly = value;\r\n  }\r\n\r\n  @HostListener('value-changed', ['$event'])\r\n  valueChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && this.isAllowNewValues()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('selected-value-changed', ['$event'])\r\n  selectedValueChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && !this.isAllowNewValues()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    const property = this.isAllowNewValues() ? 'value' : 'selectedValue';\r\n    this.renderer.setProperty(this.elementRef.nativeElement, property, value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  // Since avl-combo-box doesn't have validate-on-leave, there's no touching\r\n  registerOnTouched(fn: any) { }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  private isAllowNewValues(): boolean {\r\n    return (this.elementRef.nativeElement && this.elementRef.nativeElement.allowNewValues === true);\r\n  }\r\n\r\n  //#region Validator\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const formControl = this.elementRef.nativeElement as AvlFormControl;\r\n    if (formControl.invalid) {\r\n      return { invalid: formControl.errorMessage };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-overflow-menu'\r\n})\r\nexport class AvlOverflowMenuDirective {\r\n  @Output() itemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'item-clicked', this.itemClicked);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-search-bar'\r\n})\r\nexport class AvlSearchBarDirective {\r\n  @Output() queryChange: EventEmitter<string> = new EventEmitter();\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'query-changed', this.queryChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-textarea'\r\n})\r\nexport class AvlTextareaDirective {\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-date'\r\n})\r\nexport class AvlDateDirective {\r\n  @Output() valueChange: EventEmitter<Date | undefined> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-side-sheet'\r\n})\r\nexport class AvlSideSheetDirective {\r\n  @Output() openChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-textfield'\r\n})\r\nexport class AvlTextfieldDirective {\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-timespan'\r\n})\r\nexport class AvlTimespanDirective {\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { AvlUploadService } from '@avl-controls/interfaces';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const UPLOAD_SERVICE = new InjectionToken<AvlUploadService>('UPLOAD_SERVICE');","import { Directive, ElementRef, OnInit, HostListener, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { AvlFile, AvlUploadService } from '@avl-controls/interfaces';\r\nimport { UPLOAD_SERVICE } from '../services/variables';\r\n\r\n@Directive({\r\n  selector: 'avl-upload',\r\n})\r\nexport class AvlUploadDirective implements OnInit {\r\n  @Output() uploadComplete: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() uploadAbort: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() uploadFail: EventEmitter<any> = new EventEmitter();\r\n  @Output() uploadStart: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() filesChanged: EventEmitter<AvlFile[]> = new EventEmitter();\r\n  @Output() fileRejected: EventEmitter<AvlFile> = new EventEmitter();\r\n  @Output() menuItemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private element: ElementRef, @Inject(UPLOAD_SERVICE) private uploadService: AvlUploadService) {}\r\n\r\n  ngOnInit() {\r\n    const element = <any>this.element.nativeElement;\r\n    element.uploadService = this.uploadService;\r\n  }\r\n\r\n  @HostListener('upload-complete', ['$event'])\r\n  uploadCompleteHandler(e: CustomEvent) {\r\n    this.uploadComplete.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('upload-abort', ['$event'])\r\n  uploadCanceledHandler(e: CustomEvent) {\r\n    this.uploadAbort.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('upload-start', ['$event'])\r\n  uploadStartedHandler(e: CustomEvent) {\r\n    this.uploadStart.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('upload-fail', ['$event'])\r\n  uploadFailedHandler(e: CustomEvent) {\r\n    this.uploadFail.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('files-changed', ['$event'])\r\n  filesChangedHandler(e: CustomEvent) {\r\n    this.filesChanged.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('file-rejected', ['$event'])\r\n  fileRejectedHandler(e: CustomEvent) {\r\n    this.fileRejected.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('menu-item-clicked', ['$event'])\r\n  menuItemClickedHandler(e: CustomEvent) {\r\n    this.menuItemClicked.emit(e.detail);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'avl-tab-bar',\r\n})\r\nexport class AvlTabBarDirective {\r\n  @Output() selectedIndexChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() selectedValueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  private tabBar: any;\r\n\r\n  private async setEventListeners(el: any) {\r\n    el.addEventListener('selected-value-changed', (event) => {\r\n      Promise.resolve().then(() => {\r\n        this.selectedValueChange.emit(event.detail.value);\r\n      });\r\n    });\r\n    el.addEventListener('selected-index-changed', (event) => {\r\n      Promise.resolve().then(() => {\r\n        this.selectedIndexChange.emit(event.detail.value);\r\n      });\r\n    });\r\n  }\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.tabBar = this.el.nativeElement;\r\n    Promise.resolve().then(() => {\r\n      this.setEventListeners(el.nativeElement);\r\n    });\r\n  }\r\n\r\n  setTab(index: number, value: { label: string, disabled?: boolean, [key: string]: any }) {\r\n    const tabs = this.tabBar.tabs;\r\n    for (const prop in value) {\r\n      if (value.hasOwnProperty(prop)) {\r\n        tabs[index][prop] = value[prop];\r\n        this.tabBar.notifyPath(`tabs.${index}.${prop}`);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-dropdown'\r\n})\r\nexport class AvlDropdownDirective {\r\n  @Output() openChanged: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChanged);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-time'\r\n})\r\nexport class AvlTimeDirective {\r\n  @Output() valueChange: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, forwardRef, HostListener, Output, Renderer2, Input } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\r\nimport { AvlFormControl } from '@avl-controls/interfaces';\r\nimport { AvlInteractionControlDirective } from '../interface/avl-interaction-control.directive';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-list',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AvlListDirective), multi: true },\r\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AvlListDirective), multi: true }]\r\n})\r\nexport class AvlListDirective extends AvlInteractionControlDirective implements ControlValueAccessor, Validator {\r\n  @Output() invalidChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() overflowMenuItemClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() rightCheckboxChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output() activeRowChanged: EventEmitter<any> = new EventEmitter();\r\n  @Output() rowReordered: EventEmitter<any> = new EventEmitter();\r\n\r\n  // Angular writes readonly attributes to a readOnly property,\r\n  // because that's how it's called on the native input element.\r\n  @Input()\r\n  public set readonly(value: boolean) {\r\n    this.elementRef.nativeElement.readonly = value;\r\n  }\r\n\r\n  private onChangeCallback: (value: any) => void;\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n    super(elementRef);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'invalid-changed', this.focusedChange);\r\n  }\r\n\r\n  @HostListener('selected-value-changed', ['$event'])\r\n  selectedValueChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && !this.isMulti()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('selected-values-changed', ['$event'])\r\n  selectedValuesChanged(e: CustomEvent) {\r\n    if (this.onChangeCallback && this.isMulti()) {\r\n      this.onChangeCallback(e.detail.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('overflow-menu-item-clicked', ['$event'])\r\n  overflowMenuItemClickListener(e: CustomEvent) {\r\n    this.overflowMenuItemClicked.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('right-checkbox-changed', ['$event'])\r\n  rightCheckboxChangeListener(e: CustomEvent) {\r\n    this.rightCheckboxChanged.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('active-row-changed', ['$event'])\r\n  activatedRowChangeListener(e: CustomEvent) {\r\n    this.activeRowChanged.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('row-reordered', ['$event'])\r\n  rowReorderedListener(e: CustomEvent) {\r\n    this.rowReordered.emit(e.detail);\r\n  }\r\n\r\n\r\n  writeValue(value: any) {\r\n    const property = this.isMulti() ? 'selectedValues' : 'selectedValue';\r\n    this.renderer.setProperty(this.elementRef.nativeElement, property, value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  // Since avl-list doesn't have validate-on-leave, there's no touching\r\n  registerOnTouched(fn: any) { }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  private isMulti(): boolean {\r\n    return (this.elementRef.nativeElement && this.elementRef.nativeElement.multi === true);\r\n  }\r\n\r\n  //#region Validator\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const formControl = this.elementRef.nativeElement as AvlFormControl;\r\n    if (formControl.invalid) {\r\n      return { invalid: formControl.errorMessage };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'avl-context-menu'\r\n})\r\nexport class AvlContextMenuDirective {\r\n  @Output() itemClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostListener('item-clicked', ['$event'])\r\n  itemClickedListener(e: CustomEvent) {\r\n    this.itemClicked.emit(e.detail.value);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-numberfield'\r\n})\r\nexport class AvlNumberfieldDirective {\r\n  @Output() valueChange: EventEmitter<string[]> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-icon-button'\r\n})\r\nexport class AvlIconButtonDirective {\r\n  @Output() badgeChange: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() badgeValueChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'badge-changed', this.badgeChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'badge-value-changed', this.badgeValueChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output, ElementRef } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n@Directive({\r\n  selector: 'avl-datatable'\r\n})\r\nexport class AvlDatatableDirective {\r\n  @Output() buttonClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() overflowMenuItemClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() linkClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() pageSizeChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() selectedPageChange: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'page-size-changed', this.pageSizeChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-page-changed', this.selectedPageChange);\r\n  }\r\n\r\n  @HostListener('button-click', ['$event'])\r\n  buttonClickListener(e: CustomEvent) {\r\n    this.buttonClick.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('overflow-menu-item-click', ['$event'])\r\n  overflowMenuItemClickListener(e: CustomEvent) {\r\n    this.overflowMenuItemClick.emit(e.detail);\r\n  }\r\n\r\n  @HostListener('link-click', ['$event'])\r\n  linkClickListener(e: CustomEvent) {\r\n    this.linkClick.emit(e.detail);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output, HostListener } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n@Directive({\r\n  selector: 'avl-snackbar'\r\n})\r\nexport class AvlSnackbarDirective {\r\n  @Output() buttonClicked: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() displayedChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @HostListener('button-clicked', ['$event'])\r\n  buttonClickedHandler(e: CustomEvent) {\r\n    this.buttonClicked.emit(e.detail.value);\r\n  }\r\n\r\n  @HostListener('displayed-changed', ['$event'])\r\n  displayedChangeHandler(e: CustomEvent) {\r\n    this.displayedChange.emit(e.detail.value);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlCheckableControl]. */\r\n@Directive({\r\n  selector: 'avl-checkbox,avl-radio-button, avl-icon-toggle, avl-switch'\r\n})\r\nexport class AvlCheckableControlDirective {\r\n  @Output() checkedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'checked-changed', this.checkedChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlMultiSelectControl]. */\r\n@Directive({\r\n  selector: 'avl-datatable,avl-list,avl-chip-list, avl-chip-input'\r\n})\r\nexport class AvlMultiSelectControlDirective {\r\n  @Output() selectedIndexesChange: EventEmitter<Array<number>> = new EventEmitter();\r\n  @Output() selectedValuesChange: EventEmitter<Array<any>> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-indexes-changed', this.selectedIndexesChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-values-changed', this.selectedValuesChange);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n/** Directive for controls implementing [AvlSingleSelectControl]. */\r\n@Directive({\r\n  selector: 'avl-datatable,avl-dropdown,avl-list,avl-radio-group,avl-app-switcher,avl-chip-list,avl-combo-box'\r\n})\r\nexport class AvlSingleSelectControlDirective {\r\n  @Output() selectedIndexChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() selectedValueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-index-changed', this.selectedIndexChange);\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'selected-value-changed', this.selectedValueChange);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output, OnInit, OnDestroy, ElementRef, Renderer2, forwardRef, Input } from '@angular/core';\r\nimport { AvlInteractionControlDirective } from './avl-interaction-control.directive';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\r\nimport { AvlFormControl } from '@avl-controls/interfaces';\r\n\r\n// Defines which property is used as the 'value' for the ControlValueAccessor\r\nconst valuePropertyNameMap = {\r\n  // TODO: is there a nameof function is typescript?\r\n  'avl-checkbox': 'checked',\r\n  'avl-date': 'value',\r\n  'avl-dropdown': 'selectedValue',\r\n  'avl-time': 'value',\r\n  'avl-numberfield': 'value',\r\n  'avl-radio-group': 'selectedValue',\r\n  'avl-slider': 'value',\r\n  'avl-textarea': 'value',\r\n  'avl-textfield': 'value',\r\n  'avl-timespan': 'value',\r\n  'avl-chip-list' : 'selectedValue',\r\n  'avl-chip-input': 'selectedValues',\r\n  'avl-upload': 'files',\r\n  'avl-search-bar': 'query',\r\n  'avl-icon-toggle': 'checked',\r\n  'avl-switch': 'checked'\r\n};\r\n\r\n/** Directive for controls implementing [AvlFormControl]. */\r\n@Directive({\r\n  selector: 'avl-date,avl-dropdown,avl-time,avl-icon-toggle,avl-numberfield,avl-radio-group,avl-slider,avl-textarea,avl-textfield,avl-timespan,avl-checkbox,avl-switch,avl-chip-list,avl-upload,avl-search-bar,avl-chip-input',\r\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AvlFormControlDirective), multi: true },\r\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AvlFormControlDirective), multi: true }]\r\n})\r\nexport class AvlFormControlDirective extends AvlInteractionControlDirective implements OnInit, OnDestroy, ControlValueAccessor, Validator {\r\n  //#region ControlValueAccessor\r\n  private valuePropertyName;\r\n  private onTouchedCallback: () => {};\r\n  private onChangeCallback: (value: any) => void;\r\n\r\n  private unlistenPropertyChangedEvent: () => void;\r\n\r\n  private writeValueAlreadyCalled = false;\r\n\r\n  // Angular writes readonly attributes to a readOnly property,\r\n  // because that's how it's called on the native input element.\r\n  @Input()\r\n  public set readonly(value: any) {\r\n    if (typeof value === 'boolean') {\r\n      this.elementRef.nativeElement.readonly = value;\r\n    } else {\r\n      this.elementRef.nativeElement.readonly = value != null;\r\n    }\r\n  }\r\n\r\n  constructor(protected elementRef: ElementRef, private renderer: Renderer2) {\r\n    super(elementRef);\r\n    const controlTag = (this.elementRef.nativeElement as HTMLElement).tagName.toLowerCase();\r\n    this.valuePropertyName = valuePropertyNameMap[controlTag];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.unlistenPropertyChangedEvent =\r\n      this.renderer.listen(this.elementRef.nativeElement, `${this.toKebabCase(this.valuePropertyName)}-changed`, (e: CustomEvent) => {\r\n        if (this.onChangeCallback) {\r\n          this.onChangeCallback(e.detail.value);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.unlistenPropertyChangedEvent) {\r\n      this.unlistenPropertyChangedEvent();\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    // Because of a bug in Angular writeValue sometimes gets called with a null before being called with the real value,\r\n    // so the null is discarded.\r\n    // TODO: remove when issue is fixed: https://github.com/angular/angular/issues/14988\r\n    if (!this.writeValueAlreadyCalled && value == null) {\r\n      this.writeValueAlreadyCalled = true;\r\n      return;\r\n    }\r\n    this.renderer.setProperty(this.elementRef.nativeElement, this.valuePropertyName, value);\r\n    this.writeValueAlreadyCalled = true;\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur() {\r\n    if (this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n  }\r\n\r\n  @HostListener('focused-changed', ['$event.detail.value'])\r\n  onFocusedChanged(focused) {\r\n    if (!focused && this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n  }\r\n\r\n  private toKebabCase(camelCaseString: string): string {\r\n    return camelCaseString.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n  }\r\n  //#endregion\r\n\r\n  //#region AvlFormControl\r\n  // tslint:disable-next-line:member-ordering\r\n  @Output() invalidChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @HostListener('invalid-changed', ['$event'])\r\n  invalidChanged(e: CustomEvent) {\r\n    this.invalidChange.emit(e.detail.value);\r\n    // Trigger validation\r\n    if (this.onChangeCallback) {\r\n      this.onChangeCallback(this.elementRef.nativeElement[this.valuePropertyName]);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Validator\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const formControl = this.elementRef.nativeElement as AvlFormControl;\r\n    if (formControl.invalid) {\r\n      return { invalid: formControl.errorMessage };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  //#endregion\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpErrorResponse } from '@angular/common/http';\r\nimport { AvlUploadService, AvlFile, AvlAbortUploadAction, AvlUploadProgressEvent, AvlHttpErrorResponse } from '@avl-controls/interfaces';\r\n\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UploadService implements AvlUploadService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  downloadFile(url: string): Promise<Blob> {\r\n    return this.httpClient.get(url, { responseType: \"blob\" }).toPromise();\r\n  }\r\n\r\n  uploadFile(file: AvlFile, target: string, progressCallback?: (progress: AvlUploadProgressEvent) => void, completeCallback?: (downloadUrl?: string) => void, failCallback?: (errorResponse: AvlHttpErrorResponse) => void)\r\n  : AvlAbortUploadAction {\r\n    const formData = new FormData();\r\n    formData.append('file', file.file);\r\n    const uploadReq: Observable<any> = this.httpClient.post<{downloadUrl?: string}>(target, formData, { reportProgress: true, observe: 'events' } )\r\n      .pipe(map(event => {\r\n        if(event.type === HttpEventType.UploadProgress && progressCallback) {\r\n          progressCallback(event);\r\n        }\r\n        if(event.type === HttpEventType.Response) {\r\n          if(completeCallback && event.body != null && event.body.downloadUrl) {\r\n            completeCallback(event.body.downloadUrl);\r\n          }\r\n          else if(completeCallback) completeCallback();\r\n        }\r\n      }), catchError( (err: HttpErrorResponse, caught) => {\r\n        const response = err.error instanceof Event ? (<XMLHttpRequest>err.error.target).response : err.error;\r\n        if(failCallback) failCallback({\r\n          status: err.status,\r\n          response: response\r\n        });\r\n        return new Observable(null);\r\n      }));\r\n      const subscription = uploadReq.subscribe();\r\n      return subscription.unsubscribe.bind(subscription);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { addEventListenerForEmittingChangedEvents } from '../binding-utils';\r\n\r\n\r\n@Directive({\r\n  selector: 'avl-step-progress'\r\n})\r\nexport class AvlStepProgressDirective {\r\n  @Output() activeChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(elementRef: ElementRef) {\r\n    addEventListenerForEmittingChangedEvents(elementRef, 'active-changed', this.activeChange);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AvlContextMenuDirective } from './controls/avl-context-menu.directive';\r\nimport { AvlDateDirective } from './controls/avl-date.directive';\r\nimport { AvlDropdownDirective } from './controls/avl-dropdown.directive';\r\nimport { AvlListDirective } from './controls/avl-list.directive';\r\nimport { AvlOverflowMenuDirective } from './controls/avl-overflow-menu.directive';\r\nimport { AvlSearchBarDirective } from './controls/avl-search-bar.directive';\r\nimport { AvlTextareaDirective } from './controls/avl-textarea.directive';\r\nimport { AvlSideSheetDirective} from './controls/avl-side-sheet.directive';\r\nimport { AvlTimeDirective} from './controls/avl-time.directive';\r\nimport { AvlTextfieldDirective } from './controls/avl-textfield.directive';\r\nimport { AvlTimespanDirective } from './controls/avl-timespan.directive';\r\nimport { AvlUploadDirective } from './controls/avl-upload.directive';\r\nimport { AvlCheckableControlDirective } from './interface/avl-checkable-control.directive';\r\nimport { AvlControlDirective } from './interface/avl-control.directive';\r\nimport { AvlFormControlDirective } from './interface/avl-form-control.directive';\r\nimport { AvlInteractionControlDirective } from './interface/avl-interaction-control.directive';\r\nimport { AvlMultiSelectControlDirective } from './interface/avl-multi-select-control.directive';\r\nimport { AvlSingleSelectControlDirective } from './interface/avl-single-select-control.directive';\r\nimport { AvlNumberfieldDirective } from './controls/avl-numberfield.directive';\r\nimport { AvlIconButtonDirective } from './controls/avl-icon-button.directive';\r\nimport { AvlCheckboxDirective } from './controls/avl-checkbox.directive';\r\nimport { AvlDatatableDirective } from './controls/avl-datatable.directive';\r\nimport { AvlComboBoxDirective } from './controls/avl-combo-box.directive';\r\nimport { AvlBreadcrumbDirective } from './controls/avl-breadcrumb.directive';\r\nimport { UPLOAD_SERVICE } from './services/variables';\r\nimport { UploadService } from './services/upload.service';\r\nimport { AvlTabBarDirective } from './controls/avl-tab-bar.directive';\r\nimport { AvlSnackbarDirective } from './controls/avl-snackbar.directive';\r\nimport { AvlStepProgressDirective } from './controls/avl-step-progress.directive';\r\n\r\nconst binders = [\r\n  AvlBreadcrumbDirective,\r\n  AvlOverflowMenuDirective,\r\n  AvlSearchBarDirective,\r\n  AvlTextareaDirective,\r\n  AvlDateDirective,\r\n  AvlSideSheetDirective,\r\n  AvlTextfieldDirective,\r\n  AvlTimespanDirective,\r\n  AvlCheckableControlDirective,\r\n  AvlControlDirective,\r\n  AvlFormControlDirective,\r\n  AvlInteractionControlDirective,\r\n  AvlMultiSelectControlDirective,\r\n  AvlSingleSelectControlDirective,\r\n  AvlDropdownDirective,\r\n  AvlTimeDirective,\r\n  AvlListDirective,\r\n  AvlUploadDirective,\r\n  AvlContextMenuDirective,\r\n  AvlNumberfieldDirective,\r\n  AvlCheckboxDirective,\r\n  AvlDatatableDirective,\r\n  AvlComboBoxDirective,\r\n  AvlTabBarDirective,\r\n  AvlSnackbarDirective,\r\n  AvlStepProgressDirective,\r\n  AvlIconButtonDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    ...binders\r\n  ],\r\n  exports: [\r\n    ...binders\r\n  ],\r\n  providers: [\r\n    { provide: UPLOAD_SERVICE, useClass: UploadService }\r\n  ]\r\n})\r\nexport class AvlNgBindersModule { }\r\n","import { AvlTranslationService } from '@avl-controls/interfaces/src/avl-translation-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class NgxTranslateTranslationService implements AvlTranslationService {\r\n\r\n  public get language(): string {\r\n    return this.translateService.currentLang;\r\n  }\r\n\r\n  constructor(private translateService: TranslateService) { }\r\n\r\n  public translate(key: string, interpolateParams?: object): Promise<string> {\r\n    return this.translateService.get(key, interpolateParams).toPromise();\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ng-binders\r\n */\r\n\r\nexport * from './lib/controls/avl-breadcrumb.directive';\r\nexport * from './lib/controls/avl-checkbox.directive';\r\nexport * from './lib/controls/avl-combo-box.directive';\r\nexport * from './lib/controls/avl-overflow-menu.directive';\r\nexport * from './lib/controls/avl-search-bar.directive';\r\nexport * from './lib/controls/avl-textarea.directive';\r\nexport * from './lib/controls/avl-date.directive';\r\nexport * from './lib/controls/avl-side-sheet.directive';\r\nexport * from './lib/controls/avl-textfield.directive';\r\nexport * from './lib/controls/avl-timespan.directive';\r\nexport * from './lib/controls/avl-upload.directive';\r\nexport * from './lib/controls/avl-tab-bar.directive';\r\nexport * from './lib/controls/avl-dropdown.directive';\r\nexport * from './lib/controls/avl-time.directive';\r\nexport * from './lib/controls/avl-list.directive';\r\nexport * from './lib/controls/avl-context-menu.directive';\r\nexport * from './lib/controls/avl-numberfield.directive';\r\nexport * from './lib/controls/avl-icon-button.directive';\r\nexport * from './lib/controls/avl-datatable.directive';\r\nexport * from './lib/controls/avl-snackbar.directive';\r\nexport * from './lib/interface/avl-checkable-control.directive';\r\nexport * from './lib/interface/avl-control.directive';\r\nexport * from './lib/interface/avl-interaction-control.directive';\r\nexport * from './lib/interface/avl-multi-select-control.directive';\r\nexport * from './lib/interface/avl-single-select-control.directive';\r\nexport * from './lib/interface/avl-form-control.directive';\r\nexport * from './lib/avl-ng-binders.module';\r\nexport * from './lib/services/variables';\r\nexport * from './lib/services/upload.service';\r\nexport * from './lib/services/ngx-translate-translation.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AvlStepProgressDirective as ɵa} from './lib/controls/avl-step-progress.directive';"],"names":[],"mappings":";;;;;;;;;;IAKA;QACY,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;KAM/D;IAHC,oDAAmB,GAAnB,UAAoB,CAAc;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACtC;IALS;QAAT,MAAM,EAAE;kCAAc,YAAY;+DAA2B;IAG9D;QADC,YAAY,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAClB,WAAW;;qEAEjC;IANU,sBAAsB;QAHlC,SAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAPD;;ACHA;;;;;;;;SAQsB,wCAAwC,CAAS,UAAsB,EAAE,gBAAwB,EACrH,mBAAyC;;;YACzC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gBACrB,IAAM,aAAa,GAAG,UAAU,CAAC,aAA4B,CAAC;gBAC9D,OAAO,aAAa,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,UAAC,CAAc;oBACrE,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC1C,CAAC,CAAC;aACJ,CAAC,CAAA;;;;;;;ICPF,8BAAY,UAAsB;QAFxB,wBAAmB,GAA0B,IAAI,YAAY,EAAE,CAAC;QAGxE,wCAAwC,CAAC,UAAU,EAAE,uBAAuB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;KACzG;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAsB,YAAY;qEAA+B;IAD/D,oBAAoB;QAHhC,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;yCAIwB,UAAU;OAHvB,oBAAoB,CAMhC;IAAD,2BAAC;CAND;;ACJA;;IAOE,6BAAY,UAAsB;QAFxB,mBAAc,GAAsB,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/F;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAiB,YAAY;+DAA2B;IADtD,mBAAmB;QAH/B,SAAS,CAAC;YACT,QAAQ,EAAE,8EAA8E;SACzF,CAAC;yCAIwB,UAAU;OAHvB,mBAAmB,CAM/B;IAAD,0BAAC;CAND;;ACHA;;IAIoD,kDAAmB;IAGrE,wCAAY,UAAsB;QAAlC,YACE,kBAAM,UAAU,CAAC,SAElB;QALS,mBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QAI9D,wCAAwC,CAAC,UAAU,EAAE,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;;KAC7F;;gBAHuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAgB,YAAY;yEAA2B;IADrD,8BAA8B;QAH1C,SAAS,CAAC;YACT,QAAQ,EAAE,6FAA6F;SACxG,CAAC;yCAIwB,UAAU;OAHvB,8BAA8B,CAO1C;IAAD,qCAAC;CAAA,CAPmD,mBAAmB;;;ICG7B,wCAA8B;IAMtE,8BAAoB,UAAsB,EAAU,QAAmB;QAAvE,YACE,kBAAM,UAAU,CAAC,SAGlB;QAJmB,gBAAU,GAAV,UAAU,CAAY;QAAU,cAAQ,GAAR,QAAQ,CAAW;QAL7D,mBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QACtD,iBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QAM5D,wCAAwC,CAAC,UAAU,EAAE,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;QAC5F,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;;KACzF;6BAVU,oBAAoB;IAe/B,sBAAW,0CAAQ;;;aAAnB,UAAoB,KAAc;YAChC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;SAChD;;;OAAA;IAGD,2CAAY,GAAZ,UAAa,CAAc;QACzB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACpD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAGD,mDAAoB,GAApB,UAAqB,CAAc;QACjC,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACrD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAED,yCAAU,GAAV,UAAW,KAAU;QACnB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,OAAO,GAAG,eAAe,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC3E;IAED,+CAAgB,GAAhB,UAAiB,EAAwB;QACvC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5B;;IAGD,gDAAiB,GAAjB,UAAkB,EAAO,KAAK;IAE9B,+CAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;KAClF;IAEO,+CAAgB,GAAxB;QACE,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,KAAK,IAAI,EAAE;KACjG;;IAGD,uCAAQ,GAAR,UAAS,OAAwB;QAC/B,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,aAA+B,CAAC;QACpE,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC,YAAY,EAAE,CAAC;SAC9C;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;gBAvD+B,UAAU;gBAAoB,SAAS;;IAL7D;QAAT,MAAM,EAAE;kCAAgB,YAAY;+DAA2B;IACtD;QAAT,MAAM,EAAE;kCAAc,YAAY;6DAA2B;IAa9D;QADC,KAAK,EAAE;;;wDAGP;IAGD;QADC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC1B,WAAW;;4DAI1B;IAGD;QADC,YAAY,CAAC,wBAAwB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC3B,WAAW;;oEAIlC;IA/BU,oBAAoB;QALhC,SAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAoB,GAAA,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC5G,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,sBAAoB,GAAA,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SAC9F,CAAC;yCAOgC,UAAU,EAAoB,SAAS;OAN5D,oBAAoB,CA+DhC;IAAD,2BAAC;CAAA,CA/DyC,8BAA8B;;;ICFtE,kCAAY,UAAsB;QAFxB,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QAG5D,wCAAwC,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACxF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;iEAA2B;IADnD,wBAAwB;QAHpC,SAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;yCAIwB,UAAU;OAHvB,wBAAwB,CAMpC;IAAD,+BAAC;CAND;;;ICIE,+BAAY,UAAsB;QAHxB,gBAAW,GAAyB,IAAI,YAAY,EAAE,CAAC;QACvD,eAAU,GAA0B,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACxF,wCAAwC,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KACvF;;gBAHuB,UAAU;;IAHxB;QAAT,MAAM,EAAE;kCAAc,YAAY;8DAA8B;IACvD;QAAT,MAAM,EAAE;kCAAa,YAAY;6DAA+B;IAFtD,qBAAqB;QAHjC,SAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;yCAKwB,UAAU;OAJvB,qBAAqB,CAQjC;IAAD,4BAAC;CARD;;;ICIE,8BAAY,UAAsB;QAFxB,gBAAW,GAAyB,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACzF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;6DAA8B;IADtD,oBAAoB;QAHhC,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;yCAIwB,UAAU;OAHvB,oBAAoB,CAMhC;IAAD,2BAAC;CAND;;;ICGE,0BAAY,UAAsB;QAFxB,gBAAW,GAAmC,IAAI,YAAY,EAAE,CAAC;QAGzE,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACzF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;yDAAwC;IADhE,gBAAgB;QAH5B,SAAS,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB,CAAC;yCAIwB,UAAU;OAHvB,gBAAgB,CAM5B;IAAD,uBAAC;CAND;;;ICGE,+BAAY,UAAsB;QAFxB,eAAU,GAA0B,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KACvF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAa,YAAY;6DAA+B;IADtD,qBAAqB;QAHjC,SAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;yCAIwB,UAAU;OAHvB,qBAAqB,CAMjC;IAAD,4BAAC;CAND;;;ICGE,+BAAY,UAAsB;QAFxB,gBAAW,GAAyB,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACzF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;8DAA8B;IADtD,qBAAqB;QAHjC,SAAS,CAAC;YACT,QAAQ,EAAE,eAAe;SAC1B,CAAC;yCAIwB,UAAU;OAHvB,qBAAqB,CAMjC;IAAD,4BAAC;CAND;;;ICGE,8BAAY,UAAsB;QAFxB,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QAG5D,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACzF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;6DAA2B;IADnD,oBAAoB;QAHhC,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;yCAIwB,UAAU;OAHvB,oBAAoB,CAMhC;IAAD,2BAAC;CAND;;ICJa,cAAc,GAAG,IAAI,cAAc,CAAmB,gBAAgB;;;ICajF,4BAAoB,OAAmB,EAAkC,aAA+B;QAApF,YAAO,GAAP,OAAO,CAAY;QAAkC,kBAAa,GAAb,aAAa,CAAkB;QAR9F,mBAAc,GAA0B,IAAI,YAAY,EAAE,CAAC;QAC3D,gBAAW,GAA0B,IAAI,YAAY,EAAE,CAAC;QACxD,eAAU,GAAsB,IAAI,YAAY,EAAE,CAAC;QACnD,gBAAW,GAA0B,IAAI,YAAY,EAAE,CAAC;QACxD,iBAAY,GAA4B,IAAI,YAAY,EAAE,CAAC;QAC3D,iBAAY,GAA0B,IAAI,YAAY,EAAE,CAAC;QACzD,oBAAe,GAAsB,IAAI,YAAY,EAAE,CAAC;KAE0C;IAE5G,qCAAQ,GAAR;QACE,IAAM,OAAO,GAAQ,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QAChD,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;KAC5C;IAGD,kDAAqB,GAArB,UAAsB,CAAc;QAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC1C;IAGD,kDAAqB,GAArB,UAAsB,CAAc;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACvC;IAGD,iDAAoB,GAApB,UAAqB,CAAc;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACvC;IAGD,gDAAmB,GAAnB,UAAoB,CAAc;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAChC;IAGD,gDAAmB,GAAnB,UAAoB,CAAc;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACxC;IAGD,gDAAmB,GAAnB,UAAoB,CAAc;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACxC;IAGD,mDAAsB,GAAtB,UAAuB,CAAc;QACnC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KACrC;;gBAxC4B,UAAU;gDAAG,MAAM,SAAC,cAAc;;IARrD;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAA+B;IAC3D;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAA+B;IACxD;QAAT,MAAM,EAAE;kCAAa,YAAY;0DAA2B;IACnD;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAA+B;IACxD;QAAT,MAAM,EAAE;kCAAe,YAAY;4DAAiC;IAC3D;QAAT,MAAM,EAAE;kCAAe,YAAY;4DAA+B;IACzD;QAAT,MAAM,EAAE;kCAAkB,YAAY;+DAA2B;IAUlE;QADC,YAAY,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACnB,WAAW;;mEAEnC;IAGD;QADC,YAAY,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAChB,WAAW;;mEAEnC;IAGD;QADC,YAAY,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACjB,WAAW;;kEAElC;IAGD;QADC,YAAY,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACjB,WAAW;;iEAEjC;IAGD;QADC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACnB,WAAW;;iEAEjC;IAGD;QADC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACnB,WAAW;;iEAEjC;IAGD;QADC,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACpB,WAAW;;oEAEpC;IAjDU,kBAAkB;QAH9B,SAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;QAU0C,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;yCAAnC,UAAU;OAT5B,kBAAkB,CAkD9B;IAAD,yBAAC;CAlDD;;;ICiBE,4BAAoB,EAAc;QAAlC,iBAKC;QALmB,OAAE,GAAF,EAAE,CAAY;QAlBxB,wBAAmB,GAAyB,IAAI,YAAY,EAAE,CAAC;QAC/D,wBAAmB,GAAsB,IAAI,YAAY,EAAE,CAAC;QAkBpE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACpC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YACrB,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAC,CAAC;KACJ;IAlBa,8CAAiB,GAA/B,UAAgC,EAAO;;;;gBACrC,EAAE,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,UAAC,KAAK;oBAClD,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;wBACrB,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACnD,CAAC,CAAC;iBACJ,CAAC,CAAC;gBACH,EAAE,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,UAAC,KAAK;oBAClD,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;wBACrB,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACnD,CAAC,CAAC;iBACJ,CAAC,CAAC;;;;KACJ;IASD,mCAAM,GAAN,UAAO,KAAa,EAAE,KAAgE;QACpF,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAC9B,KAAK,IAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gBAC9B,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAQ,KAAK,SAAI,IAAM,CAAC,CAAC;aACjD;SACF;KACF;;gBAfuB,UAAU;;IAlBxB;QAAT,MAAM,EAAE;kCAAsB,YAAY;mEAA8B;IAC/D;QAAT,MAAM,EAAE;kCAAsB,YAAY;mEAA2B;IAF3D,kBAAkB;QAH9B,SAAS,CAAC;YACT,QAAQ,EAAE,aAAa;SACxB,CAAC;yCAoBwB,UAAU;OAnBvB,kBAAkB,CAmC9B;IAAD,yBAAC;CAnCD;;;ICIE,8BAAY,UAAsB;QAFxB,gBAAW,GAAyB,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACxF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;6DAA8B;IADtD,oBAAoB;QAHhC,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;yCAIwB,UAAU;OAHvB,oBAAoB,CAMhC;IAAD,2BAAC;CAND;;;ICIE,0BAAY,UAAsB;QAFxB,gBAAW,GAAyB,IAAI,YAAY,EAAE,CAAC;QAG/D,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACzF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;yDAA8B;IADtD,gBAAgB;QAH5B,SAAS,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB,CAAC;yCAIwB,UAAU;OAHvB,gBAAgB,CAM5B;IAAD,uBAAC;CAND;;;ICIsC,oCAA8B;IAgBlE,0BAAoB,UAAsB,EAAU,QAAmB;QAAvE,YACE,kBAAM,UAAU,CAAC,SAElB;QAHmB,gBAAU,GAAV,UAAU,CAAY;QAAU,cAAQ,GAAR,QAAQ,CAAW;QAf7D,mBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QACtD,6BAAuB,GAAsB,IAAI,YAAY,EAAE,CAAC;QAChE,0BAAoB,GAAsB,IAAI,YAAY,EAAE,CAAC;QAC7D,sBAAgB,GAAsB,IAAI,YAAY,EAAE,CAAC;QACzD,kBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;QAa7D,wCAAwC,CAAC,UAAU,EAAE,iBAAiB,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;;KAC7F;yBAnBU,gBAAgB;IAU3B,sBAAW,sCAAQ;;;aAAnB,UAAoB,KAAc;YAChC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;SAChD;;;OAAA;IAUD,+CAAoB,GAApB,UAAqB,CAAc;QACjC,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YAC5C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAGD,gDAAqB,GAArB,UAAsB,CAAc;QAClC,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAC3C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAGD,wDAA6B,GAA7B,UAA8B,CAAc;QAC1C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAC7C;IAGD,sDAA2B,GAA3B,UAA4B,CAAc;QACxC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAC1C;IAGD,qDAA0B,GAA1B,UAA2B,CAAc;QACvC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC5C;IAGD,+CAAoB,GAApB,UAAqB,CAAc;QACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAClC;IAGD,qCAAU,GAAV,UAAW,KAAU;QACnB,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,gBAAgB,GAAG,eAAe,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC3E;IAED,2CAAgB,GAAhB,UAAiB,EAAwB;QACvC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5B;;IAGD,4CAAiB,GAAjB,UAAkB,EAAO,KAAK;IAE9B,2CAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;KAClF;IAEO,kCAAO,GAAf;QACE,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,KAAK,IAAI,EAAE;KACxF;;IAGD,mCAAQ,GAAR,UAAS,OAAwB;QAC/B,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,aAA+B,CAAC;QACpE,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC,YAAY,EAAE,CAAC;SAC9C;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;gBApE+B,UAAU;gBAAoB,SAAS;;IAf7D;QAAT,MAAM,EAAE;kCAAgB,YAAY;2DAA2B;IACtD;QAAT,MAAM,EAAE;kCAA0B,YAAY;qEAA2B;IAChE;QAAT,MAAM,EAAE;kCAAuB,YAAY;kEAA2B;IAC7D;QAAT,MAAM,EAAE;kCAAmB,YAAY;8DAA2B;IACzD;QAAT,MAAM,EAAE;kCAAe,YAAY;0DAA2B;IAK/D;QADC,KAAK,EAAE;;;oDAGP;IAUD;QADC,YAAY,CAAC,wBAAwB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC3B,WAAW;;gEAIlC;IAGD;QADC,YAAY,CAAC,yBAAyB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC3B,WAAW;;iEAInC;IAGD;QADC,YAAY,CAAC,4BAA4B,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACtB,WAAW;;yEAE3C;IAGD;QADC,YAAY,CAAC,wBAAwB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACpB,WAAW;;uEAEzC;IAGD;QADC,YAAY,CAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACjB,WAAW;;sEAExC;IAGD;QADC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAClB,WAAW;;gEAElC;IArDU,gBAAgB;QAL5B,SAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,kBAAgB,GAAA,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;gBACxG,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,kBAAgB,GAAA,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SAC1F,CAAC;yCAiBgC,UAAU,EAAoB,SAAS;OAhB5D,gBAAgB,CAsF5B;IAAD,uBAAC;CAAA,CAtFqC,8BAA8B;;;ICNpE;QACY,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;KAM/D;IAHC,qDAAmB,GAAnB,UAAoB,CAAc;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACvC;IALS;QAAT,MAAM,EAAE;kCAAc,YAAY;gEAA2B;IAG9D;QADC,YAAY,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAClB,WAAW;;sEAEjC;IANU,uBAAuB;QAHnC,SAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;SAC7B,CAAC;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAPD;;;ICKE,iCAAY,UAAsB;QAFxB,gBAAW,GAA2B,IAAI,YAAY,EAAE,CAAC;QAGjE,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACzF;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAc,YAAY;gEAAgC;IADxD,uBAAuB;QAHnC,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;SAC5B,CAAC;yCAIwB,UAAU;OAHvB,uBAAuB,CAMnC;IAAD,8BAAC;CAND;;;ICIE,gCAAY,UAAsB;QAHxB,gBAAW,GAA0B,IAAI,YAAY,EAAE,CAAC;QACxD,qBAAgB,GAAyB,IAAI,YAAY,EAAE,CAAC;QAGpE,wCAAwC,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACxF,wCAAwC,CAAC,UAAU,EAAE,qBAAqB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACpG;;gBAHuB,UAAU;;IAHxB;QAAT,MAAM,EAAE;kCAAc,YAAY;+DAA+B;IACxD;QAAT,MAAM,EAAE;kCAAmB,YAAY;oEAA8B;IAF3D,sBAAsB;QAHlC,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;SAC5B,CAAC;yCAKwB,UAAU;OAJvB,sBAAsB,CAQlC;IAAD,6BAAC;CARD;;;ICME,+BAAY,UAAsB;QANxB,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QACpD,0BAAqB,GAAsB,IAAI,YAAY,EAAE,CAAC;QAC9D,cAAS,GAAsB,IAAI,YAAY,EAAE,CAAC;QAClD,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;QAC1D,uBAAkB,GAAyB,IAAI,YAAY,EAAE,CAAC;QAGtE,wCAAwC,CAAC,UAAU,EAAE,mBAAmB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/F,wCAAwC,CAAC,UAAU,EAAE,uBAAuB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACxG;IAGD,mDAAmB,GAAnB,UAAoB,CAAc;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KACjC;IAGD,6DAA6B,GAA7B,UAA8B,CAAc;QAC1C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAC3C;IAGD,iDAAiB,GAAjB,UAAkB,CAAc;QAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAC/B;;gBAlBuB,UAAU;;IANxB;QAAT,MAAM,EAAE;kCAAc,YAAY;8DAA2B;IACpD;QAAT,MAAM,EAAE;kCAAwB,YAAY;wEAA2B;IAC9D;QAAT,MAAM,EAAE;kCAAY,YAAY;4DAA2B;IAClD;QAAT,MAAM,EAAE;kCAAiB,YAAY;iEAA8B;IAC1D;QAAT,MAAM,EAAE;kCAAqB,YAAY;qEAA8B;IAQxE;QADC,YAAY,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAClB,WAAW;;oEAEjC;IAGD;QADC,YAAY,CAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACpB,WAAW;;8EAE3C;IAGD;QADC,YAAY,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAClB,WAAW;;kEAE/B;IAzBU,qBAAqB;QAHjC,SAAS,CAAC;YACT,QAAQ,EAAE,eAAe;SAC1B,CAAC;yCAQwB,UAAU;OAPvB,qBAAqB,CA0BjC;IAAD,4BAAC;CA1BD;;;ICDA;QACY,kBAAa,GAA0B,IAAI,YAAY,EAAE,CAAC;QAC1D,oBAAe,GAA0B,IAAI,YAAY,EAAE,CAAC;KAWvE;IARC,mDAAoB,GAApB,UAAqB,CAAc;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACzC;IAGD,qDAAsB,GAAtB,UAAuB,CAAc;QACnC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC3C;IAXS;QAAT,MAAM,EAAE;kCAAgB,YAAY;+DAA+B;IAC1D;QAAT,MAAM,EAAE;kCAAkB,YAAY;iEAA+B;IAGtE;QADC,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACnB,WAAW;;oEAElC;IAGD;QADC,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACpB,WAAW;;sEAEpC;IAZU,oBAAoB;QAHhC,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;OACW,oBAAoB,CAahC;IAAD,2BAAC;CAbD;;ACFA;;IAOE,sCAAY,UAAsB;QAFxB,kBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QAG9D,wCAAwC,CAAC,UAAU,EAAE,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC7F;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAgB,YAAY;uEAA2B;IADrD,4BAA4B;QAHxC,SAAS,CAAC;YACT,QAAQ,EAAE,4DAA4D;SACvE,CAAC;yCAIwB,UAAU;OAHvB,4BAA4B,CAMxC;IAAD,mCAAC;CAND;;ACJA;;IAQE,wCAAY,UAAsB;QAHxB,0BAAqB,GAAgC,IAAI,YAAY,EAAE,CAAC;QACxE,yBAAoB,GAA6B,IAAI,YAAY,EAAE,CAAC;QAG5E,wCAAwC,CAAC,UAAU,EAAE,0BAA0B,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC7G,wCAAwC,CAAC,UAAU,EAAE,yBAAyB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;KAC5G;;gBAHuB,UAAU;;IAHxB;QAAT,MAAM,EAAE;kCAAwB,YAAY;iFAAqC;IACxE;QAAT,MAAM,EAAE;kCAAuB,YAAY;gFAAkC;IAFnE,8BAA8B;QAH1C,SAAS,CAAC;YACT,QAAQ,EAAE,sDAAsD;SACjE,CAAC;yCAKwB,UAAU;OAJvB,8BAA8B,CAQ1C;IAAD,qCAAC;CARD;;ACJA;;IAQE,yCAAY,UAAsB;QAHxB,wBAAmB,GAAyB,IAAI,YAAY,EAAE,CAAC;QAC/D,wBAAmB,GAAsB,IAAI,YAAY,EAAE,CAAC;QAGpE,wCAAwC,CAAC,UAAU,EAAE,wBAAwB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACzG,wCAAwC,CAAC,UAAU,EAAE,wBAAwB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;KAC1G;;gBAHuB,UAAU;;IAHxB;QAAT,MAAM,EAAE;kCAAsB,YAAY;gFAA8B;IAC/D;QAAT,MAAM,EAAE;kCAAsB,YAAY;gFAA2B;IAF3D,+BAA+B;QAH3C,SAAS,CAAC;YACT,QAAQ,EAAE,kGAAkG;SAC7G,CAAC;yCAKwB,UAAU;OAJvB,+BAA+B,CAQ3C;IAAD,sCAAC;CARD;;ACFA;AACA,IAAM,oBAAoB,GAAG;;IAE3B,cAAc,EAAE,SAAS;IACzB,UAAU,EAAE,OAAO;IACnB,cAAc,EAAE,eAAe;IAC/B,UAAU,EAAE,OAAO;IACnB,iBAAiB,EAAE,OAAO;IAC1B,iBAAiB,EAAE,eAAe;IAClC,YAAY,EAAE,OAAO;IACrB,cAAc,EAAE,OAAO;IACvB,eAAe,EAAE,OAAO;IACxB,cAAc,EAAE,OAAO;IACvB,eAAe,EAAG,eAAe;IACjC,gBAAgB,EAAE,gBAAgB;IAClC,YAAY,EAAE,OAAO;IACrB,gBAAgB,EAAE,OAAO;IACzB,iBAAiB,EAAE,SAAS;IAC5B,YAAY,EAAE,SAAS;CACxB,CAAC;AAEF;;IAM6C,2CAA8B;IAqBzE,iCAAsB,UAAsB,EAAU,QAAmB;QAAzE,YACE,kBAAM,UAAU,CAAC,SAGlB;QAJqB,gBAAU,GAAV,UAAU,CAAY;QAAU,cAAQ,GAAR,QAAQ,CAAW;QAbjE,6BAAuB,GAAG,KAAK,CAAC;;;;QA+E9B,mBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QAhE9D,IAAM,UAAU,GAAI,KAAI,CAAC,UAAU,CAAC,aAA6B,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACxF,KAAI,CAAC,iBAAiB,GAAG,oBAAoB,CAAC,UAAU,CAAC,CAAC;;KAC3D;gCAzBU,uBAAuB;IAalC,sBAAW,6CAAQ;;;aAAnB,UAAoB,KAAU;YAC5B,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;gBAC9B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;aAChD;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC;aACxD;SACF;;;OAAA;IAQD,0CAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,4BAA4B;YAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAU,EAAE,UAAC,CAAc;gBACxH,IAAI,KAAI,CAAC,gBAAgB,EAAE;oBACzB,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBACvC;aACF,CAAC,CAAC;KACN;IAED,6CAAW,GAAX;QACE,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACrC,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACrC;KACF;IAED,4CAAU,GAAV,UAAW,KAAU;;;;QAInB,IAAI,CAAC,IAAI,CAAC,uBAAuB,IAAI,KAAK,IAAI,IAAI,EAAE;YAClD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACpC,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;KACrC;IAED,kDAAgB,GAAhB,UAAiB,EAAwB;QACvC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5B;IAED,mDAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;IAED,kDAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;KAClF;IAGD,wCAAM,GAAN;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KACF;IAGD,kDAAgB,GAAhB,UAAiB,OAAO;QACtB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KACF;IAEO,6CAAW,GAAnB,UAAoB,eAAuB;QACzC,OAAO,eAAe,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;KAC1E;IAQD,gDAAc,GAAd,UAAe,CAAc;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAExC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;SAC9E;KACF;;;IAID,0CAAQ,GAAR,UAAS,OAAwB;QAC/B,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,aAA+B,CAAC;QACpE,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC,YAAY,EAAE,CAAC;SAC9C;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;gBAtFiC,UAAU;gBAAoB,SAAS;;IARzE;QADC,KAAK,EAAE;;;2DAOP;IAgDD;QADC,YAAY,CAAC,MAAM,CAAC;;;;yDAKpB;IAGD;QADC,YAAY,CAAC,iBAAiB,EAAE,CAAC,qBAAqB,CAAC,CAAC;;;;mEAKxD;IASS;QAAT,MAAM,EAAE;kCAAgB,YAAY;kEAA2B;IAGhE;QADC,YAAY,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC1B,WAAW;;iEAM5B;IAhGU,uBAAuB;QALnC,SAAS,CAAC;YACT,QAAQ,EAAE,kNAAkN;YAC5N,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAuB,GAAA,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;gBAC/G,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAuB,GAAA,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACjG,CAAC;yCAsBkC,UAAU,EAAoB,SAAS;OArB9D,uBAAuB,CA6GnC;IAAD,8BAAC;CAAA,CA7G4C,8BAA8B;;;ICvBzE,uBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;IAE/C,oCAAY,GAAZ,UAAa,GAAW;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;KACvE;IAED,kCAAU,GAAV,UAAW,IAAa,EAAE,MAAc,EAAE,gBAA6D,EAAE,gBAAiD,EAAE,YAA4D;QAEtN,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAM,SAAS,GAAoB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAyB,MAAM,EAAE,QAAQ,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAE;aAC5I,IAAI,CAAC,GAAG,CAAC,UAAA,KAAK;YACb,IAAG,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC,cAAc,IAAI,gBAAgB,EAAE;gBAClE,gBAAgB,CAAC,KAAK,CAAC,CAAC;aACzB;YACD,IAAG,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC,QAAQ,EAAE;gBACxC,IAAG,gBAAgB,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE;oBACnE,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC1C;qBACI,IAAG,gBAAgB;oBAAE,gBAAgB,EAAE,CAAC;aAC9C;SACF,CAAC,EAAE,UAAU,CAAE,UAAC,GAAsB,EAAE,MAAM;YAC7C,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,YAAY,KAAK,GAAoB,GAAG,CAAC,KAAK,CAAC,MAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC;YACtG,IAAG,YAAY;gBAAE,YAAY,CAAC;oBAC5B,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;YACH,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;SAC7B,CAAC,CAAC,CAAC;QACJ,IAAM,YAAY,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;QAC3C,OAAO,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACtD;;gBA/B+B,UAAU;;IAD/B,aAAa;QADzB,UAAU,EAAE;yCAEqB,UAAU;OAD/B,aAAa,CAiCzB;IAAD,oBAAC;CAjCD;;;ICEE,kCAAY,UAAsB;QAFxB,iBAAY,GAA0B,IAAI,YAAY,EAAE,CAAC;QAGjE,wCAAwC,CAAC,UAAU,EAAE,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3F;;gBAFuB,UAAU;;IAFxB;QAAT,MAAM,EAAE;kCAAe,YAAY;kEAA+B;IADxD,wBAAwB;QAHpC,SAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;yCAIwB,UAAU;OAHvB,wBAAwB,CAMpC;IAAD,+BAAC;CAND;;AC0BA,IAAM,OAAO,GAAG;IACd,sBAAsB;IACtB,wBAAwB;IACxB,qBAAqB;IACrB,oBAAoB;IACpB,gBAAgB;IAChB,qBAAqB;IACrB,qBAAqB;IACrB,oBAAoB;IACpB,4BAA4B;IAC5B,mBAAmB;IACnB,uBAAuB;IACvB,8BAA8B;IAC9B,8BAA8B;IAC9B,+BAA+B;IAC/B,oBAAoB;IACpB,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;IAClB,uBAAuB;IACvB,uBAAuB;IACvB,oBAAoB;IACpB,qBAAqB;IACrB,oBAAoB;IACpB,kBAAkB;IAClB,oBAAoB;IACpB,wBAAwB;IACxB,sBAAsB;CACvB,CAAC;;IAiBF;KAAmC;IAAtB,kBAAkB;QAf9B,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,YAAY;gBACZ,WAAW;aACZ;YACD,YAAY,WACP,OAAO,CACX;YACD,OAAO,WACF,OAAO,CACX;YACD,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,aAAa,EAAE;aACrD;SACF,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAnC;;;ICnEE,wCAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAK;IAJ3D,sBAAW,oDAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;SAC1C;;;OAAA;IAIM,kDAAS,GAAhB,UAAiB,GAAW,EAAE,iBAA0B;QACtD,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,SAAS,EAAE,CAAC;KACtE;;gBAJqC,gBAAgB;;IAN3C,8BAA8B;QAD1C,UAAU,EAAE;yCAO2B,gBAAgB;OAN3C,8BAA8B,CAW1C;IAAD,qCAAC;CAXD;;ACLA;;;;ACAA;;;;;;"}