import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';
import { AvlInteractionControlDirective } from '../interface/avl-interaction-control.directive';
export declare class AvlComboBoxDirective extends AvlInteractionControlDirective implements ControlValueAccessor, Validator {
    private elementRef;
    private renderer;
    invalidChange: EventEmitter<any>;
    valueChange: EventEmitter<any>;
    private onChangeCallback;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    set readonly(value: boolean);
    valueChanged(e: CustomEvent): void;
    selectedValueChanged(e: CustomEvent): void;
    writeValue(value: any): void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    private isAllowNewValues;
    validate(control: AbstractControl): ValidationErrors | null;
}
