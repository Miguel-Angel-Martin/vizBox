import { EventEmitter, OnInit, OnDestroy, ElementRef, Renderer2 } from '@angular/core';
import { AvlInteractionControlDirective } from './avl-interaction-control.directive';
import { ControlValueAccessor, Validator, AbstractControl, ValidationErrors } from '@angular/forms';
/** Directive for controls implementing [AvlFormControl]. */
export declare class AvlFormControlDirective extends AvlInteractionControlDirective implements OnInit, OnDestroy, ControlValueAccessor, Validator {
    protected elementRef: ElementRef;
    private renderer;
    private valuePropertyName;
    private onTouchedCallback;
    private onChangeCallback;
    private unlistenPropertyChangedEvent;
    private writeValueAlreadyCalled;
    set readonly(value: any);
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    writeValue(value: any): void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onBlur(): void;
    onFocusedChanged(focused: any): void;
    private toKebabCase;
    invalidChange: EventEmitter<any>;
    invalidChanged(e: CustomEvent): void;
    validate(control: AbstractControl): ValidationErrors | null;
}
