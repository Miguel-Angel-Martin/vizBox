import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-translate/core';
let NgxTranslateTranslationService = class NgxTranslateTranslationService {
    constructor(translateService) {
        this.translateService = translateService;
    }
    get language() {
        return this.translateService.currentLang;
    }
    translate(key, interpolateParams) {
        return this.translateService.get(key, interpolateParams).toPromise();
    }
};
NgxTranslateTranslationService.ɵfac = function NgxTranslateTranslationService_Factory(t) { return new (t || NgxTranslateTranslationService)(ɵngcc0.ɵɵinject(ɵngcc1.TranslateService)); };
NgxTranslateTranslationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxTranslateTranslationService, factory: NgxTranslateTranslationService.ɵfac });
NgxTranslateTranslationService.ctorParameters = () => [
    { type: TranslateService }
];
NgxTranslateTranslationService = __decorate([ __metadata("design:paramtypes", [TranslateService])
], NgxTranslateTranslationService);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxTranslateTranslationService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.TranslateService }]; }, null); })();
export { NgxTranslateTranslationService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS10cmFuc2xhdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1jb250cm9scy9uZy1iaW5kZXJzL2xpYi9zZXJ2aWNlcy9uZ3gtdHJhbnNsYXRlLXRyYW5zbGF0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQUd2RCxJQUFhLDhCQUE4QixHQUEzQyxNQUFhLDhCQUE4QjtBQUFHLElBTTVDLFlBQW9CLGdCQUFrQztBQUFJLFFBQXRDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFBQyxJQUFHLENBQUM7QUFDN0QsSUFMRSxJQUFXLFFBQVE7QUFBSyxRQUN0QixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUM7QUFDN0MsSUFBRSxDQUFDO0FBQ0gsSUFHUyxTQUFTLENBQUMsR0FBVyxFQUFFLGlCQUEwQjtBQUFJLFFBQzFELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztBQUN6RSxJQUFFLENBQUM7QUFDSCxDQUFDOzswSkFBQTtBQUNEO0FBQXdELFlBTmhCLGdCQUFnQjtBQUFHO0FBTjlDLDhCQUE4QixvQkFEMUMsVUFBVSxFQUFFLGpCQUNULGtDQU1vQyxnQkFBZ0I7QUFBRyxHQU45Qyw4QkFBOEIsQ0FXMUM7OztpRkFDRDs7QUFoQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUxBLEFBQUEsQUFOQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQU5BLEFBQUEsQUFXQSxBQVhBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdmxUcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICdAYXZsLWNvbnRyb2xzL2ludGVyZmFjZXMvc3JjL2F2bC10cmFuc2xhdGlvbi1zZXJ2aWNlJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBOZ3hUcmFuc2xhdGVUcmFuc2xhdGlvblNlcnZpY2UgaW1wbGVtZW50cyBBdmxUcmFuc2xhdGlvblNlcnZpY2Uge1xyXG5cclxuICBwdWJsaWMgZ2V0IGxhbmd1YWdlKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmN1cnJlbnRMYW5nO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0cmFuc2xhdGVTZXJ2aWNlOiBUcmFuc2xhdGVTZXJ2aWNlKSB7IH1cclxuXHJcbiAgcHVibGljIHRyYW5zbGF0ZShrZXk6IHN0cmluZywgaW50ZXJwb2xhdGVQYXJhbXM/OiBvYmplY3QpOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlU2VydmljZS5nZXQoa2V5LCBpbnRlcnBvbGF0ZVBhcmFtcykudG9Qcm9taXNlKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==