import { Directive, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import { AvlControlDirective } from './avl-control.directive';
import * as i0 from "@angular/core";
/** Directive for controls implementing [AvlInteractionControl]. */
export class AvlInteractionControlDirective extends AvlControlDirective {
    constructor(elementRef) {
        super(elementRef);
        this.focusedChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'focused-changed', this.focusedChange);
    }
}
AvlInteractionControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: AvlInteractionControlDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
AvlInteractionControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.4", type: AvlInteractionControlDirective, selector: "avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar", outputs: { focusedChange: "focusedChange" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: AvlInteractionControlDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'avl-button,avl-icon-button,avl-item,avl-search-bar,avl-radio-button,avl-upload,avl-snackbar'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { focusedChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWludGVyYWN0aW9uLWNvbnRyb2wuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYmluZGVycy9zcmMvbGliL2ludGVyZmFjZS9hdmwtaW50ZXJhY3Rpb24tY29udHJvbC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOztBQUU5RCxtRUFBbUU7QUFJbkUsTUFBTSxPQUFPLDhCQUErQixTQUFRLG1CQUFtQjtJQUdyRSxZQUFZLFVBQXNCO1FBQ2hDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUhWLGtCQUFhLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFJOUQsd0NBQXdDLENBQUMsVUFBVSxFQUFFLGlCQUFpQixFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUM5RixDQUFDOzsySEFOVSw4QkFBOEI7K0dBQTlCLDhCQUE4QjsyRkFBOUIsOEJBQThCO2tCQUgxQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw2RkFBNkY7aUJBQ3hHO2lHQUVXLGFBQWE7c0JBQXRCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMgfSBmcm9tICcuLi9iaW5kaW5nLXV0aWxzJztcclxuaW1wb3J0IHsgQXZsQ29udHJvbERpcmVjdGl2ZSB9IGZyb20gJy4vYXZsLWNvbnRyb2wuZGlyZWN0aXZlJztcclxuXHJcbi8qKiBEaXJlY3RpdmUgZm9yIGNvbnRyb2xzIGltcGxlbWVudGluZyBbQXZsSW50ZXJhY3Rpb25Db250cm9sXS4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtYnV0dG9uLGF2bC1pY29uLWJ1dHRvbixhdmwtaXRlbSxhdmwtc2VhcmNoLWJhcixhdmwtcmFkaW8tYnV0dG9uLGF2bC11cGxvYWQsYXZsLXNuYWNrYmFyJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsSW50ZXJhY3Rpb25Db250cm9sRGlyZWN0aXZlIGV4dGVuZHMgQXZsQ29udHJvbERpcmVjdGl2ZSB7XHJcbiAgQE91dHB1dCgpIGZvY3VzZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBzdXBlcihlbGVtZW50UmVmKTtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ2ZvY3VzZWQtY2hhbmdlZCcsIHRoaXMuZm9jdXNlZENoYW5nZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==