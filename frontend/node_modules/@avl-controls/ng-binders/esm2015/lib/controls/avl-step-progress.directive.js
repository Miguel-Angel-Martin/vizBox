import { Directive, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as i0 from "@angular/core";
export class AvlStepProgressDirective {
    constructor(elementRef) {
        this.activeChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'active-changed', this.activeChange);
    }
}
AvlStepProgressDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: AvlStepProgressDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
AvlStepProgressDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.4", type: AvlStepProgressDirective, selector: "avl-step-progress", outputs: { activeChange: "activeChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: AvlStepProgressDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'avl-step-progress'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { activeChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXN0ZXAtcHJvZ3Jlc3MuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYmluZGVycy9zcmMvbGliL2NvbnRyb2xzL2F2bC1zdGVwLXByb2dyZXNzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBTTVFLE1BQU0sT0FBTyx3QkFBd0I7SUFHbkMsWUFBWSxVQUFzQjtRQUZ4QixpQkFBWSxHQUEwQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBR2pFLHdDQUF3QyxDQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDNUYsQ0FBQzs7cUhBTFUsd0JBQXdCO3lHQUF4Qix3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFIcEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2lCQUM5QjtpR0FFVyxZQUFZO3NCQUFyQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzIH0gZnJvbSAnLi4vYmluZGluZy11dGlscyc7XHJcblxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtc3RlcC1wcm9ncmVzcydcclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bFN0ZXBQcm9ncmVzc0RpcmVjdGl2ZSB7XHJcbiAgQE91dHB1dCgpIGFjdGl2ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdhY3RpdmUtY2hhbmdlZCcsIHRoaXMuYWN0aXZlQ2hhbmdlKTtcclxuICB9XHJcbn1cclxuIl19