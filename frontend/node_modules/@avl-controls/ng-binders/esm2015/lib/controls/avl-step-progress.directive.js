import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
let AvlStepProgressDirective = class AvlStepProgressDirective {
    constructor(elementRef) {
        this.activeChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'active-changed', this.activeChange);
    }
};
AvlStepProgressDirective.ɵfac = function AvlStepProgressDirective_Factory(t) { return new (t || AvlStepProgressDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlStepProgressDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlStepProgressDirective, selectors: [["avl-step-progress"]], outputs: { activeChange: "activeChange" } });
AvlStepProgressDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlStepProgressDirective.prototype, "activeChange", void 0);
AvlStepProgressDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], AvlStepProgressDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlStepProgressDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-step-progress'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { activeChange: [{
            type: Output
        }] }); })();
export { AvlStepProgressDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXN0ZXAtcHJvZ3Jlc3MuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1jb250cm9scy9uZy1iaW5kZXJzL2xpYi9jb250cm9scy9hdmwtc3RlcC1wcm9ncmVzcy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBTTVFLElBQWEsd0JBQXdCLEdBQXJDLE1BQWEsd0JBQXdCO0FBQ3JDLElBRUUsWUFBWSxVQUFzQjtBQUNwQyxRQUhZLGlCQUFZLEdBQTBCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDckUsUUFFSSx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzlGLElBQUUsQ0FBQztBQUNILENBQUM7OzRLQUFBO0FBQ0Q7QUFBa0QsWUFKeEIsVUFBVTtBQUFHO0FBRjNCO0FBQWEsSUFBdEIsTUFBTSxFQUFFO0FBQUUsOEJBQWEsWUFBWTtBQUFFLDhEQUE2QjtBQUR4RCx3QkFBd0Isb0JBSHBDLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxuQ0FFUixrQ0FHc0IsVUFBVTtPQUxMLE1BQzlCLENBQUMsZEFJcUMsR0FIMUIsd0JBQXdCLENBTXBDOzs7Ozs7OztvQkFDRDs7QUFkQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFIQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFEQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUhBLEFBQUEsQUFNQSxBQU5BLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMgfSBmcm9tICcuLi9iaW5kaW5nLXV0aWxzJztcclxuXHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ2F2bC1zdGVwLXByb2dyZXNzJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsU3RlcFByb2dyZXNzRGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgYWN0aXZlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ2FjdGl2ZS1jaGFuZ2VkJywgdGhpcy5hY3RpdmVDaGFuZ2UpO1xyXG4gIH1cclxufVxyXG4iXX0=