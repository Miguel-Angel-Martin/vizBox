import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
let AvlOverflowMenuDirective = class AvlOverflowMenuDirective {
    constructor(elementRef) {
        this.itemClicked = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'item-clicked', this.itemClicked);
    }
};
AvlOverflowMenuDirective.ɵfac = function AvlOverflowMenuDirective_Factory(t) { return new (t || AvlOverflowMenuDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlOverflowMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlOverflowMenuDirective, selectors: [["avl-overflow-menu"]], outputs: { itemClicked: "itemClicked" } });
AvlOverflowMenuDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlOverflowMenuDirective.prototype, "itemClicked", void 0);
AvlOverflowMenuDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], AvlOverflowMenuDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlOverflowMenuDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-overflow-menu'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { itemClicked: [{
            type: Output
        }] }); })();
export { AvlOverflowMenuDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLW92ZXJmbG93LW1lbnUuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1jb250cm9scy9uZy1iaW5kZXJzL2xpYi9jb250cm9scy9hdmwtb3ZlcmZsb3ctbWVudS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBSzVFLElBQWEsd0JBQXdCLEdBQXJDLE1BQWEsd0JBQXdCO0FBQ3JDLElBRUUsWUFBWSxVQUFzQjtBQUNwQyxRQUhZLGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7QUFDaEUsUUFFSSx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMzRixJQUFFLENBQUM7QUFDSCxDQUFDOzswS0FBQTtBQUNEO0FBQWtELFlBSnhCLFVBQVU7QUFBRztBQUYzQjtBQUFhLElBQXRCLE1BQU0sRUFBRTtBQUFFLDhCQUFZLFlBQVk7QUFBRSw2REFBeUI7QUFEbkQsd0JBQXdCLG9CQUhwQyxTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUUsbkNBRVIsa0NBR3NCLFVBQVU7T0FMTCxNQUM5QixDQUFDLGRBSXFDLEdBSDFCLHdCQUF3QixDQU1wQzs7Ozs7Ozs7b0JBQ0Q7O0FBYkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSEEsQUFBQSxBQUZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBREEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBQUEsQUFIQSxBQUFBLEFBTUEsQUFOQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzIH0gZnJvbSAnLi4vYmluZGluZy11dGlscyc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ2F2bC1vdmVyZmxvdy1tZW51J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsT3ZlcmZsb3dNZW51RGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgaXRlbUNsaWNrZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdpdGVtLWNsaWNrZWQnLCB0aGlzLml0ZW1DbGlja2VkKTtcclxuICB9XHJcbn1cclxuIl19