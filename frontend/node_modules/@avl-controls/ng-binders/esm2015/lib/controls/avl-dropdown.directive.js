import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
let AvlDropdownDirective = class AvlDropdownDirective {
    constructor(elementRef) {
        this.openChanged = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'open-changed', this.openChanged);
    }
};
AvlDropdownDirective.ɵfac = function AvlDropdownDirective_Factory(t) { return new (t || AvlDropdownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlDropdownDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlDropdownDirective, selectors: [["avl-dropdown"]], outputs: { openChanged: "openChanged" } });
AvlDropdownDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlDropdownDirective.prototype, "openChanged", void 0);
AvlDropdownDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], AvlDropdownDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlDropdownDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-dropdown'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { openChanged: [{
            type: Output
        }] }); })();
export { AvlDropdownDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRyb3Bkb3duLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsibmc6L0BhdmwtY29udHJvbHMvbmctYmluZGVycy9saWIvY29udHJvbHMvYXZsLWRyb3Bkb3duLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsd0NBQXdDLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFLNUUsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7QUFDakMsSUFFRSxZQUFZLFVBQXNCO0FBQ3BDLFFBSFksZ0JBQVcsR0FBeUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUNuRSxRQUVJLHdDQUF3QyxDQUFDLFVBQVUsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNGLElBQUUsQ0FBQztBQUNILENBQUM7OzZKQUFBO0FBQ0Q7QUFBOEMsWUFKcEIsVUFBVTtBQUFHO0FBRjNCO0FBQWEsSUFBdEIsTUFBTSxFQUFFO0FBQUUsOEJBQVksWUFBWTtBQUFFLHlEQUE0QjtBQUR0RCxvQkFBb0Isb0JBSGhDLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxuQ0FFUixrQ0FHc0IsVUFBVTtFQUxWLE1BQ3pCLENBQUMsVEFJcUMsR0FIMUIsb0JBQW9CLENBTWhDOzs7Ozs7OztvQkFDRDs7QUFiQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFIQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFEQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUhBLEFBQUEsQUFNQSxBQU5BLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMgfSBmcm9tICcuLi9iaW5kaW5nLXV0aWxzJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnYXZsLWRyb3Bkb3duJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsRHJvcGRvd25EaXJlY3RpdmUge1xyXG4gIEBPdXRwdXQoKSBvcGVuQ2hhbmdlZDogRXZlbnRFbWl0dGVyPHN0cmluZz4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ29wZW4tY2hhbmdlZCcsIHRoaXMub3BlbkNoYW5nZWQpO1xyXG4gIH1cclxufVxyXG4iXX0=