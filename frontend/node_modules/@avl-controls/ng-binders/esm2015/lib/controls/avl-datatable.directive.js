import { Directive, EventEmitter, HostListener, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as i0 from "@angular/core";
export class AvlDatatableDirective {
    constructor(elementRef) {
        this.buttonClick = new EventEmitter();
        this.overflowMenuItemClick = new EventEmitter();
        this.linkClick = new EventEmitter();
        this.pageSizeChange = new EventEmitter();
        this.selectedPageChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'page-size-changed', this.pageSizeChange);
        addEventListenerForEmittingChangedEvents(elementRef, 'selected-page-changed', this.selectedPageChange);
    }
    buttonClickListener(e) {
        this.buttonClick.emit(e.detail);
    }
    overflowMenuItemClickListener(e) {
        this.overflowMenuItemClick.emit(e.detail);
    }
    linkClickListener(e) {
        this.linkClick.emit(e.detail);
    }
}
AvlDatatableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: AvlDatatableDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
AvlDatatableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.4", type: AvlDatatableDirective, selector: "avl-datatable", outputs: { buttonClick: "buttonClick", overflowMenuItemClick: "overflowMenuItemClick", linkClick: "linkClick", pageSizeChange: "pageSizeChange", selectedPageChange: "selectedPageChange" }, host: { listeners: { "button-click": "buttonClickListener($event)", "overflow-menu-item-click": "overflowMenuItemClickListener($event)", "link-click": "linkClickListener($event)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: AvlDatatableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'avl-datatable'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { buttonClick: [{
                type: Output
            }], overflowMenuItemClick: [{
                type: Output
            }], linkClick: [{
                type: Output
            }], pageSizeChange: [{
                type: Output
            }], selectedPageChange: [{
                type: Output
            }], buttonClickListener: [{
                type: HostListener,
                args: ['button-click', ['$event']]
            }], overflowMenuItemClickListener: [{
                type: HostListener,
                args: ['overflow-menu-item-click', ['$event']]
            }], linkClickListener: [{
                type: HostListener,
                args: ['link-click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRhdGF0YWJsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1iaW5kZXJzL3NyYy9saWIvY29udHJvbHMvYXZsLWRhdGF0YWJsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBYyxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsd0NBQXdDLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFLNUUsTUFBTSxPQUFPLHFCQUFxQjtJQU9oQyxZQUFZLFVBQXNCO1FBTnhCLGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDcEQsMEJBQXFCLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUQsY0FBUyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xELG1CQUFjLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDMUQsdUJBQWtCLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFHdEUsd0NBQXdDLENBQUMsVUFBVSxFQUFFLG1CQUFtQixFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMvRix3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDekcsQ0FBQztJQUdELG1CQUFtQixDQUFDLENBQWM7UUFDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFHRCw2QkFBNkIsQ0FBQyxDQUFjO1FBQzFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFHRCxpQkFBaUIsQ0FBQyxDQUFjO1FBQzlCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDOztrSEF6QlUscUJBQXFCO3NHQUFyQixxQkFBcUI7MkZBQXJCLHFCQUFxQjtrQkFIakMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtpQkFDMUI7aUdBRVcsV0FBVztzQkFBcEIsTUFBTTtnQkFDRyxxQkFBcUI7c0JBQTlCLE1BQU07Z0JBQ0csU0FBUztzQkFBbEIsTUFBTTtnQkFDRyxjQUFjO3NCQUF2QixNQUFNO2dCQUNHLGtCQUFrQjtzQkFBM0IsTUFBTTtnQkFRUCxtQkFBbUI7c0JBRGxCLFlBQVk7dUJBQUMsY0FBYyxFQUFFLENBQUMsUUFBUSxDQUFDO2dCQU14Qyw2QkFBNkI7c0JBRDVCLFlBQVk7dUJBQUMsMEJBQTBCLEVBQUUsQ0FBQyxRQUFRLENBQUM7Z0JBTXBELGlCQUFpQjtzQkFEaEIsWUFBWTt1QkFBQyxZQUFZLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyLCBPdXRwdXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyB9IGZyb20gJy4uL2JpbmRpbmctdXRpbHMnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdhdmwtZGF0YXRhYmxlJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsRGF0YXRhYmxlRGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgYnV0dG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBvdmVyZmxvd01lbnVJdGVtQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBsaW5rQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBwYWdlU2l6ZUNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkUGFnZUNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXJGb3JFbWl0dGluZ0NoYW5nZWRFdmVudHMoZWxlbWVudFJlZiwgJ3BhZ2Utc2l6ZS1jaGFuZ2VkJywgdGhpcy5wYWdlU2l6ZUNoYW5nZSk7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdzZWxlY3RlZC1wYWdlLWNoYW5nZWQnLCB0aGlzLnNlbGVjdGVkUGFnZUNoYW5nZSk7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdidXR0b24tY2xpY2snLCBbJyRldmVudCddKVxyXG4gIGJ1dHRvbkNsaWNrTGlzdGVuZXIoZTogQ3VzdG9tRXZlbnQpIHtcclxuICAgIHRoaXMuYnV0dG9uQ2xpY2suZW1pdChlLmRldGFpbCk7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdvdmVyZmxvdy1tZW51LWl0ZW0tY2xpY2snLCBbJyRldmVudCddKVxyXG4gIG92ZXJmbG93TWVudUl0ZW1DbGlja0xpc3RlbmVyKGU6IEN1c3RvbUV2ZW50KSB7XHJcbiAgICB0aGlzLm92ZXJmbG93TWVudUl0ZW1DbGljay5lbWl0KGUuZGV0YWlsKTtcclxuICB9XHJcblxyXG4gIEBIb3N0TGlzdGVuZXIoJ2xpbmstY2xpY2snLCBbJyRldmVudCddKVxyXG4gIGxpbmtDbGlja0xpc3RlbmVyKGU6IEN1c3RvbUV2ZW50KSB7XHJcbiAgICB0aGlzLmxpbmtDbGljay5lbWl0KGUuZGV0YWlsKTtcclxuICB9XHJcbn1cclxuIl19