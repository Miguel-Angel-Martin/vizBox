import { __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
let AvlTextfieldDirective = class AvlTextfieldDirective {
    constructor(elementRef) {
        this.valueChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);
    }
};
AvlTextfieldDirective.ɵfac = function AvlTextfieldDirective_Factory(t) { return new (t || AvlTextfieldDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlTextfieldDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlTextfieldDirective, selectors: [["avl-textfield"]], outputs: { valueChange: "valueChange" } });
AvlTextfieldDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlTextfieldDirective.prototype, "valueChange", void 0);
AvlTextfieldDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], AvlTextfieldDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlTextfieldDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-textfield'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { valueChange: [{
            type: Output
        }] }); })();
export { AvlTextfieldDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLXRleHRmaWVsZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9AYXZsLWNvbnRyb2xzL25nLWJpbmRlcnMvbGliL2NvbnRyb2xzL2F2bC10ZXh0ZmllbGQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQU01RSxJQUFhLHFCQUFxQixHQUFsQyxNQUFhLHFCQUFxQjtBQUNsQyxJQUVFLFlBQVksVUFBc0I7QUFDcEMsUUFIWSxnQkFBVyxHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ25FLFFBRUksd0NBQXdDLENBQUMsVUFBVSxFQUFFLGVBQWUsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDNUYsSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7Z0tBQUE7QUFDRDtBQUErQyxZQUpyQixVQUFVO0FBQUc7QUFGM0I7QUFBYSxJQUF0QixNQUFNLEVBQUU7QUFBRSw4QkFBWSxZQUFZO0FBQUUsMERBQTRCO0FBRHRELHFCQUFxQixvQkFIakMsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFLG5DQUVSLGtDQUdzQixVQUFVO0dBTFQsTUFDMUIsQ0FBQyxWQUlxQyxHQUgxQixxQkFBcUIsQ0FNakM7Ozs7Ozs7O29CQUNEOztBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUhBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUFBLEFBSEEsQUFBQSxBQU1BLEFBTkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyB9IGZyb20gJy4uL2JpbmRpbmctdXRpbHMnO1xyXG5cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnYXZsLXRleHRmaWVsZCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEF2bFRleHRmaWVsZERpcmVjdGl2ZSB7XHJcbiAgQE91dHB1dCgpIHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xyXG4gICAgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyhlbGVtZW50UmVmLCAndmFsdWUtY2hhbmdlZCcsIHRoaXMudmFsdWVDaGFuZ2UpO1xyXG4gIH1cclxufVxyXG4iXX0=