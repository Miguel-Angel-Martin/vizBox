import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
let AvlIconButtonDirective = class AvlIconButtonDirective {
    constructor(elementRef) {
        this.badgeChange = new EventEmitter();
        this.badgeValueChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'badge-changed', this.badgeChange);
        addEventListenerForEmittingChangedEvents(elementRef, 'badge-value-changed', this.badgeValueChange);
    }
};
AvlIconButtonDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlIconButtonDirective.prototype, "badgeChange", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlIconButtonDirective.prototype, "badgeValueChange", void 0);
AvlIconButtonDirective = __decorate([
    Directive({
        selector: 'avl-icon-button'
    }),
    __metadata("design:paramtypes", [ElementRef])
], AvlIconButtonDirective);
export { AvlIconButtonDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWljb24tYnV0dG9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhdmwtY29udHJvbHMvbmctYmluZGVycy8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9hdmwtaWNvbi1idXR0b24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTTVFLElBQWEsc0JBQXNCLEdBQW5DLE1BQWEsc0JBQXNCO0lBSWpDLFlBQVksVUFBc0I7UUFIeEIsZ0JBQVcsR0FBMEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN4RCxxQkFBZ0IsR0FBeUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUdwRSx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsZUFBZSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4Rix3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUscUJBQXFCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDckcsQ0FBQztDQUNGLENBQUE7O1lBSnlCLFVBQVU7O0FBSHhCO0lBQVQsTUFBTSxFQUFFOzhCQUFjLFlBQVk7MkRBQStCO0FBQ3hEO0lBQVQsTUFBTSxFQUFFOzhCQUFtQixZQUFZO2dFQUE4QjtBQUYzRCxzQkFBc0I7SUFIbEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGlCQUFpQjtLQUM1QixDQUFDO3FDQUt3QixVQUFVO0dBSnZCLHNCQUFzQixDQVFsQztTQVJZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyB9IGZyb20gJy4uL2JpbmRpbmctdXRpbHMnO1xyXG5cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnYXZsLWljb24tYnV0dG9uJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZsSWNvbkJ1dHRvbkRpcmVjdGl2ZSB7XHJcbiAgQE91dHB1dCgpIGJhZGdlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIGJhZGdlVmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdiYWRnZS1jaGFuZ2VkJywgdGhpcy5iYWRnZUNoYW5nZSk7XHJcbiAgICBhZGRFdmVudExpc3RlbmVyRm9yRW1pdHRpbmdDaGFuZ2VkRXZlbnRzKGVsZW1lbnRSZWYsICdiYWRnZS12YWx1ZS1jaGFuZ2VkJywgdGhpcy5iYWRnZVZhbHVlQ2hhbmdlKTtcclxuICB9XHJcbn1cclxuIl19