import { __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, Output, ElementRef } from '@angular/core';
import { addEventListenerForEmittingChangedEvents } from '../binding-utils';
import * as ɵngcc0 from '@angular/core';
let AvlDateDirective = class AvlDateDirective {
    constructor(elementRef) {
        this.valueChange = new EventEmitter();
        addEventListenerForEmittingChangedEvents(elementRef, 'value-changed', this.valueChange);
    }
};
AvlDateDirective.ɵfac = function AvlDateDirective_Factory(t) { return new (t || AvlDateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AvlDateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlDateDirective, selectors: [["avl-date"]], outputs: { valueChange: "valueChange" } });
AvlDateDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlDateDirective.prototype, "valueChange", void 0);
AvlDateDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], AvlDateDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlDateDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-date'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { valueChange: [{
            type: Output
        }] }); })();
export { AvlDateDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWRhdGUuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovQGF2bC1jb250cm9scy9uZy1iaW5kZXJzL2xpYi9jb250cm9scy9hdmwtZGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBTTVFLElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0FBQzdCLElBRUUsWUFBWSxVQUFzQjtBQUNwQyxRQUhZLGdCQUFXLEdBQW1DLElBQUksWUFBWSxFQUFFLENBQUM7QUFDN0UsUUFFSSx3Q0FBd0MsQ0FBQyxVQUFVLEVBQUUsZUFBZSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUM1RixJQUFFLENBQUM7QUFDSCxDQUFDOztpSkFBQTtBQUNEO0FBQTBDLFlBSmhCLFVBQVU7QUFBRztBQUYzQjtBQUFhLElBQXRCLE1BQU0sRUFBRTtBQUFFLDhCQUFZLFlBQVk7QUFBRSxxREFBc0M7QUFEaEUsZ0JBQWdCLG9CQUg1QixTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUUsVUFBVSw3Q0FFbEIsa0NBR3NCLFVBQVU7SUFKbkMsQ0FBQyxMQUlxQyxHQUgxQixnQkFBZ0IsQ0FNNUI7Ozs7Ozs7O29CQUNEOztBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUhBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUFBLEFBSEEsQUFBQSxBQU1BLEFBTkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyB9IGZyb20gJy4uL2JpbmRpbmctdXRpbHMnO1xyXG5cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnYXZsLWRhdGUnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdmxEYXRlRGlyZWN0aXZlIHtcclxuICBAT3V0cHV0KCkgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxEYXRlIHwgdW5kZWZpbmVkPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xyXG4gICAgYWRkRXZlbnRMaXN0ZW5lckZvckVtaXR0aW5nQ2hhbmdlZEV2ZW50cyhlbGVtZW50UmVmLCAndmFsdWUtY2hhbmdlZCcsIHRoaXMudmFsdWVDaGFuZ2UpO1xyXG4gIH1cclxufVxyXG4iXX0=