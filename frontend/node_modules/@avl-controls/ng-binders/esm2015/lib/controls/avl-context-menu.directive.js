import { __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, HostListener, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
let AvlContextMenuDirective = class AvlContextMenuDirective {
    constructor() {
        this.itemClicked = new EventEmitter();
    }
    itemClickedListener(e) {
        this.itemClicked.emit(e.detail.value);
    }
};
AvlContextMenuDirective.ɵfac = function AvlContextMenuDirective_Factory(t) { return new (t || AvlContextMenuDirective)(); };
AvlContextMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AvlContextMenuDirective, selectors: [["avl-context-menu"]], hostBindings: function AvlContextMenuDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("item-clicked", function AvlContextMenuDirective_item_clicked_HostBindingHandler($event) { return ctx.itemClickedListener($event); });
    } }, outputs: { itemClicked: "itemClicked" } });
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AvlContextMenuDirective.prototype, "itemClicked", void 0);
__decorate([
    HostListener('item-clicked', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [CustomEvent]),
    __metadata("design:returntype", void 0)
], AvlContextMenuDirective.prototype, "itemClickedListener", null);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvlContextMenuDirective, [{
        type: Directive,
        args: [{
                selector: 'avl-context-menu'
            }]
    }], function () { return []; }, { itemClicked: [{
            type: Output
        }], itemClickedListener: [{
            type: HostListener,
            args: ['item-clicked', ['$event']]
        }] }); })();
export { AvlContextMenuDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZsLWNvbnRleHQtbWVudS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9AYXZsLWNvbnRyb2xzL25nLWJpbmRlcnMvbGliL2NvbnRyb2xzL2F2bC1jb250ZXh0LW1lbnUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUs5RSxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtBQUNwQyxJQURBO0FBQWdCLFFBQ0osZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUNoRSxJQUtBLENBQUM7QUFDRCxJQUpFLG1CQUFtQixDQUFDLENBQWM7QUFDcEMsUUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzFDLElBQUUsQ0FBQztBQUNILENBQUM7Ozs7b0RBQUE7QUFOVztBQUFhLElBQXRCLE1BQU0sRUFBRTtBQUFFLDhCQUFZLFlBQVk7QUFBRSw0REFBeUI7QUFHOUQ7QUFBYSxJQURaLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQztBQUNDLHFDQUR1QixXQUFXO0FBQ3BDO0FBQ0Msa0VBQUU7QUFOVSx1QkFBdUIsb0JBSG5DLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRTtTQUFrQixNQUM3QixDQUFDLElBQ1c7O0NBQXVCLENBT25DOzs7Ozs7O29CQUNEOztBQWJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQURBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQU5BLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBT0EsQUFQQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ2F2bC1jb250ZXh0LW1lbnUnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdmxDb250ZXh0TWVudURpcmVjdGl2ZSB7XHJcbiAgQE91dHB1dCgpIGl0ZW1DbGlja2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignaXRlbS1jbGlja2VkJywgWyckZXZlbnQnXSlcclxuICBpdGVtQ2xpY2tlZExpc3RlbmVyKGU6IEN1c3RvbUV2ZW50KSB7XHJcbiAgICB0aGlzLml0ZW1DbGlja2VkLmVtaXQoZS5kZXRhaWwudmFsdWUpO1xyXG4gIH1cclxufVxyXG4iXX0=