import { Router } from '@angular/router';
import { Observable, BehaviorSubject } from 'rxjs';
import { ColorScheme } from './message.model';
import { AvlAuthService } from '@avl-ng-controls/auth';
import * as ɵngcc0 from '@angular/core';
export declare class ShellCommunicationService {
    private router;
    private authService;
    private readonly id;
    private handlers;
    private themeSubject;
    private languageSubject;
    private actionSubject;
    private localeSubject;
    private colorSchemeSubject;
    /**
    * Observable tracking theme
    * Emits "dark" if dark theme selected, "light" otherwise
    */
    theme$: Observable<string>;
    /**
    * Observable tracking language
    */
    language$: Observable<string>;
    action$: Observable<string>;
    /**
    * Observable tracking country changes
    */
    locale$: Observable<string>;
    /**
    * Observable tracking color scheme changes
    */
    colorScheme$: Observable<ColorScheme>;
    /**
    * Observable tracking login state
    * Resolves to true on successful login, false otherwise
    */
    isLoggedIn$: Observable<boolean>;
    /**
     * Observable tracking if redirected from idb
     * Resolves to true on redirection, false otherwise
     */
    redirectedFromLogIn: BehaviorSubject<boolean>;
    /**
     * If current application is inside shell application
     * True if current application is inside shell application, false otherwise.
     */
    isChild: boolean;
    constructor(router: Router, authService: AvlAuthService);
    notifyShellAboutAction(action: string): void;
    /**
     * Sends message to shell that it needs to navigate to login page
     */
    notifyShellAboutLogin(url: string): void;
    /**
     * Sends message to shell that it needs to navigate to @url
     */
    notifyShellAboutNavigation(url: string): void;
    /**
     * Sends registration message to shell
     */
    registerToShell(): void;
    private onMessage;
    private postMessageToShell;
    private handleColorScheme;
    private handleLanguage;
    private handleLocale;
    private handleTheme;
    private handleNavigation;
    private handleAction;
    private handleAuthentication;
    private handleRedirectedFromLogIn;
    private setUserToSessionStorage;
    private removeUserFromSessionStorage;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ShellCommunicationService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlbGwtY29tbXVuaWNhdGlvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInNoZWxsLWNvbW11bmljYXRpb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBDb2xvclNjaGVtZSB9IGZyb20gJy4vbWVzc2FnZS5tb2RlbCc7XHJcbmltcG9ydCB7IEF2bEF1dGhTZXJ2aWNlIH0gZnJvbSAnQGF2bC1uZy1jb250cm9scy9hdXRoJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2hlbGxDb21tdW5pY2F0aW9uU2VydmljZSB7XHJcbiAgICBwcml2YXRlIHJvdXRlcjtcclxuICAgIHByaXZhdGUgYXV0aFNlcnZpY2U7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGlkO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVycztcclxuICAgIHByaXZhdGUgdGhlbWVTdWJqZWN0O1xyXG4gICAgcHJpdmF0ZSBsYW5ndWFnZVN1YmplY3Q7XHJcbiAgICBwcml2YXRlIGFjdGlvblN1YmplY3Q7XHJcbiAgICBwcml2YXRlIGxvY2FsZVN1YmplY3Q7XHJcbiAgICBwcml2YXRlIGNvbG9yU2NoZW1lU3ViamVjdDtcclxuICAgIC8qKlxyXG4gICAgKiBPYnNlcnZhYmxlIHRyYWNraW5nIHRoZW1lXHJcbiAgICAqIEVtaXRzIFwiZGFya1wiIGlmIGRhcmsgdGhlbWUgc2VsZWN0ZWQsIFwibGlnaHRcIiBvdGhlcndpc2VcclxuICAgICovXHJcbiAgICB0aGVtZSQ6IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAgIC8qKlxyXG4gICAgKiBPYnNlcnZhYmxlIHRyYWNraW5nIGxhbmd1YWdlXHJcbiAgICAqL1xyXG4gICAgbGFuZ3VhZ2UkOiBPYnNlcnZhYmxlPHN0cmluZz47XHJcbiAgICBhY3Rpb24kOiBPYnNlcnZhYmxlPHN0cmluZz47XHJcbiAgICAvKipcclxuICAgICogT2JzZXJ2YWJsZSB0cmFja2luZyBjb3VudHJ5IGNoYW5nZXNcclxuICAgICovXHJcbiAgICBsb2NhbGUkOiBPYnNlcnZhYmxlPHN0cmluZz47XHJcbiAgICAvKipcclxuICAgICogT2JzZXJ2YWJsZSB0cmFja2luZyBjb2xvciBzY2hlbWUgY2hhbmdlc1xyXG4gICAgKi9cclxuICAgIGNvbG9yU2NoZW1lJDogT2JzZXJ2YWJsZTxDb2xvclNjaGVtZT47XHJcbiAgICAvKipcclxuICAgICogT2JzZXJ2YWJsZSB0cmFja2luZyBsb2dpbiBzdGF0ZVxyXG4gICAgKiBSZXNvbHZlcyB0byB0cnVlIG9uIHN1Y2Nlc3NmdWwgbG9naW4sIGZhbHNlIG90aGVyd2lzZVxyXG4gICAgKi9cclxuICAgIGlzTG9nZ2VkSW4kOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBPYnNlcnZhYmxlIHRyYWNraW5nIGlmIHJlZGlyZWN0ZWQgZnJvbSBpZGJcclxuICAgICAqIFJlc29sdmVzIHRvIHRydWUgb24gcmVkaXJlY3Rpb24sIGZhbHNlIG90aGVyd2lzZVxyXG4gICAgICovXHJcbiAgICByZWRpcmVjdGVkRnJvbUxvZ0luOiBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj47XHJcbiAgICAvKipcclxuICAgICAqIElmIGN1cnJlbnQgYXBwbGljYXRpb24gaXMgaW5zaWRlIHNoZWxsIGFwcGxpY2F0aW9uXHJcbiAgICAgKiBUcnVlIGlmIGN1cnJlbnQgYXBwbGljYXRpb24gaXMgaW5zaWRlIHNoZWxsIGFwcGxpY2F0aW9uLCBmYWxzZSBvdGhlcndpc2UuXHJcbiAgICAgKi9cclxuICAgIGlzQ2hpbGQ6IGJvb2xlYW47XHJcbiAgICBjb25zdHJ1Y3Rvcihyb3V0ZXI6IFJvdXRlciwgYXV0aFNlcnZpY2U6IEF2bEF1dGhTZXJ2aWNlKTtcclxuICAgIG5vdGlmeVNoZWxsQWJvdXRBY3Rpb24oYWN0aW9uOiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHNoZWxsIHRoYXQgaXQgbmVlZHMgdG8gbmF2aWdhdGUgdG8gbG9naW4gcGFnZVxyXG4gICAgICovXHJcbiAgICBub3RpZnlTaGVsbEFib3V0TG9naW4odXJsOiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHNoZWxsIHRoYXQgaXQgbmVlZHMgdG8gbmF2aWdhdGUgdG8gQHVybFxyXG4gICAgICovXHJcbiAgICBub3RpZnlTaGVsbEFib3V0TmF2aWdhdGlvbih1cmw6IHN0cmluZyk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIHJlZ2lzdHJhdGlvbiBtZXNzYWdlIHRvIHNoZWxsXHJcbiAgICAgKi9cclxuICAgIHJlZ2lzdGVyVG9TaGVsbCgpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBvbk1lc3NhZ2U7XHJcbiAgICBwcml2YXRlIHBvc3RNZXNzYWdlVG9TaGVsbDtcclxuICAgIHByaXZhdGUgaGFuZGxlQ29sb3JTY2hlbWU7XHJcbiAgICBwcml2YXRlIGhhbmRsZUxhbmd1YWdlO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVMb2NhbGU7XHJcbiAgICBwcml2YXRlIGhhbmRsZVRoZW1lO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVOYXZpZ2F0aW9uO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVBY3Rpb247XHJcbiAgICBwcml2YXRlIGhhbmRsZUF1dGhlbnRpY2F0aW9uO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVSZWRpcmVjdGVkRnJvbUxvZ0luO1xyXG4gICAgcHJpdmF0ZSBzZXRVc2VyVG9TZXNzaW9uU3RvcmFnZTtcclxuICAgIHByaXZhdGUgcmVtb3ZlVXNlckZyb21TZXNzaW9uU3RvcmFnZTtcclxufVxyXG4iXX0=