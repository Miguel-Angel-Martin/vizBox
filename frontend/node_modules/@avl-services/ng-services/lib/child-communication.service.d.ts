import { TranslationManagementService } from "./translation-management.service";
import { ThemeService } from "./theme.service";
import { Observable } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export declare class ChildCommunicationService {
    private translationManagementService;
    private themeService;
    private handlers;
    private actionSubject;
    private navigationSubject;
    private loginSubject;
    private registrationCompletedSubject;
    protected iframeEl: HTMLIFrameElement;
    action$: Observable<string>;
    /**
     * Observable tracking url to navigate to
     */
    navigation$: Observable<string>;
    /**
     * Observable tracking url for login
     * Url for login provided by child application
     */
    login$: Observable<string>;
    /**
     * Observable tracking child registration
     * Emits true if registration was successful, false otherwise
     */
    registrationCompleted$: Observable<boolean>;
    constructor(translationManagementService: TranslationManagementService, themeService: ThemeService);
    /**
     * Sends message to child about locale
     */
    notifyChildAboutLocale(country: string): void;
    /**
     * Sends message to child about language
     */
    notifyChildAboutLanguage(language: string): void;
    /**
     * Sends message to child about action
     */
    notifyChildAboutAction(action: string): void;
    /**
     * Sends message to child about navigation
     */
    notifyChildAboutNavigation(url: string): void;
    /**
     * Sends messages to children about current user
     */
    postAuthenticationDataToChildren(): void;
    /**
     * Sends messages to children about selected application theme
     */
    postThemeToChildren(): void;
    /**
     * Sends messages to children about selected language
     */
    postLanguageToChildren(): void;
    /**
     * Sends messages to children about selected country
     */
    postLocaleToChildren(): void;
    /**
     * Sends message to child about redirection from idb
     */
    postRedirectedFromLogIn(payload: boolean): void;
    /**
     * Sends message to children about color scheme
     */
    postColorSchemeToChildren(): void;
    private handleAction;
    private handleNavigation;
    private handleLogin;
    private handleRegistration;
    private onMessage;
    private postMessageToChild;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChildCommunicationService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQtY29tbXVuaWNhdGlvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImNoaWxkLWNvbW11bmljYXRpb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNsYXRpb25NYW5hZ2VtZW50U2VydmljZSB9IGZyb20gXCIuL3RyYW5zbGF0aW9uLW1hbmFnZW1lbnQuc2VydmljZVwiO1xyXG5pbXBvcnQgeyBUaGVtZVNlcnZpY2UgfSBmcm9tIFwiLi90aGVtZS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqc1wiO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGlsZENvbW11bmljYXRpb25TZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgdHJhbnNsYXRpb25NYW5hZ2VtZW50U2VydmljZTtcclxuICAgIHByaXZhdGUgdGhlbWVTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBoYW5kbGVycztcclxuICAgIHByaXZhdGUgYWN0aW9uU3ViamVjdDtcclxuICAgIHByaXZhdGUgbmF2aWdhdGlvblN1YmplY3Q7XHJcbiAgICBwcml2YXRlIGxvZ2luU3ViamVjdDtcclxuICAgIHByaXZhdGUgcmVnaXN0cmF0aW9uQ29tcGxldGVkU3ViamVjdDtcclxuICAgIHByb3RlY3RlZCBpZnJhbWVFbDogSFRNTElGcmFtZUVsZW1lbnQ7XHJcbiAgICBhY3Rpb24kOiBPYnNlcnZhYmxlPHN0cmluZz47XHJcbiAgICAvKipcclxuICAgICAqIE9ic2VydmFibGUgdHJhY2tpbmcgdXJsIHRvIG5hdmlnYXRlIHRvXHJcbiAgICAgKi9cclxuICAgIG5hdmlnYXRpb24kOiBPYnNlcnZhYmxlPHN0cmluZz47XHJcbiAgICAvKipcclxuICAgICAqIE9ic2VydmFibGUgdHJhY2tpbmcgdXJsIGZvciBsb2dpblxyXG4gICAgICogVXJsIGZvciBsb2dpbiBwcm92aWRlZCBieSBjaGlsZCBhcHBsaWNhdGlvblxyXG4gICAgICovXHJcbiAgICBsb2dpbiQ6IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAgIC8qKlxyXG4gICAgICogT2JzZXJ2YWJsZSB0cmFja2luZyBjaGlsZCByZWdpc3RyYXRpb25cclxuICAgICAqIEVtaXRzIHRydWUgaWYgcmVnaXN0cmF0aW9uIHdhcyBzdWNjZXNzZnVsLCBmYWxzZSBvdGhlcndpc2VcclxuICAgICAqL1xyXG4gICAgcmVnaXN0cmF0aW9uQ29tcGxldGVkJDogT2JzZXJ2YWJsZTxib29sZWFuPjtcclxuICAgIGNvbnN0cnVjdG9yKHRyYW5zbGF0aW9uTWFuYWdlbWVudFNlcnZpY2U6IFRyYW5zbGF0aW9uTWFuYWdlbWVudFNlcnZpY2UsIHRoZW1lU2VydmljZTogVGhlbWVTZXJ2aWNlKTtcclxuICAgIC8qKlxyXG4gICAgICogU2VuZHMgbWVzc2FnZSB0byBjaGlsZCBhYm91dCBsb2NhbGVcclxuICAgICAqL1xyXG4gICAgbm90aWZ5Q2hpbGRBYm91dExvY2FsZShjb3VudHJ5OiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIGNoaWxkIGFib3V0IGxhbmd1YWdlXHJcbiAgICAgKi9cclxuICAgIG5vdGlmeUNoaWxkQWJvdXRMYW5ndWFnZShsYW5ndWFnZTogc3RyaW5nKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogU2VuZHMgbWVzc2FnZSB0byBjaGlsZCBhYm91dCBhY3Rpb25cclxuICAgICAqL1xyXG4gICAgbm90aWZ5Q2hpbGRBYm91dEFjdGlvbihhY3Rpb246IHN0cmluZyk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIG1lc3NhZ2UgdG8gY2hpbGQgYWJvdXQgbmF2aWdhdGlvblxyXG4gICAgICovXHJcbiAgICBub3RpZnlDaGlsZEFib3V0TmF2aWdhdGlvbih1cmw6IHN0cmluZyk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIG1lc3NhZ2VzIHRvIGNoaWxkcmVuIGFib3V0IGN1cnJlbnQgdXNlclxyXG4gICAgICovXHJcbiAgICBwb3N0QXV0aGVudGljYXRpb25EYXRhVG9DaGlsZHJlbigpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlcyB0byBjaGlsZHJlbiBhYm91dCBzZWxlY3RlZCBhcHBsaWNhdGlvbiB0aGVtZVxyXG4gICAgICovXHJcbiAgICBwb3N0VGhlbWVUb0NoaWxkcmVuKCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIG1lc3NhZ2VzIHRvIGNoaWxkcmVuIGFib3V0IHNlbGVjdGVkIGxhbmd1YWdlXHJcbiAgICAgKi9cclxuICAgIHBvc3RMYW5ndWFnZVRvQ2hpbGRyZW4oKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogU2VuZHMgbWVzc2FnZXMgdG8gY2hpbGRyZW4gYWJvdXQgc2VsZWN0ZWQgY291bnRyeVxyXG4gICAgICovXHJcbiAgICBwb3N0TG9jYWxlVG9DaGlsZHJlbigpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIGNoaWxkIGFib3V0IHJlZGlyZWN0aW9uIGZyb20gaWRiXHJcbiAgICAgKi9cclxuICAgIHBvc3RSZWRpcmVjdGVkRnJvbUxvZ0luKHBheWxvYWQ6IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIGNoaWxkcmVuIGFib3V0IGNvbG9yIHNjaGVtZVxyXG4gICAgICovXHJcbiAgICBwb3N0Q29sb3JTY2hlbWVUb0NoaWxkcmVuKCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIGhhbmRsZUFjdGlvbjtcclxuICAgIHByaXZhdGUgaGFuZGxlTmF2aWdhdGlvbjtcclxuICAgIHByaXZhdGUgaGFuZGxlTG9naW47XHJcbiAgICBwcml2YXRlIGhhbmRsZVJlZ2lzdHJhdGlvbjtcclxuICAgIHByaXZhdGUgb25NZXNzYWdlO1xyXG4gICAgcHJpdmF0ZSBwb3N0TWVzc2FnZVRvQ2hpbGQ7XHJcbn1cclxuIl19