import * as ɵngcc0 from '@angular/core';
var LoggingModule_1;
import { __decorate, __param } from "tslib";
import { NgModule, Optional, SkipSelf } from '@angular/core';
import { LoggingService } from './logging.service';
let LoggingModule = LoggingModule_1 = class LoggingModule {
    constructor(parentModule) {
        if (parentModule) {
            throw new Error('LoggingModule is already loaded. Import it in the AppModule only');
        }
    }
    static forRoot(config) {
        return {
            ngModule: LoggingModule_1,
            providers: [LoggingService, { provide: 'loggingConfig', useValue: config }],
        };
    }
};
LoggingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LoggingModule });
LoggingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LoggingModule_Factory(t) { return new (t || LoggingModule)(ɵngcc0.ɵɵinject(LoggingModule, 12)); } });
LoggingModule.ctorParameters = () => [
    { type: LoggingModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
];
LoggingModule = LoggingModule_1 = __decorate([ __param(0, Optional()), __param(0, SkipSelf())
], LoggingModule);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoggingModule, [{
        type: NgModule
    }], function () { return [{ type: LoggingModule, decorators: [{
                type: Optional
            }, {
                type: SkipSelf
            }] }]; }, null); })();
export { LoggingModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9AYXZsLXNlcnZpY2VzL25nLXNlcnZpY2VzL2xpYi9sb2dnaW5nLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWxGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUduRCxJQUFhLGFBQWEscUJBQTFCLE1BQWEsYUFBYTtBQUMxQixJQUFFLFlBQW9DLFlBQTRCO0FBQ2xFLFFBQUksSUFBSSxZQUFZLEVBQUU7QUFDdEIsWUFBTSxNQUFNLElBQUksS0FBSyxDQUFDLGtFQUFrRSxDQUFDLENBQUM7QUFDMUYsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNILElBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFpQjtBQUFJLFFBQ2xDLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxlQUFhO0FBQzdCLFlBQU0sU0FBUyxFQUFFLENBQUMsY0FBYyxFQUFFLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFDakYsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7c0tBQUE7QUFDRDtBQUF1QyxZQVpjLGFBQWEsdUJBQW5ELFFBQVEsWUFBSSxRQUFRO0FBQU07QUFENUIsYUFBYSxzQ0FEekIsUUFBUSxFQUFFLGZBQ1AsQ0FDVyxXQUFBLFFBQVEsRUFBRSxDQUFBLEVBQUUsV0FBQSxRQUFRLEVBQUUsQ0FBQTtBQUFDLEdBRHpCLGFBQWEsQ0FZekI7Ozs7Ozs7a0NBQ0Q7O0FBbEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFEQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFZQSxBQVpBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSwgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExvZ0NvbmZpZyB9IGZyb20gJy4vbG9nZ2luZy5tb2RlbCc7XHJcbmltcG9ydCB7IExvZ2dpbmdTZXJ2aWNlIH0gZnJvbSAnLi9sb2dnaW5nLnNlcnZpY2UnO1xyXG5cclxuQE5nTW9kdWxlKClcclxuZXhwb3J0IGNsYXNzIExvZ2dpbmdNb2R1bGUge1xyXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBTa2lwU2VsZigpIHBhcmVudE1vZHVsZT86IExvZ2dpbmdNb2R1bGUpIHtcclxuICAgIGlmIChwYXJlbnRNb2R1bGUpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdMb2dnaW5nTW9kdWxlIGlzIGFscmVhZHkgbG9hZGVkLiBJbXBvcnQgaXQgaW4gdGhlIEFwcE1vZHVsZSBvbmx5Jyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZzogTG9nQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxMb2dnaW5nTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogTG9nZ2luZ01vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbTG9nZ2luZ1NlcnZpY2UsIHsgcHJvdmlkZTogJ2xvZ2dpbmdDb25maWcnLCB1c2VWYWx1ZTogY29uZmlnIH1dLFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19