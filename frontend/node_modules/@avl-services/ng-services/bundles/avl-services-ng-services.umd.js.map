{"version":3,"file":"avl-services-ng-services.umd.js","sources":["../../../projects/ng-services/lib/auth/avl-auth.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-services/lib/auth/variables.ts","../../../projects/ng-services/lib/auth/storage-names.ts","../../../projects/ng-services/lib/auth/token-storage.ts","../../../projects/ng-services/lib/auth/crypto-helper.ts","../../../projects/ng-services/lib/auth/avl-oidc-code-auth.service.ts","../../../projects/ng-services/lib/auth/avl-token.interceptor.ts","../../../projects/ng-services/lib/composite/message.model.ts","../../../projects/ng-services/lib/composite/shell-communication.service.ts","../../../projects/ng-services/lib/settings/ngx-translate-translation.service.ts","../../../projects/ng-services/lib/settings/translation-management.service.ts","../../../projects/ng-services/lib/settings/theme.service.ts","../../../projects/ng-services/lib/composite/child-communication.service.ts","../../../projects/ng-services/lib/logging/logging.model.ts","../../../projects/ng-services/lib/logging/logging.service.ts","../../../projects/ng-services/lib/logging/logging.module.ts","../../../projects/ng-services/lib/notification/notification.service.ts","../../../projects/ng-services/lib/upload/variables.ts","../../../projects/ng-services/lib/upload/upload.service.ts","../../../projects/ng-services/lib/unsaved-changes/unsaved-changes-shell.service.ts","../../../projects/ng-services/lib/unsaved-changes/unsaved-changes/unsaved-changes.service.ts","../../../projects/ng-services/lib/unsaved-changes/unsaved-changes/unsaved-changes.directive.ts","../../../projects/ng-services/lib/unsaved-changes/unsaved-changes.guard.ts","../../../projects/ng-services/lib/unsaved-changes/unsaved-changes/unsaved-changes.module.ts","../../../projects/ng-services/public-api.ts","../../../projects/ng-services/avl-services-ng-services.ts"],"sourcesContent":["import { Observable, BehaviorSubject } from 'rxjs';\r\nimport { User } from './user.model';\r\nexport abstract class AvlAuthService {\r\n  /**\r\n   * User data is held in this property\r\n   */\r\n  protected userSubject = new BehaviorSubject<User>(undefined);\r\n\r\n  /**\r\n   * Current user as Observable\r\n   */\r\n  public user$: Observable<User> = this.userSubject.asObservable();\r\n\r\n  /**\r\n   * String holding error message in case user couldn't authenticate\r\n   */\r\n  protected errorMessageSubject = new BehaviorSubject<string>(undefined);\r\n\r\n  /**\r\n   * Error messsage in case failed authentication as Observable\r\n   */\r\n  public errorMessage$: Observable<string> = this.errorMessageSubject.asObservable();\r\n\r\n  /**\r\n   * Observable tracking authenticated state\r\n   * Resolves to true on successful log in, false otherwise\r\n   */\r\n  public abstract isLoggedIn$: Observable<boolean>;\r\n\r\n  /**\r\n   * Observable tracking if redirected from idb\r\n   * Resolves to true on redirection, false otherwise\r\n   */\r\n  public abstract redirectedFromLogIn: BehaviorSubject<boolean>;\r\n\r\n  /**\r\n   * Login user and redirect after successful authentication.\r\n   * Custom auth services need to provide implementation\r\n   * @param redirectUrl Url to redirect after succesful authentication\r\n   */\r\n  public abstract login(redirectUrl?: string): Promise<void>;\r\n\r\n  /**\r\n   * If tokens are peristed in local storage, set current user data\r\n   */\r\n  public abstract reloadPersistedUserData(): void;\r\n\r\n  /**\r\n   * Log out user and redirect after.\r\n   * Custom auth services need to provide implementation\r\n   * @param redirectUrl Url to redirect after logging out\r\n   */\r\n  public abstract logout(redirectUrl?: string): void;\r\n\r\n  /**\r\n   * Currently authenticated user data\r\n   */\r\n  public get currentUser(): User {\r\n    return this.userSubject.value;\r\n  }\r\n\r\n  /**\r\n   * Current error message for fail authentication\r\n   * Undefined when user is logged in\r\n   */\r\n  public get errorMessage(): string {\r\n    return this.errorMessageSubject.value;\r\n  }\r\n\r\n  /**\r\n   * Use to clear error message after user is informed\r\n   */\r\n  public clearErrorMessage() {\r\n    this.errorMessageSubject.next(undefined);\r\n  }\r\n\r\n  /**\r\n   * For token based authetication.\r\n   * Provide functionality to refresh tokens\r\n   */\r\n  public refreshTokens?(): Promise<any>;\r\n\r\n  /**\r\n   * For token based authetication.\r\n   * Updates user authentication with refresh tokens\r\n   */\r\n  public abstract refreshUserIfNeeded(): void;\r\n\r\n  /**\r\n   * Read user from session storage\r\n   */\r\n  public abstract readUserFromSessionStorage(): User;\r\n\r\n  /**\r\n   * Store user to session storage\r\n   */\r\n  public abstract storeUserToSessionStorage(user: User): void;\r\n\r\n  /**\r\n   * Clear user from session storage\r\n   */\r\n  public abstract clearUserFromSessionStorage(): void;\r\n\r\n  /** @hidden */\r\n  public abstract isUserInvalid(data: Partial<User>): boolean;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface AuthConfig { \r\n  tokenUrl: string;\r\n  loginUrl: string;\r\n  refreshUrl?: string;\r\n  loginUrlParamRedirect: string;\r\n  loginUrlParamChallenge: string;\r\n  loginUrlParamNonce: string;\r\n  logoutUrl?: string;\r\n  logoutUrlParamIdToken?: string;\r\n  logoutUrlParamRedirect?: string;\r\n  requiredRole?: string;\r\n  tokenPrefix?: string;\r\n}\r\n\r\nexport const AUTH_CONFIG = new InjectionToken<AuthConfig>(undefined);\r\n\r\nexport const INTERCEPTOR_BASE_PATHS = new InjectionToken<string[]>(undefined);","export enum StorageNames {\r\n  AccessToken = 'access_token',\r\n  AccessTokenExpiresAt = 'access_token_expires_at',\r\n  AccessTokenStoredAt = 'access_token_stored_at',\r\n  RefreshToken = 'refresh_token',\r\n  RefreshTokenExpiresAt = 'refresh_token_expires_at',\r\n  IdToken = 'id_token',\r\n  Roles = 'roles',\r\n  UserName = 'username',\r\n  Name = 'name'\r\n}\r\n","import { User } from './user.model';\r\nimport { StorageNames } from './storage-names';\r\n\r\nexport class TokenStorage {\r\n  private prefix = '';\r\n\r\n  constructor(prefix: string = '') {\r\n    this.prefix = prefix;\r\n  }\r\n\r\n  readUser(): User {\r\n    const accessToken = this.getItem(StorageNames.AccessToken);\r\n    return accessToken && accessToken != null ? {\r\n      username: this.getItem(StorageNames.UserName),\r\n      name: this.getItem(StorageNames.Name),\r\n      access_token: accessToken,\r\n      access_token_expires: this.getNumber(StorageNames.AccessTokenExpiresAt),\r\n      access_token_stored: this.getNumber(StorageNames.AccessTokenStoredAt),\r\n      refresh_token: this.getItem(StorageNames.RefreshToken),\r\n      refresh_token_expires: this.getNumber(StorageNames.RefreshTokenExpiresAt),\r\n      id_token: this.getItem(StorageNames.IdToken),\r\n      roles: this.parseJson(this.getItem(StorageNames.Roles)) as string[]\r\n    } : null;\r\n  }\r\n\r\n  storeUser(user: User) {\r\n    this.setItem(StorageNames.UserName, user.username);\r\n    this.setItem(StorageNames.Name, user.name);\r\n    this.setItem(StorageNames.AccessToken, user.access_token);\r\n    this.setItem(StorageNames.AccessTokenExpiresAt, `${user.access_token_expires}`);\r\n    this.setItem(StorageNames.AccessTokenStoredAt, `${user.access_token_stored}`);\r\n    this.setItem(StorageNames.RefreshToken, user.refresh_token);\r\n    this.setItem(StorageNames.RefreshTokenExpiresAt, `${user.refresh_token_expires}`);\r\n    this.setItem(StorageNames.IdToken, user.id_token);\r\n\r\n    if (user.roles) {\r\n      const rolesStr = JSON.stringify(user.roles);\r\n      sessionStorage.setItem(StorageNames.Roles, `${rolesStr}`);\r\n    }\r\n  }\r\n\r\n  clearUser() {\r\n    for (const name in StorageNames) {\r\n      if (StorageNames.hasOwnProperty(name)) {\r\n        this.removeItem(StorageNames[name]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getNumber(key: string): number {\r\n    return parseInt(this.getItem(key), 10);\r\n  }\r\n\r\n  getItem(key: string): string {\r\n    return sessionStorage.getItem(this.prefix + key);\r\n  }\r\n\r\n  setItem(key: string, value: string): void {\r\n    sessionStorage.setItem(this.prefix + key, value);\r\n  }\r\n\r\n  removeItem(key: string): void {\r\n    sessionStorage.removeItem(this.prefix + key);\r\n  }\r\n  parseJson = (string: string): { [key: string]: any } => {\r\n    if (string?.indexOf('undefined') > -1) {\r\n      string = string.replace('undefined', null);\r\n    }\r\n    try {\r\n      return JSON.parse(string);\r\n    } catch (e) {\r\n      console.error(e);\r\n      return null;\r\n    }\r\n  };\r\n}\r\n","export class CryptoHelper {\r\n\r\n  // PKCE HELPER FUNCTIONS\r\n\r\n  // Generate a secure random string using the browser crypto functions\r\n  public generateRandomString(length: number): string {\r\n    const array = new Uint8Array(length);\r\n    window.crypto.getRandomValues(array);\r\n    return Array.from(array, dec => ('0' + dec.toString(16)).substr(-2)).join('');\r\n  }\r\n\r\n  // Base64-encodes the input string\r\n  public base64Encode(buffer: ArrayBuffer): string {\r\n    // Convert the ArrayBuffer to string using Uint8 array to convert to what btoa accepts.\r\n    // btoa accepts chars only within ascii 0-255 and base64 encodes them.\r\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)))\r\n  }\r\n\r\n  // Calculate the SHA256 hash of the input text. \r\n  // Returns a promise that resolves to base64 encoded string\r\n  public async sha256(plain: string): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(plain);\r\n    const buffer = await window.crypto.subtle.digest('SHA-256', data);\r\n    return this.base64Encode(buffer);\r\n  }\r\n\r\n  // Base64-decodes the input string\r\n  public base64DecodeUnicode(str: string): string {\r\n    const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\r\n    return decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { map, skipWhile, catchError } from 'rxjs/operators';\r\n\r\nimport { User } from './user.model';\r\nimport { AvlAuthService } from './avl-auth.service';\r\nimport { AUTH_CONFIG, AuthConfig } from './variables';\r\nimport { TokenStorage } from './token-storage';\r\nimport { TokenResponse } from './token-response';\r\nimport { StorageNames } from './storage-names';\r\nimport { TokenClaims } from './token-claims';\r\nimport { CryptoHelper } from './crypto-helper';\r\n\r\nconst LOGOUT_CONFIG_NOT_SET_ERROR =\r\n  'User signed out locally, but logout request towards OIDC server not initiated since logoutUrl is not set in authConfig.';\r\n\r\n@Injectable()\r\nexport class AvlOidcCodeAuthService extends AvlAuthService {\r\n  private readonly isLoggedInSubject: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Observable tracking authenticated state\r\n   * Resolves to true on successful log in, false otherwise\r\n   */\r\n  public isLoggedIn$: Observable<boolean> = this.isLoggedInSubject\r\n    .asObservable()\r\n    .pipe(skipWhile(isLoggedIn => isLoggedIn === undefined));\r\n\r\n  /**\r\n   * Observable tracking if redirected from idb\r\n   * Resolves to true on redirection, false otherwise\r\n   */\r\n  public redirectedFromLogIn = new BehaviorSubject<boolean>(undefined);\r\n\r\n  private http: HttpClient;\r\n  private storage: TokenStorage;\r\n  private cryptoHelper: CryptoHelper;\r\n\r\n  constructor(\r\n    private httpBackend: HttpBackend,\r\n    @Inject(AUTH_CONFIG) private authConfig: AuthConfig,\r\n    private router: Router,\r\n    private loc: Location\r\n  ) {\r\n    super();\r\n\r\n    this.http = new HttpClient(this.httpBackend);\r\n    this.storage = new TokenStorage(this.authConfig.tokenPrefix);\r\n    this.cryptoHelper = new CryptoHelper();\r\n\r\n    this.userSubject.pipe(skipWhile(value => value === undefined)).subscribe(userValue => {\r\n      this.emitLoggedIn(Boolean(userValue));\r\n    });\r\n\r\n    const user = this.storage.readUser();\r\n\r\n    if (user && !this.isUserInvalid(user)) {\r\n      this.persistUser(user);\r\n    } else if (!this.currentUser && this.pkce) {\r\n      // if user is not logged in and pkce exists handle redirect from oidc server if possible\r\n      this.handleOidcRedirect();\r\n    } else {\r\n      this.clearUser();\r\n      this.userSubject.next(null);\r\n    }\r\n    this.redirectedFromLogIn.next(Boolean(this.currentUser));\r\n  }\r\n\r\n  private readonly emitLoggedIn = (value: boolean) => {\r\n    this.isLoggedInSubject.next(value);\r\n  };\r\n\r\n  /** @hidden */\r\n  public isUserInvalid(data: Partial<User>): boolean {\r\n    return (\r\n      !data ||\r\n      data.username == null ||\r\n      data.access_token == null ||\r\n      data.access_token_expires < Date.now()\r\n    );\r\n  }\r\n\r\n  private get pkce(): string | undefined {\r\n    return this.storage.getItem('pkce') || undefined;\r\n  }\r\n  private set pkce(c: string | undefined) {\r\n    if (c) {\r\n      this.storage.setItem('pkce', c);\r\n    } else {\r\n      this.storage.removeItem('pkce');\r\n    }\r\n  }\r\n\r\n  private get nonce(): string | undefined {\r\n    return sessionStorage.getItem('nonce') || undefined;\r\n  }\r\n  private set nonce(c: string | undefined) {\r\n    if (c) {\r\n      this.storage.setItem('nonce', c);\r\n    } else {\r\n      this.storage.removeItem('nonce');\r\n    }\r\n  }\r\n\r\n  private isAccessTokenValid(): boolean {\r\n    return Date.now() < this.currentUser.access_token_expires;\r\n  }\r\n\r\n  private persistUser(user?: User): void {\r\n    if (user) {\r\n      this.storage.storeUser(user);\r\n      this.userSubject.next(user);\r\n    } else {\r\n      this.clearUser();\r\n    }\r\n  }\r\n\r\n  private clearUser(): void {\r\n    this.storage.clearUser();\r\n    this.userSubject.next(undefined);\r\n  }\r\n\r\n  /*\r\n   * Checks if current url is redirect from oidc server and gets access token from the server.\r\n   */\r\n  private async handleOidcRedirect() {\r\n    const pkce = this.pkce;\r\n    this.pkce = undefined;\r\n\r\n    const urlParts = this.loc.path(true).split('?', 2);\r\n    let urlHash: string;\r\n    let first: number;\r\n    let last: number;\r\n    let urlPartSplit: string[];\r\n\r\n    if (urlParts.length === 2) {\r\n      first = urlParts[1].lastIndexOf('#');\r\n      if (first !== -1) {\r\n        last = urlParts[1].lastIndexOf('&');\r\n        urlHash = urlParts[1].slice(first, last);\r\n        urlPartSplit = urlParts[1].split('#', 2);\r\n        urlParts[1] = urlParts[1].split('&').pop();\r\n        urlParts[1] = urlPartSplit[0].concat('&').concat(urlParts[1]);\r\n      }\r\n    }\r\n\r\n    let query = urlParts.length === 2 ? this.parseQueryString(urlParts[1]) : [];\r\n    let queryCode: string;\r\n    for (let i = query.length - 1; i >= 0; i--) {\r\n      if (query[i].key === 'code') {\r\n        queryCode = query[i].value;\r\n        query = [...query.slice(0, i), ...query.slice(i + 1)];\r\n        break;\r\n      }\r\n    }\r\n    if (urlParts.length === 2 && queryCode) {\r\n      const nonce = this.nonce;\r\n      this.nonce = undefined;\r\n\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          code: queryCode,\r\n          verifier: pkce,\r\n          nonce: nonce\r\n        })\r\n      };\r\n\r\n      try {\r\n        const user = await this.http\r\n          .post<TokenResponse>(this.authConfig.tokenUrl, {}, httpOptions)\r\n          .pipe(map(token => this.readUserFromToken(token)))\r\n          .toPromise();\r\n        this.persistUser(user);\r\n      } catch (error) {\r\n        this.errorMessageSubject.next(error.message);\r\n      }\r\n    }\r\n\r\n    if (urlHash) {\r\n      this.router.navigateByUrl(\r\n        `${urlParts[0]}${this.reconstructQueryParamString(query)}${urlHash}`,\r\n        { replaceUrl: true }\r\n      );\r\n      this.redirectedFromLogIn.next(true);\r\n    } else {\r\n      this.router.navigateByUrl(`${urlParts[0]}${this.reconstructQueryParamString(query)}`, {\r\n        replaceUrl: true\r\n      });\r\n      this.redirectedFromLogIn.next(Boolean(this.currentUser));\r\n    }\r\n  }\r\n\r\n  public reloadPersistedUserData() {\r\n    const user = this.storage.readUser();\r\n    if (this.currentUser?.access_token === user?.access_token) {\r\n      return;\r\n    }\r\n\r\n    if (this.isUserInvalid(user)) {\r\n      this.clearUser();\r\n    } else {\r\n      this.persistUser(user);\r\n    }\r\n  }\r\n  private reconstructQueryParamString(queryParams: { key: string; value: string }[]): string {\r\n    let s = '?';\r\n    if (queryParams.length === 0) {\r\n      return '';\r\n    }\r\n    for (const q of queryParams) {\r\n      if (s === '?') {\r\n        s += `${encodeURIComponent(q.key)}=${encodeURIComponent(q.value)}`;\r\n      } else {\r\n        s += `&${encodeURIComponent(q.key)}=${encodeURIComponent(q.value)}`;\r\n      }\r\n    }\r\n    return s;\r\n  }\r\n\r\n  private readUserFromToken(token: TokenResponse): User {\r\n    const accessTokenClaims = this.readClaimsFromToken(token.accesstoken);\r\n\r\n    // Calculate actual expiry date for this machine\r\n    const accessTokenStoredAt = Date.now(); // [ms]\r\n    const accessTokenExpiresAt = accessTokenStoredAt + token.expiresIn * 1000;\r\n\r\n    const refreshTokenClaims = this.readClaimsFromToken(token.refreshtoken);\r\n    let refreshTokenExpiresAt = null;\r\n    if (refreshTokenClaims) {\r\n      // If time value is 0 token lasts indefinitely\r\n      const refreshTokenExpiresIn =\r\n        refreshTokenClaims['exp'] !== 0 ? refreshTokenClaims['exp'] - refreshTokenClaims['iat'] : 0;\r\n      const refreshTokenStoredAt = accessTokenStoredAt;\r\n      refreshTokenExpiresAt =\r\n        refreshTokenExpiresIn !== 0 ? refreshTokenStoredAt + refreshTokenExpiresIn * 1000 : 0;\r\n    }\r\n\r\n    const roles = accessTokenClaims?.roles;\r\n    if (!accessTokenClaims) {\r\n      return null;\r\n    }\r\n    return {\r\n      username: accessTokenClaims.preferred_username,\r\n      name: accessTokenClaims.name ?? accessTokenClaims.preferred_username,\r\n      access_token: token.accesstoken,\r\n      access_token_expires: accessTokenExpiresAt,\r\n      access_token_stored: accessTokenStoredAt,\r\n      refresh_token: token.refreshtoken,\r\n      refresh_token_expires: refreshTokenExpiresAt,\r\n      id_token: token.idToken,\r\n      roles: roles\r\n    } as User;\r\n  }\r\n\r\n  public async refreshUserIfNeeded() {\r\n    const accessTokenExpired = this.currentUser?.access_token_expires < Date.now();\r\n    if (accessTokenExpired) {\r\n      await this.refreshTokens();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If needed, this method can be called to refresh tokens for current user\r\n   * @returns Promise resolved with object containing new tokens\r\n   */\r\n  public async refreshTokens(): Promise<any> {\r\n    const refreshTokenValid = this.currentUser?.refresh_token_expires > Date.now();\r\n    if (!refreshTokenValid) {\r\n      this.logout();\r\n      return;\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        grant_type: 'refresh_token',\r\n        'refresh-token': this.storage.getItem(StorageNames.RefreshToken)\r\n      })\r\n    };\r\n\r\n    if (!this.authConfig.refreshUrl) {\r\n      throw new Error('refreshUrl missing in AuthConfig');\r\n    }\r\n\r\n    try {\r\n      const user = await this.http\r\n        .post<TokenResponse>(this.authConfig.refreshUrl, {}, httpOptions)\r\n        .pipe(map(token => this.readUserFromToken(token)))\r\n        .toPromise();\r\n      this.persistUser(user);\r\n    } catch (error) {\r\n      this.errorMessageSubject.next(error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login user and redirect after successful authentication.\r\n   * Custom auth services need to provide implementation\r\n   * @param redirectUrl Url to redirect after successful authentication\r\n   */\r\n  public async login(redirectUrl?: string): Promise<void> {\r\n    location.href = await this.generateLoginUrl(redirectUrl || location.href);\r\n  }\r\n\r\n  /**\r\n   * Log out user and redirect after.\r\n   * Custom auth services need to provide implementation\r\n   * @param redirectUrl Url to redirect after logging out\r\n   */\r\n  public logout(redirectUrl?: string): void {\r\n    const { logoutUrl } = this.authConfig;\r\n\r\n    if (!logoutUrl) {\r\n      console.warn(LOGOUT_CONFIG_NOT_SET_ERROR);\r\n    }\r\n\r\n    const headers = new HttpHeaders({ 'refresh-token': this.currentUser.refresh_token });\r\n    this.http\r\n      .post(logoutUrl, {}, { headers })\r\n      .pipe(\r\n        catchError(error => {\r\n          this.onLogout(redirectUrl);\r\n          throw error;\r\n        })\r\n      )\r\n      .subscribe(() => this.onLogout(redirectUrl));\r\n  }\r\n\r\n  private onLogout(redirectUrl?: string): void {\r\n    this.clearUser();\r\n    this.redirectIfNeeded(redirectUrl);\r\n  }\r\n\r\n  private redirectIfNeeded(redirectUrl?: string): void {\r\n    if (redirectUrl) {\r\n      this.navigateTo(redirectUrl);\r\n    } else {\r\n      this.reloadPage();\r\n    }\r\n  }\r\n\r\n  private reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  private navigateTo(redirectUrl: string): void {\r\n    this.router.navigate([redirectUrl]);\r\n  }\r\n\r\n  private async generateLoginUrl(redirectUrl: string): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const uint8Array = encoder.encode(redirectUrl);\r\n    const redirect_b64 = this.cryptoHelper.base64Encode(uint8Array);\r\n\r\n    // Generate a session value.\r\n    const nonce = this.cryptoHelper.generateRandomString(16);\r\n\r\n    // Generate pkce\r\n    const pkce = this.cryptoHelper.generateRandomString(32);\r\n    let pkce_hash = await this.cryptoHelper.sha256(pkce);\r\n\r\n    // KeyCloak requires this - https://tools.ietf.org/html/rfc7636#appendix-A\r\n    pkce_hash = pkce_hash.replace(/=/g, '');\r\n    pkce_hash = pkce_hash.replace(/\\+/g, '-');\r\n    pkce_hash = pkce_hash.replace(/\\//g, '_');\r\n\r\n    this.pkce = pkce;\r\n    this.nonce = nonce;\r\n\r\n    let url = this.authConfig.loginUrl;\r\n    url += '?' + this.authConfig.loginUrlParamRedirect + '=' + encodeURIComponent(redirect_b64);\r\n    url += '&' + this.authConfig.loginUrlParamChallenge + '=' + encodeURIComponent(pkce_hash);\r\n    url += '&' + this.authConfig.loginUrlParamNonce + '=' + encodeURIComponent(nonce);\r\n    return url;\r\n  }\r\n\r\n  private readClaimsFromToken(token: string): TokenClaims | null {\r\n    if (!token.includes('.')) {\r\n      // Token is not a valid JWT token\r\n      return null;\r\n    }\r\n    const tokenParts = token.split('.');\r\n    const claimsString = this.cryptoHelper.base64DecodeUnicode(tokenParts[1]);\r\n    return this.storage.parseJson(claimsString) as TokenClaims;\r\n  }\r\n\r\n  private parseQueryString(queryString: string): { key: string; value: string }[] {\r\n    if (!queryString.length) {\r\n      return [];\r\n    }\r\n    const queryDict = [];\r\n    const pairs = queryString.split('&');\r\n    for (const pair of pairs) {\r\n      const index = pair.indexOf('=');\r\n      let key: string;\r\n      let value: string;\r\n      if (index === -1) {\r\n        key = pair;\r\n        value = undefined;\r\n      } else {\r\n        key = pair.substr(0, index);\r\n        value = pair.substr(index + 1);\r\n      }\r\n      queryDict.push({\r\n        key: decodeURIComponent(key),\r\n        value: decodeURIComponent(value)\r\n      });\r\n    }\r\n    return queryDict;\r\n  }\r\n\r\n  public readUserFromSessionStorage(): User {\r\n    return this.storage.readUser();\r\n  }\r\n\r\n  public storeUserToSessionStorage(user: User): void {\r\n    this.storage.storeUser(user);\r\n  }\r\n\r\n  public clearUserFromSessionStorage(): void {\r\n    this.storage.clearUser();\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, from, throwError } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\n\r\nimport { AvlAuthService } from './avl-auth.service';\r\nimport { INTERCEPTOR_BASE_PATHS } from './variables';\r\n\r\n@Injectable()\r\nexport class AvlTokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    public auth: AvlAuthService,\r\n    @Inject(INTERCEPTOR_BASE_PATHS) protected basePaths: string[]\r\n  ) {\r\n    for (const i in this.basePaths) {\r\n      if (this.basePaths.hasOwnProperty(i)) {\r\n        this.basePaths[i] = this.basePaths[i].toLowerCase();\r\n      }\r\n    }\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (!this.isUrlInBasePaths(req)) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    if (this.auth.currentUser) {\r\n      req = this.setAuthHeader(req);\r\n    }\r\n\r\n    return next\r\n      .handle(req)\r\n      .pipe(catchError((err: HttpErrorResponse) => this.handleHttpError(req, next, err)));\r\n  }\r\n\r\n  private handleHttpError(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n    err: HttpErrorResponse\r\n  ): Observable<any> {\r\n    if (err.status === 401) {\r\n      // Unauthorized, tokens expired\r\n      return from(this.auth.refreshTokens()).pipe(\r\n        switchMap(_ => next.handle(this.setAuthHeader(req))),\r\n        catchError(_ => throwError(err))\r\n      );\r\n    }\r\n    return throwError(err);\r\n  }\r\n\r\n  /** Check if request URL is in provided basePaths\r\n   * @param request Http request instance whose URL is checked.\r\n   */\r\n  private isUrlInBasePaths(request: HttpRequest<any>): boolean {\r\n    const url = request.url.toLowerCase();\r\n    const path = this.basePaths.find(path => url.startsWith(path));\r\n    return Boolean(path);\r\n  }\r\n\r\n  /** Sets access token to authorization header of HTTP request\r\n   * @param request HTTP request instance\r\n   * @returns Cloned HTTP with adapted headers\r\n   */\r\n  private setAuthHeader(req: HttpRequest<any>): HttpRequest<any> {\r\n    const access_token = this.auth.currentUser.access_token;\r\n    const header = `Bearer ${access_token}`;\r\n    const headers = req.headers.set('Authorization', header);\r\n\r\n    return req.clone({ headers });\r\n  }\r\n}\r\n","import { User } from '../auth/user.model';\r\n\r\nexport enum MessageType {\r\n  action = 'action',\r\n  colorScheme = 'colorScheme',\r\n  language = 'language',\r\n  locale = 'locale',\r\n  navigation = 'navigation',\r\n  unsavedChanges = 'unsavedChanges',\r\n  registration = 'registration',\r\n  theme = 'theme',\r\n  login = 'login',\r\n  authentication = 'authentication',\r\n  redirectedFromLogIn = 'redirectedFromLogIn',\r\n  user = 'user',\r\n  shellInfo = 'shellInfo'\r\n}\r\n\r\nexport interface Message {\r\n  messageType: MessageType;\r\n  payload: Payload;\r\n}\r\n\r\nexport type Payload = string | ColorScheme | User | boolean | AvlLocaleSettings | ShellInfo;\r\n\r\nexport interface MessageHandlers {\r\n  [key: string]: (payload: Payload) => void;\r\n}\r\nexport interface ColorScheme {\r\n  '--avl-product-color': string;\r\n  '--avl-product-hover-color': string;\r\n  '--avl-product-focus-color': string;\r\n}\r\n\r\nexport type ShellInfo = {\r\n  url: string;\r\n  children: ChildInfo[];\r\n};\r\n\r\nexport type ChildInfo = {\r\n  url: string;\r\n  name: string;\r\n};\r\n\r\nexport interface AvlLocaleSettings {\r\n  country: string;\r\n  dateTimeFormat: string;\r\n  decimalSeparator: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  AvlLocaleSettings,\r\n  ColorScheme,\r\n  Message,\r\n  MessageHandlers,\r\n  MessageType,\r\n  Payload,\r\n  ShellInfo\r\n} from './message.model';\r\nimport { AvlAuthService } from '../auth/avl-auth.service';\r\nimport { User } from '../auth/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShellCommunicationService {\r\n  private readonly id: string;\r\n\r\n  private handlers: MessageHandlers = {\r\n    [MessageType.theme]: (theme: string) => this.handleTheme(theme),\r\n    [MessageType.locale]: (locale: AvlLocaleSettings) => this.handleLocale(locale),\r\n    [MessageType.language]: (language: string) => this.handleLanguage(language),\r\n    [MessageType.colorScheme]: (colorScheme: ColorScheme) => this.handleColorScheme(colorScheme),\r\n    [MessageType.navigation]: (url: string) => this.handleNavigation(url),\r\n    [MessageType.action]: (action: string) => this.handleAction(action),\r\n    [MessageType.authentication]: (user: User) => this.handleAuthentication(user),\r\n    [MessageType.redirectedFromLogIn]: (redirected: boolean) =>\r\n      this.handleRedirectedFromLogIn(redirected),\r\n    [MessageType.shellInfo]: (shellInfo: ShellInfo) => this.handleShellInfo(shellInfo)\r\n  };\r\n\r\n  private themeSubject = new Subject<string>();\r\n  private languageSubject = new Subject<string>();\r\n  private actionSubject = new Subject<string>();\r\n  private localeSubject = new Subject<AvlLocaleSettings>();\r\n  private colorSchemeSubject = new Subject<ColorScheme>();\r\n  private shellInfoSubject = new Subject<ShellInfo>();\r\n  private shellUrl = '';\r\n\r\n  public shellInfo: ShellInfo;\r\n\r\n  /**\r\n   * Observable tracking theme\r\n   * Emits 'dark' if dark theme selected, 'light' otherwise\r\n   */\r\n  public theme$: Observable<string> = this.themeSubject;\r\n\r\n  /**\r\n   * Observable tracking language\r\n   */\r\n  public language$: Observable<string> = this.languageSubject;\r\n  public action$: Observable<string> = this.actionSubject;\r\n\r\n  /**\r\n   * Observable tracking locale changes\r\n   */\r\n  public locale$: Observable<AvlLocaleSettings> = this.localeSubject;\r\n\r\n  /**\r\n   * Observable tracking color scheme changes\r\n   */\r\n  public colorScheme$: Observable<ColorScheme> = this.colorSchemeSubject;\r\n\r\n  /**\r\n   * Observable tracking login state\r\n   * Resolves to true on successful login, false otherwise\r\n   */\r\n  public isLoggedIn$: Observable<boolean>;\r\n\r\n  /**\r\n   * Observable tracking if redirected from idb\r\n   * Resolves to true on redirection, false otherwise\r\n   */\r\n  public redirectedFromLogIn = new BehaviorSubject<boolean>(undefined);\r\n\r\n  /**\r\n   * Observable tracking shell origin and list of children\r\n   */\r\n  public shellInfo$: Observable<ShellInfo> = this.shellInfoSubject;\r\n\r\n  /**\r\n   * If current application is inside shell application\r\n   * True if current application is inside shell application, false otherwise.\r\n   */\r\n  public isChild = window.location !== window.parent.location;\r\n\r\n  constructor(private router: Router, private authService: AvlAuthService) {\r\n    window.addEventListener('message', event => this.onMessage(event));\r\n\r\n    this.id = uuidv4();\r\n  }\r\n\r\n  public notifyShellAboutAction(action: string): void {\r\n    this.postMessageToShell(MessageType.action, action);\r\n  }\r\n\r\n  /**\r\n   * Sends message to shell that it needs to navigate to login page\r\n   */\r\n  public notifyShellAboutLogin(url: string): void {\r\n    this.postMessageToShell(MessageType.login, url);\r\n  }\r\n\r\n  /**\r\n   * Sends message containing information about unsaved changes in a form to shell\r\n   */\r\n\r\n  public notifyShellAboutUnsavedChanges(formDirty: boolean): void {\r\n    this.postMessageToShell(MessageType.unsavedChanges, formDirty);\r\n  }\r\n\r\n  /**\r\n   * Sends message to shell that it needs to navigate to @url\r\n   */\r\n  public notifyShellAboutNavigation(url: string): void {\r\n    this.postMessageToShell(MessageType.navigation, url);\r\n  }\r\n\r\n  /**\r\n   * Sends registration message to shell\r\n   */\r\n  public registerToShell(): void {\r\n    this.postMessageToShell(MessageType.registration, this.id);\r\n  }\r\n\r\n  /**\r\n   * Send updated user data to shell\r\n   */\r\n  public updateUserToShell(): void {\r\n    const user = this.authService.readUserFromSessionStorage();\r\n    this.postMessageToShell(MessageType.user, user);\r\n  }\r\n\r\n  private onMessage(event: MessageEvent): void {\r\n    // if the app is used as a child in iframe, it should only accept messages\r\n    // comming from shell using shell origin\r\n    if (this.shellUrl && this.shellUrl != event.origin) {\r\n      return;\r\n    }\r\n\r\n    const { payload, messageType }: Message = event.data;\r\n    const handlers = {\r\n      ...this.handlers,\r\n      default: () => console.log('Unrecognized message for the child.', event)\r\n    };\r\n\r\n    (handlers[messageType] || handlers.default)(payload);\r\n  }\r\n\r\n  private postMessageToShell(messageType: MessageType, payload: Payload): void {\r\n    const message: Message = { messageType, payload };\r\n    // send to shellUrl targetOrigin as soon it is awailable (shell must provide it after registration)\r\n    if (this.shellUrl) {\r\n      window.parent.window.postMessage(message, this.shellUrl);\r\n    } else if (document.referrer && message.messageType === MessageType.registration) {\r\n      const url = new URL(document.referrer);\r\n      window.parent.window.postMessage(message, url.origin);\r\n    }\r\n  }\r\n\r\n  private handleColorScheme(colorScheme: ColorScheme): void {\r\n    this.colorSchemeSubject.next(colorScheme);\r\n  }\r\n\r\n  private handleLanguage(language: string): void {\r\n    this.languageSubject.next(language);\r\n  }\r\n\r\n  private handleLocale(locale: AvlLocaleSettings): void {\r\n    this.localeSubject.next(locale);\r\n  }\r\n\r\n  private handleTheme(theme: string): void {\r\n    this.themeSubject.next(theme);\r\n  }\r\n\r\n  private handleNavigation(url: string): void {\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  private handleAction(action: string): void {\r\n    this.actionSubject.next(action);\r\n  }\r\n\r\n  private handleAuthentication(user: User): void {\r\n    if (user?.access_token) {\r\n      this.authService.storeUserToSessionStorage(user);\r\n    } else {\r\n      this.authService.clearUserFromSessionStorage();\r\n    }\r\n\r\n    this.authService.reloadPersistedUserData();\r\n  }\r\n\r\n  private handleRedirectedFromLogIn(redirected: boolean) {\r\n    this.redirectedFromLogIn.next(redirected);\r\n  }\r\n\r\n  private handleShellInfo(shellInfo: ShellInfo): void {\r\n    if (shellInfo) {\r\n      this.shellUrl = new URL(shellInfo.url).origin;\r\n    }\r\n    this.shellInfoSubject.next(shellInfo);\r\n    this.shellInfo = shellInfo;\r\n  }\r\n}\r\n","import { AvlTranslationService } from '@avl-interfaces/interfaces';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class NgxTranslateTranslationService implements AvlTranslationService {\r\n\r\n  public get language(): string {\r\n    return this.translateService.currentLang;\r\n  }\r\n\r\n  constructor(private translateService: TranslateService) { }\r\n\r\n  public translate(key: string, interpolateParams?: object): Promise<string> {\r\n    return this.translateService.get(key, interpolateParams).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NgxTranslateTranslationService } from './ngx-translate-translation.service';\r\nimport '@avl-services/vanilla-js-services/avl-localization-service/avl-localization-service.api';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationManagementService {\r\n  constructor(\r\n    private readonly translateService: TranslateService,\r\n    private readonly translationService: NgxTranslateTranslationService\r\n  ) {}\r\n\r\n  public languages = [\r\n    { code: 'en', label: 'English' },\r\n    { code: 'hr', label: 'Croatian' }\r\n  ];\r\n\r\n  public initializeTranslations(): () => Promise<any> {\r\n    return () => {\r\n      AvlLocalizationService.translationService = this.translationService;\r\n      let lang = localStorage.getItem('lang');\r\n      if (lang == null) {\r\n        lang = this.languages[0].code;\r\n        localStorage.setItem('lang', lang);\r\n      }\r\n      return this.translateService.use(lang).toPromise();\r\n    };\r\n  }\r\n  public get language(): string {\r\n    return localStorage.getItem('lang');\r\n  }\r\n\r\n  public changeLanguage(lang: string) {\r\n    const oldLang = localStorage.getItem('lang');\r\n    if (!oldLang || oldLang !== lang) {\r\n      localStorage.setItem('lang', lang);\r\n      location.reload();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private _isDarkTheme: boolean;\r\n\r\n  /**\r\n   * Determines whether theme is dark or not\r\n   */\r\n  public get isDarkTheme(): boolean {\r\n    if (this._isDarkTheme == null) {\r\n      this._isDarkTheme = localStorage.getItem('theme') === 'dark' || false;\r\n    }\r\n    return this._isDarkTheme;\r\n  }\r\n\r\n  /**\r\n   * Sets the dark theme to true or false\r\n   * @param isDark boolean that sets theme to dark if true; light if false\r\n   */\r\n  public set isDarkTheme(isDark: boolean) {\r\n    this._isDarkTheme = isDark;\r\n    localStorage.setItem('theme', isDark === true ? 'dark' : 'light');\r\n    this.themeChangedSubject.next(this.getCurrentTheme());\r\n    this.changeTheme();\r\n  }\r\n\r\n  private themeChangedSubject = new Subject<string>();\r\n  public readonly themeChanged = this.themeChangedSubject.asObservable();\r\n\r\n  /**\r\n   * Gets current theme string\r\n   * @returns string 'dark' or 'light'\r\n   */\r\n  public getCurrentTheme(): string {\r\n    return this.isDarkTheme ? 'dark' : 'light';\r\n  }\r\n\r\n  private changeTheme() {\r\n    document.body.setAttribute('theme', this.getCurrentTheme());\r\n  }\r\n\r\n  constructor() {\r\n    this.changeTheme();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslationManagementService } from '../settings/translation-management.service';\r\nimport { ThemeService } from '../settings/theme.service';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport {\r\n  AvlLocaleSettings,\r\n  ColorScheme,\r\n  Message,\r\n  MessageHandlers,\r\n  MessageType,\r\n  Payload,\r\n  ShellInfo\r\n} from './message.model';\r\n\r\nimport { AvlAuthService } from '../auth/avl-auth.service';\r\nimport { User } from '../auth/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChildCommunicationService {\r\n  private handlers: MessageHandlers = {\r\n    [MessageType.login]: (url: string) => this.handleLogin(url),\r\n    [MessageType.navigation]: (url: string) => this.handleNavigation(url),\r\n    [MessageType.action]: (action: string) => this.handleAction(action),\r\n    [MessageType.registration]: _ => this.handleRegistration(),\r\n    [MessageType.user]: (user: User) => this.handleUser(user),\r\n    [MessageType.unsavedChanges]: (formDirty: boolean) => this.handleUnsavedChanges(formDirty)\r\n  };\r\n\r\n  private actionSubject = new Subject<string>();\r\n  private navigationSubject = new Subject<string>();\r\n  private loginSubject = new Subject<string>();\r\n  private registrationCompletedSubject = new Subject<boolean>();\r\n  private unsavedChangesSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  protected iframeEl: HTMLIFrameElement;\r\n\r\n  public action$: Observable<string> = this.actionSubject;\r\n\r\n  /**\r\n   * Observable tracking url to navigate to\r\n   */\r\n  public navigation$: Observable<string> = this.navigationSubject;\r\n\r\n  /**\r\n   * Observable tracking url for login\r\n   * Url for login provided by child application\r\n   */\r\n  public login$: Observable<string> = this.loginSubject;\r\n\r\n  /**\r\n   * Observable tracking if there are unsaved changes in a form\r\n   */\r\n\r\n  public unsavedChanges$ = this.unsavedChangesSubject.asObservable();\r\n\r\n  /**\r\n   * Observable tracking child registration\r\n   * Emits true if registration was successful, false otherwise\r\n   */\r\n  public registrationCompleted$: Observable<boolean> = this.registrationCompletedSubject;\r\n\r\n  constructor(\r\n    private translationManagementService: TranslationManagementService,\r\n    private themeService: ThemeService,\r\n    private authService: AvlAuthService\r\n  ) {\r\n    window.addEventListener('message', event => this.onMessage(event));\r\n    this.themeService.themeChanged.subscribe(() => this.postThemeToChildren());\r\n  }\r\n\r\n  /**\r\n   * Sends the new value to the unsaved changes observer\r\n   * @param value Value to send to the observer\r\n   */\r\n  public handleUnsavedChanges(formDirty: boolean): void {\r\n    this.unsavedChangesSubject.next(formDirty);\r\n  }\r\n\r\n  /**\r\n   * Sends message to child about locale\r\n   */\r\n  public notifyChildAboutLocale(locale: AvlLocaleSettings): void {\r\n    this.postMessageToChild(MessageType.locale, locale);\r\n  }\r\n\r\n  /**\r\n   * Sends message to child about language\r\n   */\r\n  public notifyChildAboutLanguage(language: string): void {\r\n    this.postMessageToChild(MessageType.language, language);\r\n  }\r\n\r\n  /**\r\n   * Sends message to child about action\r\n   */\r\n  public notifyChildAboutAction(action: string): void {\r\n    this.postMessageToChild(MessageType.action, action);\r\n  }\r\n\r\n  /**\r\n   * Sends message to child about navigation\r\n   */\r\n  public notifyChildAboutNavigation(url: string): void {\r\n    this.postMessageToChild(MessageType.navigation, url);\r\n  }\r\n\r\n  /**\r\n   * Sends messages to children about current user\r\n   */\r\n  public postAuthenticationDataToChildren() {\r\n    const payload: User = this.authService.readUserFromSessionStorage();\r\n    this.postMessageToChild(MessageType.authentication, payload);\r\n  }\r\n\r\n  /**\r\n   * Sends messages to children about selected application theme\r\n   */\r\n  public postThemeToChildren(): void {\r\n    const theme = this.themeService.getCurrentTheme();\r\n    this.postMessageToChild(MessageType.theme, theme);\r\n  }\r\n\r\n  /**\r\n   * Sends messages to children about selected language\r\n   */\r\n  public postLanguageToChildren(): void {\r\n    this.postMessageToChild(MessageType.language, this.translationManagementService.language);\r\n  }\r\n\r\n  /**\r\n   * Sends messages to children about selected locale\r\n   */\r\n  public postLocaleToChildren(): void {\r\n    const country = localStorage.getItem('country');\r\n    const dateTimeFormat = localStorage.getItem('dateTimeFormat');\r\n    const decimalSeparator = localStorage.getItem('decimalSeparator');\r\n    this.postMessageToChild(MessageType.locale, {\r\n      country,\r\n      dateTimeFormat,\r\n      decimalSeparator\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sends message to child about redirection from idb\r\n   */\r\n  public postRedirectedFromLogIn(payload: boolean): void {\r\n    this.postMessageToChild(MessageType.redirectedFromLogIn, payload);\r\n  }\r\n\r\n  /**\r\n   * Sends message to child about shell url (origin/solution/app name) and list of children\r\n   */\r\n  public postShellInfoToChildren(payload: ShellInfo): void {\r\n    this.postMessageToChild(MessageType.shellInfo, payload);\r\n  }\r\n\r\n  /**\r\n   * Sends message to children about color scheme\r\n   */\r\n  public postColorSchemeToChildren(): void {\r\n    const computedStyle = window.getComputedStyle(document.body);\r\n    const productColor = computedStyle.getPropertyValue('--avl-product-color');\r\n    const productHoverColor = computedStyle.getPropertyValue('--avl-product-hover-color');\r\n    const productFocusColor = computedStyle.getPropertyValue('--avl-product-focus-color');\r\n\r\n    const colorScheme: ColorScheme = {\r\n      '--avl-product-color': productColor,\r\n      '--avl-product-hover-color': productHoverColor,\r\n      '--avl-product-focus-color': productFocusColor\r\n    };\r\n\r\n    this.postMessageToChild(MessageType.colorScheme, colorScheme);\r\n  }\r\n\r\n  private handleAction(action: string): void {\r\n    this.actionSubject.next(action);\r\n  }\r\n\r\n  private handleNavigation(navigation: string): void {\r\n    this.handleUnsavedChanges(false);\r\n    this.navigationSubject.next(navigation);\r\n  }\r\n\r\n  private handleLogin(login: string): void {\r\n    this.loginSubject.next(login);\r\n  }\r\n\r\n  // when child started its registration iframe is loaded and shell gets a message that he can send messages to iframe\r\n  private handleRegistration(): void {\r\n    this.iframeEl = document.getElementsByTagName('iframe')[0] as HTMLIFrameElement;\r\n\r\n    this.postThemeToChildren();\r\n    this.postColorSchemeToChildren();\r\n    this.postLanguageToChildren();\r\n    this.postLocaleToChildren();\r\n\r\n    this.registrationCompletedSubject.next(true);\r\n  }\r\n\r\n  private onMessage(event: MessageEvent): void {\r\n    const { payload, messageType }: Message = event.data;\r\n    if (messageType !== MessageType.registration && !this.iframeEl) {\r\n      return;\r\n    }\r\n    if (this.iframeEl) {\r\n      // ignore messages that are not from iframe\r\n      const url = new URL(this.iframeEl.src);\r\n      if (url.origin !== event.origin) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const handlers = {\r\n      ...this.handlers,\r\n      default: () => console.log('Unrecognized message for the shell.', event)\r\n    };\r\n\r\n    (handlers[messageType] || handlers.default)(payload);\r\n  }\r\n\r\n  private postMessageToChild(messageType: MessageType, payload: Payload): void {\r\n    if (!this.iframeEl) {\r\n      return;\r\n    }\r\n\r\n    const message: Message = { messageType, payload };\r\n    const url = new URL(this.iframeEl.src);\r\n    this.iframeEl.contentWindow?.postMessage(message, url.origin);\r\n  }\r\n\r\n  // when child updates user data, it has to reflect in user data in shell\r\n  private handleUser(user: User) {\r\n    if (user && user?.access_token !== this.authService.currentUser?.access_token) {\r\n      this.authService.storeUserToSessionStorage(user);\r\n      this.authService.reloadPersistedUserData();\r\n    } else if (user === null && this.authService.isUserInvalid(this.authService.currentUser)) {\r\n      this.authService.clearUserFromSessionStorage();\r\n      this.authService.reloadPersistedUserData();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * List of all types of messages that can be logged.\r\n */\r\nexport enum LogSeverity {\r\n  Debug,\r\n  Info,\r\n  Warning,\r\n  Error,\r\n  Fatal,\r\n}\r\n\r\n/**\r\n * **LogConfig** class is required by the _LoggingModule_.\r\n *\r\n * An instance of this class should be passed into _forRoot_ method of _LoggingModule_\r\n * when importing module in the Angular application.\r\n * ```\r\n * import logConfig from 'logging.config.ts;\r\n * import LoggingModule from '@avl-services/ng-services';\r\n *  ....\r\n *  @NgModule({\r\n *    imports: [\r\n *      LoggingModule.forRoot(logConfig),\r\n *      ...\r\n *    ],\r\n *    ...\r\n *  }) export class AppModule {}\r\n * ```\r\n */\r\nexport class LogConfig {\r\n  /**\r\n   * API endpoint for logging (e.g. https://vizbox.avl.com/api/theia/logs).\r\n   * - Mandatory\r\n   */\r\n  public readonly endpoint: string;\r\n\r\n  /**\r\n   * Name of the database in which logs will be stored.\r\n   * - Mandatory\r\n   */\r\n  public readonly targetName: string;\r\n\r\n  /**\r\n   * Name of the application that uses the logging service.\r\n   * - Mandatory\r\n   */\r\n  public readonly appName: string;\r\n\r\n  /**\r\n   * Version of the application that uses the logging service.\r\n   * - Mandatory\r\n   */\r\n  public readonly version: string;\r\n\r\n  /**\r\n   * Flag that indicates whether logging starts automatically once the user logs in using credential.\r\n   *\r\n   * If true, app requires _AvlAuthService_ instance in _AppModule_ providers array:\r\n   * ```\r\n   * { provide: AvlAuthService, useClass: AvlOidcCodeAuthService }\r\n   * ```\r\n   * If false, user can control logging using the service (_startLogging_, _stopLogging_ methods).\r\n   *\r\n   * - Optional\r\n   * - Default: false\r\n   */\r\n  public autologging = false;\r\n\r\n  /**\r\n   * Minimum message severity to log.\r\n   * - Optional\r\n   * - Default: LogSeverity.Info\r\n   */\r\n  public globalLogLevel: LogSeverity = LogSeverity.Info;\r\n\r\n  /**\r\n   * Time in milliseconds, determines the period of API requests for logging.\r\n   * - Optional\r\n   * - Default: 30_000 ms\r\n   */\r\n  public debounceTime = 30_000;\r\n\r\n  /**\r\n   * Log queue capacity\r\n   *\r\n   * If reached, API request is sent with all logs in log queue, and queue is cleared out.\r\n   * - Optional\r\n   * - Default: 10\r\n   */\r\n  public capacity = 10;\r\n\r\n  /**\r\n   * Creates instance of _LogConfig_ class.\r\n   * @param endpoint API endpoint for logging.\r\n   * @param targetName Name of the database in which logs will be stored\r\n   * @param appName Name of the application that uses the logging service\r\n   * @param version Version of the application that uses the logging service\r\n   * @param autologging Flag that indicates whether logging starts automatically once the user logs in using credential. Default: false\r\n   * @param globalLogLevel Minimum message severity to log. Default: LogSeverity.Info\r\n   * @param debounceTime Time in milliseconds, determines the period of API requests for logging. Default: 30_000 ms\r\n   * @param capacity Log queue capacity. Default: 10\r\n   */\r\n  constructor(\r\n    endpoint: string,\r\n    targetName: string,\r\n    appName: string,\r\n    version: string,\r\n    autologging: boolean = false,\r\n    globalLogLevel: LogSeverity = LogSeverity.Info,\r\n    debounceTime: number = 30_000,\r\n    capacity: number = 10\r\n  ) {\r\n    this.endpoint = endpoint;\r\n    this.targetName = targetName;\r\n    this.appName = appName;\r\n    this.version = version;\r\n    this.autologging = autologging;\r\n    this.globalLogLevel = globalLogLevel;\r\n    this.debounceTime = debounceTime;\r\n    this.capacity = capacity;\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface Log {\r\n  readonly appName?: string;\r\n  readonly componentName?: string;\r\n  readonly severity?: string;\r\n  readonly message?: string;\r\n  readonly procId?: string;\r\n  readonly timestamp?: string;\r\n  readonly version?: string;\r\n  readonly AVLRequestId?: string;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { AvlAuthService } from '../auth/avl-auth.service';\r\nimport { interval, Observable, Subject } from 'rxjs';\r\nimport { filter, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { Log, LogConfig, LogSeverity } from './logging.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoggingService implements OnDestroy {\r\n  private logs: Log[] = [];\r\n  private headers: HttpHeaders;\r\n  private isLogging = false;\r\n\r\n  private debounceTime$: Subject<number> = new Subject();\r\n  private logs$: Subject<Log[]> = new Subject();\r\n  private stopLogging$: Subject<void> = new Subject();\r\n  private postLogs$: Subject<void> = new Subject();\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('loggingConfig') private config: LogConfig,\r\n    @Optional() @Inject(AvlAuthService) private authService: AvlAuthService\r\n  ) {\r\n    this.headers = new HttpHeaders({\r\n      targetName: this.config.targetName,\r\n    });\r\n\r\n    if (config.autologging) {\r\n      this.authService?.isLoggedIn$.pipe(takeUntil(this.destroyed$)).subscribe((isLoggedIn) => this.decideOnLogging(isLoggedIn));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.postLogs$.complete();\r\n    this.debounceTime$.complete();\r\n    this.logs$.complete();\r\n    this.stopLogging$.next();\r\n    this.stopLogging$.complete();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n  /**\r\n   * Starts periodical logging process.\r\n   *\r\n   * Depends on _debounceTime_ and _capacity_ properties.\r\n   */\r\n  public startLogging(): void {\r\n    this.isLogging = true;\r\n    this.debounceTime$\r\n      .pipe(\r\n        takeUntil(this.stopLogging$),\r\n        switchMap((debounceTime) => this.periodicalLogging(debounceTime))\r\n      )\r\n      .subscribe(() => this.onPostMessages());\r\n\r\n    this.postLogs$\r\n      .pipe(\r\n        takeUntil(this.stopLogging$),\r\n        switchMap(() => this.postMessages())\r\n      )\r\n      .subscribe(() => this.onPostMessages());\r\n\r\n    this.setLoggingDebounceTime(this.config.debounceTime);\r\n  }\r\n\r\n  /**\r\n   * Stops logging process.\r\n   */\r\n  public stopLogging(): void {\r\n    this.isLogging = false;\r\n    this.postLogs();\r\n    this.stopLogging$.next();\r\n  }\r\n\r\n  /**\r\n   * Gets all currently queued logs as an observable value.\r\n   * @returns All currently queued logs as an observable value\r\n   */\r\n  public getLogs$(): Observable<Log[]> {\r\n    return this.logs$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Logs message with debug severity.\r\n   * @param message Message used for constructing a debug log\r\n   * @param componentName Name of the component which called this method\r\n   */\r\n  public debug(message: string, componentName: string = ''): void {\r\n    this.log(message, LogSeverity.Debug, componentName);\r\n  }\r\n\r\n  /**\r\n   * Logs message with info severity.\r\n   * @param message Message used for constructing a info log\r\n   * @param componentName Name of the component which called this method\r\n   */\r\n  public info(message: string, componentName: string = ''): void {\r\n    this.log(message, LogSeverity.Info, componentName);\r\n  }\r\n\r\n  /**\r\n   * Logs message with warning severity.\r\n   * @param message Message used for constructing a warning log\r\n   * @param componentName Name of the component which called this method\r\n   */\r\n  public warn(message: string, componentName: string = ''): void {\r\n    this.log(message, LogSeverity.Warning, componentName);\r\n  }\r\n\r\n  /**\r\n   * Logs message with error severity.\r\n   * @param message Message used for constructing a error log\r\n   * @param componentName Name of the component which called this method\r\n   */\r\n  public error(message: string, componentName: string = ''): void {\r\n    this.log(message, LogSeverity.Error, componentName);\r\n  }\r\n\r\n  /**\r\n   * Logs message with fatal severity.\r\n   * @param message Message used for constructing a fatal log\r\n   * @param componentName Name of the component which called this method\r\n   */\r\n  public fatal(message: string, componentName: string = ''): void {\r\n    this.log(message, LogSeverity.Fatal, componentName);\r\n  }\r\n\r\n  /**\r\n   * Setter for debounce time (log period).\r\n   * @param debounceTime Time in milliseconds; determines the period of API requests for logging\r\n   */\r\n  public setLoggingDebounceTime(debounceTime: number): void {\r\n    this.config.debounceTime = debounceTime;\r\n    this.debounceTime$.next(debounceTime);\r\n  }\r\n\r\n  /**\r\n   * Setter for global log level.\r\n   * @param globalLogLevel Minimum message severity to log\r\n   */\r\n  public setGlobalLogLevel(globalLogLevel: LogSeverity): void {\r\n    this.config.globalLogLevel = globalLogLevel;\r\n  }\r\n\r\n  /**\r\n   * Setter for log queue capacity.\r\n   * @param capacity Log queue capacity\r\n   */\r\n  public setLogCapacity(capacity: number): void {\r\n    this.config.capacity = capacity;\r\n  }\r\n\r\n  // Logic, private methods\r\n\r\n  private log(message: string, severity: LogSeverity, componentName: string): void {\r\n    if (!this.isLogging || severity < this.config.globalLogLevel) {\r\n      return;\r\n    }\r\n\r\n    this.createAndStoreLog(message, severity, componentName);\r\n    this.dispatchLogs();\r\n\r\n    if (this.isFullCapacity()) {\r\n      this.postLogs$.next();\r\n    }\r\n  }\r\n\r\n  private createAndStoreLog(message: string, severityType: LogSeverity, componentName: string): void {\r\n    const timestamp = new Date().toISOString();\r\n    const { appName, version } = this.config;\r\n    const severity = severityType.toString();\r\n    const log: Log = { message, severity, timestamp, componentName, appName, version };\r\n    this.logs.push(log);\r\n  }\r\n\r\n  private isFullCapacity(): boolean {\r\n    return this.logs.length >= this.config.capacity;\r\n  }\r\n\r\n  private clearLogs(): void {\r\n    this.logs = [];\r\n  }\r\n\r\n  private onPostMessages(): void {\r\n    this.clearLogs();\r\n    this.dispatchLogs();\r\n  }\r\n\r\n  private postLogs(): void {\r\n    this.postLogs$.next();\r\n  }\r\n\r\n  private periodicalLogging(period: number): Observable<void> {\r\n    return interval(period).pipe(\r\n      tap(() => {\r\n        if (!this.logs.length) {\r\n          this.dispatchLogs();\r\n        }\r\n      }),\r\n      filter(() => !!this.logs.length),\r\n      switchMap(() => this.postMessages())\r\n    );\r\n  }\r\n\r\n  private postMessages(): Observable<void> {\r\n    return this.http.post<void>(this.config.endpoint, this.logs, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  private dispatchLogs(): void {\r\n    this.logs$.next(this.logs);\r\n  }\r\n\r\n  private decideOnLogging(isLoggedIn: boolean): void {\r\n    if (isLoggedIn) {\r\n      this.startLogging();\r\n    } else {\r\n      this.stopLogging();\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { LogConfig } from './logging.model';\r\nimport { LoggingService } from './logging.service';\r\n\r\n@NgModule()\r\nexport class LoggingModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: LoggingModule) {\r\n    if (parentModule) {\r\n      throw new Error('LoggingModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n  static forRoot(config: LogConfig): ModuleWithProviders<LoggingModule> {\r\n    return {\r\n      ngModule: LoggingModule,\r\n      providers: [LoggingService, { provide: 'loggingConfig', useValue: config }],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel\r\n} from '@microsoft/signalr';\r\n\r\nimport {\r\n  AvlNotification,\r\n  AvlNotificationConnectionOptions,\r\n  AvlNotificationMetadata\r\n} from '@avl-interfaces/interfaces';\r\n\r\ninterface ApplicationConnection {\r\n  /** Connection identifier */\r\n  readonly id: string;\r\n\r\n  /**\r\n   * Connection to the backend hub.\r\n   */\r\n  readonly connection: HubConnection;\r\n}\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  private hubConnections: ApplicationConnection[] = [];\r\n  private notification: Subject<AvlNotification> = new Subject();\r\n\r\n  /**\r\n   * Observable which emits newly arrived notifications.\r\n   */\r\n  public notification$: Observable<AvlNotification> = this.notification;\r\n\r\n  /**\r\n   * Builds and starts signalR hub connection with the server.\r\n   * If connection already exists and is not connected, restarts the connection.\r\n   * @param endpoint server endpoint\r\n   * @param options options of the connection\r\n   */\r\n  public startConnection(endpoint: string, options: AvlNotificationConnectionOptions): void {\r\n    let connection = this.getConnectionByID(options.connectionID);\r\n    if (!connection) {\r\n      connection = this.buildConnection(endpoint, options);\r\n    }\r\n\r\n    if (connection.state === HubConnectionState.Connected) {\r\n      return;\r\n    }\r\n\r\n    connection\r\n      .start()\r\n      .then(() => this.startNotifications(connection, options.metadata))\r\n      .catch(() => console.warn('Notification service: Failed to establish connection.'));\r\n  }\r\n\r\n  /**\r\n   * Stops connection with the server\r\n   * @param connectionID connection identifier\r\n   */\r\n  public stopConnection(connectionID: string): void {\r\n    const connection = this.getConnectionByID(connectionID);\r\n\r\n    if (!connection) {\r\n      return;\r\n    }\r\n\r\n    connection.off('transferNotification');\r\n    connection.stop();\r\n  }\r\n\r\n  /**\r\n   * Removes connection entirely\r\n   * @param connectionID connection identifier\r\n   */\r\n  public removeConnection(connectionID: string): void {\r\n    this.stopConnection(connectionID);\r\n\r\n    const index = this.hubConnections.findIndex(connection => connection.id === connectionID);\r\n    if (index !== -1) {\r\n      this.hubConnections.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates notifications metadata for specific connection. Notifies server about it.\r\n   * @param connectionID connection identifier\r\n   * @param metadata notification metadata, (e.g language)\r\n   */\r\n  public updateNotifications(connectionID: string, metadata: AvlNotificationMetadata): void {\r\n    const connection = this.getConnectionByID(connectionID);\r\n    if (!connection) {\r\n      return;\r\n    }\r\n\r\n    this.startNotifications(connection, metadata);\r\n  }\r\n\r\n  // Private methods\r\n\r\n  private startNotifications(connection: HubConnection, metadata: AvlNotificationMetadata): void {\r\n    connection.invoke('startNotifications', metadata);\r\n  }\r\n\r\n  private getConnectionByID(connectionID: string): HubConnection {\r\n    const index = this.hubConnections.findIndex(connection => connection.id === connectionID);\r\n    return this.hubConnections[index]?.connection;\r\n  }\r\n\r\n  private buildConnection(\r\n    endpoint: string,\r\n    options: AvlNotificationConnectionOptions\r\n  ): HubConnection {\r\n    const hubConnection = new HubConnectionBuilder()\r\n      .configureLogging(LogLevel.None)\r\n      .withUrl(endpoint, { accessTokenFactory: () => options.accessToken })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    hubConnection.onreconnected(() => this.startNotifications(hubConnection, options.metadata));\r\n    hubConnection.on('transferNotification', (notification: AvlNotification) => {\r\n      this.notification.next(notification);\r\n    });\r\n\r\n    this.hubConnections.push({\r\n      id: options.connectionID,\r\n      connection: hubConnection\r\n    });\r\n\r\n    return hubConnection;\r\n  }\r\n}\r\n","import { AvlUploadService } from '@avl-interfaces/interfaces';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const UPLOAD_SERVICE = new InjectionToken<AvlUploadService>('UPLOAD_SERVICE');\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpErrorResponse } from '@angular/common/http';\r\nimport { AvlUploadService, AvlFile, AvlAbortUploadAction, AvlUploadProgressEvent, AvlHttpErrorResponse } from '@avl-interfaces/interfaces';\r\n\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UploadService implements AvlUploadService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  downloadFile(\r\n    url: string,\r\n    progressCallback?: (progress: AvlUploadProgressEvent) => void,\r\n    completeCallback?: (blob: Blob) => void,\r\n    failCallback?: (errorResponse: AvlHttpErrorResponse) => void\r\n  ): AvlAbortUploadAction {\r\n    const req: Observable<any> = this.httpClient.get(url, { reportProgress: true, responseType: 'blob', observe: 'events' })\r\n      .pipe(map(event => {\r\n        if (event.type === HttpEventType.DownloadProgress) {\r\n          progressCallback?.(event);\r\n        }\r\n        if (event.type === HttpEventType.Response && event.body != null) {\r\n          completeCallback?.(event.body);\r\n        }\r\n      }), catchError((err: HttpErrorResponse) => {\r\n        const response = err.error instanceof Event ? (<XMLHttpRequest>err.error.target).response : err.error;\r\n        if (failCallback) {\r\n          failCallback({\r\n            status: err.status,\r\n            response: response\r\n          });\r\n        }\r\n        return of(null);\r\n      }));\r\n    const subscription = req.subscribe();\r\n    return subscription.unsubscribe.bind(subscription);\r\n  }\r\n\r\n  uploadFile(\r\n    file: AvlFile,\r\n    target: string,\r\n    progressCallback?: (progress: AvlUploadProgressEvent) => void,\r\n    completeCallback?: (downloadUrl?: string) => void,\r\n    failCallback?: (errorResponse: AvlHttpErrorResponse) => void\r\n  ): AvlAbortUploadAction {\r\n    const formData = new FormData();\r\n    formData.append('file', file.file);\r\n    const uploadReq: Observable<any> = this.httpClient.post<{downloadUrl?: string}>(target, formData, { reportProgress: true, observe: 'events' } )\r\n      .pipe(map(event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          progressCallback?.(event);\r\n        }\r\n        if(event.type === HttpEventType.Response) {\r\n          if (event.body != null && event.body.downloadUrl) {\r\n            completeCallback?.(event.body.downloadUrl);\r\n          } else {\r\n            completeCallback?.();\r\n          }\r\n        }\r\n      }), catchError( (err: HttpErrorResponse, caught) => {\r\n        const response = err.error instanceof Event ? (<XMLHttpRequest>err.error.target).response : err.error;\r\n        if(failCallback) {\r\n          failCallback({\r\n            status: err.status,\r\n            response: response\r\n          });\r\n        }\r\n        return of(null);\r\n      }));\r\n      const subscription = uploadReq.subscribe();\r\n      return subscription.unsubscribe.bind(subscription);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UnsavedChangesShellService {\r\n  /**\r\n   * Boolean value for opening and closing of the unsaved changes warning dialog\r\n   */\r\n  public isDialogOpen: boolean = false;\r\n\r\n  /**\r\n   * Boolean value indicating if there are unsaved changes in the application\r\n   */\r\n  public hasUnsavedChanges: boolean = false;\r\n\r\n  /**\r\n   * If current application is inside shell application\r\n   * True if current application is inside shell application, false otherwise.\r\n   */\r\n  private isChild = window.location !== window.parent.location;\r\n\r\n  /**\r\n   * Subject tracking if the user can navigate in application, default value is true\r\n   */\r\n  public canNavigateSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  constructor() {\r\n    this.preventRefresh();\r\n  }\r\n\r\n  /**\r\n   * Called when user clicks the 'Leave' button, allows navigation and closes the dialog\r\n   */\r\n  public onProceed(): void {\r\n    this.hasUnsavedChanges = false;\r\n    this.canNavigateSubject.next(true);\r\n    this.closeDialog();\r\n  }\r\n\r\n  /**\r\n   * Called when user clicks the 'Stay' button, keeps the state, doesn't allow navigation\r\n   * and closes the dialog\r\n   */\r\n  public onAbort(): void {\r\n    this.canNavigateSubject.next(false);\r\n    this.closeDialog();\r\n  }\r\n\r\n  private preventRefresh(): void {\r\n    window.onbeforeunload = (event: Event) => {\r\n      if (this.hasUnsavedChanges) {\r\n        if (this.isChild && !this.isDialogOpen) {\r\n          event.preventDefault();\r\n        } else if (!this.isChild) {\r\n          event.returnValue = true;\r\n        }\r\n      } else {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Opens the unsaved changes warning dialog\r\n   */\r\n  public openDialog(): void {\r\n    this.isDialogOpen = true;\r\n  }\r\n\r\n  /**\r\n   * Closes the unsaved changes warning dialog\r\n   */\r\n  public closeDialog(): void {\r\n    this.isDialogOpen = false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { UnsavedChangesShellService } from '../unsaved-changes-shell.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ShellCommunicationService } from '../../composite';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UnsavedChangesService extends UnsavedChangesShellService {\r\n  /**\r\n   * Boolean value for opening and closing of the unsaved changes warning dialog\r\n   */\r\n  public isDialogOpen: boolean = false;\r\n\r\n  private formArray: FormGroup[] = [];\r\n\r\n  constructor(private shellCommunicationService: ShellCommunicationService) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Adds the form to the form array and notifies shell if there are any unsaved changes in forms\r\n   * @param form Form to be registered\r\n   */\r\n  public registerForm(form: FormGroup) {\r\n    this.formArray.push(form);\r\n\r\n    form.valueChanges.pipe(debounceTime(300)).subscribe(() => {\r\n      super.hasUnsavedChanges = this.isAnyFormDirty();\r\n      this.shellCommunicationService.notifyShellAboutUnsavedChanges(this.isAnyFormDirty());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes the form from the form array and notifies shell and child\r\n   * @hidden\r\n   * @param form Form to be unregistered\r\n   */\r\n  public unregisterForm(form: FormGroup) {\r\n    this.formArray.splice(this.formArray.indexOf(form), 1);\r\n    super.hasUnsavedChanges = this.isAnyFormDirty();\r\n    this.shellCommunicationService.notifyShellAboutUnsavedChanges(this.isAnyFormDirty());\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   * @returns Array of forms registered to the service\r\n   */\r\n  public getRegisteredForms() {\r\n    return this.formArray;\r\n  }\r\n\r\n  /**\r\n   * Method checking if there are unsaved changes in any of the forms\r\n   * @returns Boolean value indicating is there a 'dirty' form\r\n   */\r\n  public isAnyFormDirty() {\r\n    return this.formArray.some(form => {\r\n      if (!form) {\r\n        return false;\r\n      }\r\n      let formGroupValues: string[] = Object.values(form.value);\r\n      return formGroupValues.some((value: string) => Boolean(value));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates observers, closes the unsaved changes dialog, allows the user to navigate away\r\n   * and notifies shell\r\n   */\r\n  public onProceed() {\r\n    super.onProceed();\r\n    this.shellCommunicationService.notifyShellAboutUnsavedChanges(false);\r\n  }\r\n\r\n  /**\r\n   * Updates observers, closes the unsaved changes dialog and keeps the user on the same page\r\n   */\r\n  public onAbort() {\r\n    super.onAbort();\r\n  }\r\n}\r\n","import { Directive, Input, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { UnsavedChangesService } from './unsaved-changes.service';\r\n\r\n@Directive({\r\n  selector: 'form[detectUnsavedChanges]'\r\n})\r\nexport class UnsavedChangesDirective implements OnDestroy, OnInit {\r\n  @Input() formGroup: FormGroup;\r\n\r\n  constructor(private unsavedChangesService: UnsavedChangesService) {}\r\n\r\n  ngOnInit() {\r\n    this.unsavedChangesService.registerForm(this.formGroup);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsavedChangesService.unregisterForm(this.formGroup);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.formGroup.previousValue !== changes.formGroup.currentValue && changes.formGroup.firstChange === false) {\r\n        this.unsavedChangesService.unregisterForm(this.formGroup);\r\n        this.unsavedChangesService.registerForm(changes.formGroup.currentValue);\r\n    }\r\n    if (this.formGroup === undefined) {\r\n        throw new Error(\"Attribute 'formGroup' is required\");\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { skip } from 'rxjs/operators';\r\nimport { UnsavedChangesService } from './unsaved-changes/unsaved-changes.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UnsavedChangesGuard implements CanDeactivate<any> {\r\n  constructor(private unsavedChangesService: UnsavedChangesService) {}\r\n\r\n  canDeactivate(): boolean | Observable<boolean> {\r\n    if (this.unsavedChangesService.isAnyFormDirty()) {\r\n      this.unsavedChangesService.openDialog();\r\n      return this.unsavedChangesService.canNavigateSubject.pipe(skip(1));\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { UnsavedChangesShellService } from '../unsaved-changes-shell.service';\r\nimport { UnsavedChangesGuard } from '../unsaved-changes.guard';\r\nimport { UnsavedChangesDirective } from './unsaved-changes.directive';\r\nimport { UnsavedChangesService } from './unsaved-changes.service';\r\n\r\n@NgModule({\r\n  declarations: [UnsavedChangesDirective],\r\n  exports: [UnsavedChangesDirective]\r\n})\r\nexport class UnsavedChangesModule {\r\n  static forRoot(): ModuleWithProviders<UnsavedChangesModule> {\r\n    return {\r\n      ngModule: UnsavedChangesModule,\r\n      providers: [UnsavedChangesGuard, UnsavedChangesShellService, UnsavedChangesService]\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ng-services\r\n */\r\n\r\nexport * from './lib/auth/index';\r\nexport * from './lib/composite/index';\r\nexport * from './lib/logging/index';\r\nexport * from './lib/settings/index';\r\nexport * from './lib/notification/index';\r\nexport * from './lib/upload/index';\r\nexport * from './lib/unsaved-changes/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["BehaviorSubject","InjectionToken","skipWhile","HttpClient","HttpHeaders","map","catchError","Injectable","Inject","from","switchMap","throwError","MessageType","Subject","uuidv4","LogSeverity","takeUntil","interval","tap","filter","Optional","NgModule","SkipSelf","HubConnectionState","HubConnectionBuilder","LogLevel","HttpEventType","of","debounceTime","Directive","Input","skip"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAEA;;;;YAIY,gBAAW,GAAG,IAAIA,oBAAe,CAAO,SAAS,CAAC,CAAC;;;;YAKtD,UAAK,GAAqB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;;;;YAKvD,wBAAmB,GAAG,IAAIA,oBAAe,CAAS,SAAS,CAAC,CAAC;;;;YAKhE,kBAAa,GAAuB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;SAoFpF;QAhDC,sBAAW,uCAAW;;;;iBAAtB;gBACE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aAC/B;;;WAAA;QAMD,sBAAW,wCAAY;;;;;iBAAvB;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;aACvC;;;WAAA;;;;QAKM,0CAAiB,GAAjB;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC1C;6BA+BF;KAAA;;ICzGD;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;aAEc,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;YACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;QAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;QACL,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;aAEe,OAAO,CAAC,UAAU,EAAE,SAAS;QACzC,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;aAEe,UAAU,CAAC,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;aAEe,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;aAEe,WAAW,CAAC,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;aAEa,YAAY,CAAC,CAAC,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;aAEe,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;gBAC1C,IAAI,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;QACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7D,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,EAAE,CAAC;IACd,CAAC;aAEe,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAC1I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;QAAC,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAAE,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACxH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;aAEe,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;aAEe,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAChK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;aAEe,oBAAoB,CAAC,MAAM,EAAE,GAAG;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAAE;aAAM;YAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;SAAE;QAC/G,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;QACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;aAEc,YAAY,CAAC,GAAG;QAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;YAAE,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;gBAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;IAClB,CAAC;aAEe,eAAe,CAAC,GAAG;QAC/B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC3D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;QACnL,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAClE,IAAI,IAAI,KAAK,GAAG;YAAE,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;QACxE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;QAClL,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC9G;;QC1Na,WAAW,GAAG,IAAIC,iBAAc,CAAa,SAAS,EAAE;QAExD,sBAAsB,GAAG,IAAIA,iBAAc,CAAW,SAAS;;IClB5E,IAAY,YAUX;IAVD,WAAY,YAAY;QACtB,4CAA4B,CAAA;QAC5B,gEAAgD,CAAA;QAChD,8DAA8C,CAAA;QAC9C,8CAA8B,CAAA;QAC9B,kEAAkD,CAAA;QAClD,oCAAoB,CAAA;QACpB,+BAAe,CAAA;QACf,qCAAqB,CAAA;QACrB,6BAAa,CAAA;IACf,CAAC,EAVW,YAAY,KAAZ,YAAY;;ICGxB;QAGE,sBAAY,MAAmB;YAAnB,uBAAA,EAAA,WAAmB;YAFvB,WAAM,GAAG,EAAE,CAAC;YA4DpB,cAAS,GAAG,UAAC,MAAc;gBACzB,IAAI,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,CAAC,WAAW,CAAC,IAAG,CAAC,CAAC,EAAE;oBACrC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;iBAC5C;gBACD,IAAI;oBACF,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC3B;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACjB,OAAO,IAAI,CAAC;iBACb;aACF,CAAC;YAnEA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAED,+BAAQ,GAAR;YACE,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC3D,OAAO,WAAW,IAAI,WAAW,IAAI,IAAI,GAAG;gBAC1C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC;gBAC7C,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrC,YAAY,EAAE,WAAW;gBACzB,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,oBAAoB,CAAC;gBACvE,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,mBAAmB,CAAC;gBACrE,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC;gBACtD,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,qBAAqB,CAAC;gBACzE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;gBAC5C,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAa;aACpE,GAAG,IAAI,CAAC;SACV;QAED,gCAAS,GAAT,UAAU,IAAU;YAClB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,oBAAoB,EAAE,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC;YAChF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,EAAE,KAAG,IAAI,CAAC,mBAAqB,CAAC,CAAC;YAC9E,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,qBAAqB,EAAE,KAAG,IAAI,CAAC,qBAAuB,CAAC,CAAC;YAClF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAElD,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,KAAG,QAAU,CAAC,CAAC;aAC3D;SACF;QAED,gCAAS,GAAT;YACE,KAAK,IAAM,IAAI,IAAI,YAAY,EAAE;gBAC/B,IAAI,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;oBACrC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrC;aACF;SACF;QAEO,gCAAS,GAAT,UAAU,GAAW;YAC3B,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;SACxC;QAED,8BAAO,GAAP,UAAQ,GAAW;YACjB,OAAO,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;SAClD;QAED,8BAAO,GAAP,UAAQ,GAAW,EAAE,KAAa;YAChC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;SAClD;QAED,iCAAU,GAAV,UAAW,GAAW;YACpB,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;SAC9C;2BAYF;KAAA;;IC3ED;QAAA;SAsCC;;;QAjCQ,2CAAoB,GAApB,UAAqB,MAAc;YACxC,IAAM,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;YACrC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACrC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC/E;;QAGM,mCAAY,GAAZ,UAAa,MAAmB;;;YAGrC,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACrE;;;QAIY,6BAAM,GAAN,UAAO,KAAa;;;;;;4BACzB,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;4BAC5B,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACpB,qBAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,EAAA;;4BAA3D,MAAM,GAAG,SAAkD;4BACjE,sBAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAC;;;aAClC;SAAA;;QAGM,0CAAmB,GAAnB,UAAoB,GAAW;YACpC,IAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAE3D,OAAO,kBAAkB,CACvB,IAAI,CAAC,MAAM,CAAC;iBACT,KAAK,CAAC,EAAE,CAAC;iBACT,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC;iBAC/D,IAAI,CAAC,EAAE,CAAC,CACZ,CAAC;SACH;2BACF;KAAA;;ICtBD,IAAM,2BAA2B,GAC/B,yHAAyH,CAAC;;QAGhF,0CAAc;QAqBxD,gCACU,WAAwB,EACH,UAAsB,EAC3C,MAAc,EACd,GAAa;YAJvB,YAME,iBAAO,SAsBR;YA3BS,iBAAW,GAAX,WAAW,CAAa;YACH,gBAAU,GAAV,UAAU,CAAY;YAC3C,YAAM,GAAN,MAAM,CAAQ;YACd,SAAG,GAAH,GAAG,CAAU;YAxBN,uBAAiB,GAA6B,IAAID,oBAAe,CAAC,SAAS,CAAC,CAAC;;;;;YAMvF,iBAAW,GAAwB,KAAI,CAAC,iBAAiB;iBAC7D,YAAY,EAAE;iBACd,IAAI,CAACE,mBAAS,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,KAAK,SAAS,GAAA,CAAC,CAAC,CAAC;;;;;YAMpD,yBAAmB,GAAG,IAAIF,oBAAe,CAAU,SAAS,CAAC,CAAC;YAoCpD,kBAAY,GAAG,UAAC,KAAc;gBAC7C,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpC,CAAC;YAxBA,KAAI,CAAC,IAAI,GAAG,IAAIG,aAAU,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,KAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAC7D,KAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YAEvC,KAAI,CAAC,WAAW,CAAC,IAAI,CAACD,mBAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,KAAK,SAAS,GAAA,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,SAAS;gBAChF,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;aACvC,CAAC,CAAC;YAEH,IAAM,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAErC,IAAI,IAAI,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;gBACrC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;iBAAM,IAAI,CAAC,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,EAAE;;gBAEzC,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7B;YACD,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;SAC1D;;QAOM,8CAAa,GAAb,UAAc,IAAmB;YACtC,QACE,CAAC,IAAI;gBACL,IAAI,CAAC,QAAQ,IAAI,IAAI;gBACrB,IAAI,CAAC,YAAY,IAAI,IAAI;gBACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,EACtC;SACH;QAED,sBAAY,wCAAI;iBAAhB;gBACE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC;aAClD;iBACD,UAAiB,CAAqB;gBACpC,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;iBACjC;aACF;;;WAPA;QASD,sBAAY,yCAAK;iBAAjB;gBACE,OAAO,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC;aACrD;iBACD,UAAkB,CAAqB;gBACrC,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAClC;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBAClC;aACF;;;WAPA;QASO,mDAAkB,GAAlB;YACN,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC;SAC3D;QAEO,4CAAW,GAAX,UAAY,IAAW;YAC7B,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;SACF;QAEO,0CAAS,GAAT;YACN,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAClC;;;;QAKa,mDAAkB,GAAlB;;;iCAiEb;;;;4BAhEO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;4BACvB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;4BAEhB,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;4BAMnD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gCACzB,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gCACrC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oCAChB,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oCACpC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oCACzC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oCACzC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;oCAC3C,QAAQ,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iCAC/D;6BACF;4BAEG,KAAK,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;4BAE5E,KAAS,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gCAC1C,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,EAAE;oCAC3B,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oCAC3B,KAAK,0CAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,WAAK,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;oCACtD,MAAM;iCACP;6BACF;kCACG,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,SAAS,CAAA,EAAlC,wBAAkC;4BAC9B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;4BACzB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;4BAEjB,WAAW,GAAG;gCAClB,OAAO,EAAE,IAAIE,cAAW,CAAC;oCACvB,IAAI,EAAE,SAAS;oCACf,QAAQ,EAAE,IAAI;oCACd,KAAK,EAAE,KAAK;iCACb,CAAC;6BACH,CAAC;;;;4BAGa,qBAAM,IAAI,CAAC,IAAI;qCACzB,IAAI,CAAgB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,EAAE,WAAW,CAAC;qCAC9D,IAAI,CAACC,aAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;qCACjD,SAAS,EAAE,EAAA;;4BAHR,IAAI,GAAG,SAGC;4BACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;;;4BAEvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;;;4BAIjD,IAAI,OAAO,EAAE;gCACX,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,KAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,GAAG,OAAS,EACpE,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;gCACF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BACrC;iCAAM;gCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAG,EAAE;oCACpF,UAAU,EAAE,IAAI;iCACjB,CAAC,CAAC;gCACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;6BAC1D;;;;aACF;SAAA;QAEM,wDAAuB,GAAvB;;YACL,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,YAAY,OAAK,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAA,EAAE;gBACzD,OAAO;aACR;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;SACF;QACO,4DAA2B,GAA3B,UAA4B,WAA6C;;YAC/E,IAAI,CAAC,GAAG,GAAG,CAAC;YACZ,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5B,OAAO,EAAE,CAAC;aACX;;gBACD,KAAgB,IAAA,gBAAA,SAAA,WAAW,CAAA,wCAAA,iEAAE;oBAAxB,IAAM,CAAC,wBAAA;oBACV,IAAI,CAAC,KAAK,GAAG,EAAE;wBACb,CAAC,IAAO,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,SAAI,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAG,CAAC;qBACpE;yBAAM;wBACL,CAAC,IAAI,MAAI,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,SAAI,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAG,CAAC;qBACrE;iBACF;;;;;;;;;YACD,OAAO,CAAC,CAAC;SACV;QAEO,kDAAiB,GAAjB,UAAkB,KAAoB;;YAC5C,IAAM,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;YAGtE,IAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACvC,IAAM,oBAAoB,GAAG,mBAAmB,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;YAE1E,IAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACxE,IAAI,qBAAqB,GAAG,IAAI,CAAC;YACjC,IAAI,kBAAkB,EAAE;;gBAEtB,IAAM,qBAAqB,GACzB,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9F,IAAM,oBAAoB,GAAG,mBAAmB,CAAC;gBACjD,qBAAqB;oBACnB,qBAAqB,KAAK,CAAC,GAAG,oBAAoB,GAAG,qBAAqB,GAAG,IAAI,GAAG,CAAC,CAAC;aACzF;YAED,IAAM,KAAK,GAAG,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,KAAK,CAAC;YACvC,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;YACD,OAAO;gBACL,QAAQ,EAAE,iBAAiB,CAAC,kBAAkB;gBAC9C,IAAI,EAAE,MAAA,iBAAiB,CAAC,IAAI,mCAAI,iBAAiB,CAAC,kBAAkB;gBACpE,YAAY,EAAE,KAAK,CAAC,WAAW;gBAC/B,oBAAoB,EAAE,oBAAoB;gBAC1C,mBAAmB,EAAE,mBAAmB;gBACxC,aAAa,EAAE,KAAK,CAAC,YAAY;gBACjC,qBAAqB,EAAE,qBAAqB;gBAC5C,QAAQ,EAAE,KAAK,CAAC,OAAO;gBACvB,KAAK,EAAE,KAAK;aACL,CAAC;SACX;QAEY,oDAAmB,GAAnB;;;;;;;4BACL,kBAAkB,GAAG,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,oBAAoB,IAAG,IAAI,CAAC,GAAG,EAAE,CAAC;iCAC3E,kBAAkB,EAAlB,wBAAkB;4BACpB,qBAAM,IAAI,CAAC,aAAa,EAAE,EAAA;;4BAA1B,SAA0B,CAAC;;;;;;SAE9B;;;;;QAMY,8CAAa,GAAb;;;;;;;;4BACL,iBAAiB,GAAG,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,qBAAqB,IAAG,IAAI,CAAC,GAAG,EAAE,CAAC;4BAC/E,IAAI,CAAC,iBAAiB,EAAE;gCACtB,IAAI,CAAC,MAAM,EAAE,CAAC;gCACd,sBAAO;6BACR;4BAEK,WAAW,GAAG;gCAClB,OAAO,EAAE,IAAID,cAAW,CAAC;oCACvB,UAAU,EAAE,eAAe;oCAC3B,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC;iCACjE,CAAC;6BACH,CAAC;4BAEF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;gCAC/B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;6BACrD;;;;4BAGc,qBAAM,IAAI,CAAC,IAAI;qCACzB,IAAI,CAAgB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,EAAE,WAAW,CAAC;qCAChE,IAAI,CAACC,aAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;qCACjD,SAAS,EAAE,EAAA;;4BAHR,IAAI,GAAG,SAGC;4BACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;;;4BAEvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;4BAC7C,MAAM,OAAK,CAAC;;;;;SAEf;;;;;;QAOY,sCAAK,GAAL,UAAM,WAAoB;;;;;;4BACrC,KAAA,QAAQ,CAAA;4BAAQ,qBAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAA;;4BAAzE,GAAS,IAAI,GAAG,SAAyD,CAAC;;;;aAC3E;SAAA;;;;;;QAOM,uCAAM,GAAN,UAAO,WAAoB;YAA3B,iBAiBN;YAhBS,IAAA,SAAS,GAAK,IAAI,CAAC,UAAU,UAApB,CAAqB;YAEtC,IAAI,CAAC,SAAS,EAAE;gBACd,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;aAC3C;YAED,IAAM,OAAO,GAAG,IAAID,cAAW,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,CAAC;YACrF,IAAI,CAAC,IAAI;iBACN,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC;iBAChC,IAAI,CACHE,oBAAU,CAAC,UAAA,KAAK;gBACd,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAC3B,MAAM,KAAK,CAAC;aACb,CAAC,CACH;iBACA,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAA,CAAC,CAAC;SAChD;QAEO,yCAAQ,GAAR,UAAS,WAAoB;YACnC,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;SACpC;QAEO,iDAAgB,GAAhB,UAAiB,WAAoB;YAC3C,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;SACF;QAEO,2CAAU,GAAV;YACN,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC1B;QAEO,2CAAU,GAAV,UAAW,WAAmB;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;QAEa,iDAAgB,GAAhB,UAAiB,WAAmB;;;;;;4BAC1C,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;4BAC5B,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;4BACzC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;4BAG1D,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;4BAGnD,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;4BACxC,qBAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAA;;4BAAhD,SAAS,GAAG,SAAoC;;4BAGpD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;4BACxC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;4BAC1C,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;4BAE1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;4BACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;4BAEf,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;4BACnC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB,GAAG,GAAG,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC;4BAC5F,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,GAAG,GAAG,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;4BAC1F,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;4BAClF,sBAAO,GAAG,EAAC;;;aACZ;SAAA;QAEO,oDAAmB,GAAnB,UAAoB,KAAa;YACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;;gBAExB,OAAO,IAAI,CAAC;aACb;YACD,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAgB,CAAC;SAC5D;QAEO,iDAAgB,GAAhB,UAAiB,WAAmB;;YAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBACvB,OAAO,EAAE,CAAC;aACX;YACD,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;gBACrC,KAAmB,IAAA,UAAA,SAAA,KAAK,CAAA,4BAAA,+CAAE;oBAArB,IAAM,IAAI,kBAAA;oBACb,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,GAAW,SAAA,CAAC;oBAChB,IAAI,KAAa,SAAA,CAAC;oBAClB,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;wBAChB,GAAG,GAAG,IAAI,CAAC;wBACX,KAAK,GAAG,SAAS,CAAC;qBACnB;yBAAM;wBACL,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;wBAC5B,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;qBAChC;oBACD,SAAS,CAAC,IAAI,CAAC;wBACb,GAAG,EAAE,kBAAkB,CAAC,GAAG,CAAC;wBAC5B,KAAK,EAAE,kBAAkB,CAAC,KAAK,CAAC;qBACjC,CAAC,CAAC;iBACJ;;;;;;;;;YACD,OAAO,SAAS,CAAC;SAClB;QAEM,2DAA0B,GAA1B;YACL,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SAChC;QAEM,0DAAyB,GAAzB,UAA0B,IAAU;YACzC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC9B;QAEM,4DAA2B,GAA3B;YACL,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;SAC1B;;KApZH,CAA4C,cAAc;6IAA7C,sBAAsB,wDAuBvB,WAAW;iJAvBV,sBAAsB;qHAAtB,sBAAsB;sBADlCC,aAAU;;;kCAwBNC,SAAM;mCAAC,WAAW;;;;;QC3BrB,6BACS,IAAoB,EACe,SAAmB;YADtD,SAAI,GAAJ,IAAI,CAAgB;YACe,cAAS,GAAT,SAAS,CAAU;YAE7D,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;oBACpC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;iBACrD;aACF;SACF;QAED,uCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;YAAlD,iBAYC;YAXC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACzB;YAED,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACzB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAC/B;YAED,OAAO,IAAI;iBACR,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAACF,oBAAU,CAAC,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,GAAA,CAAC,CAAC,CAAC;SACvF;QAEO,6CAAe,GAAf,UACN,GAAqB,EACrB,IAAiB,EACjB,GAAsB;YAHhB,iBAaP;YARC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;;gBAEtB,OAAOG,SAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CACzCC,mBAAS,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAA,CAAC,EACpDJ,oBAAU,CAAC,UAAA,CAAC,IAAI,OAAAK,eAAU,CAAC,GAAG,CAAC,GAAA,CAAC,CACjC,CAAC;aACH;YACD,OAAOA,eAAU,CAAC,GAAG,CAAC,CAAC;SACxB;;;;QAKO,8CAAgB,GAAhB,UAAiB,OAAyB;YAChD,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACtC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;YAC/D,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB;;;;;QAMO,2CAAa,GAAb,UAAc,GAAqB;YACzC,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YACxD,IAAM,MAAM,GAAG,YAAU,YAAc,CAAC;YACxC,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YAEzD,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;SAC/B;;;0IA5DU,mBAAmB,6CAGpB,sBAAsB;8IAHrB,mBAAmB;qHAAnB,mBAAmB;sBAD/BJ,aAAU;;;kCAINC,SAAM;mCAAC,sBAAsB;;;;AChBtBI;IAAZ,WAAY,WAAW;QACrB,gCAAiB,CAAA;QACjB,0CAA2B,CAAA;QAC3B,oCAAqB,CAAA;QACrB,gCAAiB,CAAA;QACjB,wCAAyB,CAAA;QACzB,gDAAiC,CAAA;QACjC,4CAA6B,CAAA;QAC7B,8BAAe,CAAA;QACf,8BAAe,CAAA;QACf,gDAAiC,CAAA;QACjC,0DAA2C,CAAA;QAC3C,4BAAa,CAAA;QACb,sCAAuB,CAAA;IACzB,CAAC,EAdWA,mBAAW,KAAXA,mBAAW;;;QCwFrB,mCAAoB,MAAc,EAAU,WAA2B;;YAAvE,iBAIC;YAJmB,WAAM,GAAN,MAAM,CAAQ;YAAU,gBAAW,GAAX,WAAW,CAAgB;YApE/D,aAAQ;gBACd,GAACA,mBAAW,CAAC,KAAK,IAAG,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAA;gBAC/D,GAACA,mBAAW,CAAC,MAAM,IAAG,UAAC,MAAyB,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAA;gBAC9E,GAACA,mBAAW,CAAC,QAAQ,IAAG,UAAC,QAAgB,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAA;gBAC3E,GAACA,mBAAW,CAAC,WAAW,IAAG,UAAC,WAAwB,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAA;gBAC5F,GAACA,mBAAW,CAAC,UAAU,IAAG,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAA;gBACrE,GAACA,mBAAW,CAAC,MAAM,IAAG,UAAC,MAAc,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAA;gBACnE,GAACA,mBAAW,CAAC,cAAc,IAAG,UAAC,IAAU,IAAK,OAAA,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAA;gBAC7E,GAACA,mBAAW,CAAC,mBAAmB,IAAG,UAAC,UAAmB,IACrD,OAAA,KAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,GAAA;gBAC5C,GAACA,mBAAW,CAAC,SAAS,IAAG,UAAC,SAAoB,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAA;mBACnF,CAAC;YAEM,iBAAY,GAAG,IAAIC,YAAO,EAAU,CAAC;YACrC,oBAAe,GAAG,IAAIA,YAAO,EAAU,CAAC;YACxC,kBAAa,GAAG,IAAIA,YAAO,EAAU,CAAC;YACtC,kBAAa,GAAG,IAAIA,YAAO,EAAqB,CAAC;YACjD,uBAAkB,GAAG,IAAIA,YAAO,EAAe,CAAC;YAChD,qBAAgB,GAAG,IAAIA,YAAO,EAAa,CAAC;YAC5C,aAAQ,GAAG,EAAE,CAAC;;;;;YAQf,WAAM,GAAuB,IAAI,CAAC,YAAY,CAAC;;;;YAK/C,cAAS,GAAuB,IAAI,CAAC,eAAe,CAAC;YACrD,YAAO,GAAuB,IAAI,CAAC,aAAa,CAAC;;;;YAKjD,YAAO,GAAkC,IAAI,CAAC,aAAa,CAAC;;;;YAK5D,iBAAY,GAA4B,IAAI,CAAC,kBAAkB,CAAC;;;;;YAYhE,wBAAmB,GAAG,IAAIb,oBAAe,CAAU,SAAS,CAAC,CAAC;;;;YAK9D,eAAU,GAA0B,IAAI,CAAC,gBAAgB,CAAC;;;;;YAM1D,YAAO,GAAG,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;YAG1D,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;YAEnE,IAAI,CAAC,EAAE,GAAGc,OAAM,EAAE,CAAC;SACpB;QAEM,0DAAsB,GAAtB,UAAuB,MAAc;YAC1C,IAAI,CAAC,kBAAkB,CAACF,mBAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACrD;;;;QAKM,yDAAqB,GAArB,UAAsB,GAAW;YACtC,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SACjD;;;;QAMM,kEAA8B,GAA9B,UAA+B,SAAkB;YACtD,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;SAChE;;;;QAKM,8DAA0B,GAA1B,UAA2B,GAAW;YAC3C,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;SACtD;;;;QAKM,mDAAe,GAAf;YACL,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5D;;;;QAKM,qDAAiB,GAAjB;YACL,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC;YAC3D,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACjD;QAEO,6CAAS,GAAT,UAAU,KAAmB;;;YAGnC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;gBAClD,OAAO;aACR;YAEK,IAAA,KAAoC,KAAK,CAAC,IAAI,EAA5C,OAAO,aAAA,EAAE,WAAW,iBAAwB,CAAC;YACrD,IAAM,QAAQ,mCACT,IAAI,CAAC,QAAQ,KAChB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,KAAK,CAAC,GAAA,GACzE,CAAC;YAEF,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACtD;QAEO,sDAAkB,GAAlB,UAAmB,WAAwB,EAAE,OAAgB;YACnE,IAAM,OAAO,GAAY,EAAE,WAAW,aAAA,EAAE,OAAO,SAAA,EAAE,CAAC;;YAElD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC1D;iBAAM,IAAI,QAAQ,CAAC,QAAQ,IAAI,OAAO,CAAC,WAAW,KAAKA,mBAAW,CAAC,YAAY,EAAE;gBAChF,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;aACvD;SACF;QAEO,qDAAiB,GAAjB,UAAkB,WAAwB;YAChD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3C;QAEO,kDAAc,GAAd,UAAe,QAAgB;YACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrC;QAEO,gDAAY,GAAZ,UAAa,MAAyB;YAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC;QAEO,+CAAW,GAAX,UAAY,KAAa;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;QAEO,oDAAgB,GAAhB,UAAiB,GAAW;YAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAChC;QAEO,gDAAY,GAAZ,UAAa,MAAc;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC;QAEO,wDAAoB,GAApB,UAAqB,IAAU;YACrC,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,EAAE;gBACtB,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAC;aAChD;YAED,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC;SAC5C;QAEO,6DAAyB,GAAzB,UAA0B,UAAmB;YACnD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;QAEO,mDAAe,GAAf,UAAgB,SAAoB;YAC1C,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;aAC/C;YACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC5B;;;gJA7LU,yBAAyB;oJAAzB,yBAAyB,cAFxB,MAAM;qHAEP,yBAAyB;sBAHrCL,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCPC,wCAAoB,gBAAkC;YAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;SAAK;QAJ3D,sBAAW,oDAAQ;iBAAnB;gBACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aAC1C;;;WAAA;QAIM,kDAAS,GAAT,UAAU,GAAW,EAAE,iBAA0B;YACtD,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,SAAS,EAAE,CAAC;SACtE;;;qJAVU,8BAA8B;yJAA9B,8BAA8B;qHAA9B,8BAA8B;sBAD1CA,aAAU;;;;QCIT,sCACmB,gBAAkC,EAClC,kBAAkD;YADlD,qBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,uBAAkB,GAAlB,kBAAkB,CAAgC;YAG9D,cAAS,GAAG;gBACjB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;gBAChC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;aAClC,CAAC;SALE;QAOG,6DAAsB,GAAtB;YAAA,iBAUN;YATC,OAAO;gBACL,sBAAsB,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBACpE,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACxC,IAAI,IAAI,IAAI,IAAI,EAAE;oBAChB,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC9B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBACpC;gBACD,OAAO,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;aACpD,CAAC;SACH;QACD,sBAAW,kDAAQ;iBAAnB;gBACE,OAAO,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACrC;;;WAAA;QAEM,qDAAc,GAAd,UAAe,IAAY;YAChC,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,IAAI,EAAE;gBAChC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACnC,QAAQ,CAAC,MAAM,EAAE,CAAC;aACnB;SACF;;;mJAhCU,4BAA4B;uJAA5B,4BAA4B,cAF3B,MAAM;qHAEP,4BAA4B;sBAHxCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCuCC;YAfQ,wBAAmB,GAAG,IAAIM,YAAO,EAAU,CAAC;YACpC,iBAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;YAerE,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QAnCD,sBAAW,qCAAW;;;;iBAAtB;gBACE,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;oBAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC;iBACvE;gBACD,OAAO,IAAI,CAAC,YAAY,CAAC;aAC1B;;;;;iBAMD,UAAuB,MAAe;gBACpC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,KAAK,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;gBAClE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;gBACtD,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;;;WAXA;;;;;QAoBM,sCAAe,GAAf;YACL,OAAO,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,OAAO,CAAC;SAC5C;QAEO,kCAAW,GAAX;YACN,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SAC7D;;;mIArCU,YAAY;uIAAZ,YAAY,cAFX,MAAM;qHAEP,YAAY;sBAHxBN,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QC0DC,mCACU,4BAA0D,EAC1D,YAA0B,EAC1B,WAA2B;;YAHrC,iBAOC;YANS,iCAA4B,GAA5B,4BAA4B,CAA8B;YAC1D,iBAAY,GAAZ,YAAY,CAAc;YAC1B,gBAAW,GAAX,WAAW,CAAgB;YA7C7B,aAAQ;gBACd,GAACK,mBAAW,CAAC,KAAK,IAAG,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA;gBAC3D,GAACA,mBAAW,CAAC,UAAU,IAAG,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAA;gBACrE,GAACA,mBAAW,CAAC,MAAM,IAAG,UAAC,MAAc,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAA;gBACnE,GAACA,mBAAW,CAAC,YAAY,IAAG,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,kBAAkB,EAAE,GAAA;gBAC1D,GAACA,mBAAW,CAAC,IAAI,IAAG,UAAC,IAAU,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA;gBACzD,GAACA,mBAAW,CAAC,cAAc,IAAG,UAAC,SAAkB,IAAK,OAAA,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAA;mBAC3F,CAAC;YAEM,kBAAa,GAAG,IAAIC,YAAO,EAAU,CAAC;YACtC,sBAAiB,GAAG,IAAIA,YAAO,EAAU,CAAC;YAC1C,iBAAY,GAAG,IAAIA,YAAO,EAAU,CAAC;YACrC,iCAA4B,GAAG,IAAIA,YAAO,EAAW,CAAC;YACtD,0BAAqB,GAAG,IAAIb,oBAAe,CAAU,KAAK,CAAC,CAAC;YAI7D,YAAO,GAAuB,IAAI,CAAC,aAAa,CAAC;;;;YAKjD,gBAAW,GAAuB,IAAI,CAAC,iBAAiB,CAAC;;;;;YAMzD,WAAM,GAAuB,IAAI,CAAC,YAAY,CAAC;;;;YAM/C,oBAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;;;;;YAM5D,2BAAsB,GAAwB,IAAI,CAAC,4BAA4B,CAAC;YAOrF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;YACnE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,mBAAmB,EAAE,GAAA,CAAC,CAAC;SAC5E;;;;;QAMM,wDAAoB,GAApB,UAAqB,SAAkB;YAC5C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC5C;;;;QAKM,0DAAsB,GAAtB,UAAuB,MAAyB;YACrD,IAAI,CAAC,kBAAkB,CAACY,mBAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACrD;;;;QAKM,4DAAwB,GAAxB,UAAyB,QAAgB;YAC9C,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACzD;;;;QAKM,0DAAsB,GAAtB,UAAuB,MAAc;YAC1C,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACrD;;;;QAKM,8DAA0B,GAA1B,UAA2B,GAAW;YAC3C,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;SACtD;;;;QAKM,oEAAgC,GAAhC;YACL,IAAM,OAAO,GAAS,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC;YACpE,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;SAC9D;;;;QAKM,uDAAmB,GAAnB;YACL,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;YAClD,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACnD;;;;QAKM,0DAAsB,GAAtB;YACL,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;SAC3F;;;;QAKM,wDAAoB,GAApB;YACL,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAChD,IAAM,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAC9D,IAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAClE,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,MAAM,EAAE;gBAC1C,OAAO,SAAA;gBACP,cAAc,gBAAA;gBACd,gBAAgB,kBAAA;aACjB,CAAC,CAAC;SACJ;;;;QAKM,2DAAuB,GAAvB,UAAwB,OAAgB;YAC7C,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;SACnE;;;;QAKM,2DAAuB,GAAvB,UAAwB,OAAkB;YAC/C,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACzD;;;;QAKM,6DAAyB,GAAzB;YACL,IAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7D,IAAM,YAAY,GAAG,aAAa,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;YAC3E,IAAM,iBAAiB,GAAG,aAAa,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC;YACtF,IAAM,iBAAiB,GAAG,aAAa,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC;YAEtF,IAAM,WAAW,GAAgB;gBAC/B,qBAAqB,EAAE,YAAY;gBACnC,2BAA2B,EAAE,iBAAiB;gBAC9C,2BAA2B,EAAE,iBAAiB;aAC/C,CAAC;YAEF,IAAI,CAAC,kBAAkB,CAACA,mBAAW,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SAC/D;QAEO,gDAAY,GAAZ,UAAa,MAAc;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC;QAEO,oDAAgB,GAAhB,UAAiB,UAAkB;YACzC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QAEO,+CAAW,GAAX,UAAY,KAAa;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;;QAGO,sDAAkB,GAAlB;YACN,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAsB,CAAC;YAEhF,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9C;QAEO,6CAAS,GAAT,UAAU,KAAmB;YAC7B,IAAA,KAAoC,KAAK,CAAC,IAAI,EAA5C,OAAO,aAAA,EAAE,WAAW,iBAAwB,CAAC;YACrD,IAAI,WAAW,KAAKA,mBAAW,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC9D,OAAO;aACR;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE;;gBAEjB,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvC,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;oBAC/B,OAAO;iBACR;aACF;YAED,IAAM,QAAQ,mCACT,IAAI,CAAC,QAAQ,KAChB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,KAAK,CAAC,GAAA,GACzE,CAAC;YAEF,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACtD;QAEO,sDAAkB,GAAlB,UAAmB,WAAwB,EAAE,OAAgB;;YACnE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,IAAM,OAAO,GAAY,EAAE,WAAW,aAAA,EAAE,OAAO,SAAA,EAAE,CAAC;YAClD,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvC,MAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,0CAAE,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;SAC/D;;QAGO,8CAAU,GAAV,UAAW,IAAU;;YAC3B,IAAI,IAAI,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,OAAK,MAAA,IAAI,CAAC,WAAW,CAAC,WAAW,0CAAE,YAAY,CAAA,EAAE;gBAC7E,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC;aAC5C;iBAAM,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;gBACxF,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE,CAAC;gBAC/C,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC;aAC5C;SACF;;;gJA9NU,yBAAyB;oJAAzB,yBAAyB,cAFxB,MAAM;qHAEP,yBAAyB;sBAHrCL,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICnBD;;;AAGYQ;IAAZ,WAAY,WAAW;QACrB,+CAAK,CAAA;QACL,6CAAI,CAAA;QACJ,mDAAO,CAAA;QACP,+CAAK,CAAA;QACL,+CAAK,CAAA;IACP,CAAC,EANWA,mBAAW,KAAXA,mBAAW,QAMtB;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA2FE,mBACE,QAAgB,EAChB,UAAkB,EAClB,OAAe,EACf,OAAe,EACf,WAA4B,EAC5B,cAA8C,EAC9C,YAA6B,EAC7B,QAAqB;YAHrB,4BAAA,EAAA,mBAA4B;YAC5B,+BAAA,EAAA,iBAA8BA,mBAAW,CAAC,IAAI;YAC9C,6BAAA,EAAA,oBAA6B;YAC7B,yBAAA,EAAA,aAAqB;;;;;;;;;;;;;YA5ChB,gBAAW,GAAG,KAAK,CAAC;;;;;;YAOpB,mBAAc,GAAgBA,mBAAW,CAAC,IAAI,CAAC;;;;;;YAO/C,iBAAY,GAAG,KAAM,CAAC;;;;;;;;YAStB,aAAQ,GAAG,EAAE,CAAC;YAuBnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;wBACF;KAAA;;;;;;QCjGC,wBACU,IAAgB,EACS,MAAiB,EACN,WAA2B;YAHzE,iBAYC;;YAXS,SAAI,GAAJ,IAAI,CAAY;YACS,WAAM,GAAN,MAAM,CAAW;YACN,gBAAW,GAAX,WAAW,CAAgB;YAhBjE,SAAI,GAAU,EAAE,CAAC;YAEjB,cAAS,GAAG,KAAK,CAAC;YAElB,kBAAa,GAAoB,IAAIF,YAAO,EAAE,CAAC;YAC/C,UAAK,GAAmB,IAAIA,YAAO,EAAE,CAAC;YACtC,iBAAY,GAAkB,IAAIA,YAAO,EAAE,CAAC;YAC5C,cAAS,GAAkB,IAAIA,YAAO,EAAE,CAAC;YACzC,eAAU,GAAkB,IAAIA,YAAO,EAAE,CAAC;YAUhD,IAAI,CAAC,OAAO,GAAG,IAAIT,cAAW,CAAC;gBAC7B,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;aACnC,CAAC,CAAC;YAEH,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAA,IAAI,CAAC,WAAW,0CAAE,WAAW,CAAC,IAAI,CAACY,mBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,GAAA,CAAC,CAAC;aAC5H;SACF;;;;QAKD,oCAAW,GAAX;YACE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC5B;;;;;;QAMM,qCAAY,GAAZ;YAAA,iBAiBN;YAhBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,aAAa;iBACf,IAAI,CACHA,mBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAC5BN,mBAAS,CAAC,UAAC,YAAY,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,GAAA,CAAC,CAClE;iBACA,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,GAAA,CAAC,CAAC;YAE1C,IAAI,CAAC,SAAS;iBACX,IAAI,CACHM,mBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAC5BN,mBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,GAAA,CAAC,CACrC;iBACA,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,GAAA,CAAC,CAAC;YAE1C,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACvD;;;;QAKM,oCAAW,GAAX;YACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B;;;;;QAMM,iCAAQ,GAAR;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;SAClC;;;;;;QAOM,8BAAK,GAAL,UAAM,OAAe,EAAE,aAA0B;YAA1B,8BAAA,EAAA,kBAA0B;YACtD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAEK,mBAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;SACrD;;;;;;QAOM,6BAAI,GAAJ,UAAK,OAAe,EAAE,aAA0B;YAA1B,8BAAA,EAAA,kBAA0B;YACrD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAEA,mBAAW,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;SACpD;;;;;;QAOM,6BAAI,GAAJ,UAAK,OAAe,EAAE,aAA0B;YAA1B,8BAAA,EAAA,kBAA0B;YACrD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAEA,mBAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;SACvD;;;;;;QAOM,8BAAK,GAAL,UAAM,OAAe,EAAE,aAA0B;YAA1B,8BAAA,EAAA,kBAA0B;YACtD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAEA,mBAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;SACrD;;;;;;QAOM,8BAAK,GAAL,UAAM,OAAe,EAAE,aAA0B;YAA1B,8BAAA,EAAA,kBAA0B;YACtD,IAAI,CAAC,GAAG,CAAC,OAAO,EAAEA,mBAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;SACrD;;;;;QAMM,+CAAsB,GAAtB,UAAuB,YAAoB;YAChD,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACvC;;;;;QAMM,0CAAiB,GAAjB,UAAkB,cAA2B;YAClD,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;SAC7C;;;;;QAMM,uCAAc,GAAd,UAAe,QAAgB;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;SACjC;;QAIO,4BAAG,GAAH,UAAI,OAAe,EAAE,QAAqB,EAAE,aAAqB;YACvE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;gBAC5D,OAAO;aACR;YAED,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;aACvB;SACF;QAEO,0CAAiB,GAAjB,UAAkB,OAAe,EAAE,YAAyB,EAAE,aAAqB;YACzF,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACrC,IAAA,KAAuB,IAAI,CAAC,MAAM,EAAhC,OAAO,aAAA,EAAE,OAAO,aAAgB,CAAC;YACzC,IAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;YACzC,IAAM,GAAG,GAAQ,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,SAAS,WAAA,EAAE,aAAa,eAAA,EAAE,OAAO,SAAA,EAAE,OAAO,SAAA,EAAE,CAAC;YACnF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrB;QAEO,uCAAc,GAAd;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SACjD;QAEO,kCAAS,GAAT;YACN,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SAChB;QAEO,uCAAc,GAAd;YACN,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QAEO,iCAAQ,GAAR;YACN,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACvB;QAEO,0CAAiB,GAAjB,UAAkB,MAAc;YAAhC,iBAUP;YATC,OAAOE,aAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAC1BC,aAAG,CAAC;gBACF,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACrB,KAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;aACF,CAAC,EACFC,gBAAM,CAAC,cAAM,OAAA,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAA,CAAC,EAChCT,mBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,GAAA,CAAC,CACrC,CAAC;SACH;QAEO,qCAAY,GAAZ;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE;gBAC3D,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC,CAAC;SACJ;QAEO,qCAAY,GAAZ;YACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B;QAEO,wCAAe,GAAf,UAAgB,UAAmB;YACzC,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;;;qIA3NU,cAAc,uDAgBf,eAAe,aACH,cAAc;yIAjBzB,cAAc,cAFb,MAAM;qHAEP,cAAc;sBAH1BH,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;kCAiBIC,SAAM;mCAAC,eAAe;;kCACtBY,WAAQ;;kCAAIZ,SAAM;mCAAC,cAAc;;;;;QCrBpC,uBAAoC,YAA4B;YAC9D,IAAI,YAAY,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;aACrF;SACF;QACM,qBAAO,GAAd,UAAe,MAAiB;YAC9B,OAAO;gBACL,QAAQ,EAAE,aAAa;gBACvB,SAAS,EAAE,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;aAC5E,CAAC;SACH;;;oIAXU,aAAa,kBAC2B,aAAa;qIADrD,aAAa;qIAAb,aAAa;qHAAb,aAAa;sBADzBa,WAAQ;;4BAE4C,aAAa;kCAAnDD,WAAQ;;kCAAIE,WAAQ;;;;;QCoBnC;YAEU,mBAAc,GAA4B,EAAE,CAAC;YAC7C,iBAAY,GAA6B,IAAIT,YAAO,EAAE,CAAC;;;;YAKxD,kBAAa,GAAgC,IAAI,CAAC,YAAY,CAAC;SAmGvE;;;;;;;QA3FQ,6CAAe,GAAf,UAAgB,QAAgB,EAAE,OAAyC;YAA3E,iBAcN;YAbC,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YAC9D,IAAI,CAAC,UAAU,EAAE;gBACf,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aACtD;YAED,IAAI,UAAU,CAAC,KAAK,KAAKU,0BAAkB,CAAC,SAAS,EAAE;gBACrD,OAAO;aACR;YAED,UAAU;iBACP,KAAK,EAAE;iBACP,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAA,CAAC;iBACjE,KAAK,CAAC,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,GAAA,CAAC,CAAC;SACvF;;;;;QAMM,4CAAc,GAAd,UAAe,YAAoB;YACxC,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;YAExD,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO;aACR;YAED,UAAU,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACvC,UAAU,CAAC,IAAI,EAAE,CAAC;SACnB;;;;;QAMM,8CAAgB,GAAhB,UAAiB,YAAoB;YAC1C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAElC,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,EAAE,KAAK,YAAY,GAAA,CAAC,CAAC;YAC1F,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACtC;SACF;;;;;;QAOM,iDAAmB,GAAnB,UAAoB,YAAoB,EAAE,QAAiC;YAChF,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO;aACR;YAED,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SAC/C;;QAIO,gDAAkB,GAAlB,UAAmB,UAAyB,EAAE,QAAiC;YACrF,UAAU,CAAC,MAAM,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;SACnD;QAEO,+CAAiB,GAAjB,UAAkB,YAAoB;;YAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,EAAE,KAAK,YAAY,GAAA,CAAC,CAAC;YAC1F,OAAO,MAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,0CAAE,UAAU,CAAC;SAC/C;QAEO,6CAAe,GAAf,UACN,QAAgB,EAChB,OAAyC;YAFnC,iBAqBP;YAjBC,IAAM,aAAa,GAAG,IAAIC,4BAAoB,EAAE;iBAC7C,gBAAgB,CAACC,gBAAQ,CAAC,IAAI,CAAC;iBAC/B,OAAO,CAAC,QAAQ,EAAE,EAAE,kBAAkB,EAAE,cAAM,OAAA,OAAO,CAAC,WAAW,GAAA,EAAE,CAAC;iBACpE,sBAAsB,EAAE;iBACxB,KAAK,EAAE,CAAC;YAEX,aAAa,CAAC,aAAa,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAA,CAAC,CAAC;YAC5F,aAAa,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAC,YAA6B;gBACrE,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACtC,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACvB,EAAE,EAAE,OAAO,CAAC,YAAY;gBACxB,UAAU,EAAE,aAAa;aAC1B,CAAC,CAAC;YAEH,OAAO,aAAa,CAAC;SACtB;;;0IAzGU,mBAAmB;8IAAnB,mBAAmB;qHAAnB,mBAAmB;sBAD/BlB,aAAU;;;QCvBE,cAAc,GAAG,IAAIN,iBAAc,CAAmB,gBAAgB;;;QCMjF,uBAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;SAAK;QAE/C,oCAAY,GAAZ,UACE,GAAW,EACX,gBAA6D,EAC7D,gBAAuC,EACvC,YAA4D;YAE5D,IAAM,GAAG,GAAoB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;iBACrH,IAAI,CAACI,aAAG,CAAC,UAAA,KAAK;gBACb,IAAI,KAAK,CAAC,IAAI,KAAKqB,gBAAa,CAAC,gBAAgB,EAAE;oBACjD,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,KAAK,CAAC,CAAC;iBAC3B;gBACD,IAAI,KAAK,CAAC,IAAI,KAAKA,gBAAa,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;oBAC/D,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,KAAK,CAAC,IAAI,CAAC,CAAC;iBAChC;aACF,CAAC,EAAEpB,oBAAU,CAAC,UAAC,GAAsB;gBACpC,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,YAAY,KAAK,GAAoB,GAAG,CAAC,KAAK,CAAC,MAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtG,IAAI,YAAY,EAAE;oBAChB,YAAY,CAAC;wBACX,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;iBACJ;gBACD,OAAOqB,OAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CAAC,CAAC;YACN,IAAM,YAAY,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;YACrC,OAAO,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpD;QAED,kCAAU,GAAV,UACE,IAAa,EACb,MAAc,EACd,gBAA6D,EAC7D,gBAAiD,EACjD,YAA4D;YAE5D,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,IAAM,SAAS,GAAoB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAyB,MAAM,EAAE,QAAQ,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAE;iBAC5I,IAAI,CAACtB,aAAG,CAAC,UAAA,KAAK;gBACb,IAAI,KAAK,CAAC,IAAI,KAAKqB,gBAAa,CAAC,cAAc,EAAE;oBAC/C,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,KAAK,CAAC,CAAC;iBAC3B;gBACD,IAAG,KAAK,CAAC,IAAI,KAAKA,gBAAa,CAAC,QAAQ,EAAE;oBACxC,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE;wBAChD,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAC5C;yBAAM;wBACL,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,EAAI,CAAC;qBACtB;iBACF;aACF,CAAC,EAAEpB,oBAAU,CAAE,UAAC,GAAsB,EAAE,MAAM;gBAC7C,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,YAAY,KAAK,GAAoB,GAAG,CAAC,KAAK,CAAC,MAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtG,IAAG,YAAY,EAAE;oBACf,YAAY,CAAC;wBACX,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;iBACJ;gBACD,OAAOqB,OAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CAAC,CAAC;YACJ,IAAM,YAAY,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;YAC3C,OAAO,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACtD;;;oIAhEU,aAAa;wIAAb,aAAa;qHAAb,aAAa;sBADzBpB,aAAU;;;;QCmBT;;;;YAlBO,iBAAY,GAAY,KAAK,CAAC;;;;YAK9B,sBAAiB,GAAY,KAAK,CAAC;;;;;YAMlC,YAAO,GAAG,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;;;;YAKtD,uBAAkB,GAA6B,IAAIP,oBAAe,CAAU,IAAI,CAAC,CAAC;YAGvF,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;;;;QAKM,8CAAS,GAAT;YACL,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;;;;;QAMM,4CAAO,GAAP;YACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QAEO,mDAAc,GAAd;YAAA,iBAYP;YAXC,MAAM,CAAC,cAAc,GAAG,UAAC,KAAY;gBACnC,IAAI,KAAI,CAAC,iBAAiB,EAAE;oBAC1B,IAAI,KAAI,CAAC,OAAO,IAAI,CAAC,KAAI,CAAC,YAAY,EAAE;wBACtC,KAAK,CAAC,cAAc,EAAE,CAAC;qBACxB;yBAAM,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE;wBACxB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;qBAC1B;iBACF;qBAAM;oBACL,KAAK,CAAC,cAAc,EAAE,CAAC;iBACxB;aACF,CAAC;SACH;;;;QAKM,+CAAU,GAAV;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;;;;QAKM,gDAAW,GAAX;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;;;iJAtEU,0BAA0B;qJAA1B,0BAA0B,cADb,MAAM;qHACnB,0BAA0B;sBADtCO,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCIS,yCAA0B;QAQnE,+BAAoB,yBAAoD;YAAxE,YACE,iBAAO,SACR;YAFmB,+BAAyB,GAAzB,yBAAyB,CAA2B;;;;YAJjE,kBAAY,GAAY,KAAK,CAAC;YAE7B,eAAS,GAAgB,EAAE,CAAC;;SAInC;;;;;QAMM,4CAAY,GAAZ,UAAa,IAAe;YAA5B,iBAON;YANC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAACqB,sBAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;gBAClD,iBAAM,iBAAiB,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC;gBAChD,KAAI,CAAC,yBAAyB,CAAC,8BAA8B,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC;aACtF,CAAC,CAAC;SACJ;;;;;;QAOM,8CAAc,GAAd,UAAe,IAAe;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACvD,iBAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAChD,IAAI,CAAC,yBAAyB,CAAC,8BAA8B,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SACtF;;;;;QAMM,kDAAkB,GAAlB;YACL,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;;;;;QAMM,8CAAc,GAAd;YACL,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,IAAI;gBAC7B,IAAI,CAAC,IAAI,EAAE;oBACT,OAAO,KAAK,CAAC;iBACd;gBACD,IAAI,eAAe,GAAa,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1D,OAAO,eAAe,CAAC,IAAI,CAAC,UAAC,KAAa,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;aAChE,CAAC,CAAC;SACJ;;;;;QAMM,yCAAS,GAAT;YACL,iBAAM,SAAS,WAAE,CAAC;YAClB,IAAI,CAAC,yBAAyB,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;SACtE;;;;QAKM,uCAAO,GAAP;YACL,iBAAM,OAAO,WAAE,CAAC;SACjB;;KAxEH,CAA2C,0BAA0B;4IAAxD,qBAAqB;gJAArB,qBAAqB,cADR,MAAM;qHACnB,qBAAqB;sBADjCrB,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCIhC,iCAAoB,qBAA4C;YAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;SAAI;QAEpE,0CAAQ,GAAR;YACE,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACzD;QAED,6CAAW,GAAX;YACE,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3D;QAED,6CAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,OAAO,CAAC,SAAS,CAAC,aAAa,KAAK,OAAO,CAAC,SAAS,CAAC,YAAY,IAAI,OAAO,CAAC,SAAS,CAAC,WAAW,KAAK,KAAK,EAAE;gBAC/G,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC1D,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;aAC3E;YACD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC9B,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;aACxD;SACF;;;8IArBU,uBAAuB;uHAAvB,uBAAuB;qHAAvB,uBAAuB;sBAHnCsB,YAAS;uBAAC;wBACT,QAAQ,EAAE,4BAA4B;qBACvC;6GAEU,SAAS;0BAAjBC,QAAK;;;;QCAN,6BAAoB,qBAA4C;YAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;SAAI;QAEpE,2CAAa,GAAb;YACE,IAAI,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,EAAE;gBAC/C,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;gBACxC,OAAO,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,IAAI,CAACC,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACpE;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;;;0IAVU,mBAAmB;8IAAnB,mBAAmB,cADN,MAAM;qHACnB,mBAAmB;sBAD/BxB,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCKlC;;QACS,4BAAO,GAAd;YACE,OAAO;gBACL,QAAQ,EAAE,oBAAoB;gBAC9B,SAAS,EAAE,CAAC,mBAAmB,EAAE,0BAA0B,EAAE,qBAAqB,CAAC;aACpF,CAAC;SACH;;;2IANU,oBAAoB;4IAApB,oBAAoB,iBAHhB,uBAAuB,aAC5B,uBAAuB;4IAEtB,oBAAoB;qHAApB,oBAAoB;sBAJhCc,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;wBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;qBACnC;;;ICVD;;;;ICAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}