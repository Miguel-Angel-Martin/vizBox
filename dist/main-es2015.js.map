{"version":3,"sources":["./src/app/app.component.html","./src/app/components/error-page/error-page.component.html","./src/app/components/page-not-found/page-not-found.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.consts.ts","./src/app/app.module.ts","./src/app/components/error-page/error-page.component.css","./src/app/components/error-page/error-page.component.ts","./src/app/components/page-not-found/page-not-found.component.css","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/core/core.module.ts","./src/app/core/guards/auth.guard.ts","./src/app/core/guards/module-import-guard.ts","./src/app/core/services/app.service.ts","./src/app/core/services/overflow-menu.service.ts","./src/app/core/services/settings.service.ts","./src/app/shared/shared.module.ts","./src/endpoint.config.ts","./src/environments/environment.ts","./src/logging.config.ts","./src/main.ts","./src/pet-store/api.module.ts","./src/pet-store/api/petApi.service.ts","./src/pet-store/configuration.ts","./src/pet-store/encoder.ts","./src/pet-store/variables.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<avl-app-layout>\\r\\n  <avl-app-bar *ngIf=\\\"!isChild\\\" [homePageUrl]=\\\"homePageUrl\\\" slot=\\\"toolbar\\\" [fixed]=\\\"true\\\"\\r\\n    [(currentApplication)]=\\\"currentApp\\\">\\r\\n\\r\\n    <avl-overflow-menu slot=\\\"menu\\\" [items]=\\\"menuItems\\\" (itemClicked)=\\\"overflowMenuClicked($event)\\\">\\r\\n      <avl-icon-button icon=\\\"more-vert\\\" slot=\\\"trigger\\\"></avl-icon-button>\\r\\n    </avl-overflow-menu>\\r\\n  </avl-app-bar>\\r\\n\\r\\n  <avl-side-nav slot=\\\"left-side\\\" [menuItems]=\\\"sideNavItems\\\"></avl-side-nav>\\r\\n  <div *ngIf=\\\"showLoader\\\" class=\\\"loadingProgressContainer\\\">\\r\\n    <div class=\\\"loader\\\"></div>\\r\\n    <div>Loading, please wait...</div>\\r\\n  </div>\\r\\n  <router-outlet (activate)=\\\"onActivate()\\\"></router-outlet>\\r\\n</avl-app-layout>\\r\\n\\r\\n<avl-dialog *ngIf=\\\"!isChild\\\" id=\\\"settingsDialog\\\" [(open)]=\\\"isSettingsDialogOpen\\\" [closeOnScrimClick]=\\\"false\\\">\\r\\n\\r\\n  <ng-template #content>\\r\\n    <avl-dialog-header>Settings</avl-dialog-header>\\r\\n    <avl-dialog-content>\\r\\n      <p>Theme</p>\\r\\n      <avl-radio-group id=\\\"theme\\\" [(selectedValue)]=\\\"settings.theme\\\">\\r\\n        <avl-radio-button name=\\\"light\\\">Light</avl-radio-button>\\r\\n        <avl-radio-button name=\\\"dark\\\">Dark</avl-radio-button>\\r\\n      </avl-radio-group> <br />\\r\\n\\r\\n      <avl-dropdown id=\\\"countryDropdown\\\" label=\\\"Country\\\" [items]=\\\"countries\\\" [(selectedValue)]=\\\"settings.country\\\"\\r\\n        compact-mode></avl-dropdown><br />\\r\\n      <avl-dropdown id=\\\"languageDropdown\\\" label=\\\"Language\\\" [items]=\\\"languages\\\" [(selectedValue)]=\\\"settings.language\\\">\\r\\n      </avl-dropdown><br />\\r\\n      \\r\\n      <avl-list-expander [narrow]=\\\"true\\\">\\r\\n        <div role=\\\"header\\\">\\r\\n            <label>Logging</label>\\r\\n        </div>\\r\\n        <div role=\\\"content\\\">\\r\\n          <avl-dropdown id=\\\"logLevelDropdown\\\" [items]=\\\"logLevelOptions\\\" label=\\\"Log Level\\\" [(selectedIndex)]=\\\"settings.globalLogLevel\\\" compact-mode></avl-dropdown> <br />\\r\\n          <avl-textfield label=\\\"Log debounce time (s)\\\" [(value)]=\\\"settings.debounceTime\\\" compact-mode></avl-textfield>\\r\\n          <avl-textfield label=\\\"Log capacity\\\" [(value)]=\\\"settings.capacity\\\" compact-mode></avl-textfield>\\r\\n        </div>\\r\\n    </avl-list-expander>\\r\\n    </avl-dialog-content>\\r\\n\\r\\n    <avl-dialog-footer>\\r\\n      <avl-button (click)=\\\"closeDialog('Save')\\\">Save</avl-button>\\r\\n      <avl-button (click)=\\\"closeDialog('Cancel')\\\">Cancel</avl-button>\\r\\n    </avl-dialog-footer>\\r\\n  </ng-template>\\r\\n</avl-dialog>\\r\\n\\r\\n<avl-about-dialog\\r\\n  [(open)]=\\\"isAboutDialogOpen\\\"\\r\\n  [productLogo]=\\\"AVLDialogInfo.logoSrc\\\"\\r\\n  [productName]=\\\"AVLDialogInfo.productName\\\"\\r\\n  [brandPromise]=\\\"AVLDialogInfo.brandPromise\\\"\\r\\n  [versionInfo]=\\\"AVLDialogInfo.versionInfo\\\"\\r\\n  [legalText]=\\\"AVLDialogInfo.legalText\\\"\\r\\n  [additionalInfoLabel]=\\\"AVLDialogInfo.additionalInfoLabel\\\"\\r\\n  [additionalInfoUrl]=\\\"AVLDialogInfo.additionalInfoUrl\\\"\\r\\n  [copyright]=\\\"AVLDialogInfo.copyright\\\"\\r\\n>\\r\\n</avl-about-dialog>\";","export default \"<p>{{ errorMessage }}</p>\";","export default \"<h2>\\r\\n  Page Not Found\\r\\n</h2>\\r\\n<p>The page you were looking for doesn't exist.</p>\\r\\n  \";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('app/components/home/home.module').then(m => m.HomeModule)\r\n  },\r\n  {\r\n    path: 'intro',\r\n    loadChildren: () => import('app/components/intro/intro.module').then(m => m.IntroModule),\r\n  },\r\n  {\r\n    path: 'about',\r\n    loadChildren: () => import('app/components/about/about.module').then(m => m.AboutModule)\r\n  },\r\n  {\r\n    path: 'logging-demo',\r\n    loadChildren: () => import('app/components/logging-demo/logging-demo.module').then(m => m.LoggingDemoModule)\r\n  },\r\n  { path: 'error-page', component: ErrorPageComponent },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","export default \"avl-app-layout {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.no-bullet {\\r\\n  list-style: none;\\r\\n}\\r\\n\\r\\n.toolbarThemeIcon{\\r\\n  --avl-icon-button-color: var(--avl-app-bar-item-color, #fff);\\r\\n}\\r\\n\\r\\navl-overflow-menu avl-icon-button {\\r\\n  --avl-icon-button-color: var(--avl-on-primary-color);\\r\\n}\\r\\n\\r\\navl-dropdown{\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFNBQVM7RUFDVCxPQUFPO0VBQ1AsUUFBUTtFQUNSLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7RUFDRSw0REFBNEQ7QUFDOUQ7O0FBRUE7RUFDRSxvREFBb0Q7QUFDdEQ7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImF2bC1hcHAtbGF5b3V0IHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4ubm8tYnVsbGV0IHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbi50b29sYmFyVGhlbWVJY29ue1xyXG4gIC0tYXZsLWljb24tYnV0dG9uLWNvbG9yOiB2YXIoLS1hdmwtYXBwLWJhci1pdGVtLWNvbG9yLCAjZmZmKTtcclxufVxyXG5cclxuYXZsLW92ZXJmbG93LW1lbnUgYXZsLWljb24tYnV0dG9uIHtcclxuICAtLWF2bC1pY29uLWJ1dHRvbi1jb2xvcjogdmFyKC0tYXZsLW9uLXByaW1hcnktY29sb3IpO1xyXG59XHJcblxyXG5hdmwtZHJvcGRvd257XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ApplicationReference, TopLevelPage } from '@avl-ng-controls/navigation';\r\nimport { AvlAuthService } from '@avl-ng-controls/auth';\r\nimport {\r\n  AvlOverflowMenuItem,\r\n  AvlOverflowMenuGroup,\r\n} from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\nimport { ThemeService, ShellCommunicationService } from '@avl-services/ng-services';\r\n\r\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu';\r\nimport '@avl-controls/core/dist/avl-radio-group/avl-radio-group';\r\nimport '@avl-controls/core/dist/avl-radio-button/avl-radio-button';\r\nimport '@avl-controls/core/dist/avl-dropdown/avl-dropdown';\r\n\r\nimport { AVL_DIALOG_INFO, COUNTRIES, HOME_PAGE_URL, ICON, MENU, THEMES } from './app.consts';\r\n\r\nimport { SettingsService, SolutionSettings } from './core/services/settings.service';\r\nimport { OverflowMenuService } from './core/services/overflow-menu.service';\r\nimport { AppService } from './core/services/app.service';\r\n\r\n@Component({\r\n  selector: 'viz-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnDestroy, OnInit {\r\n  icon = ICON;\r\n\r\n  // App-bar\r\n  public homePageUrl = HOME_PAGE_URL;\r\n  public currentApp: ApplicationReference = {\r\n    name: this.translateService.instant('VizBoxStarterKit.Introduction'),\r\n    url: '/home',\r\n    image: 'assets/images/vizbox-logo.svg',\r\n  };\r\n\r\n  // Settings Dialog Info\r\n  public isSettingsDialogOpen = false;\r\n  public languages: Array<{ label: string; value: string }> = this.settingsService.initLanguages();\r\n  public countries: Array<{ label: string; value: string }> = COUNTRIES;\r\n  public logLevelOptions: Array<{\r\n    label: string;\r\n    value: string;\r\n  }> = this.settingsService.initLogLevelOptions();\r\n\r\n  public settings: SolutionSettings = this.settingsService.getSettings();\r\n\r\n  // Overflow Menu\r\n  public menuItems: (AvlOverflowMenuItem | AvlOverflowMenuGroup)[];\r\n\r\n  private overflowMenuHandlers: { [key: string]: () => void } = {\r\n    login: () => this.authService.login(),\r\n    logout: () => this.authService.logout(),\r\n    settings: () => (this.isSettingsDialogOpen = true),\r\n    about: () => (this.isAboutDialogOpen = true),\r\n    undefined: () => {},\r\n  };\r\n\r\n  public isChild: boolean = this.shellCommunicationService.isChild;\r\n  public showLoader = true;\r\n\r\n  // Side Navigation\r\n  public sideNavItems = [\r\n    new TopLevelPage(\r\n      this.translateService.instant('VizBoxStarterKit.AvlWebStarterKit'),\r\n      '/intro',\r\n      'home'\r\n    ),\r\n    new TopLevelPage(this.translateService.instant('VizBoxStarterKit.About'), '/about', 'info'),\r\n    new TopLevelPage(\r\n      this.translateService.instant('VizBoxStarterKit.LoggingDemo'),\r\n      '/logging-demo',\r\n      'icons:list'\r\n    ),\r\n  ];\r\n\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  // About Dialog Info\r\n  public isAboutDialogOpen = false;\r\n  public AVLDialogInfo = AVL_DIALOG_INFO;\r\n\r\n  constructor(\r\n    private authService: AvlAuthService,\r\n    private translateService: TranslateService,\r\n    readonly themeService: ThemeService,\r\n    readonly shellCommunicationService: ShellCommunicationService,\r\n    readonly settingsService: SettingsService,\r\n    readonly overflowMenuService: OverflowMenuService,\r\n    readonly appService: AppService\r\n  ) {\r\n    // Subscription to Shell\r\n    this.appService.ifChildSubscribeToShell();\r\n  }\r\n  public ngOnInit(): void {\r\n    this.menuItems = this.overflowMenuService.translateMenu(MENU);\r\n\r\n    this.authService.user$\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        (user) => (this.menuItems = this.overflowMenuService.translateDependingOnUser(user))\r\n      );\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public overflowMenuClicked(item: AvlOverflowMenuItem): void {\r\n    this.overflowMenuHandlers[item.action]();\r\n  }\r\n\r\n  public onActivate(): void {\r\n    this.showLoader = false;\r\n  }\r\n\r\n  public closeDialog(operation: 'Cancel' | 'Save'): void {\r\n    this.settings = this.settingsService.onDialogClosed(operation, this.settings);\r\n    this.themeService.isDarkTheme = this.settings.theme === THEMES[0];\r\n    this.isSettingsDialogOpen = false;\r\n  }\r\n}\r\n","import {\r\n  AvlOverflowMenuGroup,\r\n  AvlOverflowMenuItem,\r\n} from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\n\r\nexport const USER_MENU_ITEM: AvlOverflowMenuItem = {\r\n  label: '',\r\n  icon: 'account-box',\r\n  sublabel: 'VizBoxStarterKit.Monitor',\r\n};\r\n\r\nexport const UNKNOWN_USER_MENU_ITEM: AvlOverflowMenuItem = {\r\n  label: 'VizBoxStarterKit.Unknown',\r\n  icon: 'account-box',\r\n  sublabel: 'VizBoxStarterKit.Unknown',\r\n};\r\n\r\nexport const LOGIN_MENU_ITEM: AvlOverflowMenuItem = {\r\n  label: 'VizBoxStarterKit.Login',\r\n  action: 'login',\r\n  icon: 'social:person',\r\n};\r\n\r\nexport const LOGOUT_MENU_ITEM: AvlOverflowMenuItem = {\r\n  label: 'VizBoxStarterKit.Logout',\r\n  action: 'logout',\r\n  icon: 'exit-to-app',\r\n};\r\n\r\nexport const CONSTANT_MENU_ITEMS: AvlOverflowMenuItem[] = [\r\n  {\r\n    label: 'VizBoxStarterKit.Messages',\r\n    icon: 'communication:message',\r\n    badgeValue: '4',\r\n  },\r\n  {\r\n    label: 'VizBoxStarterKit.Settings',\r\n    icon: 'settings',\r\n    action: 'settings',\r\n  },\r\n  {\r\n    label: 'VizBoxStarterKit.Help',\r\n    icon: 'help',\r\n  },\r\n  {\r\n    label: 'VizBoxStarterKit.About',\r\n    icon: 'info',\r\n    action: 'about',\r\n  },\r\n];\r\n\r\nexport const MENU: AvlOverflowMenuGroup[] = [\r\n  {\r\n    items: [UNKNOWN_USER_MENU_ITEM],\r\n  },\r\n  {\r\n    items: CONSTANT_MENU_ITEMS,\r\n  },\r\n  {\r\n    items: [LOGIN_MENU_ITEM]\r\n  }\r\n];\r\n\r\nexport const COUNTRIES = [\r\n  {\r\n    label: 'Croatia',\r\n    value: 'hr',\r\n  },\r\n  {\r\n    label: 'United Kingdom',\r\n    value: 'uk',\r\n  },\r\n  {\r\n    label: 'United States',\r\n    value: 'us',\r\n  },\r\n];\r\n\r\nexport const AVL_DIALOG_INFO = {\r\n  logoSrc: 'assets/images/vizbox-logo.svg',\r\n  productName: 'Starter kit vizbox application™',\r\n  brandPromise: 'Make vizbox great again',\r\n  versionInfo: [\r\n    { label: 'Version number', value: '1.0.0' },\r\n    { label: 'Build number', value: '1345' },\r\n    { label: 'Build date', value: '2021-01-11' },\r\n  ],\r\n  legalText:\r\n    'This program incorporates parts from other organizations which are distributed under software licences of their choosing.',\r\n  additionalInfoLabel: 'Additional version and copyright information.',\r\n  additionalInfoUrl: 'assets/licenses/licenses-summary.txt',\r\n  copyright: '© AVL List GmbH 2021. All rights reserved.',\r\n};\r\n\r\nexport const THEMES = ['dark', 'light'];\r\n\r\nexport const HOME_PAGE_URL = '/';\r\nexport const ICON = 'device:brightness-high';\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { INTERCEPTOR_BASE_PATHS, AvlTokenInterceptor } from '@avl-ng-controls/auth';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { MultiTranslateHttpLoader } from 'ngx-translate-multi-http-loader';\r\nimport { NgxTranslateTranslationService } from '@avl-controls/ng-binders';\r\nimport { LoggingModule, ThemeService, TranslationManagementService } from '@avl-services/ng-services';\r\n\r\nimport { basePath } from 'endpoint.config';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { ApiModule } from '../pet-store/api.module';\r\nimport { BASE_PATH } from '../pet-store/variables';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\r\nimport { LoggingConfig } from 'logging.config';\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new MultiTranslateHttpLoader(http, [\r\n      {prefix: 'assets/i18n/avl-controls-core.', suffix: '.json'},\r\n      {prefix: 'assets/i18n/avl-controls-datatable.', suffix: '.json'},\r\n      {prefix: 'assets/i18n/vizbox-starter-kit.', suffix: '.json'},\r\n      // latest file translations with same keys will overwrite same translations in files defined before it\r\n    ]);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    ErrorPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    LoggingModule.forRoot(LoggingConfig),\r\n\r\n    ApiModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    SharedModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [\r\n    ThemeService,\r\n    { provide: BASE_PATH, useValue: basePath },\r\n    { provide: INTERCEPTOR_BASE_PATHS, useValue: [basePath] },\r\n    { provide: HTTP_INTERCEPTORS, useClass: AvlTokenInterceptor, multi: true },\r\n    NgxTranslateTranslationService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (translationManagementService: TranslationManagementService) => translationManagementService.initializeTranslations(),\r\n      multi: true,\r\n      deps: [TranslationManagementService]\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule {\r\n  constructor() {}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXJyb3ItcGFnZS9lcnJvci1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'viz-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  errorMessage = 'Something went wrong. Please check your route.';\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.errorMessage = this.getErrorMessage();\r\n  }\r\n  private getErrorMessage = (): string => {\r\n    const state = this.router.getCurrentNavigation().extras.state;\r\n    return state?.errorMessage || this.errorMessage;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'viz-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","import { NgModule, Optional, SkipSelf, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { throwIfAlreadyLoaded } from './guards/module-import-guard';\r\nimport { AvlAuthService, AvlOidcCodeAuthService, AUTH_CONFIG } from '@avl-ng-controls/auth';\r\nimport { authConfig } from '../../endpoint.config';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule],\r\n  providers: [\r\n    AuthGuard,\r\n    { provide: AvlAuthService, useClass: AvlOidcCodeAuthService }, // needs AVL MVC Server Side\r\n    { provide: AUTH_CONFIG, useValue: authConfig }\r\n  ],\r\n  declarations: [],\r\n  exports: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule\r\n  ) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  CanActivate,\r\n  CanActivateChild,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable, zip } from 'rxjs';\r\nimport { map, skipWhile, tap } from 'rxjs/operators';\r\n\r\nimport { AvlAuthService } from '@avl-ng-controls/auth';\r\nimport { ShellCommunicationService } from '@avl-services/ng-services';\r\n\r\n/**\r\n * Guard for the routes on which you have to be logged in to view.\r\n */\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  public isAuthenticated$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private authService: AvlAuthService,\r\n    private location: Location,\r\n    private router: Router,\r\n    private shellCommunicationService: ShellCommunicationService\r\n  ) {}\r\n\r\n  public canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.checkLogin(state.url);\r\n  }\r\n\r\n  public canActivateChild(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  public canLoad(route: Route): Observable<boolean> {\r\n    return this.checkLogin(route.path);\r\n  }\r\n\r\n  private checkLogin(path: string): Observable<boolean> {\r\n    const redirectUrl = location.origin + this.location.prepareExternalUrl(path);\r\n    if (this.shellCommunicationService.isChild) {\r\n      return this.childAppLogin$(redirectUrl);\r\n    }\r\n\r\n    return this.standaloneAppLogin$(redirectUrl);\r\n  }\r\n\r\n  private standaloneAppLogin$(redirectUrl: string): Observable<boolean> {\r\n    return this.authService.isLoggedIn$.pipe(\r\n      tap((isLoggedIn) => isLoggedIn || this.checkErrorMessage(redirectUrl))\r\n    );\r\n  }\r\n\r\n  private checkErrorMessage(redirectUrl: string): void {\r\n    if (this.authService.errorMessage) {\r\n      this.redirectToErrorPage();\r\n    } else {\r\n      this.authService.login(redirectUrl);\r\n    }\r\n  }\r\n\r\n  private redirectToErrorPage(): void {\r\n    const routerState = { errorMessage: this.authService.errorMessage };\r\n    this.router.navigateByUrl('/error-page', { state: routerState }).then((_) => {\r\n      this.authService.clearErrorMessage();\r\n    });\r\n  }\r\n\r\n  // Subscription on redirectedFromLogin, if it wasn't redirected, notifies shell about login.\r\n  // If it was redirected waits for the user object. Resolves to true if both subscriptions resolves to true.\r\n  private childAppLogin$(redirectUrl: string): Observable<boolean> {\r\n    return zip(\r\n      this.shellCommunicationService.redirectedFromLogIn.pipe(\r\n        map((redirectedFromLogIn) => this.handleRedirectedFromLogin(redirectedFromLogIn, redirectUrl))\r\n      ),\r\n      this.authService.user$.pipe(\r\n        skipWhile((user) => user === undefined),\r\n        map((user) => Boolean(user))\r\n      )\r\n    ).pipe(\r\n      map(([_, userExists]) => userExists)\r\n    );\r\n  }\r\n\r\n  private handleRedirectedFromLogin = (isRedirected: boolean, redirectUrl: string): boolean => {\r\n    if (isRedirected === false) {\r\n      this.shellCommunicationService.notifyShellAboutLogin(redirectUrl);\r\n    }\r\n    return isRedirected;\r\n  }\r\n}\r\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    throw new Error(\r\n      `${moduleName} has already been loaded. Import Core modules in the AppModule only.`\r\n    );\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ShellCommunicationService } from '@avl-services/ng-services';\r\nimport { SettingsService } from './settings.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\nexport class ChildApp {\r\n  childUrl: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppService implements OnDestroy {\r\n  private destroyed$: Subject<void> = new Subject();\r\n\r\n  constructor(\r\n    readonly shellCommunicationService: ShellCommunicationService,\r\n    readonly settingsService: SettingsService,\r\n    readonly router: Router\r\n  ) {}\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public ifChildSubscribeToShell(): void {\r\n    if (this.shellCommunicationService.isChild) {\r\n      this.shellCommunicationService.registerToShell();\r\n      this.subscribeToRouterEvents();\r\n      this.subscribeToLanguageChanges();\r\n      this.subscribeToColorSchemeChanges();\r\n      this.subscribeToThemeChanges();\r\n      this.subscribeToLocaleChanges();\r\n    }\r\n  }\r\n\r\n  private subscribeToRouterEvents(): void {\r\n    this.router.events.pipe(takeUntil(this.destroyed$)).subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.shellCommunicationService.notifyShellAboutNavigation(location.href);\r\n      }\r\n    });\r\n  }\r\n\r\n  private subscribeToLanguageChanges(): void {\r\n    this.shellCommunicationService.language$\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((language) => {\r\n        this.settingsService.updateLanguage(language);\r\n      });\r\n  }\r\n\r\n  private subscribeToColorSchemeChanges(): void {\r\n    this.shellCommunicationService.colorScheme$\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((colorScheme) => {\r\n        this.setColorSchemeProperty(colorScheme);\r\n      });\r\n  }\r\n\r\n  private setColorSchemeProperty(colorScheme): void {\r\n    for (const property in colorScheme) {\r\n      if (colorScheme.hasOwnProperty(property)) {\r\n        document.body.style.setProperty(property, colorScheme[property]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private subscribeToThemeChanges(): void {\r\n    this.shellCommunicationService.theme$.pipe(takeUntil(this.destroyed$)).subscribe((theme) => {\r\n      this.settingsService.updateTheme(theme);\r\n    });\r\n  }\r\n\r\n  private subscribeToLocaleChanges(): void {\r\n    this.shellCommunicationService.locale$.pipe(takeUntil(this.destroyed$)).subscribe((country) => {\r\n      this.settingsService.updateCountry(country);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { AvlOverflowMenuGroup, AvlOverflowMenuItem } from '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu.api';\r\nimport { User } from '@avl-ng-controls/auth';\r\n\r\nimport { CONSTANT_MENU_ITEMS, LOGIN_MENU_ITEM, LOGOUT_MENU_ITEM, UNKNOWN_USER_MENU_ITEM } from '../../app.consts';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OverflowMenuService {\r\n\r\n    constructor(private translateService: TranslateService) {}\r\n\r\n    // TRANSLATIONS\r\n    public translateMenu(menu: AvlOverflowMenuGroup[]): AvlOverflowMenuGroup[] {\r\n        return menu.map((group) => this.translateMenuGroup(group));\r\n    }\r\n\r\n    public translateMenuGroup(group: AvlOverflowMenuGroup): AvlOverflowMenuGroup {\r\n        return { items: group.items.map((item) => this.translateMenuItem(item)) };\r\n    }\r\n\r\n    public translateMenuItem(item: AvlOverflowMenuItem): AvlOverflowMenuItem {\r\n        return {\r\n            ...item,\r\n            label: this.translateService.instant(item.label),\r\n            sublabel: item.sublabel ? this.translateService.instant(item.sublabel) : null,\r\n        };\r\n    }\r\n\r\n    public translateDependingOnUser(user: User): (AvlOverflowMenuItem | AvlOverflowMenuGroup)[] {\r\n        let userMenuItem = UNKNOWN_USER_MENU_ITEM;\r\n        if (user) {\r\n            userMenuItem = { ...userMenuItem, label: user.name || user.username };\r\n        }\r\n\r\n        const authMenuItem: AvlOverflowMenuItem = user ? LOGOUT_MENU_ITEM : LOGIN_MENU_ITEM;\r\n\r\n        return [\r\n            { items: [this.translateMenuItem(userMenuItem)] },\r\n            { items: CONSTANT_MENU_ITEMS.map((item) => this.translateMenuItem(item)) },\r\n            { items: [this.translateMenuItem(authMenuItem)] },\r\n        ];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  LoggingService,\r\n  LogSeverity,\r\n  ThemeService,\r\n  TranslationManagementService,\r\n} from '@avl-services/ng-services';\r\nimport { LoggingConfig } from 'logging.config';\r\n\r\nimport { COUNTRIES, THEMES } from '../../app.consts';\r\n\r\nexport interface SolutionSettings {\r\n  language: string;\r\n  theme: string;\r\n  country: string;\r\n  globalLogLevel: LogSeverity;\r\n  debounceTime: string;\r\n  capacity: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SettingsService {\r\n  constructor(\r\n    private translationManagementService: TranslationManagementService,\r\n    private themeService: ThemeService,\r\n    private loggingService: LoggingService\r\n  ) {}\r\n\r\n  public getSettings(): SolutionSettings {\r\n    return {\r\n      language: this.translationManagementService.language,\r\n      country: this.getCountry(),\r\n      theme: this.themeService.getCurrentTheme(),\r\n      globalLogLevel: LoggingConfig.globalLogLevel,\r\n      debounceTime: String(LoggingConfig.debounceTime / 1000),\r\n      capacity: String(LoggingConfig.capacity),\r\n    };\r\n  }\r\n  public initLanguages = (): Array<{ label: string; value: string }> => {\r\n    return this.translationManagementService.languages.map((item) => {\r\n      return { label: item.label, value: item.code };\r\n    });\r\n  };\r\n\r\n  public initLogLevelOptions = (): Array<{ label: string; value: string }> => {\r\n    return Object.keys(LogSeverity)\r\n      .filter((key) => isNaN(+key))\r\n      .map((key) => ({ label: key, value: LogSeverity[key] }));\r\n  };\r\n\r\n  public updateLanguage = (language: string): string => {\r\n    if (language !== this.translationManagementService.language) {\r\n      this.translationManagementService.changeLanguage(language); // service also sets localStorage for lang\r\n    }\r\n    return language;\r\n  };\r\n\r\n  public getCountry = (): string => {\r\n    let country = localStorage.getItem('country');\r\n\r\n    if (!country || !COUNTRIES.find((item) => item.value === country)) {\r\n      country = COUNTRIES[0].value;\r\n      localStorage.setItem('country', country);\r\n    }\r\n    return country;\r\n  };\r\n\r\n  public updateCountry = (country: string): string => {\r\n    const localStorageCountry = localStorage.getItem('country');\r\n    if (country !== localStorageCountry) {\r\n      localStorage.setItem('country', country);\r\n    }\r\n    return country;\r\n  };\r\n\r\n  public updateTheme = (theme: string): boolean => {\r\n    return (this.themeService.isDarkTheme = theme === THEMES[0]);\r\n  };\r\n\r\n  public onDialogClosed = (\r\n    operation: 'Cancel' | 'Save',\r\n    settings: SolutionSettings\r\n  ): SolutionSettings => {\r\n    return operation === 'Save' ? this.updateSettings(settings) : this.restoreSettings();\r\n  };\r\n\r\n  public updateLogLevel = (globalLogLevel: LogSeverity): LogSeverity => {\r\n    if (globalLogLevel !== LoggingConfig.globalLogLevel) {\r\n      this.loggingService.setGlobalLogLevel(globalLogLevel);\r\n      return globalLogLevel;\r\n    }\r\n    return LoggingConfig.globalLogLevel;\r\n  };\r\n\r\n  public updateDebounceTime = (debounceTime: number): number => {\r\n    if (debounceTime * 1000 !== LoggingConfig.debounceTime) {\r\n      this.loggingService.setLoggingDebounceTime(debounceTime * 1000);\r\n      return debounceTime;\r\n    }\r\n    return LoggingConfig.debounceTime / 1000;\r\n  };\r\n\r\n  public updateCapacity = (capacity: number): number => {\r\n    if (capacity !== LoggingConfig.capacity) {\r\n      this.loggingService.setLogCapacity(capacity);\r\n      return capacity;\r\n\r\n    }\r\n    return LoggingConfig.capacity;\r\n  };\r\n\r\n  private updateSettings(settings: SolutionSettings): SolutionSettings {\r\n    return {\r\n      country: this.updateCountry(settings.country),\r\n      theme: this.updateTheme(settings.theme) ? THEMES[0] : THEMES[1],\r\n      language: this.updateLanguage(settings.language),\r\n      globalLogLevel: this.updateLogLevel(settings.globalLogLevel),\r\n      debounceTime: String(this.updateDebounceTime(Number(settings.debounceTime))),\r\n      capacity: String(this.updateCapacity(Number(settings.capacity))),\r\n    };\r\n  }\r\n\r\n  private restoreSettings(): SolutionSettings {\r\n    return {\r\n      country: localStorage.getItem('country'),\r\n      theme: this.themeService.isDarkTheme ? THEMES[0] : THEMES[1],\r\n      language: this.translationManagementService.language,\r\n      globalLogLevel: LoggingConfig.globalLogLevel,\r\n      debounceTime: String(LoggingConfig.debounceTime / 1000),\r\n      capacity: String(LoggingConfig.capacity),\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AvlNgBindersModule } from '@avl-controls/ng-binders';\r\nimport { AvlDialogModule } from '@avl-ng-controls/dialog';\r\nimport { AvlNavigationModule } from '@avl-ng-controls/navigation';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AvlTokenInterceptor } from '@avl-ng-controls/auth';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n\r\n    AvlDialogModule,\r\n    AvlNavigationModule,\r\n    AvlNgBindersModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n\r\n    AvlDialogModule,\r\n    AvlNavigationModule,\r\n    AvlNgBindersModule,\r\n    TranslateModule,\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n","import { AuthConfig } from '@avl-ng-controls/auth';\r\nimport { environment } from './environments/environment';\r\n\r\n// if you want to use local petstore-server use http://localhost:65435\r\nexport const basePath = environment.apiUrl; // 'https://vizbox.avl.com/api';\r\n// export const basePath = 'http://localhost:65435';\r\n\r\nexport const authConfig: AuthConfig = {\r\n  tokenUrl: basePath + '/identitybroker-tokens',\r\n  loginUrl: basePath + '/identitybroker-login',\r\n  refreshUrl: basePath + '/identitybroker-tokens/refresh',\r\n  loginUrlParamRedirect: 'redirectUrl',\r\n  loginUrlParamChallenge: 'pkceChallenge',\r\n  loginUrlParamNonce: 'nonce',\r\n  logoutUrl: basePath + '/identitybroker-logout',\r\n  logoutUrlParamIdToken: 'idToken',\r\n  logoutUrlParamRedirect: 'redirectToUrl',\r\n};\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: window[\"env\"][\"apiUrl\"] || \"default\"\r\n};\r\n","import { LogConfig, LogSeverity } from '@avl-services/ng-services';\r\n\r\nexport const LoggingConfig = new LogConfig(\r\n  'https://vizbox.avl.com/api/theia/logs', // endpoint for logging (mandatory)\r\n  'StarterKitWebApp',                  // database name for logs (mandatory)\r\n  'StarterKit',                        // application name (mandatory)\r\n  '1.0.0',                             // application version (mandatory)\r\n  true,                                // autologging, logs automatically when user is logged in (optional)\r\n                                       // default: false (if true requires AvlAuthService in providers)\r\n  LogSeverity.Warning,                 // minimum message level to log (optional), default value: LogType.Info\r\n  10_000,                              // log debounce time in milliseconds (optional), default: 30 000 ms\r\n  5                                    // log capacity (optional), default: 10\r\n);","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { BrowserDetection, OutdatedBrowserWarning } from '@avl-vizbox-develop/browser-support';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nwindow.addEventListener('load',\r\n  () => platformBrowserDynamic().bootstrapModule(AppModule));\r\n\r\nif (BrowserDetection.isOutdatedBrowser()) {\r\n  OutdatedBrowserWarning.showDialog();\r\n}\r\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Configuration } from './configuration';\r\n\r\nimport { PetApiService } from './api/petApi.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  declarations: [],\r\n  exports: [],\r\n  providers: [PetApiService]\r\n})\r\nexport class ApiModule {\r\n  public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\r\n    return {\r\n      ngModule: ApiModule,\r\n      providers: [{ provide: Configuration, useFactory: configurationFactory }]\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: ApiModule\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('ApiModule is already loaded. Import your base AppModule only.');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Swagger Petstore\r\n * Swagger Petstore (ASP.NET Core 2.0)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n * Contact: apiteam@swagger.io\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse, HttpEvent } from '@angular/common/http';\r\nimport { CustomHttpUrlEncodingCodec } from '../encoder';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { InlineResponse200 } from '../model/inlineResponse200';\r\nimport { Pet } from '../model/pet';\r\n\r\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class PetApiService {\r\n  protected basePath = 'https://localhost/v2';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    @Optional()\r\n    @Inject(BASE_PATH)\r\n    basePath: string,\r\n    @Optional() configuration: Configuration\r\n  ) {\r\n    if (basePath) {\r\n      this.basePath = basePath + '/v2';;\r\n    }\r\n    if (configuration) {\r\n      this.configuration = configuration;\r\n      this.basePath = basePath || configuration.basePath || this.basePath;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param consumes string[] mime-types\r\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n   */\r\n  private canConsumeForm(consumes: string[]): boolean {\r\n    const form = 'multipart/form-data';\r\n    for (const consume of consumes) {\r\n      if (form === consume) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Add a new pet to the store\r\n   *\r\n   * @param body Pet object that needs to be added to the store\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public addPet(body?: Pet, observe?: 'body', reportProgress?: boolean): Observable<Pet>;\r\n  public addPet(\r\n    body?: Pet,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Pet>>;\r\n  public addPet(\r\n    body?: Pet,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Pet>>;\r\n  public addPet(\r\n    body?: Pet,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(\r\n      httpHeaderAccepts\r\n    );\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json'\r\n    ];\r\n    const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(\r\n      consumes\r\n    );\r\n    if (httpContentTypeSelected !== undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.post<Pet>(`${this.basePath}/pets`, body, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers: headers,\r\n      observe: observe,\r\n      reportProgress: reportProgress\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes a pet\r\n   *\r\n   * @param petId Pet id to delete\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public deletePet(petId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\r\n  public deletePet(\r\n    petId: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public deletePet(\r\n    petId: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public deletePet(\r\n    petId: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (petId === null || petId === undefined) {\r\n      throw new Error('Required parameter petId was null or undefined when calling deletePet.');\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(\r\n      httpHeaderAccepts\r\n    );\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.delete<any>(\r\n      `${this.basePath}/pets/${encodeURIComponent(String(petId))}`,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers: headers,\r\n        observe: observe,\r\n        reportProgress: reportProgress\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Find pet by ID\r\n   * Returns a pet when ID &amp;lt; 100.  ID &amp;gt; 100 or nonintegers will simulate API error conditions\r\n   * @param petId ID of pet that needs to be fetched\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public getPetById(petId: number, observe?: 'body', reportProgress?: boolean): Observable<Pet>;\r\n  public getPetById(\r\n    petId: number,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Pet>>;\r\n  public getPetById(\r\n    petId: number,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Pet>>;\r\n  public getPetById(\r\n    petId: number,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (petId === null || petId === undefined) {\r\n      throw new Error('Required parameter petId was null or undefined when calling getPetById.');\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(\r\n      httpHeaderAccepts\r\n    );\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<Pet>(`${this.basePath}/pets/${encodeURIComponent(String(petId))}`, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers: headers,\r\n      observe: observe,\r\n      reportProgress: reportProgress\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all pets of the store\r\n   *\r\n   * @param name Query all pets by name\r\n   * @param status Query all pets by status\r\n   * @param tags Query all pets by tag\r\n   * @param offset offset for pagination\r\n   * @param limit max number of records\r\n   * @param sortBy name of the property to sort by\r\n   * @param sortOrder sort order - asc or desc\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public getPets(\r\n    name?: string,\r\n    status?: Array<string>,\r\n    tags?: Array<string>,\r\n    offset?: number,\r\n    limit?: number,\r\n    sortBy?: string,\r\n    sortOrder?: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<InlineResponse200>;\r\n  public getPets(\r\n    name?: string,\r\n    status?: Array<string>,\r\n    tags?: Array<string>,\r\n    offset?: number,\r\n    limit?: number,\r\n    sortBy?: string,\r\n    sortOrder?: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<InlineResponse200>>;\r\n  public getPets(\r\n    name?: string,\r\n    status?: Array<string>,\r\n    tags?: Array<string>,\r\n    offset?: number,\r\n    limit?: number,\r\n    sortBy?: string,\r\n    sortOrder?: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<InlineResponse200>>;\r\n  public getPets(\r\n    name?: string,\r\n    status?: Array<string>,\r\n    tags?: Array<string>,\r\n    offset?: number,\r\n    limit?: number,\r\n    sortBy?: string,\r\n    sortOrder?: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\r\n    if (name !== undefined) {\r\n      queryParameters = queryParameters.set('name', <any>name);\r\n    }\r\n    if (status) {\r\n      status.forEach(element => {\r\n        queryParameters = queryParameters.append('status', <any>element);\r\n      });\r\n    }\r\n    if (tags) {\r\n      tags.forEach(element => {\r\n        queryParameters = queryParameters.append('tags', <any>element);\r\n      });\r\n    }\r\n    if (offset !== undefined) {\r\n      queryParameters = queryParameters.set('offset', <any>offset);\r\n    }\r\n    if (limit !== undefined) {\r\n      queryParameters = queryParameters.set('limit', <any>limit);\r\n    }\r\n    if (sortBy !== undefined) {\r\n      queryParameters = queryParameters.set('sortBy', <any>sortBy);\r\n    }\r\n    if (sortOrder !== undefined) {\r\n      queryParameters = queryParameters.set('sortOrder', <any>sortOrder);\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(\r\n      httpHeaderAccepts\r\n    );\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [];\r\n\r\n    return this.httpClient.get<InlineResponse200>(`${this.basePath}/pets`, {\r\n      params: queryParameters,\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers: headers,\r\n      observe: observe,\r\n      reportProgress: reportProgress\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update an existing pet\r\n   *\r\n   * @param body Pet object that needs to be added to the store\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public updatePet(body?: Pet, observe?: 'body', reportProgress?: boolean): Observable<Pet>;\r\n  public updatePet(\r\n    body?: Pet,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<Pet>>;\r\n  public updatePet(\r\n    body?: Pet,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<Pet>>;\r\n  public updatePet(\r\n    body?: Pet,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(\r\n      httpHeaderAccepts\r\n    );\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n      'application/json-patch+json',\r\n      'application/json',\r\n      'text/json',\r\n      'application/_*+json'\r\n    ];\r\n    const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(\r\n      consumes\r\n    );\r\n    if (httpContentTypeSelected !== undefined) {\r\n      headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n\r\n    return this.httpClient.put<Pet>(`${this.basePath}/pets`, body, {\r\n      withCredentials: this.configuration.withCredentials,\r\n      headers: headers,\r\n      observe: observe,\r\n      reportProgress: reportProgress\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates a pet in the store with form data\r\n   *\r\n   * @param petId ID of pet that needs to be updated\r\n   * @param name Updated name of the pet\r\n   * @param status Updated status of the pet\r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public updatePetWithForm(\r\n    petId: number,\r\n    name: string,\r\n    status: string,\r\n    observe?: 'body',\r\n    reportProgress?: boolean\r\n  ): Observable<any>;\r\n  public updatePetWithForm(\r\n    petId: number,\r\n    name: string,\r\n    status: string,\r\n    observe?: 'response',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpResponse<any>>;\r\n  public updatePetWithForm(\r\n    petId: number,\r\n    name: string,\r\n    status: string,\r\n    observe?: 'events',\r\n    reportProgress?: boolean\r\n  ): Observable<HttpEvent<any>>;\r\n  public updatePetWithForm(\r\n    petId: number,\r\n    name: string,\r\n    status: string,\r\n    observe: any = 'body',\r\n    reportProgress: boolean = false\r\n  ): Observable<any> {\r\n    if (petId === null || petId === undefined) {\r\n      throw new Error(\r\n        'Required parameter petId was null or undefined when calling updatePetWithForm.'\r\n      );\r\n    }\r\n    if (name === null || name === undefined) {\r\n      throw new Error(\r\n        'Required parameter name was null or undefined when calling updatePetWithForm.'\r\n      );\r\n    }\r\n    if (status === null || status === undefined) {\r\n      throw new Error(\r\n        'Required parameter status was null or undefined when calling updatePetWithForm.'\r\n      );\r\n    }\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // to determine the Accept header\r\n    const httpHeaderAccepts: string[] = [];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(\r\n      httpHeaderAccepts\r\n    );\r\n    if (httpHeaderAcceptSelected !== undefined) {\r\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = ['application/x-www-form-urlencoded'];\r\n\r\n    const canConsumeForm = this.canConsumeForm(consumes);\r\n\r\n    let formParams: { append(param: string, value: any): HttpParams };\r\n    const useForm = false;\r\n    const convertFormParamsToString = false;\r\n    if (useForm) {\r\n      //formParams = new FormData();\r\n    } else {\r\n      formParams = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\r\n    }\r\n\r\n    if (name !== undefined) {\r\n      formParams = formParams.append('name', <any>name) || formParams;\r\n    }\r\n    if (status !== undefined) {\r\n      formParams = formParams.append('status', <any>status) || formParams;\r\n    }\r\n\r\n    return this.httpClient.post<any>(\r\n      `${this.basePath}/pets/${encodeURIComponent(String(petId))}`,\r\n      convertFormParamsToString ? formParams.toString() : formParams,\r\n      {\r\n        withCredentials: this.configuration.withCredentials,\r\n        headers: headers,\r\n        observe: observe,\r\n        reportProgress: reportProgress\r\n      }\r\n    );\r\n  }\r\n}\r\n","export interface ConfigurationParameters {\r\n  apiKeys?: { [key: string]: string };\r\n  username?: string;\r\n  password?: string;\r\n  accessToken?: string | (() => string);\r\n  basePath?: string;\r\n  withCredentials?: boolean;\r\n}\r\n\r\nexport class Configuration {\r\n  apiKeys?: { [key: string]: string };\r\n  username?: string;\r\n  password?: string;\r\n  accessToken?: string | (() => string);\r\n  basePath?: string;\r\n  withCredentials?: boolean;\r\n\r\n  constructor(configurationParameters: ConfigurationParameters = {}) {\r\n    this.apiKeys = configurationParameters.apiKeys;\r\n    this.username = configurationParameters.username;\r\n    this.password = configurationParameters.password;\r\n    this.accessToken = configurationParameters.accessToken;\r\n    this.basePath = configurationParameters.basePath;\r\n    this.withCredentials = configurationParameters.withCredentials;\r\n  }\r\n\r\n  /**\r\n   * Select the correct content-type to use for a request.\r\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\r\n   * If no content type is found return the first found type if the contentTypes is not empty\r\n   * @param {string[]} contentTypes - the array of content types that are available for selection\r\n   * @returns {string} the selected content-type or <code>undefined</code> if no selection could be made.\r\n   */\r\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\r\n    if (contentTypes.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const type = contentTypes.find(x => this.isJsonMime(x));\r\n    if (type === undefined) {\r\n      return contentTypes[0];\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Select the correct accept content-type to use for a request.\r\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\r\n   * If no content type is found return the first found type if the contentTypes is not empty\r\n   * @param {string[]} accepts - the array of content types that are available for selection.\r\n   * @returns {string} the selected content-type or <code>undefined</code> if no selection could be made.\r\n   */\r\n  public selectHeaderAccept(accepts: string[]): string | undefined {\r\n    if (accepts.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const type = accepts.find(x => this.isJsonMime(x));\r\n    if (type === undefined) {\r\n      return accepts[0];\r\n    }\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   * Check if the given MIME is a JSON MIME.\r\n   * JSON MIME examples:\r\n   *   application/json\r\n   *   application/json; charset=UTF8\r\n   *   APPLICATION/JSON\r\n   *   application/vnd.company+json\r\n   * @param {string} mime - MIME (Multipurpose Internet Mail Extensions)\r\n   * @return {boolean} True if the given MIME is JSON, false otherwise.\r\n   */\r\n  public isJsonMime(mime: string): boolean {\r\n    const jsonMime: RegExp = new RegExp(\r\n      '^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$',\r\n      'i'\r\n    );\r\n    return (\r\n      mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json')\r\n    );\r\n  }\r\n}\r\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\r\n\r\n/**\r\n * CustomHttpUrlEncodingCodec\r\n * Fix plus sign (+) not encoding, so sent as blank space\r\n * See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\r\n */\r\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\r\n  encodeKey(k: string): string {\r\n    k = super.encodeKey(k);\r\n    return k.replace(/\\+/gi, '%2B');\r\n  }\r\n  encodeValue(v: string): string {\r\n    v = super.encodeValue(v);\r\n    return v.replace(/\\+/gi, '%2B');\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BASE_PATH = new InjectionToken<string>('basePath');\r\nexport const COLLECTION_FORMATS = {\r\n  csv: ',',\r\n  tsv: '   ',\r\n  ssv: ' ',\r\n  pipes: '|'\r\n};\r\n"],"sourceRoot":"webpack:///"}