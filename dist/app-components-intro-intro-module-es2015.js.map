{"version":3,"sources":["./node_modules/@avl-controls/core/dist/avl-card/avl-card.css.js","./node_modules/@avl-controls/core/dist/avl-card/avl-card.html.js","./node_modules/@avl-controls/core/dist/avl-card/avl-card.js","./node_modules/@avl-controls/core/dist/avl-chip-list/avl-chip-list.css.js","./node_modules/@avl-controls/core/dist/avl-chip-list/avl-chip-list.html.js","./node_modules/@avl-controls/core/dist/avl-chip-list/avl-chip-list.js","./node_modules/@avl-controls/core/dist/avl-chips-chip/avl-chips-chip.css.js","./node_modules/@avl-controls/core/dist/avl-chips-chip/avl-chips-chip.html.js","./node_modules/@avl-controls/core/dist/avl-chips-chip/avl-chips-chip.js","./node_modules/@avl-controls/core/dist/avl-list/avl-list.css.js","./node_modules/@avl-controls/core/dist/avl-list/avl-list.html.js","./node_modules/@avl-controls/core/dist/avl-list/avl-list.js","./node_modules/@avl-controls/core/dist/avl-list/drag-and-drop.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-file-view/avl-file-view.css.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-file-view/avl-file-view.html.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-file-view/avl-file-view.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload-dialog/avl-upload-dialog.css.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload-dialog/avl-upload-dialog.html.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload-dialog/avl-upload-dialog.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload-progress/avl-upload-progress.css.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload-progress/avl-upload-progress.html.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload-progress/avl-upload-progress.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload.css.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload.html.js","./node_modules/@avl-controls/core/dist/avl-upload/avl-upload.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/array-data-provider.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-column-selector-dialog/avl-column-selector-dialog.css.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-column-selector-dialog/avl-column-selector-dialog.html.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-column-selector-dialog/avl-column-selector-dialog.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-datatable.consts.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-datatable.css.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-datatable.html.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-datatable.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/avl-datatable.models.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/column-definitions.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/themes/vaadin-grid-material-theme.css.js","./node_modules/@avl-controls/datatable/dist/avl-datatable/themes/vaadin-grid-sorter-material-theme.css.js","./node_modules/@avl-controls/interfaces/index.js","./node_modules/@avl-controls/interfaces/src/avl-dataprovider.js","./node_modules/@polymer/iron-image/iron-image.js","./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js","./node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox.js","./node_modules/@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js","./node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js","./node_modules/@vaadin/vaadin-element-mixin/vaadin-dir-helper.js","./node_modules/@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js","./node_modules/@vaadin/vaadin-element-mixin/vaadin-element-mixin.js","./node_modules/@vaadin/vaadin-grid/src/all-imports.js","./node_modules/@vaadin/vaadin-grid/src/iron-list.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-a11y-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-active-item-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-array-data-provider-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-group.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-reordering-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column-resizing-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-column.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-data-provider-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-drag-and-drop-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-dynamic-columns-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-event-context-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-filter-column.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-filter-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-filter.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-keyboard-navigation-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-row-details-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-scroll-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-scroller.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-selection-column.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-selection-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sort-column.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sort-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sorter.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-styles.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-styling-mixin.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-templatizer.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-tree-column.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid-tree-toggle.js","./node_modules/@vaadin/vaadin-grid/src/vaadin-grid.js","./node_modules/@vaadin/vaadin-material-styles/color.js","./node_modules/@vaadin/vaadin-material-styles/font-icons.js","./node_modules/@vaadin/vaadin-material-styles/version.js","./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-field-mixin.js","./node_modules/@vaadin/vaadin-text-field/src/vaadin-text-field.js","./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js","./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js","./node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js","./node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js","./src/app/components/intro/intro.component.html","./src/app/components/intro/pet-detail/pet-detail.component.html","./src/app/components/intro/pet-dialog/pet-dialog.component.html","./src/app/components/intro/pets/pets.component.html","./src/app/components/intro/intro-routing.module.ts","./src/app/components/intro/intro.component.css","./src/app/components/intro/intro.component.ts","./src/app/components/intro/intro.module.ts","./src/app/components/intro/pet-detail/pet-detail.component.css","./src/app/components/intro/pet-detail/pet-detail.component.ts","./src/app/components/intro/pet-detail/pet-photo.ts","./src/app/components/intro/pet-dialog/pet-dialog.component.css","./src/app/components/intro/pet-dialog/pet-dialog.component.ts","./src/app/components/intro/pets/pets.component.css","./src/app/components/intro/pets/pets.component.ts","./src/app/components/intro/pets/sort-order.ts","./src/pet-store/api/api.ts","./src/pet-store/index.ts","./src/pet-store/model/models.ts","./src/pet-store/model/pet.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzwD;AACjB;AACS;AAClB;AACa;AACpC,eAAe,qEAAI;AAC1B,IAAI,2DAAU;AACd,IAAI,mDAAK;;AAET,+BAA+B,kBAAkB;AACjD,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAkE;AACvB;AAC3C,0BAA0B,+EAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACf;AACI;AACN;AACnC,eAAe,wEAAI;AAC1B,IAAI,2DAAU;AACd,IAAI,wDAAK;AACT;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,4EAA4E,2BAA2B;AACvG,sBAAsB,4BAA4B;AAClD;AACA;AACA;;AAEA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAkE;AAClB;AAChD,8BAA8B,+EAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,4DAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,UAAU,8BAA8B,EAAE;AAClH;AACA;AACA;AACA,uEAAuE,UAAU,6BAA6B,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5QA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mHAAmH;AACnH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iHAAiH;AACjH;;AAEA;;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACd;AACG;AACD;AACjB;AACvB,eAAe,wEAAI;AAC1B,IAAI,2DAAU;AACd,IAAI,yDAAK;;AAET;AACA;AACA,+CAA+C,OAAO,KAAK,OAAO;AAClE;AACA;;AAEA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAkE;AACjB;AACjD,+BAA+B,+EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6DAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA,qEAAqE,gBAAgB;AACrF;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5IA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACjB;AACS;AAClB;AACkB;AACJ;AACd;AACvB,eAAe,qEAAI,KAAK,2DAAU,CAAC,GAAG,mDAAK;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,aAAa;AAC5E;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D,yBAAyB,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oCAAoC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAA8C;AACoB;AACvB;AAC3C,0BAA0B,+EAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA,eAAe,uDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU,kCAAkC,EAAE;AACpH;AACA;AACA;AACA,0EAA0E,UAAU,2BAA2B,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,UAAU,oBAAoB,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,UAAU,oBAAoB,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oDAAoD;AAC9G;AACA;AACA,mCAAmC,sCAAsC;AACzE;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,0DAAW;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,UAAU,uDAAuD,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChrBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E,oDAAoD,uBAAuB;AAC3E;AACA;AACA,mDAAmD,wCAAwC;AAC3F,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5TA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA,qB;AACA,oB;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACZ;AACQ;AACD;AACJ;AAC/C;AACO,eAAe,qEAAI;AAC1B,IAAI,wDAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAkE;AAClB;AAChD,8BAA8B,+EAAc;AAC5C;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,UAAU,0BAA0B,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,sBAAsB,OAAO,+CAA+C,OAAO;AACtH;AACA,aAAa;AACb;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU,mBAAmB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,UAAU,mBAAmB,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU,yCAAyC,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU,mBAAmB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU,+BAA+B,EAAE;AAC5G;AACA;AACA;;AAEA;;;;;;;;;;;;;AClMA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACR;AACX;AAC9B,eAAe,qEAAI;AAC1B,IAAI,4DAAK;AACT;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC,iBAAiB,sBAAsB;AACvC;AACA,mBAAmB,gBAAgB;AACnC,iDAAiD,YAAY;AAC7D,2CAA2C,qBAAqB,IAAI,WAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAoD;AACc;AAClE,+BAA+B,+EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAQ;AACvB;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAwD;AACN;AAC3C,eAAe,qEAAI;AAC1B,IAAI,8DAAK;;AAET;AACA;AACA,2CAA2C,YAAY,EAAE;AACzD;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAkE;AACZ;AACtD,8BAA8B,+EAAc;AAC5C,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAQ;AACvB;AACA;AACA;;AAEA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,e;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACf;AACO;AACD;AACR;AACQ;AACC;AACzC,eAAe,qEAAI;AAC1B,IAAI,2DAAU;AACd,IAAI,qDAAK;;AAET;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,OAAO;AAChD;AACA,oDAAoD,MAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,QAAQ;;AAE/D;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACrB;AACoB;AACjE;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,kBAAkB,YAAY,UAAU;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,UAAU,oBAAoB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC,qCAAqC;AACrC;AACA;AACA,kCAAkC;AAClC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,UAAU,cAAc,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnaA;AAAA;AAAA;AAAA;AAA2D;AAC3D;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB,qHAAqH;AACtI,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wEAAe;AACpC;AACA,iDAAiD,wEAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sFAAuB,EAAC;;AAEvC;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACD;AACI;AACR;AACA;AACU;AACJ;AAClD,eAAe,qEAAI;AAC1B,IAAI,qEAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,aAAa,mBAAmB,UAAU;AAC3H;AACA;AACA;AACA;AACA,8GAA8G,iBAAiB,UAAU,aAAa;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAkE;AACL;AACtD;AACP;AACA;AACA;AACA,CAAC,oCAAoC;AACrC,0CAA0C,+EAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yEAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mCAAmC,iCAAiC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACP;AACO;AACA;AACA;AACP,KAAK,uCAAuC;AAC5C,KAAK,uCAAuC;AAC5C,KAAK;AACL;;AAEA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAwC;AACjC,cAAc,qDAAI;AACzvNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACW;AACa;AACV;AACE;AACN;AACU;AACN;AACU;AACJ;AAChB;AACO;AACZ;AACrC,eAAe,qEAAI;AAC1B,IAAI,kFAAU,CAAC,GAAG,yDAAK;;AAEvB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;;AAEA,2CAA2C,eAAe,YAAY,wCAAwC;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;;AAEA,6CAA6C,oCAAoC,sBAAsB;;AAEvG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,+CAA+C;AAC5F;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACiB;AACvB;AACmB;AAC4B;AAC3D;AACG;AAC2G;AAC9J,+BAA+B,+EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAiB;AACzC;AACA;AACA;AACA;AACA,+BAA+B,+EAAyB;AACxD,6BAA6B,6EAAuB;AACpD;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wEAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,iBAAiB;AAClH;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAU,OAAO,8DAAU,SAAS,8DAAU,OAAO,8DAAU;AACtG;AACA;AACA;AACA,qBAAqB,wEAAY;AACjC;AACA;AACA;AACA;AACA,yBAAyB,8DAAU;AACnC;AACA,yBAAyB,8DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+DAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wEAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yEAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8DAAU,4BAA4B,8DAAU;AACjF,+BAA+B,6EAAgB;AAC/C;AACA,yCAAyC,oFAAuB;AAChE;AACA,yCAAyC,8DAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2EAAqB,GAAG,2EAAqB;AACvE;AACA;AACA;AACA,qCAAqC,2EAAqB;AAC1D;AACA,uCAAuC,2EAAqB;AAC5D,mDAAmD,2EAAqB;AACxE;AACA;AACA;AACA,uCAAuC,2EAAqB;AAC5D,iDAAiD,2EAAqB;AACtE;AACA,uDAAuD,2EAAqB;AAC5E;AACA;AACA;AACA,mEAAmE,2EAAqB;AACxF,qEAAqE,2EAAqB;AAC1F,sDAAsD,2EAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAa;AACzB;AACA;AACA,YAAY,wEAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,UAAU,IAAI,eAAe;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B,SAAS,kBAAkB;AAC9E;AACA,iBAAiB,8DAAU;AAC3B,sCAAsC,MAAM,qCAAqC,kBAAkB,aAAa,kBAAkB;AAClI,iBAAiB,8DAAU;AAC3B,sCAAsC,MAAM,uCAAuC,kBAAkB,aAAa,kBAAkB;AACpI,iBAAiB,8DAAU;AAC3B,sCAAsC,MAAM,6CAA6C,kBAAkB,aAAa,kBAAkB;AAC1I,iBAAiB,8DAAU;AAC3B,qEAAqE,MAAM,iBAAiB,kBAAkB;AAC9G,iBAAiB,8DAAU;AAC3B,sCAAsC,MAAM,gBAAgB,kBAAkB;AAC9E,iBAAiB,8DAAU;AAC3B,+CAA+C,MAAM,oBAAoB,kBAAkB;AAC3F,iBAAiB,8DAAU;AAC3B,2DAA2D,kBAAkB,yBAAyB,MAAM,UAAU,MAAM,iBAAiB,kBAAkB,WAAW,kBAAkB;AAC5L,iBAAiB,8DAAU;AAC3B,kDAAkD,MAAM,UAAU,MAAM,iBAAiB,kBAAkB,UAAU,OAAO,oBAAoB;AAChJ,iBAAiB,8DAAU;AAC3B,oCAAoC,MAAM,iBAAiB,kBAAkB,0BAA0B,kBAAkB,mBAAmB,MAAM,iBAAiB,kBAAkB,IAAI,qDAAqD,WAAW,kBAAkB;AAC3Q,iBAAiB,8DAAU;AAC3B,iEAAiE,MAAM,iBAAiB,kBAAkB,gCAAgC,kBAAkB;AAC5J,iBAAiB,8DAAU;AAC3B,iDAAiD,MAAM,gDAAgD,kBAAkB,WAAW,MAAM;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,kBAAkB;AACvF;AACA;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA,wDAAwD,eAAe,UAAU,kBAAkB,aAAa,aAAa;AAC7H;AACA,6BAA6B,eAAe;AAC5C,6BAA6B,EAAE,eAAe;AAC9C;AACA;AACA;AACA,sEAAsE,UAAU,IAAI,gBAAgB;AACpG;AACA;AACA,iEAAiE,UAAU,IAAI,eAAe;AAC9F;AACA;AACA;AACA,kDAAkD,kBAAkB,IAAI,UAAU;AAClF;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,YAAY,gBAAgB,OAAO,IAAI,mCAAmC;AACvJ;AACA,oGAAoG,UAAU;AAC9G,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gEAAgE,eAAe;AAC/E,gGAAgG,eAAe;AAC/G;AACA;AACA;AACA,aAAa;AACbvmCA;AAAA;AAAA;AAAA;AAAkD;AAC3C;AACP;AACA;AACA;AACA;AACA;AACO,yBAAyB,+DAAc;AAC9C;;AAEA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACO;AACP;AACA;;AAEA;;;;;;;;;;;;;AC1DA;AAAA;AAA8D;AAC9D,4BAA4B,2EAAI;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAiD;AACK;AACQ;AAC9D,4BAA4B,2EAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AACA;AACA;AACO;;;;;;;;;;;;;ACHP;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;;AAEsB;AACN;AACS;;AAErE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,mCAAmC,cAAc;AACjD;;AAEA;;AAEA,mCAAmC,cAAc;AACjD;;AAEA;;AAEA,mCAAmC,cAAc,6BAA6B;AAC9E;;AAEA;;AAEA,mCAAmC,cAAc,8BAA8B;AAC/E;;AAEA;;AAEA,mCAAmC,cAAc,6BAA6B;AAC9E;;AAEA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA,yFAAO;AACP,aAAa,2EAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;;AAElC;AACA;AACA;AACA,UAAU,0BAA0B;;AAEpC;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;;AAE5C;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oDAAoD;;AAEjE;AACA;AACA;AACA;AACA,eAAe,8BAA8B;;AAE7C;AACA;AACA;AACA;AACA,cAAc,4BAA4B;;AAE1C;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAA2D;;AAE7E;AACA;AACA;AACA;AACA,WAAW,4BAA4B;;AAEvC;AACA;AACA;AACA,aAAa,0DAA0D;;AAEvE;AACA;AACA;AACA;AACA,cAAc,0DAA0D;;AAExE;AACA;AACA;AACA,YAAY,0DAA0D;;AAEtE;AACA,gEAAgE;AAChE;AACA;AACA,YAAY,qDAAqD;;AAEjE;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAsD;AACnE,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB,4FAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC7WD;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;;AAEmB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA,UAAU,sFAAG;;AAEb,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,SAAS,2BAA2B;AACjD,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqE;;AAE0B;AACR;AACc;AACjB;AACtB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yGAAY;AACd,IAAI,0HAAiB;AACrB,MAAM,4GAAa;AACnB,QAAQ,oHAAqB,CAAC,kFAAc;AAC5C;AACA,WAAW,2EAAI;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,iBAAiB,6CAA6C,uBAAuB;AAC/H;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,+BAA+B;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAE2B;;;;;;;;;;;;;ACzU3B;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,4EAA4E,eAAe;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,uCAAuC;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrTA;AAAA;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqB;;;;;;;;;;;;;AC1FrB;AAAA;AAAA;AAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA,qDAAqD,2CAA2C;;AAEhG;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,+DAAS;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA,WAAW,+DAAS;AACpB;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA,WAAW,+DAAS;AACpB;AACA;;;;;;;;;;;;;ACzHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACE;AACI;;AAEtB;AAC4C;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,0GAAe;AACrB,IAAI,kHAAe;AACnB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACO,oEAAoE,qEAAQ;AACnF;AACA;AACA;;AAEA,WAAW,GAAG;;AAEd;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gFAAS;AAC5B,UAAU,8EAAU;AACpB;AACA;AACA;AACA,QAAQ,4FAAgB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACa;AACN;AACO;AACP;AACK;AACK;AACL;AACA;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,8CAA8C;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAC4C;;AAEwD;AACW;AACnB;AAC/B;AACD;AACyB;AACrF,kDAAkD,MAAM;AACxD;AACA;AACA,sBAAsB,kFAAc;AACpC,gBAAgB,8EAAU;AAC1B,iBAAiB,6EAAS;;AAE1B;AACA;AACA;AACO,wBAAwB,kFAAK;;AAEpC;AACA,IAAI,iHAAqB;AACzB,IAAI,4HAAwB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;;AAEH;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA,IAAI,iFAAK;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,iFAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,6BAA6B,gFAAS;AACtC;AACA;AACA;AACA,IAAI,+FAAgB;AACpB;;AAEA,CAAC;;;;;;;;;;;;;ACr1BD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,QAAQ;AACR;AACA;;AAEA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC0D;;AAE1D;AACA;AACA;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,uBAAuB;AACpC,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kCAAkC;AAC/C,aAAa,OAAO;AACpB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2DAA2D;AAC3D,UAAU,uEAAI;AACd,8BAA8B,KAAK,aAAa,OAAO,uCAAuC,OAAO;AACrG;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAI,oBAAoB,uEAAI;AACzD,OAAO;AACP,6BAA6B,uEAAI,oBAAoB,uEAAI;AACzD;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,kBAAkB;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gDAAgD,uEAAI;AACpD;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;;;;;;;;;;;;ACjLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4C;;AAEoB;AACgC;AACtC;AACW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8EAAe,CAAC,kFAAc;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,cAAc;AACd;AACA;AACA;AACA,WAAW,6GAAsB;AACjC;;AAEA;AACA;AACA,yBAAyB,6GAAsB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,6EAAS;AACjB;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACkC;;;;;;;;;;;;;AClTlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC+F;;AAE1B;AACJ;AACE;;AAEnE;AACA;AACA;AACO,gFAAgF,oHAAqB;;AAE5G;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,0FAAW;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,sFAAG;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D;AAC1D;AACA,MAAM;AACN;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAS;AACjB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,MAAM,wBAAwB;AAC7G;;AAEA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,8BAA8B;AAC3C,aAAa,8BAA8B;AAC3C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,mBAAmB;AAChC,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,kBAAkB;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;;;;;;;;;;;;ACjZA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC+F;;AAE1B;;AAErE;AACA;AACA;AACO,4EAA4E,oHAAqB;;AAExG;AACA;AACA;AACA,IAAI,0FAAW;;AAEf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB;AACnB,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqE;;AAE2B;AACpB;AACjB;AACQ;AACE;;AAErE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB;AAChB;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC,6GAAsB;AACvD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,wEAAwE;AACxE;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA,+EAA+E;AAC/E;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,oBAAoB;AACjC,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,8BAA8B,uEAAW;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA,WAAW,6GAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAmB;AAChC,aAAa,mBAAmB;AAChC,aAAa,kCAAkC;AAC/C,aAAa,kCAAkC;AAC/C,aAAa,oBAAoB;AACjC,aAAa,6BAA6B;AAC1C,aAAa,qCAAqC;AAClD,aAAa,gCAAgC;AAC7C,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2CAA2C,gFAAS;AACpD;AACA,QAAQ,kFAAc;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iGAAQ,CAAC,kFAAc;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AAC6B;;;;;;;;;;;;;ACtsB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACmE;;AAEL;;AAEvD;AACP;AACA,aAAa,aAAa;AAC1B,aAAa,uBAAuB;AACpC,aAAa,sBAAsB;AACnC;AACA;AACA,eAAe,aAAa;AAC5B;AACA,eAAe,uBAAuB;AACtC;AACA,eAAe,sBAAsB;AACrC;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACO;;AAEP;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA,yCAAyC,gFAAS;AAClD;AACA,UAAU,2EAAO;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA+B,gFAAS;AACxC;AACA,MAAM,2EAAO;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,UAAU;AACvB,aAAa,kBAAkB;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;;;ACxfA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yCAAyC;AACzD,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mCAAmC,8BAA8B;AACjE,mCAAmC,6BAA6B;AAChE,OAAO;;AAEP;AACA;AACA,2BAA2B,uDAAuD;AAClF,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;;;;;;;;;;;;AC1bA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACgG;;AAE7B;AACL;AACO;;AAErE;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,wBAAwB;AACrC,cAAc;AACd;AACA;AACA;AACA,WAAW,6GAAsB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,sBAAsB,6GAAsB;AAC5C;;AAEA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,6GAAsB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,gFAAS;AAC7C;AACA,QAAQ,2EAAO;AACf;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kFAAc;AACxD,6EAA6E,YAAY;AACzF;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4D;;AAE3B;AAC6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wEAAiB;AACvD;AACA,WAAW,2EAAI;AACf;AACA;AACA,gFAAgF,yBAAyB,cAAc;AACvH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEmC;;;;;;;;;;;;;ACpEnC;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4C;;AAEgB;AACE;AACK;AACL;AACO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kFAAc;AAC9C;AACA,WAAW,2EAAI;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,gFAAS;AAC5C;AACA,MAAM,2EAAO;AACb;AACA,8DAA8D,cAAc;AAC5E,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;AAE6B;;;;;;;;;;;;;ACrH7B;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gGAAgG;AAChG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,KAAK;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,mEAAmE,eAAe;AAClF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAoE,eAAe;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA,aAAa,qBAAqB;AAClC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5oBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC2D;;AAEC;;AAE5D;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uEAAW;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,0DAA0D,6BAA6B;AACvF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,iFAAK;AACb,mDAAmD,kBAAkB;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF,KAAK;AACL;;AAEA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;ACjNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACmE;;AAEsB;;AAEzF;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,gFAAS;AAClD;AACA,MAAM,kFAAc;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,gFAAS;AAC/C;AACA,QAAQ,2EAAO;AACf;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gFAAS;AACvC;AACA,MAAM,2EAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,gFAAS;AACtC;AACA,MAAM,kFAAc;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA,KAAK;AACL,wCAAwC,kBAAkB;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,gFAAS;AAC5C;AACA,MAAM,6EAAS;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,EAAE,MAAM,EAAE;AAClC;;AAEA;;;;;;;;;;;;;AC9ZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC8E;;AAET;AACT;AACX;AACkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAe;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,qBAAqB;AAClC,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA,uDAAuD,cAAc;;AAErE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,EAAE;AAClE;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,gFAAS;AAC5C;AACA,QAAQ,kFAAc;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,mGAAe;AACnB;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,gFAAS;AACnD;AACA,MAAM,kFAAc;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA,4BAA4B;;AAE5B;AACA,oBAAoB;;AAEpB;AACA,mBAAmB;;AAEnB;AACA,kBAAkB;;AAElB;AACA,wBAAwB;;AAExB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA,IAAI,iFAAK;AACT;AACA;;AAEA;;AAEkD;;;;;;;;;;;;;ACpblD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4C;;AAEgB;AACJ;AACM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wEAAiB;AAC1D;AACA,WAAW,2EAAI;AACf;AACA;AACA;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC,MAAM;AACjE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEsC;;;;;;;;;;;;;AC7QtC;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4D;;AAE3B;AAC6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wEAAiB;AACrD;AACA,WAAW,2EAAI;AACf;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEiC;;;;;;;;;;;;;ACxEjC;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACgE;;AAEK;;AAErE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAS;AACf;AACA;AACA;AACA,gCAAgC,kFAAc;AAC9C,oEAAoE,8BAA8B;AAClG;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4C;;AAEW;AACgC;AACX;AACd;AACO;AACrE;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4GAAa,CAAC,iGAAQ,CAAC,kFAAc;AACrE;AACA,WAAW,2EAAI;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,8BAA8B;AAC1F;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAE6B;;;;;;;;;;;;;ACtO7B;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqD;;AAES;AAC9D;;AAEA;AACA;AACA,EAAE,2EAAI;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACtSA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqE;;AAEC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,kFAAc,GAAG;AAC9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,2FAAU;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,KAAK;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,WAAW,GAAG,KAAK;AAC9D;;AAEA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C,yBAAyB,mBAAmB;AAC5C;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAE0C;;;;;;;;;;;;;ACvK1C;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4D;;AAEtB;AACwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wEAAiB;AACrD;AACA,WAAW,2EAAI;AACf;AACA,8FAA8F,UAAU;AACxG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEiC;;;;;;;;;;;;;AC3EjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqE;;AAEd;AACY;AACoB;AACX;AACd;AACG;AACD;AAChE;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4GAAa,CAAC,iGAAQ,CAAC,kFAAc;AACzE;AACA,WAAW,2EAAI;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,qFAAW;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gFAAS;AAC1C;AACA,MAAM,6EAAS;AACf,+BAA+B,kBAAkB;AACjD;AACA;AACA;;AAEA;;AAEiC;;;;;;;;;;;;;ACpNjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC4C;;AAE2C;AAC3B;AACJ;AACa;AACe;AACP;AACJ;AACI;AACJ;AACb;AACS;AACT;AACM;AACV;AACM;AACU;AACa;AACJ;AAChD;AACA;AACmD;AACtB;AACiB;AACZ;AACW;;AAE9E;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sDAAsD;AACxE,kBAAkB,qDAAqD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAsD;AAC/E,IAAI,qDAAqD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAU;AAClB,QAAQ,eAAe;AACvB,QAAQ,UAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,0GAAY;AACd,IAAI,4GAAa;AACjB,MAAM,6FAAiB;AACvB,QAAQ,wGAAsB;AAC9B,UAAU,iGAAmB;AAC7B,YAAY,yFAAe;AAC3B,cAAc,iFAAW;AACzB,gBAAgB,uFAAc;AAC9B,kBAAkB,6EAAS;AAC3B,oBAAoB,0FAAe;AACnC,sBAAsB,0GAAuB;AAC7C,wBAAwB,4EAAS;AACjC,0BAA0B,iFAAW;AACrC,4BAA4B,sGAAqB;AACjD,8BAA8B,iGAAmB;AACjD,gCAAgC,6FAAiB;AACjD,kCAAkC,6FAAgB;AAClD,oCAAoC,mFAAY;AAChD,sCAAsC,wEAAe;AACrD;AACA,WAAW,4EAAI;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,qGAAgB;AACpB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,aAAa,qBAAqB;AAClC,aAAa,2BAA2B;AACxC,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,uBAAuB,QAAQ;AAC/B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B;AACrF;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mCAAmC,iFAAS;AAC5C,MAAM,4EAAO;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,aAAa,qBAAqB;AAClC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,iFAAS;AAC1C,MAAM,mFAAc;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACuB;;;;;;;;;;;;;AC/5BvB;AAAA;AAAA;AAAA;AAAsB;AACiC;AACF;AACrtLA;AAAA;AAAA;AAAuD;AACjC;AACtB;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEoB;;;;;;;;;;;;;ACRpB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC8E;;AAEX;AACL;;AAE9D,4BAA4B,2EAAI;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB,SAAS,qBAAqB;AAC7F;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gFAAS;AACxC;AACA,UAAU,2EAAO;AACjB;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yFAAyF,cAAc;AACvG;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,qBAAqB,SAAS,qBAAqB;;AAE7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,KAAK;AAChD,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa,oBAAoB;AACjC,aAAa,mBAAmB;AAChC,aAAa,mBAAmB;AAChC,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,qBAAqB,SAAS,qBAAqB;AAClG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,oBAAoB,SAAS,SAAS;AAC7D,uBAAuB,oBAAoB,SAAS,SAAS;AAC7D,4BAA4B,oBAAoB,UAAU,SAAS;AACnE,uBAAuB,oBAAoB,SAAS,SAAS;;AAE7D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,6BAA6B;AAC1G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS,GAAG,SAAS;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0CAA0C,gFAAS;AACnD;AACA,MAAM,kFAAc;AACpB;AACA,OAAO;AACP;;AAEA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC77BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqE;;AAEP;AACuC;AACd;AACH;AACtB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yGAAY;AACd,IAAI,kFAAc;AAClB,MAAM,0HAAiB;AACvB,QAAQ,4GAAa,CAAC,kFAAc;AACpC;AACA,WAAW,2EAAI;AACf;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAE4B;;;;;;;;;;;;;ACxJ5B;AAAA;AAAA;AAAA;AAAwE;AACF;;AAEtE;AACA;AACA;AACA;AACO,sEAAsE,0FAAkB;;AAE/F;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,qFAAS;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpFA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACoH;;AAEpH;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sFAAsF;AACtF,sCAAsC;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA,CAAC;;AAED;AACA;;AAEO;AACP,aAAa,iIAAoB;AACjC,WAAW,yIAAoB;AAC/B;AACA;;;;;;;;;;;;;ACvfA;AAAA;AAAA;AAAA;AAAqD;;;;;;;;;;;;;ACArD;AAAe,oGAAqC,gEAAgE,cAAc,uEAAuE,aAAa,8EAA8E,wXAAwX,E;;;;;;;;;;;;ACA5pB;AAAe,8FAA+B,yHAAyH,YAAY,uIAAuI,yCAAyC,gDAAgD,cAAc,8HAA8H,uCAAuC,uGAAuG,uCAAuC,cAAc,sBAAsB,uKAAuK,yCAAyC,uJAAuJ,0DAA0D,6HAA6H,6CAA6C,+JAA+J,E;;;;;;;;;;;;ACAl+C;AAAe,oPAAqL,8BAA8B,0CAA0C,iGAAiG,yCAAyC,2IAA2I,uCAAuC,uxBAAuxB,yCAAyC,gOAAgO,uCAAuC,+FAA+F,E;;;;;;;;;;;;ACA9uD;AAAe,yMAA0I,8CAA8C,q5BAAq5B,E;;;;;;;;;;;;;;;;;;;;;;;;ACAnjC;AACc;AAEJ;AACM;AAEzD,MAAM,WAAW,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,WAAW,EAAE,CAAC,iEAAS,CAAC,EAAE,CAAC,CAAC;AAMhG,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAJ9B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7C,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACZ/B;AAAe,yEAAU,uBAAuB,KAAK,UAAU,qBAAqB,KAAK,+CAA+C,2YAA2Y,E;;;;;;;;;;;;;;;;;;;;;;;;ACAze;AAS1C,IAAa,cAAc,GAA3B,MAAa,cAAc;CAE1B;AAFY,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,wLAAqC;;KAEtC,CAAC;GACW,cAAc,CAE1B;AAF0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsC;AACpB;AAEa;AACP;AACS;AACN;AACiB;AACA;AACE;AAWzE,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAG;AAAd,WAAW;IATvB,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAY,EAAE,0DAAW,EAAE,wEAAkB,CAAC;QACxD,YAAY,EAAE,CAAC,+DAAc,EAAE,kEAAa,EAAE,mFAAkB,EAAE,mFAAkB,CAAC;QACrF,OAAO,EAAE,CAAC,oEAAsB,CAAC;QACjC,OAAO,EAAE,CAAC,wEAAkB,CAAC;QAC7B,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,uEAAc,EAAE,QAAQ,EAAE,sEAAa,EAAE;SACrD;KACF,CAAC;GACW,WAAW,CAAG;AAAH;;;;;;;;;;;;;ACpBxB;AAAe,2EAAY,sBAAsB,KAAK,4BAA4B,qBAAqB,KAAK,kCAAkC,gCAAgC,mBAAmB,oBAAoB,yBAAyB,yBAAyB,yBAAyB,KAAK,WAAW,sBAAsB,KAAK,mDAAmD,+4BAA+4B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1rC;AAEnD;AACO;AACmB;AAED;AAEN;AAOnD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAK7B,YAA4C,aAA+B,EAAU,SAAuB;QAAhE,kBAAa,GAAb,aAAa,CAAkB;QAAU,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAEhH,WAAW,CAAC,OAAsB;QAChC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACxB,IAAI,GAAG,IAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE;YACzD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YACjD,MAAM,iBAAiB,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;YACtD,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,GAAG,CAAC,GAAG,GAAG,iBAAiB,CAAC;YAE5B,IAAI,QAAQ,GAAG,IAAI,mDAAQ,CAAC,iBAAiB,CAAC,CAAC;YAC/C,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBAChB,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;gBACxB,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC;YACF,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE;gBACjB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC;qBACjC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;oBACb,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBACtC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;oBACd,QAAQ,CAAC,GAAG,GAAW,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;gBACpE,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YACF,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;4CA/Bc,oDAAM,SAAC,uEAAc;YAA8D,sEAAY;;AAJnG;IAAR,2DAAK,EAAE;;+CAAU;AADP,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,6MAA0C;;KAE3C,CAAC;IAMa,uEAAM,CAAC,uEAAc,CAAC;6CAA6D,sEAAY;GALjG,kBAAkB,CAoC9B;AApC8B;;;;;;;;;;;;;ACf/B;AAAA;AAAO,MAAM,QAAQ;IAEnB,YAAmB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;QAD9B,YAAO,GAAG,KAAK,CAAC;IACiB,CAAC;CACnC;;;;;;;;;;;;;ACHD;AAAe,+EAAgB,iBAAiB,KAAK,mDAAmD,+WAA+W,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxY;AACpC;AAGY;AAEM;AACF;AACJ;AACA;AAOvD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAe7B,YAAoB,gBAAkC,EAAqB,QAAgB;QAAvE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAd7C,SAAI,GAAG,KAAK,CAAC;QACb,SAAI,GAAG,KAAK,CAAC;QAGZ,WAAM,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAClC,SAAI,GAAG,IAAI,0DAAY,EAAO,CAAC;QAEzC,kBAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxC,cAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAI7B,kBAAa,GAAc,EAAE,CAAC;QAMtB,sBAAiB,GAAG,CAAC,CAAC;QAH5B,IAAI,CAAC,UAAU,GAAG,GAAG,QAAQ,YAAY,CAAC;IAC5C,CAAC;IAID,UAAU,CAAC,IAAI;QACb,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YAC5E,IAAG,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;oBAChE,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,KAAK,MAAM,CAAC;oBACzD,OAAO;wBACL,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,UAAU;wBAClB,WAAW,EAAE,GAAG;qBACN,CAAC;gBACf,CAAC,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACzB;IACH,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAEM,oBAAoB,CAAC,IAAa;QACvC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,qBAAqB,CAAC,MAA2C;QACtE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;QAC3C,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE;YAClF,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC5B;SACF;IACH,CAAC;IAEM,mBAAmB,CAAC,IAAa;QACtC,IAAI,CAAC,iBAAiB,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,OAAO,CAAC,SAAkB;QACxB,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAEO,SAAS;QACf,gDAAgD;QAChD,mCAAmC;QACnC,OAAO;YACL,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK;YACnC,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAEO,gBAAgB;QACtB,0DAA0D;QAC1D,+BAA+B;QAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,6CAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC3C,MAAM,SAAS,GAAG,6CAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACtC,IAAI,KAAK,CAAC;YACV,QAAQ,SAAS,EAAE;gBACjB,KAAK,WAAW;oBACd,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;oBACpE,MAAM;gBACR,KAAK,SAAS;oBACZ,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;oBAClE,MAAM;gBACR,KAAK,MAAM;oBACT,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;oBAC/D,MAAM;aACT;YACD,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA3FuC,oEAAgB;yCAAG,oDAAM,SAAC,mDAAS;;AAdhE;IAAR,2DAAK,EAAE;;gDAAc;AACb;IAAR,2DAAK,EAAE;;gDAAc;AACb;IAAR,2DAAK,EAAE;;+CAAU;AAER;IAAT,4DAAM,EAAE;;kDAAmC;AAClC;IAAT,4DAAM,EAAE;;gDAAgC;AAN9B,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,6MAA0C;;KAE3C,CAAC;IAgByD,uEAAM,CAAC,mDAAS,CAAC;qCAApC,oEAAgB;GAf3C,kBAAkB,CA0G9B;AA1G8B;;;;;;;;;;;;;AChB/B;AAAe,6EAAc,sBAAsB,yBAAyB,kBAAkB,6BAA6B,KAAK,uBAAuB,kBAAkB,uBAAuB,yBAAyB,yBAAyB,yBAAyB,KAAK,yBAAyB,mBAAmB,uBAAuB,0DAA0D,KAAK,2BAA2B,0DAA0D,KAAK,uBAAuB,oBAAoB,KAAK,mDAAmD,+tCAA+tC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvtD;AAMhB;AAML;AACzB;AACc;AAEU;AACC;AAOlE,IAAa,aAAa,GAA1B,MAAa,aAAa;IAqBxB,YAAoB,UAAyB,EAAU,gBAAkC;QAArE,eAAU,GAAV,UAAU,CAAe;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QApB/E,uBAAkB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAIvD,sBAAiB,GAAa;YAC5B,IAAI,wGAAU,CACZ,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,wGAAU,CAAC,IAAI,EACzE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAC/E;YACD,IAAI,wGAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,MAAM,EAAE,wGAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;YACtH,IAAI,wGAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAAE,QAAQ,EAAE,wGAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC;YAC3H,IAAI,wGAAU,CACZ,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAC1D,eAAe,EAAE,wGAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAC3G;SACF,CAAC;QAEF,cAAS,GAAG,KAAK,CAAC;QAClB,sBAAiB,GAAG,KAAK,CAAC;QAI1B,qBAAgB,GAAiB,CAAC,MAA8B,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAFV,CAAC;IAI7F,mBAAmB,CAAC,GAAQ;QAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,OAAO,CAAC,GAAQ;QACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,SAAS;QACP,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAA6B,CAAC;QACtE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;QAExF,OAAO,IAAI,CAAC,WAAW,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,GAAQ;QACd,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAElC,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAA6B,CAAC;QAEtE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;SACzE;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;SACtE;IACH,CAAC;IAEO,mBAAmB,CAAC,MAA8B;QACxD,OAAO,IAAI,OAAO,CAAuB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3D,IAAI,UAAyC,CAAC;YAE9C,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;YACtF,IAAI,MAAM,EAAE,SAAS,CAAC;YACtB,IAAI,OAAO,EAAE;gBACX,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;gBACtB,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,qDAAS,CAAC,SAAS,CAAC,CAAC,CAAC,qDAAS,CAAC,UAAU,CAAC;aAC5E;YAED,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC9C,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAClC,UAAU,EACV,SAAS,EACT,SAAS,EACT,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,EAC7B,MAAM,CAAC,QAAQ,EACf,MAAM,EACN,SAAS,CACV,CAAC;YAEF,UAAU,CAAC,SAAS,CAClB,QAAQ,CAAC,EAAE;gBACT,UAAU,CAAC,GAAG,EAAE;oBACd,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC/D,CAAC,EAAE,CAAC,CAAC,CAAC;YACR,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CACjC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,WAAW,CAAC,KAAK;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAA6B,CAAC;QACtE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,mDAAmD,CAAC,EAAE,CAAC,CAAC;IAClH,CAAC;CACF;;YA9EiC,uDAAa;YAA4B,oEAAgB;;AApB/E;IAAT,4DAAM,EAAE;;yDAA8C;AAE/B;IAAvB,+DAAS,CAAC,WAAW,CAAC;8BAAmB,wDAAU;uDAAC;AAH1C,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,2LAAoC;;KAErC,CAAC;qCAsBgC,uDAAa,EAA4B,oEAAgB;GArB9E,aAAa,CAmGzB;AAnGyB;;;;;;;;;;;;;ACxB1B;AAAA;AAAA,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,8BAAiB;IACjB,gCAAmB;AACrB,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAiC;AACgB;AAC1C,MAAM,IAAI,GAAG,CAAC,6DAAa,CAAC,CAAC;;;;;;;;;;;;;ACFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACK;AACH;AACI;AACH;;;;;;;;;;;;;ACF7B;AAAA;AAAA;AAAA;AAAsB;;;;;;;;;;;;;AC0CtB;AAAA;AAAO,IAAU,GAAG,CAOnB;AAPD,WAAiB,GAAG;IAEL,cAAU,GAAG;QACxB,SAAS,EAAE,WAAyB;QACpC,OAAO,EAAE,SAAuB;QAChC,IAAI,EAAE,MAAoB;KAC3B,CAAC;AACJ,CAAC,EAPgB,GAAG,KAAH,GAAG,QAOnB","file":"app-components-intro-intro-module-es2015.js","sourcesContent":["import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n:host {\r\n  --avl-card-background-color: var(--avl-background-color);\r\n  --avl-card-text-color: var(--avl-foreground-color);\r\n  --avl-card-action-background-color: var(--avl-background-color);\r\n  --avl-card-shadow: var(--avl-box-shadow-1dp);\r\n  \r\n  font-family: var(--avl-font-family);\r\n  background-color: var(--avl-card-background-color);\r\n  color: var(--avl-card-text-color);\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 14px;\r\n  box-shadow: var(--avl-card-shadow);\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.thumbnail {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 16px;\r\n  align-self: center;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.heading-content {\r\n  padding: 16px 24px;\r\n}\r\n\r\n.heading-content > div {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n:host ::slotted([slot=\"title\"]) {\r\n  margin: 0px;\r\n  font-size: 24px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  line-height: 26px;\r\n}\r\n\r\n.avl-card ::slotted([slot=\"title\"]) {\r\n  margin: 0px;\r\n  font-size: 24px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  line-height: 26px;\r\n  font-size: 24px;\r\n}\r\n\r\n.avl-card ::slotted([slot=\"subtitle\"]) {\r\n  margin: 0px;\r\n  font-size: 24px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  line-height: 26px;\r\n  font-size: 16px;\r\n}\r\n\r\n:host ::slotted([slot=\"subtitle\"]) {\r\n  margin: 0px;\r\n  font-size: 16px;\r\n  padding-top: 2px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  line-height: 24px;\r\n}\r\n\r\n.title {\r\n  display: inline-grid;\r\n}\r\n\r\n::slotted([slot=\"content\"]) {\r\n  padding: 0px;\r\n  position: relative;\r\n}\r\n\r\n::slotted(div) {\r\n  padding: 0px;\r\n}\r\n\r\n.content {\r\n  display: block;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n}\r\n\r\n.header {\r\n  position: relative;\r\n  padding: 0;\r\n  color: var(--avl-card-text-color);\r\n}\r\n\r\niron-image {\r\n  --iron-image-width: 100%;\r\n  --iron-image-height: auto;\r\n  display: block;\r\n}\r\n\r\n.image {\r\n  padding-bottom: 16px;\r\n}\r\n\r\ndiv.content {\r\n  padding: 0px 24px 16px;\r\n}\r\n\r\ndiv.actions{\r\n  padding: 0px 16px;\r\n}\r\n\r\n.actions {\r\n  margin-top: auto;\r\n  bottom: 0;\r\n  background-color: var(--avl-card-action-background-color);\r\n}\r\n\r\n.actions ::slotted([slot=\"actions\"]) {\r\n  padding: 0px;\r\n  float: left;\r\n}\r\n\r\n.actions ::slotted([slot=\"actions-right\"]) {\r\n  padding: 0px;\r\n  float: right;\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-card.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport { style } from './avl-card.css';\nimport { allInitial } from '../all-initial.css';\nimport '../avl-icon/avl-icon';\nimport '@polymer/iron-image/iron-image.js';\nexport let template = html `\r\n  ${allInitial}\r\n  ${style}\r\n\r\n  <div class=\"header\" class$={{getHeaderClass()}}>\r\n    <template is=\"dom-if\" if=\"{{titleBelowImage}}\">\r\n      <iron-image src=\"[[image]]\" > </iron-image>\r\n      <div class=\"heading-content\">\r\n        <div>\r\n          <template is=\"dom-if\" if=\"[[titleIcon]]\">\r\n            <avl-icon class=\"thumbnail\" icon=\"[[titleIcon]]\"></avl-icon>\r\n          </template>\r\n          <div class=\"title\">\r\n            <slot name=\"title\"> </slot>\r\n            <slot name=\"subtitle\"> </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <template is=\"dom-if\" if=\"{{!titleBelowImage}}\">\r\n      <div class=\"heading-content\">\r\n        <div>\r\n          <template is=\"dom-if\" if=\"[[titleIcon]]\">\r\n            <avl-icon class=\"thumbnail\" icon=\"[[titleIcon]]\"></avl-icon>\r\n          </template>\r\n      \r\n          <div class=\"title\">\r\n            <slot name=\"title\"> </slot>\r\n            <slot name=\"subtitle\"> </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <template is=\"dom-if\" if=\"[[image]]\">\r\n        <iron-image src=\"[[image]]\" class=\"image\" > </iron-image>\r\n      </template>\r\n    </template>\r\n  </div>\r\n\r\n  <div class=\"content\">\r\n    <slot> </slot>\r\n    <slot name=\"content\"> </slot>\r\n  </div>\r\n\r\n  <div class=\"actions\">\r\n    <slot name=\"actions\"> </slot>\r\n    <slot name=\"actions-right\"> </slot>\r\n  </div>`;\n\r\n//# sourceMappingURL=avl-card.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-card.html';\nclass AvlCardImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.titleBelowImage = false;\n    }\n    static get is() {\n        return 'avl-card';\n    }\n    static get template() {\n        return template;\n    }\n    static get properties() {\n        return {\n            image: String,\n            titleBelowImage: Boolean,\n            titleIcon: String,\n        };\n    }\n    getHeaderClass() {\n        if (this.image == null) {\n            return 'header no-image';\n        }\n        return 'header';\n    }\n}\ncustomElements.define(AvlCardImpl.is, AvlCardImpl);\n\n//# sourceMappingURL=avl-card.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n:host{\r\n  display: inline-block;\r\n  flex-wrap: wrap;\r\n}\r\n\r\navl-chips-chip:hover{\r\n  cursor: pointer;\r\n}\r\n\r\navl-chips-chip{\r\n  margin: 4px;\r\n  margin-top: 8px;\r\n  margin-bottom: 8px;\r\n  transition-property: box-shadow;\r\n  transition-duration: 0.2s; \r\n  display: inline-flex;\r\n}\r\n\r\navl-chips-chip[disabled]{\r\n  cursor: default;\r\n}\r\n\r\navl-chips-chip[readonly]{\r\n  cursor: default;\r\n}\r\n\r\navl-chips-chip:active:not([disabled]){\r\n  background-color: var(--avl-chips-chip-pressed-color, var(--avl-ink-pressed-color));\r\n  box-shadow: var(--avl-chips-shadow ,var(--avl-box-shadow-8dp));\r\n}\r\n\r\n.title{\r\n  padding-top:2px;\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 14px;\r\n  color: var(--avl-foreground-color);\r\n}\r\n\r\n.container{\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-chip-list.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element.js';\nimport { style } from './avl-chip-list.css';\nimport { allInitial } from '../all-initial.css';\nimport '../avl-chips-chip/avl-chips-chip';\nexport let template = html `\r\n  ${allInitial}\r\n  ${style}\r\n  <template is=\"dom-if\" if=\"[[label]]\">\r\n      <div class=\"title\">{{label}}</div>\r\n    </template>\r\n    <div class=\"container\">\r\n      <template is=\"dom-repeat\" items=\"[[items]]\" on-dom-change=\"start\">\r\n        <avl-chips-chip label=\"[[item.label]]\" value=\"[[item]]\" disabled=\"{{isDisabled(item,disabled)}}\"\r\n          readonly=\"{{isReadOnly(item, readonly)}}\" on-checked-changed=\"chipSelected\" filter=\"[[multiSelect]]\"\r\n          not-selectable=\"[[notSelectable]]\"></avl-chips-chip>\r\n      </template>\r\n    </div>`;\n\r\n//# sourceMappingURL=avl-chip-list.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-chip-list.html';\nclass AvlChipListImpl extends PolymerElement {\n    constructor() {\n        super();\n        this.selectedIndexes = [];\n        this.selectedValues = [];\n        this.notSelectable = true;\n        this.initialized = false;\n        this.ignoreCheckedEvents = false;\n        this.addEventListener('focusin', (event) => {\n            this.focused = true;\n        });\n        this.addEventListener('focusout', (event) => {\n            this.focused = false;\n        });\n    }\n    static get is() { return 'avl-chip-list'; }\n    static get template() {\n        return template;\n    }\n    static get properties() {\n        return {\n            items: {\n                type: Array,\n                observer: 'itemsChange'\n            },\n            disabled: {\n                type: Boolean,\n                reflectToAttribute: true\n            },\n            selectedValue: {\n                type: Object,\n                notify: true,\n                observer: 'selectedValueChange'\n            },\n            selectedIndex: {\n                type: Number,\n                value: -1,\n                reflectToAttribute: true,\n                observer: 'selectedIndexChange',\n                notify: true\n            },\n            selectedValues: {\n                type: Array,\n                notify: true\n            },\n            selectedIndexes: {\n                type: Array,\n                notify: true\n            },\n            focused: {\n                type: Boolean,\n                reflectToAttribute: true,\n                notify: true\n            },\n            readonly: {\n                type: Boolean,\n                reflectToAttribute: true\n            },\n            allowDeselection: {\n                type: Boolean,\n                reflectToAttribute: true\n            },\n            singleSelect: {\n                type: Boolean,\n                observer: 'singleSelectChanged',\n                reflectToAttribute: true\n            },\n            multiSelect: {\n                type: Boolean,\n                observer: 'multiSelectChanged',\n                reflectToAttribute: true\n            },\n            label: {\n                type: String,\n                notify: true\n            }\n        };\n    }\n    static get observers() {\n        return [\n            'selectedValuesChanged(selectedValues.splices)',\n            'selectedIndexesChanged(selectedIndexes.splices)',\n        ];\n    }\n    itemsChange() {\n        this.initialized = false;\n    }\n    singleSelectChanged() {\n        this.notSelectable = this.singleSelect ? false : true;\n    }\n    multiSelectChanged() {\n        this.notSelectable = this.multiSelect ? false : true;\n    }\n    start() {\n        this.initialized = true;\n        if (!this.multiSelect && !this.singleSelect) {\n            return;\n        }\n        if (!this.multiSelect) {\n            if (this.selectedValue !== undefined)\n                this.selectedValueChange();\n            if (this.selectedIndex !== -1)\n                this.selectedIndexChange();\n        }\n        else {\n            if (this.selectedValues.length)\n                this.selectedValuesChanged();\n            if (this.selectedIndexes.length)\n                this.selectedIndexesChanged();\n        }\n    }\n    refreshSelectedIndexes() {\n        this.selectedIndexesChanged();\n        this.dispatchEvent(new CustomEvent('selected-indexes-changed', { detail: { value: this.selectedIndexes } }));\n    }\n    refreshSelectedValues() {\n        this.selectedValuesChanged();\n        this.dispatchEvent(new CustomEvent('selected-values-changed', { detail: { value: this.selectedValues } }));\n    }\n    findIndexOfValue(target) {\n        if (!this.items || !target)\n            return -1;\n        return this.items.findIndex((item) => item.value === target.value);\n    }\n    isDisabled(item, disabled) {\n        return item.disabled || this.disabled;\n    }\n    isReadOnly(item, readonly) {\n        return item.readonly || this.readonly;\n    }\n    selectedValueChange() {\n        if (!this.multiSelect && !this.singleSelect) {\n            return;\n        }\n        if (this.items && !this.multiSelect) {\n            if (this.selectedValue != undefined) {\n                let chip = [...this.shadowRoot.querySelectorAll(\"avl-chips-chip\")];\n                if (chip.length != 0) {\n                    let index = chip.findIndex((x) => x.value == this.selectedValue);\n                    if (chip[index] && chip[index].disabled !== true) {\n                        chip[index].checked = true;\n                        this.selectedIndex = index;\n                    }\n                }\n            }\n            else {\n                this.selectedIndex = -1;\n            }\n        }\n    }\n    selectedIndexChange() {\n        if (!this.multiSelect && !this.singleSelect) {\n            return;\n        }\n        if (this.items && !this.multiSelect) {\n            const chip = [...this.shadowRoot.querySelectorAll(\"avl-chips-chip\")];\n            if (this.selectedIndex > -1 && chip.length > this.selectedIndex) {\n                chip[this.selectedIndex].checked = true;\n                this.selectedValue = this.items[this.selectedIndex];\n            }\n            for (var i = 0; i < chip.length; i++) {\n                /** removes checked chip when another one is pressed*/\n                if (this.selectedIndex != i) {\n                    chip[i].checked = false;\n                }\n            }\n        }\n    }\n    selectedValuesChanged() {\n        if (!this.multiSelect && !this.singleSelect) {\n            return;\n        }\n        if (this.multiSelect && this.items) {\n            let newSelectedIndexes = [];\n            if (this.items.length != 0) {\n                for (var i = 0; i < this.items.length; i++) {\n                    if (this.selectedValues.find((x) => x == this.items[i])) {\n                        newSelectedIndexes.push(i);\n                    }\n                }\n            }\n            if (!this.arraysEqual(this.selectedIndexes, newSelectedIndexes)) {\n                this.selectedIndexes.splice(0, this.selectedIndexes.length, ...newSelectedIndexes);\n                this.refreshSelectedIndexes();\n            }\n        }\n    }\n    selectedIndexesChanged() {\n        if (!this.multiSelect && !this.singleSelect) {\n            return;\n        }\n        if (this.multiSelect && this.items) {\n            let newSelectedValues = [];\n            if (this.items.length != 0) {\n                for (var i = 0; i < this.selectedIndexes.length; i++) {\n                    const index = this.selectedIndexes[i];\n                    if (index < this.items.length) {\n                        newSelectedValues.push(this.items[index]);\n                    }\n                }\n                if (!this.arraysEqual(this.selectedValues, newSelectedValues)) {\n                    this.selectedValues.splice(0, this.selectedValues.length, ...newSelectedValues);\n                    this.refreshSelectedValues();\n                }\n            }\n            const chips = [...this.shadowRoot.querySelectorAll(\"avl-chips-chip\")];\n            this.ignoreCheckedEvents = true;\n            for (let i = 0; i < chips.length; i++) {\n                if (this.selectedIndexes.indexOf(i) != -1) {\n                    chips[i].checked = true;\n                }\n                else {\n                    chips[i].checked = false;\n                }\n            }\n            this.ignoreCheckedEvents = false;\n        }\n    }\n    chipSelected(event) {\n        if (!this.initialized || this.ignoreCheckedEvents)\n            return;\n        if (!this.multiSelect && !this.singleSelect) {\n            return;\n        }\n        if (!this.multiSelect) {\n            if (event.detail.value) {\n                const index = this.findIndexOfValue(event.target.value);\n                this.selectedIndex = index;\n                this.selectedValue = event.target.value;\n            }\n            else if (event.target.value === this.selectedValue) {\n                if (this.allowDeselection) {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                else {\n                    this.selectedValueChange();\n                }\n            }\n        }\n        else {\n            let index = this.selectedValues.findIndex(x => x == event.target.value);\n            if (index > -1) {\n                this.selectedValues.splice(index, 1);\n                this.refreshSelectedValues();\n            }\n            else {\n                this.selectedValues.push(event.target.value);\n                this.refreshSelectedValues();\n            }\n        }\n    }\n    arraysEqual(a, b) {\n        if (!a || !b)\n            return false;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    }\n}\ncustomElements.define(AvlChipListImpl.is, AvlChipListImpl);\n\n//# sourceMappingURL=avl-chip-list.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n:host {\r\n    display: flex;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 30px;\r\n    padding: 0 16px;\r\n    border-radius: 16px;\r\n    border: 1px solid;\r\n    border-color: var(--avl-chips-border-color, var(--avl-border-focus-color));\r\n    color: var(--avl-chips-text-color, var(--avl-link-color));\r\n    font-family: Roboto, sans-serif;\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n  }\r\n\r\npaper-ripple {\r\n  background-position: center;\r\n  transition: background 0.2s;\r\n  position: absolute;\r\n  width:100%;\r\n  height: 100%;\r\n  color: var(--avl-chips-ripple-color, var(--avl-ink-pressed-color));\r\n}\r\n\r\n:host([disabled]) paper-ripple {\r\n  color: rgba(0,0,0,0);\r\n}\r\n\r\n:host([readonly]) paper-ripple {\r\n  color: rgba(0,0,0,0);\r\n}\r\n\r\n:host([invalid]) paper-ripple {\r\n  color: var(--avl-chips-pressed-error-color, var(--avl-ink-error-pressed-color));\r\n}\r\n\r\n:host(:hover){\r\n background-color: var(--avl-chips-hover-color, var(--avl-ink-hover-color));\r\n}\r\n\r\n:host(:active) {\r\n  background-color: var(--avl-chips-pressed-color, var(--avl-ink-pressed-color));\r\n}\r\n\r\n:host([disabled]){\r\n  background-color:  var(--avl-chips-disabled-background-color, var(--avl-background-disabled-color));\r\n  color: var(--avl-chips-disabled-text-color, var(--avl-foreground-disabled-color));\r\n  border-color: var(--avl-chips-disabled-border-color, var(--avl-border-disabled-color));\r\n  outline:none;\r\n}\r\n\r\n:host([readonly]){\r\n  border-color: var(--avl-chip-list-readonly-border-color, var(--avl-border-emphasis-high-color));\r\n  color: var(--avl-chip-list-readonly-text-color, var(--avl-foreground-color));\r\n  outline:none;\r\n  pointer-events: none;\r\n  cursor: default;\r\n}\r\n\r\n:host(:not([disabled]):not([readonly]):not([invalid])[focused]){\r\n  background-color: var(--avl-chips-focused-color,var(--avl-ink-focus-color));\r\n  outline: none;\r\n}\r\n\r\n:host(:not([disabled]):not([readonly])[invalid][focused]){\r\nbackground-color: var(--avl-chips-focused-invalid-color,var(--avl-ink-error-focus-color));\r\noutline: none;\r\n} \r\n \r\navl-icon.checkIcon{\r\n  --avl-icon-custom-color:  var(--avl-chips-icon-color, var(--avl-icon-default-emphasis-high-color));\r\n}\r\n\r\navl-icon.removeIcon{\r\n  --avl-icon-custom-color: var(--avl-chips-removeIcon-color, var(--avl-emphasis-medium-color));\r\n}\r\n\r\navl-icon.thumbnail{\r\n  --avl-icon-custom-color: var(--avl-chips-thumbnail-color, var(--avl-emphasis-medium-color));\r\n}\r\n\r\n:host([invalid]) avl-icon.removeIcon{\r\n  --avl-icon-custom-color: var(--avl-chips-removeIcon-color, var(--avl-error-color));\r\n}\r\n\r\n:host([disabled]) avl-icon.thumbnail{\r\n  --avl-icon-custom-color: var(--avl-chips-thumbnail-disabled-color, var(--avl-foreground-disabled-color));\r\n}\r\n\r\n:host([disabled]) avl-icon.removeIcon{\r\n  --avl-icon-custom-color: var(--avl-chips-removeIcon-disabled-color, var(--avl-foreground-disabled-color));\r\n}\r\n\r\n:host([invalid]) {\r\n  border-color: var(--avl-chips-border-error-color, var(--avl-error-color));\r\n  color: var(--avl-chip-list-readonly-text-color, var(--avl-error-color));\r\n}\r\n\r\n :host([invalid]:hover)  {\r\n  border-color: var(--avl-chips-border-error-color, var(--avl-error-color));\r\n  background-color: var(--avl-chips-hover-error-color, var(--avl-ink-error-hover-color));\r\n}\r\n\r\n:host([invalid][checked][focused]) paper-ripple {\r\n  border-color: var(--avl-chips-border-error-color, var(--avl-error-color));\r\n  background-color: var(--avl-chips-focused-error-color, var(--avl-ink-error-focus-color));\r\n}\r\n\r\n:host([invalid][checked][active]) paper-ripple {\r\n  border-color: var(--avl-chips-border-error-color, var(--avl-error-color));\r\n  background-color: var(--avl-chips-pressed-error-color, var(--avl-ink-error-pressed-color));\r\n}  \r\n\r\n:host avl-icon.checkIcon{\r\n  display: none;\r\n}\r\n\r\n:host avl-icon.removeIcon:not([removeIcon]){\r\n  display: none;\r\n}\r\n\r\n:host([checked][filter]) avl-icon.checkIcon{\r\n  display: inline-block;\r\n  margin-left: 4px;\r\n  margin-right: 8px;\r\n}\r\n\r\n:host avl-icon.thumbnail{\r\n  display: inline-block;\r\n  position: relative;\r\n  left: -12px;\r\n  margin-right: -4px;\r\n}\r\n\r\n:host avl-icon.thumbnail:not([thumbnail]){\r\n  display: none;\r\n}\r\n\r\n:host([remove-icon]) avl-icon.removeIcon {\r\n  display: inline-block;\r\n  position: relative;\r\n  right: -12px;\r\n  margin-left: -4px;\r\n}\r\n\r\n:host([checked][filter][readonly]) avl-icon.checkIcon{\r\n  display: inline-block;\r\n  margin-left: 4px;\r\n  margin-right: 8px;\r\n  --avl-icon-custom-color:var(--avl-emphasis-medium-color);\r\n}\r\n\r\n:host([checked][filter]){\r\n  padding-left: 0px;\r\n}\r\n\r\n:host(:hover:not([disabled]):not([readonly])[checked]){\r\n  background-color: var(--avl-chips-selected-hover-background-color, var(--avl-background-selected-hover-color));\r\n}\r\n\r\n:host(:not([disabled]):not([readonly])[checked][focused]){\r\n  background-color: var(--avl-chips-selected-focus-background-color, var(--avl-background-selected-focus-color));\r\n}\r\n\r\n:host(:not([disabled]):not([readonly])[checked]:not([invalid])){\r\n  background-color: var(--avl-chips-selected-pressed-background-color, var(--avl-background-selected-pressed-color));\r\n}\r\n\r\n:host(:not([disabled]):not([readonly])[checked][invalid]){\r\n  background-color: var(--avl-chips-selected-pressed-invalid-background-color, var(--avl-ink-error-pressed-color)); /* needs to be done (color is not specified) */\r\n  border-color: var(--avl-chips-border-error-color, var(--avl-error-color));\r\n}\r\n\r\n:host([disabled]) avl-icon.checkIcon{\r\n  display: none;\r\n}\r\n\r\navl-chips-chip[readonly]{\r\n  cursor: default;\r\n}\r\n\r\n:host(:not([disabled])[checked]){\r\n  background-color: var(--avl-chips-selected-background-color, var(--avl-background-selected-color));\r\n  color: var(--avl-chips-selected-text-color,var(--avl-foreground-color));\r\n  border-color: var(--avl-chips-selected-border-color, var(--avl-border-pressed-color));\r\n}\r\n\r\n:host(:not([disabled])[checked][readonly]){\r\n  background-color:var(--avl-chip-list-readonly-selected-background-color, var(--avl-background-disabled-color));\r\n  color: var(--avl-chip-list-readonly-text-color, var(--avl-foreground-color));\r\n  border-color: var(--avl-chip-list-readonly-border-color, var(--avl-border-emphasis-high-color));\r\n}\r\n\r\n/* box-shadow: 0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.20); */\r\n</style>`;\n\r\n//# sourceMappingURL=avl-chips-chip.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element.js';\nimport { style } from './avl-chips-chip.css';\nimport { allInitial } from '../all-initial.css';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport '../avl-icon/avl-icon';\nexport let template = html `\r\n  ${allInitial}\r\n  ${style}\r\n\r\n  <avl-icon class=\"checkIcon\" icon=\"check\"></avl-icon>\r\n  <avl-icon class=\"thumbnail\" icon=\"[[thumbnailIcon]]\" src=\"[[thumbnailImage]]\" thumbnail$=\"[[hasThumbnail()]]\"></avl-icon>\r\n  <div class=\"text\" label=\"[[label]]\" value=\"{{value}}\"> {{label}} </div>\r\n  <avl-icon class=\"removeIcon\" icon=\"icons:clear\" on-click=\"removeIconClicked\" removeIcon$=\"[[hasRemoveIcon()]]\"></avl-icon>\r\n  <paper-ripple initial-opacity=\"1\" opacity-decay-velocity=\"3.2\"></paper-ripple>`;\n\r\n//# sourceMappingURL=avl-chips-chip.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-chips-chip.html';\nclass AvlChipsChipImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.removeIcon = false;\n    }\n    static get is() {\n        return 'avl-chips-chip';\n    }\n    static get template() {\n        return template;\n    }\n    static get properties() {\n        return {\n            checked: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n                notify: true\n            },\n            focused: {\n                type: Boolean,\n                notify: true,\n                reflectToAttribute: true,\n            },\n            active: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n            },\n            disabled: {\n                type: Boolean,\n                value: false,\n                notify: true,\n                reflectToAttribute: true,\n                observer: 'tabIndexChanged'\n            },\n            readonly: {\n                type: Boolean,\n                notify: true,\n                reflectToAttribute: true,\n                observer: 'tabIndexChanged'\n            },\n            filter: {\n                type: Boolean,\n                reflectToAttribute: true,\n            },\n            label: {\n                type: String,\n                reflectToAttribute: true,\n            },\n            tabindex: {\n                type: Number,\n                reflectToAttribute: true\n            },\n            value: {\n                type: Object,\n                notify: true\n            },\n            notSelectable: {\n                type: Boolean\n            },\n            thumbnailIcon: {\n                type: String,\n            },\n            removeIcon: {\n                type: Boolean,\n                reflectToAttribute: true\n            },\n            thumbnailImage: {\n                type: String,\n            },\n            invalid: {\n                type: Boolean,\n                reflectToAttribute: true,\n                notify: true,\n                value: false,\n                observer: 'invalidChanged'\n            }\n        };\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener('keydown', (event) => {\n            if (event.key == ' ' || event.key == 'Enter') {\n                this.onPressed();\n                this.toggleChecked();\n            }\n        });\n        this.addEventListener('focusin', () => {\n            this.focused = true;\n        });\n        this.addEventListener('focusout', () => {\n            this.focused = false;\n        });\n        this.addEventListener('mouseup', () => {\n            if (!this.disabled) {\n                this.onUnpressed();\n            }\n        });\n        this.addEventListener('mousedown', () => {\n            if (!this.disabled) {\n                this.onPressed();\n                this.toggleChecked();\n            }\n        });\n    }\n    tabIndexChanged() {\n        this.tabindex = (this.readonly || this.disabled) ? -1 : 0;\n    }\n    toggleChecked() {\n        if (!this.disabled && !this.notSelectable) {\n            this.checked = !this.checked;\n        }\n    }\n    onUnpressed(event) {\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    onPressed() {\n        if (!this.disabled)\n            this.active = true;\n    }\n    hasThumbnail() {\n        return this.thumbnailIcon != null || this.thumbnailImage != null;\n    }\n    hasRemoveIcon() {\n        return this.removeIcon;\n    }\n    removeIconClicked(e) {\n        this.dispatchEvent(new CustomEvent('chips-removed', { detail: e.detail }));\n    }\n    invalidChanged(value) {\n        this.dispatchEvent(new CustomEvent('chips-invalid-changed', { detail: value }));\n    }\n}\ncustomElements.define(AvlChipsChipImpl.is, AvlChipsChipImpl);\n\n//# sourceMappingURL=avl-chips-chip.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n:host {\r\n  display: block;\r\n  font-family: var(--avl-font-family);\r\n  height: 200px;\r\n  width: 250px;\r\n  --avl-item-padding-left: var(--avl-list-item-padding-left, 24px);\r\n  --avl-item-padding-right: var(--avl-list-item-padding-right, 24px);\r\n  --avl-item-height: var(--avl-list-item-height, 48px);\r\n\r\n  --avl-item-background-color: var(--avl-list-item-background-color, var(--avl-background-color));\r\n  --avl-list-item-selected-color: var(--avl-background-selected-color);\r\n  --avl-list-item-hover-color: var(--avl-ink-default-hover-color);\r\n  --avl-list-item-focused-color: var(--avl-ink-default-focus-color);\r\n  --avl-list-item-pressed-color: var(--avl-ink-default-pressed-color);\r\n  --avl-list-item-selected-hover-color: var(--avl-background-selected-hover-color);\r\n  --avl-list-item-selected-focus-color: var(--avl-background-selected-focus-color);\r\n  --avl-list-item-selected-pressed-color: var(--avl-background-selected-pressed-color);\r\n  --avl-list-item-disabled-text-color: var(--avl-foreground-disabled-color);\r\n}\r\n\r\navl-item {\r\n  cursor: pointer;\r\n}\r\navl-item[focused] {\r\n  cursor: pointer;\r\n}\r\navl-item[focused][drag-and-drop] {\r\n  cursor: -moz-grab;\r\n  cursor: -webkit-grab;\r\n  cursor: grab;\r\n}\r\navl-item[dragging] {\r\n  cursor: -moz-grabbing;\r\n  cursor: -webkit-grabbing;\r\n  cursor: grabbing;\r\n}\r\n\r\n\r\navl-item[fake-focus] {\r\n  background-color: var(--avl-list-item-focused-color);\r\n}\r\n\r\navl-item[checked][fake-focus] {\r\n  background-color: var(--avl-list-item-selected-focus-color);\r\n}\r\n\r\navl-item[readonly]{\r\n  cursor: default;\r\n}\r\n\r\navl-item[disabled]{\r\n  cursor: default;\r\n  --avl-item-disabled-text-color: var(--avl-list-item-disabled-text-color);\r\n}\r\n\r\navl-item[image]{\r\n  --avl-item-height: 56px;\r\n}\r\n\r\navl-item[sublabel]{\r\n  --avl-item-height: 64px;\r\n}\r\n\r\navl-item:hover[readonly]:not([checked]){\r\n  background-color: var(--avl-background-color);\r\n}\r\n\r\navl-item[readonly][checked]{\r\n  background-color: var(--avl-background-disabled-color);\r\n}\r\n\r\navl-item:hover:not([nohover]):not([readonly]):not([disabled]){\r\n  background-color: var(--avl-list-item-hover-color);\r\n}\r\n\r\navl-item:not([readonly]):not([checked]):not([nohover])[pressed]{\r\n  background-color: var(--avl-list-item-pressed-color);\r\n}\r\n\r\navl-item:not([readonly])[focused]:not([checked]):not([pressed]){\r\n  background-color: var(--avl-list-item-focused-color);\r\n}\r\n\r\navl-item:not([readonly])[checked]{\r\n  background-color: var(--avl-list-item-selected-color);\r\n}\r\n\r\navl-item:not([readonly])[checked]:hover:not([nohover]){\r\n  background-color: var(--avl-list-item-selected-hover-color);\r\n}\r\n\r\navl-item:not([readonly])[checked][focused]{\r\n  background-color: var(--avl-list-item-selected-focus-color);\r\n}\r\n\r\navl-item:not([readonly])[checked][pressed]:not([nohover]){\r\n  background-color: var(--avl-list-item-selected-pressed-color);\r\n}\r\n\r\navl-item { /* Fixes text selection in Edge while dragging */\r\n  -ms-user-select: none;\r\n}\r\n\r\navl-item[selectable-with-checkbox]{\r\n  --avl-item-padding-left: 12px;\r\n}\r\n\r\navl-item[right-checkbox]{\r\n  --avl-item-padding-right: 12px;\r\n}\r\n\r\navl-item[overflow-menu]{\r\n  --avl-item-padding-right: 12px;\r\n}\r\n\r\n#scrollable {\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n#itemPositioner {\r\n  position: absolute;\r\n  width: 100%;\r\n}\r\n\r\n#dummyFocusable {\r\n  width: 0px;\r\n  height: 0px;\r\n}\r\n\r\n#placeholderElement {\r\n  background-color: var(--avl-drop-area-color);\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-list.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport { style } from './avl-list.css';\nimport { allInitial } from '../all-initial.css';\nimport '../avl-item/avl-item';\nimport '../avl-overflow-menu/avl-overflow-menu';\nimport '../avl-icon-button/avl-icon-button';\nimport '../avl-icon/avl-icon';\nexport let template = html ` ${allInitial} ${style}\r\n\r\n  <div id=\"scrollable\" on-scroll=\"handleScroll\">\r\n    <div id=\"itemContainer\">\r\n      <div id=\"itemPositioner\" on-mousemove=\"dndItemMousemove\" on-touchmove=\"dndItemMousemove\">\r\n        <template\r\n          id=\"itemsTemplate\"\r\n          is=\"dom-repeat\"\r\n          items=\"[[visibleRows]]\"\r\n          index-as=\"[[index]]\"\r\n          restamp=\"true\"\r\n          mutable-data=\"true\"\r\n          on-dom-change=\"itemsRendered\"\r\n        >\r\n          <template is=\"dom-if\" if=\"[[isDragoverRow(item, dnd.dragoverRow, dnd.dragging)]]\">\r\n            <template is=\"dom-if\" if=\"[[isDndBefore(dnd.dragoverBefore, item)]]\">\r\n              <div id=\"placeholderElement\" style=\"height: 48px; width: 100%;\"></div>\r\n            </template>\r\n          </template>\r\n\r\n          <avl-item\r\n            value=\"[[item]]\"\r\n            label=\"[[item.label]]\"\r\n            sublabel=\"[[item.sublabel]]\"\r\n            tabindex=\"{{tabindex}}\"\r\n            badge-value=\"[[item.badgeValue]]\"\r\n            icon=\"[[item.icon]]\"\r\n            image=\"[[item.image]]\"\r\n            disabled$=\"{{isDisabled(item.disabled,disabled)}}\"\r\n            readonly$=\"{{isReadonly(item.readonly, readonly)}}\"\r\n            on-click=\"itemClick\"\r\n            on-keydown=\"onKeydown\"\r\n            drag-indicator=\"[[dragIndicator]]\"\r\n            drag-and-drop=\"[[dragAndDrop]]\"\r\n            on-focused-changed=\"itemFocusedChanged\"\r\n            selectable-with-checkbox=\"[[multiSelect]]\"\r\n            on-selection-checkbox-changed=\"selectionCheckboxClicked\"\r\n            right-checkbox=\"[[hasRightCheckbox(item)]]\"\r\n            right-checkbox-value=\"{{item.rightCheckbox}}\"\r\n            on-right-checkbox-value-changed=\"rightCheckboxValueChanged\"\r\n            overflow-menu=\"[[hasOverflowMenu(overflowMenuItems)]]\"\r\n            index$=\"[[index]]\"\r\n            nohover$=\"[[isNohover(dnd.dragging, item)]]\"\r\n            on-mousedown=\"dndItemMousedown\"\r\n            on-touchstart=\"dndItemMousedown\"\r\n            on-dragstart=\"dragstart\"\r\n            fake-focus-enabled=\"[[fakeFocus]]\"\r\n          >\r\n            <template is=\"dom-if\" if=\"[[overflowMenuItems]]\">\r\n              <avl-overflow-menu\r\n                slot=\"overflow-menu\"\r\n                items=\"[[overflowMenuItems]]\"\r\n                disabled=\"{{isDisabled(item.disabled,disabled)}}\"\r\n                row=\"[[item]]\"\r\n                on-item-clicked=\"overflowMenuItemClicked\"\r\n              >\r\n                <avl-icon-button\r\n                  tabindex=\"-1\"\r\n                  icon=\"more-vert\"\r\n                  slot=\"trigger\"\r\n                  disabled-tabindex\r\n                  disabled=\"{{isDisabled(item.disabled,disabled)}}\"\r\n                ></avl-icon-button>\r\n              </avl-overflow-menu>\r\n            </template>\r\n          </avl-item>\r\n\r\n          <template is=\"dom-if\" if=\"[[isDragoverRow(item, dnd.dragoverRow, dnd.dragging)]]\">\r\n            <template is=\"dom-if\" if=\"[[!isDndBefore(dnd.dragoverBefore, item)]]\">\r\n              <div id=\"placeholderElement\" style=\"height: 48px; width: 100%;\"></div>\r\n            </template>\r\n          </template>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"dummyFocusable\" tabindex$=\"{{tabindex}}\"></div>\r\n  <div\r\n    id=\"draggedElementContainer\"\r\n    on-mousemove=\"dndItemMousemove\"\r\n    on-touchmove=\"dndItemMousemove\"\r\n  ></div>`;\n\r\n//# sourceMappingURL=avl-list.html.js.map\r\n","import { DragAndDrop } from './drag-and-drop';\nimport { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-list.html';\nclass AvlListImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.selectedIndex = -1;\n        this.tabindex = 0;\n        this.visibleRows = [];\n        this.rows = [];\n        this.totalRows = 0;\n        this.cachedRows = [];\n        this.cachedRowHeights = [];\n        this.pageCached = {};\n        this.pageSize = 10;\n        this.defaultItemHeight = 48;\n        this.fakeFocus = false;\n        this.fakeFocusIndex = -1;\n        this.focusedIndex = -1;\n        this._selectedIndexes = { values: [], locked: false, set: false };\n        this._selectedValues = { values: [], locked: false, set: false };\n        this.hideDraggedElement = () => {\n            const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n            for (const itemEl of itemElements) {\n                if (this.dnd && itemEl['value'] === this.dnd.draggedRow) {\n                    itemEl.style.display = 'none';\n                }\n                else {\n                    itemEl.style.display = 'block';\n                }\n            }\n        };\n    }\n    static get is() { return 'avl-list'; }\n    static get template() {\n        return template;\n    }\n    static get properties() {\n        return {\n            rows: {\n                type: Array,\n                observer: 'rowsChanged'\n            },\n            dataProvider: {\n                type: Object,\n                observer: 'dataProviderChanged'\n            },\n            selectedValue: {\n                type: Object,\n                observer: 'selectedValueChanged',\n                notify: true\n            },\n            selectedIndex: {\n                type: Number,\n                observer: 'selectedIndexChanged',\n                notify: true\n            },\n            pageSize: {\n                type: Number,\n                observer: 'pageSizeChanged'\n            },\n            disabled: {\n                type: Boolean,\n                observer: 'disabledChanged',\n                reflectToAttribute: true\n            },\n            readonly: {\n                type: Boolean,\n                observer: 'disabledChanged',\n                reflectToAttribute: true\n            },\n            focused: {\n                type: Boolean,\n                reflectToAttribute: true,\n                notify: true\n            },\n            _selectedValues: {\n                type: Array,\n                notify: true,\n            },\n            _selectedIndexes: {\n                type: Array,\n                notify: true,\n            },\n            selectedValues: {\n                type: Array,\n                notify: true,\n                observer: 'selectedValuesChanged'\n            },\n            selectedIndexes: {\n                type: Array,\n                notify: true,\n                observer: 'selectedIndexesChanged'\n            },\n            singleSelect: {\n                type: Boolean,\n                observer: 'singleSelectChanged',\n                reflectToAttribute: true\n            },\n            multiSelect: {\n                type: Boolean,\n                observer: 'multiSelectChanged',\n                reflectToAttribute: true\n            },\n            allowActiveRow: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true\n            },\n            activeRow: {\n                type: Object,\n                observer: 'activeRowChanged',\n                notify: true\n            },\n            dragAndDrop: {\n                type: Boolean,\n                observer: 'dragAndDropChanged',\n            },\n            dragIndicator: {\n                type: Boolean,\n            },\n            fakeFocus: {\n                type: Boolean,\n                observer: 'fakeFocusChanged',\n            }\n        };\n    }\n    unlock() {\n        if (this._selectedValues.locked && this._selectedIndexes.locked) {\n            this._selectedIndexes.locked = false;\n            this._selectedValues.locked = false;\n        }\n        this.selectRows();\n    }\n    selectedValuesChanged() {\n        if (this.selectedValues.length === 0 && !this._selectedValues.set) {\n            return;\n        }\n        this._selectedValues.values = this.selectedValues;\n        this._selectedValues.locked = true;\n        if (!this._selectedValues.set) {\n            this._selectedValues.set = true;\n        }\n        if (this.rows == null || this.rows.length === 0) {\n            this.selectRows();\n        }\n        if (this.rows && this.rows.length > 0) {\n            this._selectedIndexes.values = this.selectedValues.map(val => this.rows.indexOf(val));\n            if (!this._selectedIndexes.locked) {\n                this.selectedIndexes = this._selectedIndexes.values;\n                this.unlock();\n            }\n        }\n    }\n    selectedIndexesChanged() {\n        if (this.selectedIndexes.length === 0 && !this._selectedIndexes.set) {\n            return;\n        }\n        this._selectedIndexes.values = this.selectedIndexes.sort();\n        this._selectedIndexes.locked = true;\n        if (!this._selectedIndexes.set) {\n            this._selectedIndexes.set = true;\n        }\n        this._selectedIndexes.set = true;\n        if (this.rows && this.rows.length > 0) {\n            this._selectedValues.values = this.selectedIndexes.map(index => this.rows[index]);\n            if (!this._selectedValues.locked) {\n                this.selectedValues = this._selectedValues.values;\n                this.unlock();\n            }\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.initDnd();\n        // change focussed state\n        this.addEventListener('focusin', (e) => {\n            if (!this.readonly)\n                this.focused = true;\n        });\n        this.addEventListener('focusout', (e) => {\n            this.focused = false;\n        });\n        this.addEventListener('keydown', (e) => {\n            switch (e.key) {\n                case 'Up':\n                case 'ArrowUp':\n                    e.preventDefault();\n                    this.focusedIndex = Math.max(0, this.focusedIndex - 1);\n                    this.scrollItemIntoView(this.focusedIndex);\n                    this.focusItem(this.focusedIndex);\n                    break;\n                case 'Down':\n                case 'ArrowDown':\n                    e.preventDefault();\n                    this.focusedIndex = Math.min(this.totalRows - 1, this.focusedIndex + 1);\n                    this.scrollItemIntoView(this.focusedIndex);\n                    this.focusItem(this.focusedIndex);\n                    break;\n                case ' ':\n                    e.preventDefault();\n                    break;\n                case 'Enter':\n                    e.preventDefault();\n                    break;\n            }\n        });\n        this.getRows(0, 1);\n        if (this.allowActiveRow) {\n            this.waitForRender(this).then(() => {\n                let itemHeight = this.shadowRoot.querySelector('#scrollable').children[0].querySelector('avl-item').scrollHeight;\n                let index = this.rows.findIndex(r => r.label == this.activeRow.label);\n                this.shadowRoot.querySelector('#scrollable').scrollTop = itemHeight * index;\n            });\n        }\n    }\n    waitForRender(el) {\n        return new Promise(function (resolve, reject) {\n            let interval = setInterval(() => {\n                if (el.shadowRoot.querySelector('#itemPositioner').childElementCount > 1) {\n                    clearInterval(interval);\n                    resolve();\n                }\n            }, 100);\n        });\n    }\n    disconnectedCallback() {\n        super['disconnectedCallback']();\n        if (this.dnd)\n            this.dnd.destruct();\n    }\n    focus() {\n        const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n        if (itemElements.length) {\n            itemElements[0].focus();\n        }\n    }\n    fakeFocusNext() {\n        if (!this.fakeFocus)\n            return;\n        this.resetFakeFocus();\n        const itemElements = this.$.itemContainer.querySelectorAll('avl-item');\n        this.fakeFocusIndex = Math.min(this.totalRows - 1, this.fakeFocusIndex + 1);\n        this.scrollItemIntoView(this.fakeFocusIndex);\n        const item = itemElements[this.fakeFocusIndex - this.currentFirstIndex];\n        if (item) {\n            item.fakeFocus = true;\n        }\n    }\n    fakeFocusPrevious() {\n        if (!this.fakeFocus)\n            return;\n        this.resetFakeFocus();\n        const itemElements = this.$.itemContainer.querySelectorAll('avl-item');\n        this.fakeFocusIndex = Math.max(0, this.fakeFocusIndex - 1);\n        this.scrollItemIntoView(this.fakeFocusIndex);\n        const item = itemElements[this.fakeFocusIndex - this.currentFirstIndex];\n        if (item) {\n            item.fakeFocus = true;\n        }\n    }\n    getFakeFocusRow() {\n        return this.cachedRows[this.fakeFocusIndex];\n    }\n    itemClick(e) {\n        const item = e.target;\n        if (item.tagName.toLowerCase() != 'avl-item')\n            return;\n        this.itemSelect(item);\n    }\n    onKeydown(e) {\n        if (e.key === 'Enter' || e.key === ' ') {\n            const item = e.target;\n            if (item.tagName.toLowerCase() != 'avl-item')\n                return;\n            this.itemSelect(item);\n        }\n    }\n    itemSelect(item) {\n        const value = item.value;\n        if (!item.disabled && !item.readonly && this.singleSelect) {\n            this.selectedValue = value;\n            item.checked = true;\n        }\n        else if (!item.disabled && !item.readonly && this.multiSelect && this.allowActiveRow) {\n            this.activeRow = value;\n        }\n    }\n    activeRowChanged() {\n        this.selectAndFocusCorrectItem();\n    }\n    selectionCheckboxClicked(event) {\n        const item = event.target;\n        if (!item.disabled && !item.readonly && this.multiSelect) {\n            if (item.selectableWithCheckboxChecked) {\n                if (!this.selectedValues) {\n                    this.selectedValues = [item.value];\n                }\n                else {\n                    this.selectedValues.push(item.value);\n                    this.selectedValues = this.selectedValues.slice();\n                }\n            }\n            else {\n                this.selectedValues = this.selectedValues.filter((x) => x !== item.value);\n            }\n        }\n        this.selectAndFocusCorrectItem();\n    }\n    rightCheckboxValueChanged(e) {\n        const row = e.target['value'];\n        this.dispatchEvent(new CustomEvent('right-checkbox-changed', { detail: { value: e.detail.value, row: row } }));\n    }\n    overflowMenuItemClicked(e) {\n        const row = e.target['row'];\n        this.dispatchEvent(new CustomEvent('overflow-menu-item-clicked', { detail: { item: e.detail, row: row } }));\n    }\n    scrollItemIntoView(index) {\n        if (index < 0 || index > this.totalRows)\n            return;\n        const item = this.cachedRows[index];\n        if (item) {\n            const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n            const itemEl = itemElements.find(el => el.value == item);\n            if (!itemEl) {\n                this.$.scrollable.scrollTop = Math.min(Math.max(0, this.getItemPosition(index)), this.getTotalHeight());\n            }\n        }\n    }\n    focusItem(index) {\n        if (index < 0 || index > this.totalRows)\n            return;\n        const item = this.cachedRows[index];\n        if (item) {\n            const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n            const itemEl = itemElements.find(el => el.value == item);\n            if (itemEl) {\n                if (!itemEl.focused) {\n                    itemEl.focus();\n                }\n            }\n            else {\n                this.$.dummyFocusable.focus();\n            }\n        }\n    }\n    itemFocusedChanged(e) {\n        if (e.detail.value) {\n            this.focusedIndex = this.cachedRows.findIndex(row => row == e.target.value);\n        }\n    }\n    handleScroll(e) {\n        this.prepareVisibleRows();\n        this.selectAndFocusCorrectItem();\n        this.dnd.scrollableScroll(e);\n    }\n    getTotalHeight() {\n        let height = 0;\n        for (let i = 0; i < this.totalRows; ++i) {\n            if (this.cachedRowHeights[i] !== undefined) {\n                height += this.cachedRowHeights[i];\n            }\n            else {\n                height += this.defaultItemHeight;\n            }\n        }\n        return height;\n    }\n    getItemPosition(index) {\n        let position = 0;\n        for (let i = 0; i < index; ++i) {\n            if (this.cachedRowHeights[i] !== undefined) {\n                position += this.cachedRowHeights[i];\n            }\n            else {\n                position += this.defaultItemHeight;\n            }\n        }\n        return position;\n    }\n    getFirstVisibleIndex(scrollTop) {\n        let currentHeight = 0;\n        for (let i = 0; i < this.totalRows; ++i) {\n            if (this.cachedRowHeights[i] !== undefined) {\n                currentHeight += this.cachedRowHeights[i];\n            }\n            else {\n                currentHeight += this.defaultItemHeight;\n            }\n            if (currentHeight > scrollTop) {\n                return i;\n            }\n        }\n        return this.totalRows;\n    }\n    getLastVisibleIndex(height, firstIndex) {\n        let currentHeight = 0;\n        for (let i = firstIndex; i < this.totalRows; ++i) {\n            if (this.cachedRowHeights[i] !== undefined) {\n                currentHeight += this.cachedRowHeights[i];\n            }\n            else {\n                currentHeight += this.defaultItemHeight;\n            }\n            if (currentHeight > height) {\n                return i + 1;\n            }\n        }\n        return this.totalRows;\n    }\n    prepareVisibleRows() {\n        this.$.itemContainer.style.height = `${this.getTotalHeight()}px`;\n        const firstIndex = this.getFirstVisibleIndex(this.$.scrollable.scrollTop);\n        const lastIndex = this.getLastVisibleIndex(this.$.scrollable.clientHeight, firstIndex);\n        this.currentFirstIndex = firstIndex;\n        this.getRows(firstIndex, lastIndex - firstIndex);\n        this.visibleRows = this.cachedRows.slice(firstIndex, lastIndex);\n        this.$.itemPositioner.style.top = `${this.getItemPosition(firstIndex)}px`;\n    }\n    selectRows(itemElements) {\n        if (!this.multiSelect) {\n            return;\n        }\n        if (itemElements == null) {\n            itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n        }\n        if (this._selectedValues) {\n            itemElements.forEach(el => {\n                el.selectableWithCheckboxChecked = false;\n                this._selectedValues.values.forEach(val => {\n                    if (el.value === val) {\n                        el.selectableWithCheckboxChecked = true;\n                    }\n                });\n            });\n        }\n    }\n    itemsRendered() {\n        this.selectAndFocusCorrectItem();\n        this.hideDraggedElement();\n        // update cached row heights\n        const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n        if (itemElements.length) {\n            const startIndex = this.cachedRows.findIndex(row => row === itemElements[0].value);\n            for (let i = 0; i < itemElements.length; ++i) {\n                if (this.dnd && itemElements[i].value !== this.dnd.draggedRow) {\n                    this.cachedRowHeights[startIndex + i] = itemElements[i].clientHeight;\n                }\n            }\n        }\n        this.selectRows(itemElements);\n        if (this.fakeFocus) {\n            const item = itemElements[0];\n            if (item && item.fakeFocus)\n                item.fakeFocus = false;\n            if (item && this.currentFirstIndex === 0) {\n                item.fakeFocus = true;\n                this.fakeFocusIndex = 0;\n                this.dispatchEvent(new CustomEvent('initial-fake-focus', { detail: { value: item.value } }));\n            }\n        }\n        if (this.fakeFocus) {\n            this.resetFakeFocus();\n            if (this.currentFirstIndex === 0 && this.fakeFocusIndex == -1) {\n                const item = itemElements[0];\n                if (item) {\n                    item.fakeFocus = true;\n                    this.fakeFocusIndex = 0;\n                    this.dispatchEvent(new CustomEvent('initial-fake-focus', { detail: { value: item.value } }));\n                }\n            }\n            else if (this.fakeFocusIndex !== -1) {\n                const item = itemElements[this.fakeFocusIndex - this.currentFirstIndex];\n                if (item) {\n                    item.fakeFocus = true;\n                }\n            }\n        }\n    }\n    rowsChanged() {\n        this.dataProvider = (params) => new Promise(resolve => {\n            /**\n             * There's an issue in angular where an async pipe where gives you a null as an initial value:\n             * https://github.com/angular/angular/issues/16982\n             * So rows couldn't be used with an async pipe without this.\n             */\n            if (this.rows == null) {\n                resolve({\n                    rows: [],\n                    totalRows: 0\n                });\n            }\n            else {\n                resolve({\n                    rows: this.rows.slice(params.page * params.pageSize, (params.page + 1) * params.pageSize),\n                    totalRows: this.rows.length\n                });\n            }\n        });\n    }\n    dataProviderChanged() {\n        this.cachedRows = [];\n        this.cachedRowHeights = [];\n        this.pageCached = {};\n        this.prepareVisibleRows();\n    }\n    pageSizeChanged() {\n        this.dataProviderChanged();\n    }\n    selectAndFocusCorrectItem() {\n        const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n        for (const itemEl of itemElements) {\n            if (this.singleSelect) {\n                itemEl.checked = itemEl.value === this.selectedValue;\n            }\n            else if (this.multiSelect) {\n                itemEl.checked = itemEl.value === this.activeRow;\n            }\n        }\n        this.focusItem(this.focusedIndex);\n    }\n    selectedValueChanged() {\n        if (!this.cachedRows)\n            return;\n        for (let i = 0; i < this.cachedRows.length; ++i) {\n            if (this.cachedRows[i] === this.selectedValue) {\n                this.selectedIndex = i;\n                break;\n            }\n        }\n        this.selectAndFocusCorrectItem();\n        this.resetFakeFocus();\n        this.fakeFocusIndex = -1;\n    }\n    selectedIndexChanged() {\n        if (!this.cachedRows || this.selectedIndex == undefined)\n            return;\n        if (this.cachedRows[this.selectedIndex]) {\n            this.selectedValue = this.cachedRows[this.selectedIndex];\n        }\n    }\n    resetFakeFocus() {\n        const itemElements = [...this.$.itemContainer.querySelectorAll('avl-item')];\n        for (const item of itemElements) {\n            if (item.fakeFocus) {\n                item.fakeFocus = false;\n            }\n        }\n    }\n    disabledChanged() {\n        this.tabindex = (this.disabled || this.readonly) ? -1 : 0;\n    }\n    fakeFocusChanged(val) {\n        if (val) {\n            this.setAttribute('tabindex', '-1');\n        }\n    }\n    multiSelectChanged() {\n    }\n    singleSelectChanged() {\n        this.selectAndFocusCorrectItem();\n    }\n    getRows(start, n) {\n        if (!this.dataProvider)\n            return;\n        for (let page = Math.floor(start / this.pageSize); page < Math.floor((start + n) / this.pageSize) + 1; ++page) {\n            if (!this.pageCached[page]) {\n                this.pageCached[page] = true;\n                this.dataProvider({ page: page, pageSize: this.pageSize }).then(res => {\n                    const rows = res.rows;\n                    const totalRows = res.totalRows;\n                    for (let j = 0; j < rows.length; ++j) {\n                        this.cachedRows[page * this.pageSize + j] = rows[j];\n                    }\n                    this.totalRows = totalRows;\n                    this.prepareVisibleRows();\n                    // check if some of the newly fetched items are selected\n                    if (this.singleSelect) {\n                        if (this.selectedValue) {\n                            this.selectedValueChanged();\n                        }\n                        else if (this.selectedIndex != -1) {\n                            this.selectedIndexChanged();\n                        }\n                    }\n                    if (this.multiSelect) {\n                        if (this.selectedValues && this.selectedValues.length > 0) {\n                            this._selectedIndexes.locked = true;\n                            this.selectedValuesChanged();\n                            this._selectedIndexes.locked = false;\n                        }\n                        else if (this.selectedIndexes && this.selectedIndexes.length > 0) {\n                            this._selectedValues.locked = true;\n                            this.selectedIndexesChanged();\n                            this._selectedIndexes.locked = false;\n                        }\n                    }\n                });\n            }\n        }\n    }\n    initDnd() {\n        this.dnd = new DragAndDrop(() => this.$.itemsTemplate.render(), () => {\n            this.focusedIndex = -1;\n            this.$.dummyFocusable.focus();\n        }, (draggedRow, dragoverRow, before) => {\n            if (!draggedRow || !dragoverRow)\n                return;\n            const oldIndex = this.cachedRows.indexOf(draggedRow);\n            let insertIndex = this.cachedRows.indexOf(dragoverRow);\n            if (!before) {\n                insertIndex++;\n            }\n            const newCachedRows = this.cachedRows.slice();\n            newCachedRows.splice(oldIndex, 1, null);\n            newCachedRows.splice(insertIndex, 0, draggedRow);\n            newCachedRows.splice(newCachedRows.indexOf(null), 1);\n            const newIndex = newCachedRows.indexOf(draggedRow);\n            if (this.rows.length > 0) {\n                this.splice('rows', 0, newCachedRows.length, ...newCachedRows);\n            }\n            if (newIndex !== oldIndex) {\n                this.cachedRows = newCachedRows;\n                this.prepareVisibleRows();\n                this.dispatchEvent(new CustomEvent('row-reordered', { detail: { row: draggedRow, index: newIndex, oldIndex: oldIndex } }));\n                if (this.singleSelect) {\n                    this.selectedValueChanged();\n                }\n                else if (this.multiSelect) {\n                    this.selectedValuesChanged();\n                }\n            }\n        }, dy => this.$.scrollable.scrollTop = Math.min(Math.max(0, this.$.scrollable.scrollTop + dy), this.getTotalHeight()), this.hideDraggedElement, () => [...this.$.itemContainer.querySelectorAll('avl-item')], this.$.draggedElementContainer, this.$.scrollable);\n        this.dnd.disabled = !this.dragAndDrop || this.readonly;\n        this.dndItemMousedown = this.dnd.itemMousedown;\n        this.dndItemMousemove = this.dnd.itemMousemove;\n    }\n    // prevents ghost image dragging\n    dragstart(e) {\n        e.preventDefault();\n        return false;\n    }\n    dragAndDropChanged() {\n        if (this.dnd) {\n            this.dnd.disabled = !this.dragAndDrop;\n        }\n    }\n    isDraggedRow(item) {\n        return this.dnd && this.dnd.dragging && item === this.dnd.draggedRow;\n    }\n    isDragoverRow(item) {\n        return this.dnd && this.dnd.dragging && item === this.dnd.dragoverRow;\n    }\n    isDndBefore(before) {\n        return before;\n    }\n    isNohover() {\n        return this.dnd && this.dnd.dragging;\n    }\n    isDisabled(itemDisabled) {\n        return itemDisabled || this.disabled;\n    }\n    isReadonly(itemReadonly) {\n        return itemReadonly || this.readonly;\n    }\n    hasOverflowMenu() {\n        return this.overflowMenuItems && this.overflowMenuItems.length;\n    }\n    hasRightCheckbox(item) {\n        if (item)\n            return item.rightCheckbox !== undefined;\n        else\n            return false;\n    }\n    arraysEqual(a, b) {\n        if (!a || !b)\n            return false;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    }\n}\ncustomElements.define(AvlListImpl.is, AvlListImpl);\n\n//# sourceMappingURL=avl-list.js.map\n","export class DragAndDrop {\n    constructor(rerender, dragStartCallback, dropCallback, scrollBy, hideDraggedElement, getItemElements, draggedElementContainer, scrollable) {\n        this.rerender = rerender;\n        this.dragStartCallback = dragStartCallback;\n        this.dropCallback = dropCallback;\n        this.scrollBy = scrollBy;\n        this.hideDraggedElement = hideDraggedElement;\n        this.getItemElements = getItemElements;\n        this.draggedElementContainer = draggedElementContainer;\n        this.scrollable = scrollable;\n        this.dragging = false;\n        this.predragging = false; // item has been clicked, but the dragging is not yet started\n        this.itemMousemove = (e) => {\n            if (window.matchMedia('(pointer:coarse)').matches) {\n                if (!this.dragging)\n                    return;\n                if (window['TouchEvent'] && e instanceof TouchEvent) {\n                    // prevent scrolling\n                    e.preventDefault();\n                    this.lastX = e.touches[0].clientX;\n                    this.lastY = e.touches[0].clientY;\n                }\n                this.scrollableMousemove(e);\n                this.refreshDragoverRow();\n            }\n            else {\n                if (e instanceof MouseEvent) {\n                    this.lastX = e.clientX;\n                    this.lastY = e.clientY;\n                    if (this.draggedElement) {\n                        this.hideDraggedElement();\n                        this.refreshDragoverRow();\n                    }\n                    else if (Math.pow(this.lastX - this.dragStartX, 2) + Math.pow(this.lastY - this.dragStartY, 2) >\n                        25) {\n                        this.predragging = true;\n                        if (this.disabled)\n                            return;\n                        const item = e.target;\n                        if (item.tagName.toLowerCase() != 'avl-item')\n                            return;\n                        this.predragging = false;\n                        this.dragging = true;\n                        this.notDraggedYet = true;\n                        this.dragStartCallback();\n                        // clone item element\n                        this.draggedRow = item['value'];\n                        const clonedItem = item.cloneNode(true);\n                        const propertiesToCopy = Object.keys(customElements.get('avl-item').properties);\n                        for (let prop of propertiesToCopy) {\n                            clonedItem[prop] = item[prop];\n                        }\n                        clonedItem.style.width = `${item.clientWidth}px`;\n                        clonedItem.style.cursor = 'inherit';\n                        clonedItem.style.zIndex = '2000';\n                        // prevents ghost image dragging\n                        clonedItem.addEventListener('dragstart', (e) => {\n                            e.preventDefault();\n                            return false;\n                        });\n                        this.draggedElement = document.createElement('div');\n                        //get parent avl-list\n                        const child = item.parentElement.parentElement.parentElement;\n                        const list = child.__dataHost;\n                        if (list.hasAttribute('drag-indicator') && !list.hasOverflowMenu()) {\n                            let dragIcon = document.createElement('avl-icon');\n                            dragIcon.setAttribute('icon', 'custom-icons:drag-handle-icon');\n                            dragIcon.id = 'dragIcon';\n                            const styles = {\n                                paddingLeft: '',\n                                float: 'right',\n                                paddingRight: '24px',\n                                paddingTop: '12px',\n                                color: 'var(--avl-item-iron-color, var(--avl-emphasis-medium-color))',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                flexDirection: 'column',\n                                flex: '0 0 auto'\n                            };\n                            Object.assign(dragIcon.style, styles);\n                            this.draggedElement.appendChild(dragIcon);\n                        }\n                        this.draggedElement.style.backgroundColor = 'var(--avl-background-color)';\n                        this.draggedElement.appendChild(clonedItem);\n                        this.draggedElementContainer.appendChild(this.draggedElement);\n                        clonedItem.setAttribute('pressed', '');\n                        this.draggedElement.style.position = 'fixed';\n                        this.draggedElement.style.touchAction = 'none';\n                        this.draggedElement.style.boxShadow =\n                            '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)';\n                        const itemRect = item.getBoundingClientRect();\n                        const top = itemRect.top;\n                        const left = itemRect.left;\n                        if (e instanceof MouseEvent) {\n                            this.dragOffsetY = e.y - top;\n                            this.dragOffsetX = e.x - left;\n                            // so that grabbing the bottom half doesn't displace the next element\n                            this.lastY = top + 1;\n                            this.lastX = left + 1;\n                        }\n                    }\n                    this.scrollableMousemove(e);\n                }\n            }\n        };\n        this.itemMousedown = (e) => {\n            if (window.matchMedia('(pointer:coarse)').matches) {\n                if (this.disabled)\n                    return;\n                const item = e.target;\n                if (item.tagName.toLowerCase() != 'avl-item')\n                    return;\n                this.predragging = true;\n                this.predragTimeout = window.setTimeout(() => {\n                    if (this.predragging) {\n                        this.predragging = false;\n                        this.dragging = true;\n                        this.notDraggedYet = true;\n                        this.dragStartCallback();\n                        // clone item element\n                        this.draggedRow = item['value'];\n                        const clonedItem = item.cloneNode(true);\n                        const propertiesToCopy = Object.keys(customElements.get('avl-item').properties);\n                        for (let prop of propertiesToCopy) {\n                            clonedItem[prop] = item[prop];\n                        }\n                        clonedItem.style.width = `${item.clientWidth}px`;\n                        clonedItem.style.cursor = 'inherit';\n                        clonedItem.style.zIndex = '2000';\n                        // prevents ghost image dragging\n                        clonedItem.addEventListener('dragstart', (e) => {\n                            e.preventDefault();\n                            return false;\n                        });\n                        this.draggedElement = document.createElement('div');\n                        this.draggedElement.style.backgroundColor = 'var(--avl-background-color)';\n                        this.draggedElement.appendChild(clonedItem);\n                        this.draggedElementContainer.appendChild(this.draggedElement);\n                        clonedItem.setAttribute('pressed', '');\n                        this.draggedElement.style.position = 'fixed';\n                        this.draggedElement.style.touchAction = 'none';\n                        this.draggedElement.style.boxShadow =\n                            '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)';\n                        const itemRect = item.getBoundingClientRect();\n                        const top = itemRect.top;\n                        const left = itemRect.left;\n                        if (window['TouchEvent'] && e instanceof TouchEvent) {\n                            this.dragOffsetY = e.touches[0].clientY - top;\n                            this.dragOffsetX = e.touches[0].clientX - left;\n                        }\n                        // so that grabbing the bottom half doesn't displace the next element\n                        this.lastY = top + 1;\n                        this.lastX = left + 1;\n                        this.hideDraggedElement();\n                        this.refreshDragoverRow();\n                        this.mouseMoveListener(e);\n                    }\n                }, 500);\n            }\n            else {\n                if (e instanceof MouseEvent) {\n                    this.dragStartX = e.clientX;\n                    this.dragStartY = e.clientY;\n                }\n            }\n            document.addEventListener('mousemove', this.mouseMoveListener);\n            document.addEventListener('touchmove', this.mouseMoveListener);\n            document.addEventListener('mouseup', this.mouseupListener);\n            document.addEventListener('touchend', this.mouseupListener);\n            window.addEventListener('keydown', this.escapeListener);\n            window.addEventListener('blur', this.cancelDrag);\n        };\n        this.scrollableMousemove = (e) => {\n            if (!this.dragging)\n                return;\n            let y;\n            if (e instanceof MouseEvent) {\n                y = e.y;\n            }\n            else if (window['TouchEvent'] && e instanceof TouchEvent) {\n                y = e.touches[0].clientY;\n            }\n            const scrollRect = this.scrollable.getBoundingClientRect();\n            const top = scrollRect.top;\n            const bottom = scrollRect.bottom;\n            if (y > bottom - 30) {\n                if (this.dragScrollInterval == undefined) {\n                    this.scrollSpeed = 5;\n                    this.dragScrollInterval = window.setInterval(() => {\n                        this.scrollSpeed = Math.min(this.scrollSpeed + 3, 40);\n                        this.scrollBy(this.scrollSpeed);\n                    }, 150);\n                }\n            }\n            else if (y < top + 30) {\n                if (this.dragScrollInterval == undefined) {\n                    this.scrollSpeed = 5;\n                    this.dragScrollInterval = window.setInterval(() => {\n                        this.scrollSpeed = Math.min(this.scrollSpeed + 3, 40);\n                        this.scrollBy(-this.scrollSpeed);\n                    }, 150);\n                }\n            }\n            else {\n                if (this.dragScrollInterval !== undefined) {\n                    clearInterval(this.dragScrollInterval);\n                    this.dragScrollInterval = undefined;\n                }\n            }\n        };\n        this.mouseMoveListener = (e) => {\n            if (this.predragging) {\n                this.cancelDrag();\n                return;\n            }\n            if (!this.dragging)\n                return;\n            if (this.notDraggedYet) {\n                this.draggedElement.style.cursor = 'grab';\n                this.notDraggedYet = false;\n            }\n            else {\n                this.draggedElement.style.cursor = 'grabbing';\n            }\n            if (e instanceof MouseEvent) {\n                this.draggedElement.style.top = `${e.y - this.dragOffsetY}px`;\n                this.draggedElement.style.left = `${e.x - this.dragOffsetX}px`;\n            }\n            else if (window['TouchEvent'] && e instanceof TouchEvent) {\n                this.draggedElement.style.top = `${e.touches[0].clientY - this.dragOffsetY}px`;\n                this.draggedElement.style.left = `${e.touches[0].clientX - this.dragOffsetX}px`;\n            }\n        };\n        this.mouseupListener = (e) => {\n            this.removeDragListeners();\n            if (this.dragging) {\n                this.dropCallback(this.draggedRow, this.dragoverRow, this.dragoverBefore);\n            }\n            this.resetDrag();\n        };\n        this.cancelDrag = () => {\n            this.removeDragListeners();\n            this.resetDrag();\n        };\n        this.escapeListener = (e) => {\n            switch (e.key) {\n                case 'Esc':\n                case 'Escape':\n                    this.cancelDrag();\n                    break;\n            }\n        };\n    }\n    destruct() {\n        this.cancelDrag();\n    }\n    scrollableScroll(e) {\n        this.refreshDragoverRow();\n    }\n    refreshDragoverRow() {\n        const items = this.getItemElements();\n        for (let item of items) {\n            if (this.pointInsideElement(this.lastX, this.lastY, item)) {\n                this.dragoverRow = item['value'];\n                const itemRect = item.getBoundingClientRect();\n                const top = itemRect.top;\n                const height = itemRect.height;\n                this.dragoverBefore = this.lastY < top + height / 2;\n                this.rerender();\n                return;\n            }\n        }\n        if (this.notDraggedYet) {\n            this.dragoverBefore = false;\n            this.dragoverRow = items[items.length - 1]['value'];\n            this.rerender();\n        }\n    }\n    resetDrag() {\n        this.dragStartX = undefined;\n        this.dragStartY = undefined;\n        this.draggedRow = undefined;\n        this.dragoverRow = undefined;\n        this.predragging = false;\n        this.hideDraggedElement();\n        if (this.draggedElement) {\n            this.draggedElementContainer.removeChild(this.draggedElement);\n            this.draggedElement = undefined;\n        }\n        if (this.dragging) {\n            this.dragging = false;\n            this.rerender();\n        }\n    }\n    removeDragListeners() {\n        document.removeEventListener('mouseup', this.mouseupListener);\n        document.removeEventListener('touchend', this.mouseupListener);\n        document.removeEventListener('mousemove', this.mouseMoveListener);\n        document.removeEventListener('touchmove', this.mouseMoveListener);\n        window.removeEventListener('keydown', this.escapeListener);\n        window.removeEventListener('blur', this.cancelDrag);\n        if (this.dragScrollInterval !== undefined) {\n            clearInterval(this.dragScrollInterval);\n            this.dragScrollInterval = undefined;\n        }\n        if (this.predragTimeout !== undefined) {\n            clearTimeout(this.predragTimeout);\n            this.predragTimeout = undefined;\n        }\n    }\n    pointInsideElement(x, y, element) {\n        const rect = element.getBoundingClientRect();\n        return x > rect.left && x < rect.right && y > rect.top && y < rect.bottom;\n    }\n}\n\n//# sourceMappingURL=drag-and-drop.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n.item-container {\r\n  display: grid;\r\n  grid-template-columns: auto 24px;\r\n  grid-template-rows: 24px 4px;\r\n  grid-column-gap: 16px;\r\n  grid-row-gap: 0px;\r\n  padding-right: 12px;\r\n}\r\n\r\n:host([focused]) .item-container {\r\n  background-color: var(--avl-upload-file-focus-color);\r\n}\r\n\r\n.item-container .item-name {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  align-self: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.item-container .item-icon {\r\n  align-self: center;\r\n  justify-self: center;\r\n  cursor: pointer;\r\n  grid-column: 2;\r\n  --avl-icon-button-color: var(--avl-upload-icons-color);\r\n}\r\n\r\n.item-container.complete {\r\n  grid-template-rows: 24px;\r\n  \r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n}\r\n\r\n:host(:hover) .item-container.complete {\r\n  background-color: var(--avl-upload-file-hover-color);\r\n}\r\n\r\n.item-container.complete a{\r\n  color: var(--avl-upload-file-uploaded-color);\r\n  text-decoration: none;\r\n  outline:none;\r\n  cursor: pointer;\r\n}\r\n\r\n:host(:hover) .item-container.complete a{\r\n  color: var(--avl-upload-file-label-hover-color);\r\n  text-decoration: none;\r\n\r\n}\r\n\r\n.item-container.complete .item-icon {\r\n  grid-row: 1;\r\n}\r\n\r\n.item-container.loading {\r\n  color: var(--avl-upload-file-name-color);\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.item-container.fail .error-message {\r\n  font-size: 12px;\r\n  color: var(--avl-upload-file-error-message-color);\r\n}\r\n\r\n.item-container.fail {\r\n  grid-template-rows: 24px 12px;\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n}\r\n\r\n.item-container.fail .item-icon {\r\n  grid-column-start: 2; \r\n  grid-column-end: 3; \r\n  grid-row-start: 1; \r\n  grid-row-end: 3;\r\n}\r\n\r\n.item-container.fail .item-name {\r\n  color: var(--avl-upload-file-fail-color);\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-file-view.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport { style } from './avl-file-view.css';\nimport '../avl-upload-progress/avl-upload-progress';\nimport '../../avl-overflow-menu/avl-overflow-menu';\nimport '../../avl-icon-button/avl-icon-button';\n//<link rel=\"import\" href=\"../avl-upload-progress/avl-upload-progress.html\">\nexport let template = html `\r\n  ${style}\r\n    <template is=\"dom-if\" if=\"[[checkStatus(_file.status, 'uploading')]]\">\r\n      <div class=\"item-container loading\">\r\n        <avl-overflow-tooltip class=\"item-name\">[[_file.name]]</avl-overflow-tooltip>\r\n        <avl-icon-button id=\"abortIcon\" class=\"item-icon\" icon=\"icons:close\" on-click=\"abortUpload\" ></avl-icon-button>\r\n        <avl-upload-progress percentage=\"[[percentage]]\" indeterminate=\"[[indeterminateProgress]]\"></avl-upload-progress>\r\n      </div>\r\n    </template>\r\n    <template is=\"dom-if\" if=\"[[checkStatus(_file.status, 'complete')]]\">\r\n      <div class=\"item-container complete\">\r\n        <div class=\"item-name\">\r\n          <template is=\"dom-if\" if=\"[[_file.downloadUrl]]\">\r\n            <a tabindex=\"-1\" on-click=\"fileLinkClicked\">\r\n              [[_file.name]]\r\n            </a>\r\n          </template>\r\n          <template is=\"dom-if\" if=\"[[!_file.downloadUrl]]\">\r\n            [[_file.name]]\r\n          </template>\r\n        </div>\r\n        <avl-overflow-menu tabindex=\"-1\" class=\"item-icon\" items=\"[[completeMenuItems]]\" on-item-clicked=\"fileMenuItemClicked\" disabled=\"[[disabled]]\">\r\n          <avl-icon-button icon=\"more-vert\" slot=\"trigger\" disabled=\"[[disabled]]\"></avl-icon-button>\r\n        </avl-overflow-menu>\r\n      </div>\r\n    </template>\r\n    <template is=\"dom-if\" if=\"[[checkStatus(_file.status, 'fail')]]\">\r\n      <div class=\"item-container fail\">\r\n        <avl-overflow-tooltip class=\"item-name\">[[_file.name]]</avl-overflow-tooltip>\r\n        <avl-overflow-menu tabindex=\"-1\" class=\"item-icon\" items=\"[[failMenuItems]]\" on-item-clicked=\"fileMenuItemClicked\" disabled=\"[[disabled]]\">\r\n          <avl-icon-button icon=\"more-vert\" slot=\"trigger\" disabled=\"[[disabled]]\"></avl-icon-button>\r\n        </avl-overflow-menu>\r\n        <div class=\"error-message\">[[failErrorMessage]]</div>\r\n      </div>\r\n    </template>\r\n    <template is=\"dom-if\" if=\"[[checkStatus(_file.status, 'abort')]]\">\r\n      <div class=\"item-container fail\">\r\n        <avl-overflow-tooltip class=\"item-name\">[[_file.name]]</avl-overflow-tooltip>\r\n        <avl-overflow-menu tabindex=\"-1\" class=\"item-icon\" items=\"[[abortMenuItems]]\" on-item-clicked=\"fileMenuItemClicked\" disabled=\"[[disabled]]\">\r\n          <avl-icon-button icon=\"more-vert\" slot=\"trigger\" disabled=\"[[disabled]]\"></avl-icon-button>\r\n        </avl-overflow-menu>\r\n        <div class=\"error-message\">[[abortErrorMessage]]</div>\r\n      </div>\r\n    </template>\r\n    <a id=\"downloadAnchor\" style=\"display:none\"></a>`;\n\r\n//# sourceMappingURL=avl-file-view.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-file-view.html';\nclass AvlFileViewImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.percentage = 0;\n    }\n    static get is() { return 'avl-file-view'; }\n    static get properties() {\n        return {\n            focused: {\n                type: Boolean,\n                reflectToAttribute: true,\n            },\n            disabled: {\n                type: Boolean,\n                reflectToAttribute: true,\n                notify: true\n            },\n            file: {\n                type: Object,\n                observer: 'fileChanged'\n            },\n            target: {\n                type: String\n            },\n            service: {\n                type: Object\n            },\n            accept: {\n                type: String\n            },\n            additionalMenuItems: {\n                type: Array,\n                observer: 'resetMenuItems'\n            },\n            indeterminateProgress: {\n                type: Boolean,\n                value: false\n            },\n            failErrorMessage: {\n                type: String\n            },\n            abortErrorMessage: {\n                type: String\n            },\n            retryMenuItem: {\n                type: Object,\n                observer: 'resetMenuItems'\n            },\n            removeMenuItem: {\n                type: Object,\n                observer: 'resetMenuItems'\n            },\n            downloadMenuItem: {\n                type: Object,\n                observer: 'resetMenuItems'\n            }\n        };\n    }\n    static get template() {\n        return template;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.resetMenuItems();\n        this.addEventListener(\"focusin\", (event) => {\n            this.focused = true;\n        });\n        this.addEventListener(\"blur\", (event) => {\n            this.focused = false;\n        });\n        this.addEventListener('menu-item-clicked', (event) => {\n            if (event.detail.item === this.retryMenuItem) {\n                this.setFileStatus('notStarted');\n                this.upload();\n            }\n            if (event.detail.item === this.downloadMenuItem && this.file.downloadUrl) {\n                this.download(this.file.downloadUrl);\n            }\n            this.focus();\n        });\n        this.addEventListener('keydown', (e) => {\n            if (e.key == 'Enter' || e.key == ' ') {\n                const overflowMenu = this.shadowRoot.querySelectorAll('avl-overflow-menu');\n                if (overflowMenu.length > 1) {\n                    overflowMenu[0].open = false;\n                    overflowMenu[1].open = true;\n                }\n                else\n                    overflowMenu[0].open = true;\n            }\n        });\n        this.addEventListener('keydown', (e) => {\n            if (e.key == 'Escapce' || e.key == 'Esc') {\n                const overflowMenu = this.shadowRoot.querySelector('avl-overflow-menu');\n                overflowMenu.open = false;\n            }\n        });\n    }\n    /* focused */\n    focusedIn() {\n        this.focused = true;\n    }\n    focusedOut() {\n        this.focused = false;\n    }\n    setFileStatus(status) {\n        this.file.status = status;\n        this.set('_file.status', status);\n        this.dispatchEvent(new CustomEvent('file-status-changed', { detail: { value: this.file.status } }));\n    }\n    download(url) {\n        this.service.downloadFile(url)\n            .then((blob) => {\n            const objectUrl = window.URL.createObjectURL(blob);\n            this.$.downloadAnchor.href = objectUrl;\n            this.$.downloadAnchor.target = '_blank';\n            this.$.downloadAnchor.download = this.file.name;\n            this.$.downloadAnchor.click();\n            window.URL.revokeObjectURL(objectUrl);\n        });\n    }\n    resetMenuItems() {\n        this.completeMenuItems = [this.downloadMenuItem, this.removeMenuItem];\n        this.abortMenuItems = [this.retryMenuItem, this.removeMenuItem];\n        this.failMenuItems = [this.retryMenuItem, this.removeMenuItem];\n        if (this.additionalMenuItems) {\n            Object.keys(this.additionalMenuItems).forEach((status) => {\n                if (['abort', 'fail', 'complete'].indexOf(status) !== -1) {\n                    this[`${status}MenuItems`] = this[`${status}MenuItems`].concat(this.additionalMenuItems[`${status}`]);\n                }\n            });\n        }\n    }\n    fileChanged(file) {\n        this._file = Object.assign({}, file);\n        if (file && file.status === 'notStarted') {\n            this.upload();\n        }\n    }\n    upload() {\n        this.abortUploadAction = this.service.uploadFile(this.file, this.target, this.onUploadProgress.bind(this), this.onComplete.bind(this), this.onError.bind(this));\n        this.setFileStatus('uploading');\n        this.dispatchEvent(new CustomEvent('upload-start', { detail: { value: this.file } }));\n    }\n    onUploadProgress(progress) {\n        if (progress.lengthComputable) {\n            this.setUploadProgress(progress.loaded);\n            this.percentage = 100 * (this.file.loaded / this.file.size);\n        }\n        else {\n            this.indeterminateProgress = true;\n        }\n    }\n    setUploadProgress(loaded) {\n        this.file.loaded = loaded;\n        this.set('_file.loaded', loaded);\n    }\n    onComplete(downloadUrl) {\n        this.setFileStatus('complete');\n        if (downloadUrl) {\n            this.setDownloadUrl(downloadUrl);\n        }\n        this.dispatchEvent(new CustomEvent('upload-complete', { detail: { value: this.file } }));\n    }\n    setDownloadUrl(url) {\n        this.set('_file.downloadUrl', url);\n        this.file.downloadUrl = url;\n    }\n    onError(errorResponse) {\n        this.setFileStatus('fail');\n        this.dispatchEvent(new CustomEvent('upload-fail', { detail: { value: this.file, error: errorResponse } }));\n    }\n    checkStatus(currentStatus, status) {\n        return currentStatus === status;\n    }\n    abortUpload(file) {\n        this.abortUploadAction();\n        this.setFileStatus('abort');\n        this.dispatchEvent(new CustomEvent('upload-abort', { detail: { value: this.file } }));\n    }\n    fileLinkClicked(e) {\n        e.preventDefault();\n        if (this.file.downloadUrl)\n            this.download(this.file.downloadUrl);\n    }\n    fileMenuItemClicked(e) {\n        const item = e.detail.value;\n        this.dispatchEvent(new CustomEvent('menu-item-clicked', { detail: { value: this.file, item: item } }));\n    }\n}\ncustomElements.define(AvlFileViewImpl.is, AvlFileViewImpl);\n\n//# sourceMappingURL=avl-file-view.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n.avl-upload-modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n}\r\n\r\n.avl-upload-modal-content {\r\n  background-color: var(--avl-background-color);\r\n  margin: 15% auto;\r\n  padding: 20px 20px 0 20px;\r\n  width: 200px;\r\n  box-shadow: var(--avl-box-shadow-24dp);\r\n}\r\n\r\n.avl-upload-modal-content h1 {\r\n  font-size: 16px;\r\n  font-weight: bolder;\r\n}\r\n\r\n.avl-upload-modal-content p.errorFileName {\r\n  margin: 0;\r\n}\r\n\r\n.avl-upload-modal-content-footer {\r\n  width: 100%;\r\n  text-align: right;\r\n  position: relative;\r\n  left: 20px;\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-upload-dialog.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport { style } from './avl-upload-dialog.css';\nimport '../../avl-button/avl-button';\nexport let template = html `\r\n  ${style}\r\n      <div id=\"container\">\r\n        <div id=\"avl-upload-modal\" class=\"avl-upload-modal\">\r\n          <div class=\"avl-upload-modal-content\">\r\n            <h1>{{failErrorTypeTitle}}</h1>\r\n            <p>{{failErrorTypeMessage}}</p>\r\n            <template is=\"dom-if\" if=\"[[errorFiles]]\">\r\n              <b>{{failErrorFiles}}:</b>\r\n              <template is=\"dom-repeat\" items=\"{{errorFiles}}\">\r\n                <p class=\"errorFileName\">{{displayIndex(index)}}) {{item.name}}</p>\r\n              </template>\r\n            </template>\r\n            <div class=\"avl-upload-modal-content-footer\">\r\n              <avl-button id=\"avl-upload-dialog-button\" on-click=\"closeDialog\">OK</avl-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\n\r\n//# sourceMappingURL=avl-upload-dialog.html.js.map\r\n","import { template } from './avl-upload-dialog.html';\nimport { PolymerElement } from '@polymer/polymer/polymer-element';\nclass UploadDialogImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.failErrorTypeMessage = 'The format of the file(s) you are trying to upload is not acceptable by software.';\n        this.failErrorTypeTitle = 'Unsupported File Format';\n        this.failErrorFiles = 'File(s)';\n    }\n    static get is() { return 'avl-upload-dialog'; }\n    static get properties() {\n        return {\n            errorFiles: {\n                type: Array,\n            }\n        };\n    }\n    static get template() {\n        return template;\n    }\n    closeDialog() {\n        this.dispatchEvent(new CustomEvent('close', { detail: 'true' }));\n    }\n    async translateLabels() {\n        if (!AvlLocalizationService || !AvlLocalizationService.translationService)\n            return;\n        let translationService = AvlLocalizationService.translationService;\n        this.failErrorTypeMessage = await translationService.translate('VizBox.AvlUpload.FormatIsUnsupportedMessage');\n        this.failErrorTypeTitle = await translationService.translate('VizBox.AvlUpload.FormatIsUnsupported');\n        this.failErrorFiles = await translationService.translate('VizBox.AvlUpload.FailErrorFiles');\n    }\n    displayIndex(index) {\n        return index + 1;\n    }\n}\ncustomElements.define(UploadDialogImpl.is, UploadDialogImpl);\n\n//# sourceMappingURL=avl-upload-dialog.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n:host {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n#container {\r\n  background-color: var(--avl-upload-progress-bar-color);\r\n  height: 4px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n#indicator {\r\n  background-color: var(--avl-upload-progress-bar-indicator-color);\r\n  height: 100%;\r\n}\r\n\r\n:host([indeterminate]) #indicator {\r\n  background-color: var(--avl-upload-progress-bar-color);\r\n  width: 100%;\r\n}\r\n\r\n.indeterminate::after {\r\n  content: '';\r\n  display: block;\r\n  height: 100%;\r\n  width: 100%;\r\n  transform-origin: right center;\r\n  animation: indeterminate-bar 1s linear infinite;\r\n  background-color: var(--avl-upload-progress-bar-indicator-color);\r\n}\r\n\r\n@keyframes indeterminate-bar {\r\n  0% {\r\n    transform: scaleX(1) translateX(-100%);\r\n  }\r\n  50% {\r\n    transform: scaleX(1) translateX(0%);\r\n  }\r\n  75% {\r\n    transform: scaleX(1) translateX(0%);\r\n    animation-timing-function: cubic-bezier(.28,.62,.37,.91);\r\n  }\r\n  100% {\r\n    transform: scaleX(0) translateX(0%);\r\n  }\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-upload-progress.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport { style } from './avl-upload-progress.css';\nexport let template = html `\r\n  ${style}\r\n\r\n  <div id=\"container\">\r\n    <template is=\"dom-if\" if=\"[[!indeterminate]]\">\r\n      <div id=\"indicator\" style$=\"width: {{percentage}}%;\"></div>\r\n    </template>\r\n    <template is=\"dom-if\" if=\"[[indeterminate]]\">\r\n      <div id=\"indicator\" class=\"indeterminate\"></div>\r\n    </template>\r\n  </div>`;\n\r\n//# sourceMappingURL=avl-upload-progress.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-upload-progress.html';\nclass ProgressBarImpl extends PolymerElement {\n    static get is() { return 'avl-upload-progress'; }\n    static get properties() {\n        return {\n            percentage: {\n                type: Number\n            },\n            indeterminate: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true\n            }\n        };\n    }\n    static get template() {\n        return template;\n    }\n}\ncustomElements.define(ProgressBarImpl.is, ProgressBarImpl);\n\n//# sourceMappingURL=avl-upload-progress.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n:host {\r\n  --avl-icon-custom-color: var(--avl-upload-drop-zone-icon-color, var(--avl-icon-default-color));\r\n\r\n  --avl-upload-file-uploaded-color: var(--avl-link-color);\r\n  --avl-upload-file-label-hover-color: var(--avl-link-hover-color);\r\n  --avl-upload-file-error-message-color: var(--avl-error-color);\r\n  --avl-upload-file-fail-color: var(--avl-foreground-disabled-color);\r\n  --avl-upload-file-name-color: var(--avl-foreground-medium-color);\r\n  --avl-upload-file-hover-color: var(--avl-ink-default-hover-color);\r\n  --avl-upload-file-focus-color: var(--avl-ink-default-focus-color);\r\n  \r\n  --avl-upload-icons-color: var(--avl-icon-color);\r\n\r\n  --avl-upload-progress-bar-color: var(--avl-progress-25-color);\r\n  --avl-upload-progress-bar-indicator-color: var(--avl-progress-color);\r\n\r\n  --avl-upload-drop-zone-border-color: var(--avl-divider-color);\r\n  --avl-upload-drop-zone-active-border-color: var(--avl-border-color);\r\n\r\n  --avl-upload-drop-zone-hover-background-color: var(--avl-ink-default-hover-color);\r\n  --avl-upload-drop-zone-hover-border-color: var(--avl-border-color);\r\n  --avl-upload-drop-zone-focus-background-color: var(--avl-ink-default-focus-color);\r\n\r\n  --avl-upload-drop-zone-disabled-background-color: var(--avl-background-color);\r\n  --avl-upload-drop-zone-disabled-border-color: var(--avl-ink-default-hover-color);\r\n  --avl-upload-drop-zone-disabled-text-color: var(--avl-foreground-disabled-color);\r\n\r\n  --avl-upload-drop-zone-invalid-border-color: var(--avl-error-color);\r\n  --avl-upload-drop-zone-invalid-text-color: var(--avl-error-color);\r\n  --avl-upload-drop-zone-invalid-background-color: var(--avl-background-color);\r\n  \r\n  --avl-upload-drop-zone-disabled-icon-color: var(--avl-icon-disabled-color);\r\n  --avl-upload-drop-zone-pressed-color: var(--avl-ink-default-pressed-color);\r\n\r\n  width: 300px;\r\n  \r\n  font-family: var(--avl-font-family);\r\n  color: var(--avl-upload-default-text-color, var(--avl-foreground-color));\r\n  background-color: var(--avl-upload-drop-zone-background-color, var(--avl-background-color));\r\n  display: block;\r\n\r\n  max-height: 256px;\r\n  margin-top: 4px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\navl-file-view {\r\n  outline: none;\r\n  display: block;\r\n}\r\n\r\nspan{\r\n  color: var(--avl-link-color);\r\n}\r\n\r\n#uploadContainer {\r\n  font-size: 12px;\r\n  display: flex; \r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  align-items: stretch;\r\n  max-height: inherit;\r\n  height: inherit;\r\n}\r\n\r\n.file-list {\r\n  max-height: 100%;\r\n  height: 100%;\r\n  outline: none;\r\n  flex: 0 1 auto;\r\n  overflow-y: auto;\r\n}\r\n\r\n.dropzone{\r\n  outline: none;\r\n  min-height: 46px;\r\n  cursor: pointer;\r\n  padding: 8px; \r\n  position: relative;\r\n  text-align: center;\r\n  border: 1px solid;\r\n  border-color: var(--avl-upload-drop-zone-border-color);\r\n  background-color: var(--avl-upload-drop-zone-background-color);\r\n  transition-property: background-color;\r\n  transition-duration: 0.35s;\r\n  border-radius: 2px;\r\n}\r\n\r\n.dropzone:hover:not([disabled]){\r\n  background-color: var(--avl-upload-drop-zone-hover-background-color);\r\n  border-color: var(--avl-upload-drop-zone-hover-border-color);\r\n}\r\n\r\n:host([readonly]) .dropzone {\r\n  display: none;\r\n}\r\n\r\n.dropzone.focusDropzone{\r\n  background-color: var(--avl-upload-drop-zone-focus-background-color);\r\n  border-color: var(--avl-upload-drop-zone-hover-border-color);\r\n}\r\n\r\n:host([disabled]) .dropzone{\r\n  background-color: var(--avl-upload-drop-zone-disabled-background-color);\r\n  border-color: var(--avl-upload-drop-zone-disabled-border-color);\r\n  color:  var(--avl-upload-drop-zone-disabled-text-color);\r\n  cursor: default;\r\n}\r\n\r\n:host([disabled]){\r\n  --avl-upload-drop-zone-icon-color: var(--avl-upload-drop-zone-disabled-icon-color);\r\n}\r\n\r\n:host([invalid]) .dropzone{\r\n  border-color:  var(--avl-upload-drop-zone-invalid-border-color);\r\n  color: var(--avl-upload-drop-zone-invalid-text-color);\r\n  background-color: var(--avl-upload-drop-zone-invalid-background-color);\r\n}\r\n\r\n:host([invalid]){\r\n  --avl-upload-drop-zone-icon-color: var(--avl-upload-drop-zone-disabled-icon-color);\r\n}\r\n\r\n.dropzone[active]{\r\n  border-color: var(--avl-upload-drop-zone-active-border-color);\r\n}\r\n\r\n.dropzone.dragged{\r\n  background-color: var(--avl-upload-drop-zone-focus-background-color);\r\n}\r\n\r\npaper-ripple {\r\n  background-position: center;\r\n  transition: background 0.2s;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--avl-upload-drop-zone-pressed-color);\r\n}\r\n\r\n#fileInput {\r\n  display: none;\r\n}</style>`;\n\r\n//# sourceMappingURL=avl-upload.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport { style } from './avl-upload.css';\nimport { allInitial } from '../all-initial.css';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport './avl-file-view/avl-file-view';\nimport './avl-upload-dialog/avl-upload-dialog';\nimport '../avl-overflow-menu/avl-overflow-menu';\nexport let template = html `\r\n  ${allInitial}\r\n  ${style}\r\n\r\n  <div id=\"uploadContainer\">\r\n    <div class=\"header\">\r\n      [[label]]\r\n    </div>\r\n    \r\n    <div class=\"file-list\" tabindex=\"0\" on-focus=\"fileListFocus\" on-mousedown=\"fileListMouseDown\">\r\n      <template is=\"dom-repeat\" items=\"{{files}}\">\r\n        <avl-file-view class=\"file-view\" tabindex=\"-1\" service=\"[[uploadService]]\" accept=\"[[accept]]\"\r\n                        target=\"[[target]]\" file=\"{{item}}\" additional-menu-items=\"[[additionalMenuItems]]\"\r\n                        indeterminate-progress=\"[[indeterminateProgress]]\"\r\n                        fail-error-message=\"[[failErrorMessage]]\"\r\n                        abort-error-message=\"[[abortErrorMessage]]\"\r\n                        retry-menu-item=\"[[retryMenuItem]]\"\r\n                        remove-menu-item=\"[[removeMenuItem]]\"\r\n                        download-menu-item=\"[[downloadMenuItem]]\"\r\n                        on-upload-start=\"redispatchFileEvent\"\r\n                        on-upload-fail=\"redispatchFileEvent\"\r\n                        on-upload-complete=\"redispatchFileEvent\"\r\n                        on-upload-abort=\"redispatchFileEvent\"\r\n                        on-menu-item-clicked=\"redispatchFileEvent\"\r\n                        on-file-rejected=\"redispatchFileEvent\"\r\n                        on-file-status-changed=\"onFileStatusChange\"\r\n                        disabled=\"[[disabled]]\"\r\n                        on-focus=\"focusedIn\" \r\n                        on-focusout=\"focusedOut\">\r\n        </avl-file-view>\r\n      </template>\r\n    </div>\r\n\r\n    <div id=\"dropzone\" tabindex=\"0\" class=\"dropzone\" on-click=\"browseFiles\" on-focus=\"focusedIn\" on-focusout=\"focusedOut\">\r\n      <avl-icon icon=\"icons:cloud-upload\"></avl-icon>\r\n      <template is=\"dom-if\" if=\"[[shouldShowError(invalid, errorMessage)]]\">\r\n        <div>{{errorMessage}}</div>\r\n      </template>\r\n      <template is=\"dom-if\" if=\"[[!shouldShowError(invalid, errorMessage)]]\">\r\n        <!-- property innerHTML when written as an attibute according to polymer rules (camelCase to kebab-case) is inner-h-t-m-l -->\r\n        <div inner-h-t-m-l=\"[[dragAreaMessage]]\"></div>\r\n      </template>\r\n      <template is=\"dom-if\" if=\"[[!disabled]]\">\r\n        <template is=\"dom-if\" if=\"[[!readonly]]\">\r\n          <paper-ripple initial-opacity=\"1\"></paper-ripple>\r\n        </template>\r\n      </template>\r\n    </div>\r\n    <template is=\"dom-if\" if=\"[[isErrorDialogOpen]]\">\r\n        <avl-upload-dialog on-close=\"closeErrorDialog\" error-files=\"[[errorArray]]\"></avl-upload-dialog>\r\n    </template>\r\n  </div>\r\n\r\n  <input id=\"fileInput\" type=\"file\" multiple accept=\"{{accept}}\">`;\n\r\n//# sourceMappingURL=avl-upload.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-upload.html';\nimport '../avl-localization-service/avl-localization-service.js';\nfunction isTypeAccepted(file, accept) {\n    const acceptArray = accept.split(',');\n    const filenameSegments = file.name.split('.');\n    const ext = `.${filenameSegments.slice(-1)}`;\n    const mediaType = file.type;\n    // if some mimetypes are defined with asterisk e.g. image/*\n    const mimeAll = acceptArray.filter(item => {\n        return /\\w+\\/\\*/.test(item);\n    }).map(item => item.split('/')[0]);\n    if (mimeAll.indexOf('*') === -1 &&\n        mimeAll.indexOf(mediaType.split('/')[0]) === -1 &&\n        acceptArray.indexOf(ext) === -1 &&\n        acceptArray.indexOf(mediaType) === -1) {\n        return false;\n    }\n    return true;\n}\nclass AvlUploadServiceImpl {\n    uploadFile(file, target, progressCallback, completeCallback, failCallback) {\n        const formData = new FormData();\n        formData.append('file', file.file);\n        const xhr = new XMLHttpRequest();\n        xhr.upload.addEventListener('progress', (e) => {\n            if (progressCallback) {\n                progressCallback(e);\n            }\n        });\n        xhr.open('POST', target, true);\n        xhr.addEventListener('load', (e) => {\n            if (completeCallback && xhr.status === 200) {\n                const response = JSON.parse(xhr.response);\n                if (response && response.downloadUrl) {\n                    completeCallback(response.downloadUrl);\n                }\n                else {\n                    completeCallback();\n                }\n            }\n            else if (failCallback) {\n                failCallback({\n                    status: xhr.status,\n                    response: xhr.response\n                });\n            }\n        });\n        xhr.addEventListener('error', (e) => {\n            if (failCallback) {\n                failCallback({\n                    status: xhr.status,\n                    response: xhr.response\n                });\n            }\n        });\n        xhr.send(formData);\n        return xhr.abort.bind(xhr);\n    }\n    downloadFile(url) {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.responseType = 'blob';\n            xhr.addEventListener('load', (e) => {\n                if (xhr.status === 200 && xhr.response instanceof Blob) {\n                    resolve(xhr.response);\n                }\n                else {\n                    reject(xhr.statusText);\n                }\n            });\n            xhr.addEventListener('error', (err) => {\n                reject(err);\n            });\n            xhr.send();\n        });\n    }\n}\nexport class AvlFileImpl {\n    constructor(file) {\n        this.file = file;\n        this.loaded = 0;\n        this.status = 'notStarted';\n        this.name = file.name;\n        this.type = file.type;\n        this.size = file.size;\n    }\n}\nclass AvlUploadImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.mouseEvent = false;\n        this.isErrorDialogOpen = false;\n        this.errorArray = [];\n        this.failErrorMessage = 'Upload is unsuccessful.';\n        this.abortErrorMessage = 'Upload aborted.';\n        this.dragAreaMessage = 'Drag a file to attach, or <span>browse</span>';\n        this.retryMenuItemLabel = 'Retry';\n        this.removeMenuItemLabel = 'Remove';\n        this.downloadMenuItemLabel = 'Download';\n        this.uploadService = new AvlUploadServiceImpl;\n    }\n    static get is() { return 'avl-upload'; }\n    static get properties() {\n        return {\n            focused: {\n                type: Boolean,\n                reflectToAttribute: true,\n                notify: true\n            },\n            disabled: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n                observer: 'resetMenuItems'\n            },\n            accept: {\n                type: String\n            },\n            target: {\n                type: String\n            },\n            label: {\n                type: String\n            },\n            additionalMenuItems: {\n                type: Object,\n            },\n            required: {\n                type: Boolean,\n                reflectToAttribute: true,\n                value: false\n            },\n            invalid: {\n                type: Boolean,\n                reflectToAttribute: true,\n                notify: true,\n                computed: 'computeInvalid(_invalid, files.*, required, hasComplete)'\n            },\n            validationCallback: {\n                type: Function\n            },\n            alreadyUploadedFiles: {\n                type: Array,\n                value: []\n            },\n            uploadService: {\n                type: Object,\n            },\n            errorMessage: {\n                type: String,\n            },\n            files: {\n                type: Array,\n            },\n            readonly: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n                observer: 'resetMenuItems'\n            }\n        };\n    }\n    static get observers() {\n        return [\n            'filesListChanged(files)',\n        ];\n    }\n    static get template() {\n        return template;\n    }\n    async translateLabels() {\n        if (!AvlLocalizationService || !AvlLocalizationService.translationService)\n            return;\n        let translationService = AvlLocalizationService.translationService;\n        this.failErrorMessage = await translationService.translate('VizBox.AvlUpload.UploadIsUnsuccessful');\n        this.abortErrorMessage = await translationService.translate('VizBox.AvlUpload.UploadAborted');\n        let browseLabel = await translationService.translate('VizBox.AvlUpload.Browse');\n        this.dragAreaMessage = await translationService.translate('VizBox.AvlUpload.DragAreaMessage', { browse: `<span>${browseLabel}</span>` });\n        this.retryMenuItemLabel = await translationService.translate('VizBox.AvlUpload.Retry');\n        this.removeMenuItemLabel = await translationService.translate('VizBox.AvlUpload.Remove');\n        this.downloadMenuItemLabel = await translationService.translate('VizBox.AvlUpload.Download');\n        this.resetMenuItems();\n    }\n    computeInvalid(_invalid, fileChange, required, hasComplete) {\n        if (_invalid != null) {\n            return _invalid;\n        }\n        if (required === false && !this.validationCallback) {\n            return false;\n        }\n        const files = fileChange.value;\n        const doValidate = fileChange.path === 'files' && files != null;\n        if (!doValidate)\n            return this.invalid;\n        if (doValidate) {\n            if (this.validationCallback && files) {\n                return !this.validationCallback(files);\n            }\n            if (required === true && (files == null || files.length === 0 || (files.length > 0 && !hasComplete))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    }\n    hasCompletedFile() {\n        return this.files.find(f => f.status === 'complete') != null;\n    }\n    filesListChanged() {\n        this.dispatchEvent(new CustomEvent('files-changed', { detail: { value: this.files } }));\n    }\n    onFileStatusChange(event) {\n        this.set('hasComplete', this.hasCompletedFile());\n        if (this.validationCallback) {\n            this.set('_invalid', !this.validationCallback(this.files));\n        }\n    }\n    resetMenuItems() {\n        if (this.disabled) {\n            this.setAttribute(\"tabindex\", \"-1\");\n        }\n        else {\n            this.removeAttribute(\"tabindex\");\n        }\n        if (!this.disabled && !this.readonly) {\n            this.retryMenuItem = { label: this.retryMenuItemLabel };\n            this.removeMenuItem = { label: this.removeMenuItemLabel };\n            this.downloadMenuItem = { label: this.downloadMenuItemLabel };\n        }\n        else {\n            this.retryMenuItem = { label: this.retryMenuItemLabel };\n            this.removeMenuItem = undefined;\n            this.downloadMenuItem = { label: this.downloadMenuItemLabel };\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (AvlLocalizationService && AvlLocalizationService.translationService) {\n            this.translateLabels();\n        }\n        this.files = this.files || [];\n        this.resetMenuItems();\n        this.$.fileInput.addEventListener('change', (e) => {\n            this.errorArray = [];\n            const fileInput = this.$.fileInput;\n            const filesToUpload = Array.from(fileInput.files).map(file => new AvlFileImpl(file));\n            this.handleAddFiles(filesToUpload);\n            fileInput.value = '';\n        });\n        this.addEventListener('menu-item-clicked', (e) => {\n            if (e.detail.item === this.removeMenuItem) {\n                const file = e.detail.value;\n                const index = this.files.indexOf(file);\n                if (index !== -1) {\n                    this.files = [...this.files.slice(0, index), ...this.files.slice(index + 1)];\n                    this.$.fileInput.value = null;\n                    this.set('hasComplete', this.hasCompletedFile());\n                }\n            }\n        });\n        this.fileListElement = this.shadowRoot.querySelector('.file-list');\n        this.fileListElement.addEventListener('keydown', (event) => {\n            if (event.key === 'ArrowUp' || event.key === 'Up' || event.key === 'ArrowDown' || event.key === 'Down') {\n                event.preventDefault();\n                let overflowMenu;\n                (this.shadowRoot.querySelectorAll('avl-file-view')).forEach((item) => {\n                    if (item === document.activeElement.shadowRoot.activeElement) {\n                        overflowMenu = item.shadowRoot.querySelector('avl-overflow-menu');\n                    }\n                });\n                if (overflowMenu) {\n                    if (!overflowMenu.open) {\n                        const fileViewFiles = this.shadowRoot.querySelectorAll('avl-file-view');\n                        const allItemElements = [];\n                        let currentItemIndex;\n                        fileViewFiles.forEach((userItem, index) => {\n                            if (userItem.focused == true) {\n                                currentItemIndex = index;\n                            }\n                            allItemElements.push(userItem);\n                        });\n                        if (!currentItemIndex) {\n                            currentItemIndex = 0;\n                        }\n                        const itemIndexToMoveTo = this.navigate(currentItemIndex, event.key);\n                        if (itemIndexToMoveTo !== undefined) {\n                            allItemElements[itemIndexToMoveTo].focus();\n                            event.preventDefault();\n                        }\n                    }\n                }\n            }\n        });\n        this.dropArea = this.shadowRoot.querySelector('#dropzone');\n        this.dropArea.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter' || e.key === ' ')\n                this.browseFiles();\n        });\n        this.dropArea.addEventListener('dragenter', this.preventDefaults, false);\n        this.dropArea.addEventListener('dragover', (e) => {\n            this.preventDefaults(e);\n            this.dropArea.classList.add(\"dragged\");\n        }, false);\n        this.dropArea.addEventListener('dragleave', (e) => {\n            this.preventDefaults(e);\n            this.dropArea.classList.remove(\"dragged\");\n        }, false);\n        this.dropArea.addEventListener('drop', (e) => {\n            this.preventDefaults(e);\n            this.dropArea.classList.remove(\"dragged\");\n        }, false);\n        if (!this.disabled) {\n            this.dropArea.addEventListener('drop', this.handleDrop.bind(this), false);\n        }\n    }\n    fileNameVerification(file) {\n        var i = 1;\n        let nameArray = file.name.split(/\\.(?=[^\\.]+$)/);\n        while (this.files.find(f => f.name == file.name)) {\n            file.name = nameArray[0] + '-(' + i + ').' + nameArray[1];\n            i++;\n        }\n    }\n    handleAddFiles(files) {\n        let filesToUpload = [];\n        for (const file of files) {\n            this.fileNameVerification(file);\n            if (this.accept && !isTypeAccepted(file, this.accept)) {\n                setTimeout(_ => this.dispatchEvent(new CustomEvent('file-rejected', { detail: { value: file } })));\n                this.errorArray.push(file);\n            }\n            else {\n                filesToUpload = [...filesToUpload, file];\n            }\n        }\n        if (this.errorArray.length > 0) {\n            this.openErrorDialog();\n        }\n        if (filesToUpload.length > 0) {\n            this.files = [...this.files, ...filesToUpload];\n        }\n    }\n    handleDrop(e) {\n        this.errorArray = [];\n        let dt = e.dataTransfer;\n        const draggedFiles = dt.files;\n        const filesToUpload = Array.from(draggedFiles).map(file => new AvlFileImpl(file));\n        this.handleAddFiles(filesToUpload);\n    }\n    focusedIn(event) {\n        if (event.target.id === \"dropzone\") {\n            event.target.classList.add(\"focusDropzone\");\n        }\n        if (!this.disabled) {\n            this.focused = true;\n        }\n    }\n    focusedOut(event) {\n        if (event.target.id === \"dropzone\") {\n            event.target.classList.remove(\"focusDropzone\");\n        }\n        this.focused = false;\n    }\n    fileListFocus() {\n        const firstFileView = this.shadowRoot.querySelector('.file-view');\n        if (firstFileView && !this.disabled && !this.mouseEvent) {\n            firstFileView.focus();\n        }\n        this.mouseEvent = false;\n    }\n    fileListMouseDown() {\n        this.mouseEvent = true;\n    }\n    preventDefaults(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n    browseFiles() {\n        if (!this.disabled && !this.readonly) {\n            this.$.fileInput.click();\n        }\n    }\n    redispatchFileEvent(e) {\n        this.dispatchEvent(new CustomEvent(e.type, { detail: e.detail }));\n    }\n    shouldShowError(invalid, errorMessage) {\n        return invalid === true && errorMessage != null;\n    }\n    openErrorDialog() {\n        this.isErrorDialogOpen = true;\n    }\n    closeErrorDialog() {\n        this.isErrorDialogOpen = false;\n    }\n    navigate(currentItemIndex, keyPressed) {\n        switch (keyPressed) {\n            case 'ArrowUp':\n            case 'Up':\n                if (currentItemIndex === 0) {\n                    return undefined;\n                }\n                return currentItemIndex - 1;\n            case 'ArrowDown':\n            case 'Down':\n                if (currentItemIndex === this.files.length - 1) {\n                    return undefined;\n                }\n                return currentItemIndex + 1;\n            default:\n                return undefined;\n        }\n    }\n}\ncustomElements.define(AvlUploadImpl.is, AvlUploadImpl);\n\n//# sourceMappingURL=avl-upload.js.map\n","import { globalFilterKey } from '@avl-controls/interfaces';\n/** Returns undefined if the path doesn't exist. */\nexport const getValueFromPath = (row, path) => {\n    let current = row;\n    for (const part of path.split('.')) {\n        if (typeof current !== 'object' || current === null) {\n            return undefined;\n        }\n        current = current[part];\n    }\n    return current;\n};\nexport const getParentObjectFromPath = (row, path) => {\n    let current = row;\n    const parts = path.split('.');\n    for (let i = 0; i < parts.length - 1; ++i) {\n        if (current[parts[i]] === undefined || current[parts[i]] === null) {\n            return current;\n        }\n        else {\n            current = current[parts[i]];\n        }\n    }\n    return current;\n};\n/**\n * Creates a [[DataProvider]] from an array.\n * @param data - Array with data\n */\nconst createArrayDataProvider = (data) => {\n    return (params) => new Promise((resolve, reject) => {\n        let tmpData;\n        if (params.parentItem) {\n            tmpData = params.parentItem.children;\n        }\n        else {\n            tmpData = data === undefined ? [] : data.slice();\n        }\n        updateHasChildren(tmpData);\n        updateDescendantsMatchFilter(tmpData, params.filters, params.globalFilterFields);\n        if (filtersExist(params.filters)) {\n            // If any of the ancestors match filter, then don't filter the children\n            if (!params.parentItem || !ancestorsMatchFilter(params.parentItem, params.filters, params.globalFilterFields, data)) {\n                tmpData = tmpData.filter((item) => item.descendantsMatchFilter || matchesFilter(item, params.filters, params.globalFilterFields));\n            }\n        }\n        // Sort the items\n        if (params.sortOrders.length) {\n            for (const order of params.sortOrders.reverse()) {\n                tmpData.sort((a, b) => {\n                    const toLowercase = (value) => typeof value === 'string' ? value.toLowerCase() : value;\n                    const value1 = toLowercase(getValueFromPath(a, order.path));\n                    const value2 = toLowercase(getValueFromPath(b, order.path));\n                    let ret;\n                    if (value1 === null || value1 === undefined || value1 === '' || value2 === null || value2 === undefined || value2 === '') {\n                        ret = (value1 === null || value1 === undefined || value1 === '') ? 1 : -1;\n                    }\n                    else {\n                        ret = value1 >= value2 ? 1 : -1;\n                    }\n                    return order.ascending ? ret : ret * -1;\n                });\n            }\n        }\n        resolve({ rows: tmpData.slice(params.page * params.pageSize, (params.page + 1) * params.pageSize), totalRows: tmpData.length });\n    });\n};\n/** Add a hasChildren property to the rows */\nfunction updateHasChildren(data) {\n    for (const row of data) {\n        const hasChildren = rowHasChildren(row);\n        if (hasChildren || row.hasChildren !== undefined) {\n            row.hasChildren = hasChildren;\n        }\n    }\n}\nfunction updateDescendantsMatchFilter(data, filters, globalFilterFields) {\n    for (const row of data) {\n        const descMatchFilter = descendantsMatchFilter(row, filters, globalFilterFields);\n        if (descMatchFilter || row.descendantsMatchFilter !== undefined) {\n            row.descendantsMatchFilter = descMatchFilter;\n        }\n    }\n}\nconst valueOnPathMatchesFilter = (row, path, filter) => {\n    const value = getValueFromPath(row, path);\n    if (typeof value !== 'string') {\n        return false;\n    }\n    return getValueFromPath(row, path).toLowerCase().indexOf(filter) !== -1;\n};\nfunction matchesFilter(row, filters, globalFilterFields) {\n    if (!filtersExist(filters)) {\n        return true;\n    }\n    for (const [path, value] of filters) {\n        if (path === globalFilterKey) {\n            if (globalFilterFields && globalFilterFields.length > 0) {\n                const globalFilter = filters.get(globalFilterKey).toLowerCase();\n                let found = false;\n                for (const paths of globalFilterFields) {\n                    if (valueOnPathMatchesFilter(row, paths, globalFilter)) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        else if (!valueOnPathMatchesFilter(row, path, value.toLocaleLowerCase())) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction descendantsMatchFilter(row, filters, globalFilterFields) {\n    if (!rowHasChildren(row)) {\n        return false;\n    }\n    if (!filtersExist(filters)) {\n        return false;\n    }\n    for (const child of row.children) {\n        if (matchesFilter(child, filters, globalFilterFields)) {\n            return true;\n        }\n        if (descendantsMatchFilter(child, filters, globalFilterFields)) {\n            return true;\n        }\n    }\n    return false;\n}\n/** Do any of the ancestors match the filter, including the parent */\nfunction ancestorsMatchFilter(parent, filters, globalFilterFields, data) {\n    const parentsAncestors = findAncestors(data, parent);\n    for (const ancestor of [parent, ...parentsAncestors]) {\n        if (matchesFilter(ancestor, filters, globalFilterFields)) {\n            return true;\n        }\n    }\n    return false;\n}\n/** Returns all ancestors. */\nfunction findAncestors(data, descendant) {\n    const ancestors = [];\n    // No ancestors, it's a top level item.\n    if (data.includes(descendant)) {\n        return [];\n    }\n    for (const row of data) {\n        if (isAncestorOf(row, descendant, ancestors)) {\n            return ancestors;\n        }\n    }\n    return ancestors;\n}\nfunction isAncestorOf(potentialAncestor, descendant, ancestors) {\n    if (!rowHasChildren(potentialAncestor)) {\n        return false;\n    }\n    if (potentialAncestor.children.includes(descendant)) {\n        ancestors.push(potentialAncestor);\n        return true;\n    }\n    for (const row of potentialAncestor.children) {\n        if (isAncestorOf(row, descendant, ancestors)) {\n            ancestors.push(potentialAncestor);\n            return true;\n        }\n    }\n    return false;\n}\nfunction rowHasChildren(row) {\n    return row.children instanceof Array && row.children.length > 0;\n}\nfunction filtersExist(filters) {\n    if (filters.size === 0) {\n        return false;\n    }\n    for (const value of filters.values()) {\n        if (value !== '') {\n            return true;\n        }\n    }\n    return false;\n}\nexport default createArrayDataProvider;\n\n//# sourceMappingURL=array-data-provider.js.map\n","import { html } from \"@polymer/polymer\";\nexport const style = html `<style>\r\n.clickable {\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    color: var(--avl-emphasis-medium-color);\r\n}\r\n\r\n.buttonLabel{\r\n    float: left;\r\n    line-height: 24px;\r\n}\r\n\r\n.dialog{\r\n    position: absolute;\r\n    right: 0;\r\n    background-color: var(--avl-menu-background-color);\r\n    width: 360px;\r\n    height: 444px;\r\n    overflow: auto;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 1300;\r\n}\r\n\r\n.items{\r\n    display:block;\r\n}\r\n\r\navl-icon{\r\n    color: var(--avl-emphasis-medium-color);\r\n}\r\n.wrapper{\r\n    position: relative;\r\n    outline: none;\r\n}\r\n.columnDefinitions{\r\n    display:block;\r\n    position: relative;\r\n    height:273px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.title{\r\n    border-bottom: 1px solid var(--avl-divider-color);\r\n    padding: 24px 24px 0 24px;\r\n}\r\n\r\n.titleText{\r\n    color: var(--avl-item-text-color, var(--avl-emphasis-high-color));\r\n    margin: 0;\r\n    font-weight: normal;\r\n    font-size: 20px;\r\n}\r\n\r\n.headerChipsContainer {\r\n    margin: 8px 0;\r\n}\r\n\r\n.buttonContainer{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    height: 56px;\r\n    border-top: 1px solid var(--avl-divider-color);\r\n}\r\n\r\n.header-icon {\r\n    font-size: 12px;\r\n}\r\n\r\n.header-image {\r\n    height: auto;\r\n    width: auto;\r\n    max-height: 18px;\r\n} \r\n\r\navl-list {\r\n    width: 360px;\r\n    height: 273px;\r\n}\r\n\r\n    /* Desktop */\r\n:host([desktop]) .titleText{\r\n    color: var(--avl-primary-text-color);\r\n}\r\n\r\n:host([desktop]) avl-button{\r\n    margin:10px;\r\n}\r\n\r\n:host([desktop]) avl-checkbox{\r\n    margin-left:10px;\r\n}\r\n\r\n:host([desktop]) .clickable{\r\n    color: var(--avl-primary-text-color);\r\n}\r\n\r\n:host([desktop]) .dialog{\r\n    box-shadow: initial;\r\n    border: 1px solid black;\r\n}\r\n\r\n.icon{\r\n    color:var(--avl-primary-text-color);\r\n    width: 18px;\r\n    height: 18px;\r\n}\r\n</style>`;\n\r\n//# sourceMappingURL=avl-column-selector-dialog.css.js.map\r\n","import { html } from '@polymer/polymer/polymer-element';\nimport '@avl-controls/core/dist/avl-button/avl-button';\nimport '@avl-controls/core/dist/avl-checkbox/avl-checkbox';\nimport '@avl-controls/core/dist/avl-icon/avl-icon';\nimport '@avl-controls/core/dist/avl-list/avl-list';\nimport '@avl-controls/core/dist/avl-chip-list/avl-chip-list';\nimport { style } from './avl-column-selector-dialog.css';\nexport let template = html `\r\n  ${style}\r\n<div class=\"wrapper\" id=\"avl-column-selector-dialog\" on-focus=\"focusedIn\" tabindex=\"0\">\r\n    <div class=\"clickable\" id=\"btn-open-dialog\" on-click=\"toggleOpen\">\r\n        <template is=\"dom-if\" if=\"[[allColumns]]\">\r\n        <avl-icon-button src=\"data:image/svg+xml,%3Csvg id='baseline-view_column-24px' xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath id='Pfad_922' data-name='Pfad 922' d='M11.059,25h5.882V5H11.059ZM4,25H9.882V5H4ZM18.118,5V25H24V5Z' transform='translate(-2 -3)' fill='%233ca0b9'/%3E%3Cpath id='Pfad_923' data-name='Pfad 923' d='M0,0H24V24H0Z' fill='none'/%3E%3C/svg%3E\" id=\"icon-open-dialog\"></avl-icon-button>\r\n        </template>\r\n        <template is=\"dom-if\" if=\"[[!allColumns]]\">\r\n        <avl-icon-button src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cg id='Gruppe_1688' data-name='Gruppe 1688' transform='translate(-438 -55)'%3E%3Cg id='Columns' transform='translate(438 55)'%3E%3Cpath id='Pfad_924' data-name='Pfad 924' d='M21,22H17a1,1,0,0,1-1-1V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V21A1,1,0,0,1,21,22ZM20,4H18V20h2Z' fill='%233ca0b9'/%3E%3Cpath id='Pfad_925' data-name='Pfad 925' d='M14,22H10a1,1,0,0,1-1-1V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V21A1,1,0,0,1,14,22ZM13,4H11V20h2Z' fill='%233ca0b9'/%3E%3Cpath id='Pfad_926' data-name='Pfad 926' d='M7,22H3a1,1,0,0,1-1-1V3A1,1,0,0,1,3,2H7A1,1,0,0,1,8,3V21A1,1,0,0,1,7,22ZM6,4H4V20H6Z' fill='%233ca0b9'/%3E%3C/g%3E%3Crect id='Rechteck_1305' data-name='Rechteck 1305' width='24' height='24' transform='translate(438 55)' fill='none'/%3E%3C/g%3E%3C/svg%3E\" id=\"icon-open-dialog\"></avl-icon-button>\r\n        </template>\r\n    </div>\r\n    <template is=\"dom-if\" if=\"[[opened]]\">\r\n        <div class=\"dialog\" style=\"bottom: [[dialogBottom]]\">\r\n            <div class=\"title\">\r\n                <h2 class=\"titleText\">\r\n                    [[columnsLabel]]\r\n                </h2>\r\n                <div class=\"headerChipsContainer\">\r\n                    <avl-chip-list single-select id=\"selectedIndexChip\" items=\"{{selectItems}}\" selected-index={{selected}} on-selected-index-changed=\"selectedValueChanged\"></avl-chip-list>\r\n                </div>\r\n            </div>\r\n            <div class=\"columnDefinitions\" style=\"height: [[columnHeight]]\">\r\n                <template restamp is=\"dom-if\" if=\"[[isLists]]\">\r\n                    <avl-list class=\"avl-list-datatable\" multi-select id=\"multiSelection\" selected-indexes=\"{{selectedIndexes}}\" rows=\"{{columnItems}}\" on-row-reordered=\"rowReordered\" drag-and-drop style=\"height: [[columnHeight]]\"></avl-list>\r\n                </template>\r\n            </div>\r\n            <template is=\"dom-if\" if=\"[[isDialogFooter]]\">\r\n                <div class=\"buttonContainer\">\r\n                    <avl-button class=\"cancel-button\" id=\"btn-reset-dialog\" on-click=\"resetToDefault\">[[resetButtonLabel]]</avl-button>\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </template>\r\n</div>\r\n`;\n\r\n//# sourceMappingURL=avl-column-selector-dialog.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport { template } from './avl-column-selector-dialog.html';\nexport var chipsOptions;\n(function (chipsOptions) {\n    chipsOptions[chipsOptions[\"Selected\"] = 0] = \"Selected\";\n    chipsOptions[chipsOptions[\"All\"] = 1] = \"All\";\n})(chipsOptions || (chipsOptions = {}));\nclass AvlColumnSelectorDialogImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.opened = false;\n        this.columnItems = [];\n        this.allColumns = true;\n        this.selectItems = [\n            {\n                label: 'Selected',\n                value: 0\n            },\n            {\n                label: 'All',\n                value: 1\n            }\n        ];\n        this.selected = 1;\n        this.reordered = false;\n        this.firstOpen = false;\n        this.isDialogFooter = false;\n        this.leafColumnsFlag = false;\n        this.columnHeight = '329px';\n        this.dialogBottom = '-444px';\n        this.isLists = true;\n        this.isSelectClick = false;\n        this.isAllSelectClick = false;\n        this.openDialog = false;\n    }\n    static get is() { return 'avl-column-selector-dialog'; }\n    static get properties() {\n        return {\n            leafColumns: {\n                type: Array,\n                observer: 'leafColumnsObserverChanged'\n            },\n            columns: {\n                type: Array\n            },\n            selectItems: {\n                type: Array\n            },\n            columnItems: {\n                type: Array\n            },\n            selectedIndexes: {\n                type: Array,\n                observer: 'selectedIndexesChanged',\n                notify: true,\n                value: []\n            },\n            focused: {\n                type: Boolean,\n                reflectToAttribute: true\n            },\n            label: {\n                type: String\n            },\n            selected: {\n                type: Number\n            },\n            desktop: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true\n            },\n            columnsLabel: {\n                type: String\n            },\n            applyButtonLabel: {\n                type: String\n            },\n            resetButtonLabel: {\n                type: String\n            },\n            dialogFooter: {\n                type: String,\n                observer: 'dialogFooterChanged',\n            }\n        };\n    }\n    static get template() {\n        return template;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        document.addEventListener('click', (e) => {\n            // e.preventDefault();\n            if ((this.shadowRoot.activeElement && this.shadowRoot.activeElement.id !== 'icon-open-dialog'\n                && this.shadowRoot.activeElement.id !== 'selectedIndexChip'\n                && this.shadowRoot.activeElement.id !== 'multiSelection'\n                && this.shadowRoot.activeElement.id !== 'avl-column-selector-dialog'\n                && this.shadowRoot.activeElement.id !== 'btn-reset-dialog'\n                && this.shadowRoot.activeElement.id !== 'btn-open-dialog')\n                || !this.shadowRoot.activeElement) {\n                this.focused = false;\n                this.opened = false;\n                this.firstOpen = false;\n            }\n        });\n    }\n    disconnectedCallback() {\n        super['disconnectedCallback']();\n    }\n    leafColumnsObserverChanged() {\n        var interval = setInterval(() => {\n            if (this.leafColumns.length > 0) {\n                clearInterval(interval);\n                if (this.leafColumns.find(i => i.hidden == true)) {\n                    this.allColumns = false;\n                }\n            }\n        }, 100);\n    }\n    leafColumnsChanged() {\n        if (this.leafColumns.length > 0 && !this.leafColumnsFlag) {\n            this.defaultLeafColumns = [];\n            this.leafColumns.forEach(item => {\n                this.defaultLeafColumns.push(JSON.parse(JSON.stringify(item)));\n            });\n            this.leafColumnsFlag = true;\n        }\n        // this.dispatchEvent(new CustomEvent('selected-columns-changed'));\n        // this.opened = false;\n    }\n    resetToDefault() {\n        const resetPromise = new Promise((resolve, reject) => {\n            this.isLists = false;\n            this.reordered = true;\n            let columns = this.defaultLeafColumns.map(item => {\n                return {\n                    label: item.caption,\n                    id: item.valueField,\n                    icon: item.headerIcon,\n                    image: item.headerImage,\n                    disabled: item.disabled ? item.disabled : false\n                };\n            });\n            if (JSON.stringify(this.columnItems) != JSON.stringify(columns)) {\n                this.columnItems = columns;\n            }\n            this.leafColumns = [];\n            this.defaultLeafColumns.forEach(item => {\n                this.leafColumns.push(JSON.parse(JSON.stringify(item)));\n            });\n            this.dispatchEvent(new CustomEvent('selected-columns-changed', {\n                detail: this.leafColumns\n            }));\n            if (this.defaultLeafColumns.length !== this.selectedIndexes.length) {\n                var indexes = [];\n                this.defaultLeafColumns.forEach((item, index) => {\n                    if (!item.hidden) {\n                        indexes.push(index);\n                    }\n                });\n                this.selectedIndexes = indexes;\n            }\n            resolve('true');\n        });\n        resetPromise.then(res => {\n            this.isLists = true;\n            this.reordered = false;\n            this.allColumns = true;\n            this.selected = chipsOptions.All;\n        });\n    }\n    focusedIn(event) {\n        this.focused = true;\n    }\n    toggleOpen(e) {\n        console.log('Toogle Open: ' + this.opened);\n        const togglePromise = new Promise((resolve, reject) => {\n            if (e.y >= 450 && ((e.screenY - e.y) < 450)) {\n                this.dialogBottom = '56px';\n            }\n            else {\n                this.dialogBottom = '-444px';\n            }\n            this.leafColumnsChanged();\n            this.focused = true;\n            this.opened = !this.opened;\n            this.firstOpen = true;\n            if (this.opened && this.leafColumns) {\n                this.selected = chipsOptions.Selected;\n                this.selectedIndexes = [];\n                this.columnItems = [];\n                this.leafColumns.forEach((item, index) => {\n                    if (!item.hidden) {\n                        this.columnItems.push({\n                            label: item.caption,\n                            id: item.valueField,\n                            icon: item.headerIcon,\n                            image: item.headerImage,\n                            disabled: item.disabled ? item.disabled : false,\n                            hidden: item.hidden ? item.hidden : false\n                        });\n                    }\n                });\n                this.columnItems.forEach((item, index) => {\n                    if (!item.hidden) {\n                        this.selectedIndexes.push(index);\n                    }\n                });\n                this.isLists = false;\n                resolve('true');\n            }\n        });\n        togglePromise.then(res => {\n            setTimeout(() => {\n                this.isLists = true;\n                this.firstOpen = false;\n            }, 0);\n        });\n    }\n    selectedIndexesChanged() {\n        if (this.selectedIndexes.length == 0 && !this.reordered && !this.firstOpen && !this.isSelectClick) {\n            this.leafColumns.map(item => {\n                item.hidden = true;\n            });\n            this.dispatchEvent(new CustomEvent('selected-columns-changed', {\n                detail: this.leafColumns\n            }));\n        }\n        else {\n            this.isSelectClick = false;\n        }\n        if (this.selectedIndexes.length > 0 && !this.reordered && !this.firstOpen) {\n            this.leafColumns.map(item => {\n                item.hidden = true;\n            });\n            for (var i = 0; i < this.selectedIndexes.length; i++) {\n                let index = this.leafColumns.findIndex(item => item.valueField == this.columnItems[this.selectedIndexes[i]].id);\n                this.leafColumns[index].hidden = false;\n            }\n            if (this.leafColumns.length !== this.selectedIndexes.length) {\n                this.allColumns = false;\n            }\n            else {\n                this.allColumns = true;\n            }\n            if (!this.isAllSelectClick) {\n                this.isAllSelectClick = false;\n                this.dispatchEvent(new CustomEvent('selected-columns-changed', {\n                    detail: this.leafColumns\n                }));\n            }\n            else {\n                this.isAllSelectClick = false;\n            }\n        }\n        else {\n            this.reordered = false;\n            this.isAllSelectClick = false;\n            if (this.selectedIndexes.length > 0) {\n                this.firstOpen = false;\n            }\n        }\n    }\n    rowReordered() {\n        this.reordered = true;\n        let reorderedArray = [];\n        this.columnItems.forEach(item => {\n            reorderedArray.push(this.leafColumns.find(c => c.valueField === item.id));\n        });\n        // this.leafColumns = reorderedArray;\n        this.dispatchEvent(new CustomEvent('selected-columns-changed', {\n            detail: reorderedArray\n        }));\n    }\n    selectedValueChanged(e) {\n        const selectedValuePromise = new Promise((resolve, reject) => {\n            this.isSelectClick = true;\n            this.firstOpen = false;\n            this.reordered = false;\n            switch (e.detail.value) {\n                case chipsOptions.Selected: {\n                    this.leafColumns.map(item => {\n                        item.hidden = true;\n                    });\n                    for (var i = 0; i < this.selectedIndexes.length; i++) {\n                        this.leafColumns[this.selectedIndexes[i]].hidden = false;\n                    }\n                    this.columnItems = [];\n                    this.selectedIndexes = [];\n                    this.leafColumns.forEach((item, index) => {\n                        if (!item.hidden) {\n                            this.columnItems.push({\n                                label: item.caption,\n                                id: item.valueField,\n                                icon: item.headerIcon,\n                                image: item.headerImage,\n                                disabled: item.disabled ? item.disabled : false\n                            });\n                        }\n                    });\n                    this.columnItems.forEach((item, index) => {\n                        this.selectedIndexes.push(index);\n                    });\n                    this.reordered = true;\n                    this.isLists = false;\n                    resolve('true');\n                    break;\n                }\n                case chipsOptions.All: {\n                    this.isAllSelectClick = true;\n                    this.selectedIndexes = [];\n                    this.columnItems = [];\n                    this.defaultLeafColumns.forEach(item => {\n                        if (!this.leafColumns.find(i => i.valueField === item.valueField)) {\n                            item.hidden = true;\n                            this.leafColumns.push(JSON.parse(JSON.stringify(item)));\n                        }\n                    });\n                    this.leafColumns.forEach((item, index) => {\n                        this.columnItems.push({\n                            label: item.caption,\n                            id: item.valueField,\n                            icon: item.headerIcon,\n                            image: item.headerImage,\n                            disabled: item.disabled ? item.disabled : false\n                        });\n                        if (!item.hidden) {\n                            this.selectedIndexes.push(index);\n                        }\n                    });\n                    this.isLists = false;\n                    resolve('true');\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        });\n        selectedValuePromise.then(res => {\n            setTimeout(() => {\n                this.isLists = true;\n                this.firstOpen = false;\n                this.reordered = false;\n            }, 0);\n        });\n    }\n    dialogFooterChanged() {\n        this.isDialogFooter = JSON.parse(this.dialogFooter);\n        if (this.isDialogFooter) {\n            this.columnHeight = '273px';\n        }\n    }\n}\ncustomElements.define(AvlColumnSelectorDialogImpl.is, AvlColumnSelectorDialogImpl);\n\n//# sourceMappingURL=avl-column-selector-dialog.js.map\n","export const MAX_PAGES_PER_SECTION = 7;\nexport const MIN_PAGES_PER_SECTION = 2;\n// Default properties values\nexport const DEFAULT_PAGE_SIZE = 10;\nexport const DEFAULT_PAGE_SIZE_LABEL = 'Choose page size';\nexport const DEFAULT_PAGE_SIZE_OPTIONS = [\n    { value: 10, label: 'Show 10 per page' },\n    { value: 50, label: 'Show 50 per page' },\n    { value: Number.MAX_SAFE_INTEGER, label: 'Show all' }\n];\n\n//# sourceMappingURL=avl-datatable.consts.js.map\n","import { html } from '@polymer/polymer';\nexport const style = html `<style>\r\n:host {\r\n  --avl-datatable-row-background-color: var(--avl-background-color);\r\n  --avl-datatable-header-icon-color: var(--avl-link-color);\r\n\r\n  --avl-datatable-column-header-color: var(--avl-link-color);\r\n  --avl-datatable-content-color: var(--avl-foreground-color);\r\n  --avl-datatable-row-hover-color: var(--avl-background-hover-color);\r\n  --avl-datatable-row-selection-color: var(--avl-background-selected-color);\r\n  --avl-datatable-divider-color: var(--avl-divider-color);\r\n  --avl-datatable-link-color: var(--avl-link-color);\r\n  --avl-datatable-link-hover-color: var(--avl-link-hover-color);\r\n\r\n  font-family: var(--avl-font-family);\r\n  display: block;\r\n  width: 100%;\r\n  height:420px;\r\n  font-size: 14px;\r\n}\r\n\r\nvaadin-grid {\r\n  border: 0;\r\n  background: var(--avl-datatable-row-background-color);\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\nvaadin-grid vaadin-grid-cell-content {\r\n  padding-right: 0px;\r\n  margin-right: 24px;\r\n}\r\n\r\n:host .cell-content {\r\n  font-size: 14px;\r\n}\r\n\r\n:host .header-content {\r\n  user-select: text;\r\n  -webkit-user-select: text;\r\n}\r\n\r\n.iconText{\r\n  color: var(--avl-datatable-content-color);\r\n}\r\n\r\n.textColumn{\r\n  color: var(--avl-datatable-content-color);\r\n}\r\n.dateColumn{\r\n  color: var(--avl-datatable-content-color);\r\n}\r\n.numberColumn{\r\n  color: var(--avl-datatable-content-color);\r\n}\r\n\r\n.header-image {\r\n  height: auto;\r\n  width: auto;\r\n  max-height: 18px;\r\n}\r\n\r\n.header-icon {\r\n  font-size: 14px;\r\n  --avl-icon-custom-color:var(--avl-datatable-header-icon-color);\r\n}\r\n\r\n/* Pagination */\r\n#pages {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--avl-secondary-color, #3ca0b9);\r\n}\r\n\r\n#pages > button {\r\n  color: var(--avl-secondary-color, #3ca0b9);\r\n  user-select: none;\r\n  padding: 2px 3px 2px;\r\n  margin: 0 5px;\r\n  border-radius: 10%;\r\n  border: 0;\r\n  background: transparent;\r\n  font: inherit;\r\n  outline: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n#pages > button:not([disabled]):hover,\r\n#pages > button:not([disabled]):focus {\r\n  color: var(--avl-secondary-color, #3ca0b9);;\r\n  background-color: #f3f3f3;\r\n}\r\n\r\n#pages > button[selected],\r\n#pages > button[selected]:focus {\r\n  font-weight: bold;\r\n  color: var(--avl-menu-background-color, #FFFFFF);\r\n  background-color: var(--avl-secondary-color, #3ca0b9);\r\n}\r\n\r\n#pages > button[disabled] {\r\n  color: var(--avl-foreground-disabled-color);\r\n  cursor: default;\r\n}\r\n\r\n/* Space for the pagination buttons */\r\n#grid.with-pagination {\r\n  height: calc(100% - 65px);\r\n}\r\n\r\n.elipsis {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\navl-dropdown{\r\n  margin-top: 3px;\r\n}\r\n\r\navl-overflow-menu {\r\n  display: inline;\r\n}\r\n\r\n/* Global filter */\r\n.globalFilter {\r\n  margin-bottom: 10px;\r\n  width: auto;\r\n  flex-grow: 1;\r\n}\r\n\r\n#grid.with-global-filter, #grid.with-column-selector {\r\n  height: calc(100% - 72px);\r\n}\r\n\r\n#grid.with-pagination.with-global-filter, #grid.with-pagination.with-column-selector {\r\n  height: calc(100% - 170px);\r\n}\r\n\r\n/* Global filter and column selector */\r\n:host([global-filter]) .top-flex-container, :host([column-selector]) .top-flex-container {\r\n  height: 72px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}\r\n\r\navl-column-selector-dialog {\r\n  flex-grow: 0;\r\n}\r\n\r\navl-icon{\r\n  width: 18px;\r\n  height: 18px;\r\n}\r\n.iconText{\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 48px;\r\n}\r\n\r\n.iconText avl-icon{\r\n  padding-right: 16px;\r\n  width: 24px;\r\n  height: 24px;\r\n  flex-shrink: 0;\r\n}\r\n.iconText p{\r\n  font-size: 14px;\r\n}\r\n\r\n.numberColumn{\r\n  text-align: right;\r\n}\r\n\r\n.textColumn{\r\n  text-align: left;\r\n}\r\n\r\navl-checkbox {\r\n  margin-right: 0px;\r\n}\r\n\r\n.header-icon-content,\r\n.flex-center{\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\na {\r\n  color: var(--avl-datatable-link-color);\r\n  text-decoration: none;\r\n}\r\n\r\na:hover:not(:active) {\r\n  color: var(--avl-datatable-link-hover-color);\r\n}\r\n\r\n.table-checkbox {\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n}\r\n\r\n.table-header-checkbox {\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n}\r\n</style>`;\n\r\n//# sourceMappingURL=avl-datatable.css.js.map\r\n","import '@vaadin/vaadin-grid/src/all-imports';\nimport { html } from '@polymer/polymer/polymer-element';\nimport { allInitial } from '@avl-controls/core/dist/all-initial.css';\nimport '@avl-controls/core/dist/avl-checkbox/avl-checkbox';\nimport '@avl-controls/core/dist/avl-textfield/avl-textfield';\nimport '@avl-controls/core/dist/avl-button/avl-button';\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\nimport '@avl-controls/core/dist/avl-dropdown/avl-dropdown';\nimport '@avl-controls/core/dist/avl-overflow-menu/avl-overflow-menu';\nimport './avl-column-selector-dialog/avl-column-selector-dialog';\nimport './themes/vaadin-grid-material-theme.css';\nimport './themes/vaadin-grid-sorter-material-theme.css';\nimport { style } from './avl-datatable.css';\nexport let template = html `\r\n  ${allInitial} ${style}\r\n\r\n  <avl-overflow-menu id=\"overflowMenu\"></avl-overflow-menu>\r\n\r\n  <div class=\"top-flex-container\">\r\n    <template is=\"dom-if\" if=\"[[globalFilter]]\">\r\n      <avl-textfield\r\n        class=\"globalFilter\"\r\n        value=\"{{globalFilterValue}}\"\r\n        label=\"[[globalFilterLabel]]\"\r\n        placeholder=\"[[globalFilterLabel]]\"\r\n        compact-mode\r\n      ></avl-textfield>\r\n    </template>\r\n\r\n    <template is=\"dom-if\" if=\"[[columnSelector]]\">\r\n      <avl-column-selector-dialog\r\n        columns-label=\"[[columnSelectorLabel]]\"\r\n        apply-button-label=\"[[applyButtonLabel]]\"\r\n        reset-button-label=\"[[resetButtonLabel]]\"\r\n        leaf-columns=\"[[leafColumns]]\"\r\n        on-selected-columns-changed=\"selectedColumnsChanged\"\r\n        dialog-footer=\"{{dialogFooter}}\"\r\n      ></avl-column-selector-dialog>\r\n    </template>\r\n  </div>\r\n\r\n  <vaadin-grid id=\"grid\" selected-items=\"{{selectedItems}}\" class$=\"{{getGridClass(pagination, globalFilter)}}\">\r\n    <template is=\"dom-if\" if=\"[[multiSelect]]\">\r\n      <vaadin-grid-selection-column\r\n        header-renderer=\"[[selectionHeaderRenderer]]\"\r\n        renderer=\"[[selectionColumnRenderer]]\"\r\n      ></vaadin-grid-selection-column>\r\n    </template>\r\n  </vaadin-grid>\r\n\r\n  <template is=\"dom-if\" if=\"[[pagination]]\">\r\n    <template is=\"dom-if\" if=\"[[totalNumOfRows]]\" restamp>\r\n      <div id=\"pages\">\r\n        <avl-dropdown\r\n          label=\"[[pageSizeLabel]]\"\r\n          selected-index=\"{{pageSizeIndex}}\"\r\n          no-label-float\r\n          compact-mode\r\n          items=\"[[pageSizeOptions]]\"\r\n        ></avl-dropdown>\r\n\r\n        <button on-click=\"_prev\" disabled=\"{{isLeftButtonDisabled(selectedPage)}}\" id=\"prevButton\">&lt;</button>\r\n\r\n        <template is=\"dom-if\" if=\"[[pages.left]]\">\r\n          <template is=\"dom-repeat\" items=\"[[pages.left]]\">\r\n            <button on-click=\"_select\" class=\"pageButton\" selected$=\"[[_isSelected(selectedPage, item)]]\">\r\n              [[item]]\r\n            </button>\r\n          </template>\r\n        </template>\r\n\r\n        <template is=\"dom-if\" if=\"[[pages.middle]]\">\r\n          <div class=\"threeDots\">...</div>\r\n          <template is=\"dom-repeat\" items=\"[[pages.middle]]\">\r\n            <button on-click=\"_select\" class=\"pageButton\" selected$=\"[[_isSelected(selectedPage, item)]]\">\r\n              [[item]]\r\n            </button>\r\n          </template>\r\n        </template>\r\n\r\n        <template is=\"dom-if\" if=\"[[pages.right]]\">\r\n          <div class=\"threeDots\">...</div>\r\n          <template is=\"dom-repeat\" items=\"[[pages.right]]\">\r\n            <button on-click=\"_select\" class=\"pageButton\" selected$=\"[[_isSelected(selectedPage, item)]]\">\r\n              [[item]]\r\n            </button>\r\n          </template>\r\n        </template>\r\n\r\n        <button on-click=\"_next\" disabled=\"{{isRightButtonDisabled(selectedPage, pageSize)}}\" id=\"nextButton\">\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    </template>\r\n  </template>\r\n`;\n\r\n//# sourceMappingURL=avl-datatable.html.js.map\r\n","import { PolymerElement } from '@polymer/polymer/polymer-element';\nimport '@avl-controls/core/dist/avl-localization-service/avl-localization-service';\nimport { globalFilterKey, } from '@avl-controls/interfaces';\nimport { ColumnType, isGroupColumn, isLeafColumn } from './column-definitions';\nimport createArrayDataProvider, { getParentObjectFromPath, getValueFromPath } from './array-data-provider';\nimport { template } from './avl-datatable.html';\nimport { OrderImpl } from './avl-datatable.models';\nimport { DEFAULT_PAGE_SIZE, DEFAULT_PAGE_SIZE_LABEL, DEFAULT_PAGE_SIZE_OPTIONS, MAX_PAGES_PER_SECTION, MIN_PAGES_PER_SECTION, } from './avl-datatable.consts';\nclass AvlDatatableImpl extends PolymerElement {\n    constructor() {\n        super(...arguments);\n        this.singleSelect = false;\n        this.multiSelect = false;\n        this.allowActiveRow = false;\n        this.checkboxAllSelectClicked = false;\n        this.pageSize = DEFAULT_PAGE_SIZE;\n        this.selectedPage = 0;\n        this.globalFilter = false;\n        this.globalFilterLabel = 'Filter...';\n        this.treeColumn = false;\n        this.pageSizeOptions = DEFAULT_PAGE_SIZE_OPTIONS;\n        this.pageSizeLabel = DEFAULT_PAGE_SIZE_LABEL;\n        this.dialogFooter = false;\n        this.pageSizeIndex = 0;\n        this.leafColumns = [];\n        this.pages = {};\n        this._data = undefined;\n        this._lastFilters = new Map(); // only used for pagination\n        this.dataProviderCalled = false; // if vaadin data provider has been called since init\n        this.recreatingHeaders = false;\n        this.isLazyLoading = true;\n        this.checkboxClicked = false;\n        this.row2formattedRow = new Map();\n        this.idx2formattedRow = new Map();\n        this.rowIndexPropertyName = '__index';\n        this.rowPropertyName = '__row';\n        this.columnSelectorLabel = 'Manage columns';\n        this.resetButtonLabel = 'Reset to default';\n        // used for calculating pages\n        this.totalNumOfRows = 0;\n        // TODO: there are actually 2 arrays -> raw/real and formatted, formatted is passed to vaadin and used for\n        // selecting and deselecting but when returning data to user (upon selection) we want to return\n        // to user the raw/real data -> this wouldn't have to be so if directly used raw rows with vaadin row templates\n        this.__rowsCache = []; // caching remote data which is transformed to formatted data\n        this.__formattedRowsCache = []; // this is passed to vaadin grid and it is used for de/selecting rows\n        this.selectedIndex = undefined;\n        this.selectedValue = undefined;\n        this.selectedIndexes = [];\n        this.selectedValues = [];\n        this.lastActiveItem = undefined;\n        this.range = (start, end) => {\n            return [...Array(end - start).keys()].map((x) => x + start + 1);\n        };\n        this.formatColumn = (column) => {\n            if (!isLeafColumn(column)) {\n                return;\n            }\n            // default properties\n            column.sortable = !!column.sortable;\n            column.flexWidth = column.flexWidth || 0;\n            // default formatter based on type and only for certain types\n            switch (column.type) {\n                case ColumnType.Number:\n                    column.formatter =\n                        column.formatter || ((value) => AvlLocalizationService.formatNumber(value, column.numberOptions));\n                    break;\n                case ColumnType.Date:\n                    column.formatter =\n                        column.formatter || ((value) => AvlLocalizationService.formatDateTime(value, column.dateTimeOptions));\n                    break;\n                default:\n            }\n        };\n        this.selectionColumnRenderer = (cell, _, rowData) => {\n            let checkbox = cell.firstElementChild;\n            if (!checkbox) {\n                checkbox = document.createElement('avl-checkbox');\n                checkbox.addEventListener('click', (e) => {\n                    e.stopPropagation();\n                    checkbox = e.target;\n                    if (checkbox.checked) {\n                        this.grid.selectedItems.push(checkbox.__item);\n                        this.selectedValues = this.grid.selectedItems.map((formattedRow) => formattedRow[this.rowPropertyName]);\n                        this.selectedIndexes = this.selectedValues.map((value) => {\n                            return this.row2formattedRow.get(value)[this.rowIndexPropertyName];\n                        });\n                    }\n                    else {\n                        const index = this.grid.selectedItems.indexOf(checkbox.__item);\n                        if (index !== -1) {\n                            this.grid.selectedItems.splice(index, 1);\n                        }\n                        this.checkboxClicked = false;\n                        this.selectedValues = this.grid.selectedItems.map((formattedRow) => formattedRow[this.rowPropertyName]);\n                        this.selectedIndexes = this.selectedValues.map((value) => {\n                            return this.row2formattedRow.get(value)[this.rowIndexPropertyName];\n                        });\n                        this.checkboxAllSelectClicked = false;\n                    }\n                    if (!this.isLazyLoading && this.grid.selectedItems.length === this.data.length) {\n                        this.checkboxClicked = true;\n                    }\n                    if (!this.isLazyLoading && !this.treeColumn) {\n                        this.headerCheckboxState();\n                    }\n                });\n                cell.className = 'table-checkbox';\n                cell.appendChild(checkbox);\n            }\n            const items = [].slice.call(this.grid.shadowRoot.querySelector('#items').children);\n            let i = 0;\n            if (i < items.length) {\n                i++;\n            }\n            else {\n                this.checkboxAllSelectClicked = false;\n            }\n            checkbox.__item = rowData.item;\n            checkbox.checked = rowData.selected;\n        };\n        // sets class on cell <vaadin-grid-cell-content>,\n        // creates checkbox and adds it inside it in cell content\n        this.selectionHeaderRenderer = (cell, _, refresh = false) => {\n            if (!cell) {\n                return;\n            }\n            const className = 'table-header-checkbox';\n            if (cell.className === className && !refresh) {\n                return;\n            }\n            cell.className = className;\n            cell.id = className;\n            const checkbox = this.createCheckBox();\n            this.doLoadGridTask().then(() => {\n                if (this.isLazyLoading || this.singleSelect || this.treeColumn) {\n                    return;\n                }\n                if (cell.hasChildNodes()) {\n                    cell.removeChild(cell.firstChild);\n                }\n                cell.append(checkbox);\n            });\n        };\n        this.getColumnNameFromEvent = (event) => {\n            const header = event.detail.resizedColumn.firstElementChild;\n            return this.getLabel(header.content);\n        };\n        this.getLabel = (headerContent) => {\n            const label = headerContent.getAttribute ? headerContent.getAttribute('aria-label') : null;\n            if (label) {\n                return label;\n            }\n            else if (headerContent.firstElementChild && !(headerContent.firstElementChild instanceof HTMLImageElement)) {\n                return this.getLabel(headerContent.firstElementChild);\n            }\n            else {\n                return headerContent.innerHTML;\n            }\n        };\n        this.getColumnNameFromTargetElement = (target) => {\n            const firstChild = target.firstElementChild;\n            const vaadinGridfilter = firstChild.getElementsByTagName('vaadin-grid-filter')[0];\n            const label = vaadinGridfilter ? vaadinGridfilter.firstElementChild['label'] : firstChild.firstElementChild.innerHTML;\n            return label;\n        };\n        this.subscribeToSortDirectionChanged = () => {\n            if (!this.eventSubscription) {\n                const gridSorterList = this.grid.querySelectorAll('vaadin-grid-sorter');\n                const gridSorterLength = gridSorterList.length;\n                gridSorterList.forEach((sorter, key) => {\n                    sorter.addEventListener('direction-changed', (event) => {\n                        const detail = {\n                            columnName: this.getColumnNameFromTargetElement(event.target),\n                            sortDirection: event.detail.value\n                        };\n                        if (event.detail.value) {\n                            // dispatches two events if another column have been sorted previously - for previously sorted column and sorted column\n                            this.dispatchEvent(new CustomEvent('column-sort-direction-changed', { detail: detail }));\n                        }\n                    });\n                    if (key === gridSorterLength - 1) {\n                        this.eventSubscription = true;\n                    }\n                });\n            }\n        };\n    }\n    static get is() {\n        return 'avl-datatable';\n    }\n    static get template() {\n        return template;\n    }\n    static get properties() {\n        return {\n            columnDefinitions: {\n                type: Array,\n                observer: 'columnDefinitionsChanged',\n            },\n            dataProvider: {\n                type: Function,\n                observer: 'dataProviderChanged',\n            },\n            pagination: {\n                type: Boolean,\n            },\n            dialogFooter: {\n                type: Boolean,\n            },\n            pageSize: {\n                type: Number,\n                notify: true,\n                observer: 'pageSizeChanged',\n            },\n            pageSizeIndex: {\n                type: Number,\n                observer: 'pageSizeIndexChanged',\n            },\n            selectedPage: {\n                type: Number,\n                notify: true,\n                observer: 'selectedPageChanged',\n            },\n            singleSelect: {\n                type: Boolean,\n                observer: 'singleSelectChanged',\n                reflectToAttribute: true,\n                value: false,\n            },\n            multiSelect: {\n                type: Boolean,\n                observer: 'multiSelectChanged',\n                reflectToAttribute: true,\n                value: false,\n            },\n            allowActiveRow: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n            },\n            activeRow: {\n                type: Object,\n                notify: true,\n            },\n            selectedIndex: {\n                type: Number,\n                observer: 'selectedIndexChanged',\n                notify: true,\n                value: undefined,\n            },\n            selectedValue: {\n                type: String,\n                observer: 'selectedValueChanged',\n                notify: true,\n                value: undefined,\n            },\n            selectedIndexes: {\n                type: Array,\n                observer: 'selectedIndexesChanged',\n                notify: true,\n                value: [],\n            },\n            selectedValues: {\n                type: Array,\n                observer: 'selectedValuesChanged',\n                notify: true,\n                value: [],\n            },\n            globalFilter: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n            },\n            globalFilterValue: {\n                type: String,\n                observer: 'globalFilterValueChanged',\n            },\n            globalFilterLabel: {\n                type: String,\n            },\n            treeColumn: {\n                type: Boolean,\n                value: false,\n                reflectToAttribute: true,\n                observer: 'treeColumnChanged',\n            },\n            columnSelector: {\n                type: Boolean,\n                reflectToAttribute: true,\n            },\n            pageSizeLabel: String,\n        };\n    }\n    get data() {\n        return this._data;\n    }\n    set data(data) {\n        this.__formattedRowsCache = [];\n        this._data = data;\n        this.dataProvider = createArrayDataProvider(this._data);\n        const cell = this.shadowRoot.querySelector('#table-header-checkbox');\n        this.selectionHeaderRenderer(cell, null, true);\n        if (this.isLazyLoading) {\n            this.isLazyLoading = false;\n        }\n    }\n    get grid() {\n        if (!this._grid) {\n            this._grid = this.shadowRoot.querySelector('#grid');\n        }\n        return this._grid;\n    }\n    setVaadinGridSize(pageSize) {\n        this.grid.setAttribute('size', String(pageSize));\n    }\n    setTotalRows(numOfRows) {\n        if (this.totalNumOfRows === numOfRows) {\n            return;\n        }\n        this.totalNumOfRows = numOfRows;\n        this.setVaadinGridSize(this.totalNumOfRows);\n        this.pageSizeChanged();\n    }\n    selectedColumnsChanged(e) {\n        this.columnDefinitions = e.detail || this.columnDefinitions.slice();\n        const cell = this.shadowRoot.querySelector('#table-header-checkbox');\n        this.selectionHeaderRenderer(cell, null, true);\n    }\n    clearCache() {\n        this.grid.clearCache();\n    }\n    areSortOrdersEqual(prevOrders, newOrders) {\n        if (prevOrders.length !== newOrders.length) {\n            return false;\n        }\n        return JSON.stringify(prevOrders) === JSON.stringify(newOrders);\n    }\n    areFiltersEqual(prevFilters, newFilters) {\n        if (prevFilters.size !== newFilters.size) {\n            return false;\n        }\n        for (const [key, value] of prevFilters) {\n            if (newFilters.get(key) !== value) {\n                return false;\n            }\n        }\n        return true;\n    }\n    getFieldsForGlobalFilter() {\n        const globalFilterableTypes = [ColumnType.Text, ColumnType.Button, ColumnType.Link, ColumnType.IconText];\n        const globalFilterPaths = [];\n        if (this.columnDefinitions) {\n            this.traverseColumnsAndPerformAction((column) => {\n                if (!isLeafColumn(column) || column.hidden || !globalFilterableTypes.includes(column.type)) {\n                    return;\n                }\n                let path;\n                switch (column.type) {\n                    case ColumnType.Link:\n                        break;\n                    case ColumnType.IconText:\n                        path = column.valueField + '.text';\n                        break;\n                    default:\n                        path = column.valueField;\n                        break;\n                }\n                globalFilterPaths.push(path);\n            });\n        }\n        return globalFilterPaths;\n    }\n    updateExpandedItems(grid, rows) {\n        rows.filter((row) => row.descendantsMatchFilter).forEach((row) => grid.push('expandedItems', row));\n    }\n    collapseEverything() {\n        this.grid.expandedItems = [];\n    }\n    calculateSortOrders(orders) {\n        return orders.map((order) => new OrderImpl(order.path, order.direction === 'asc'));\n    }\n    calculateFilters(filters) {\n        const calculatedFilters = new Map();\n        for (const filter of filters) {\n            if (filter && filter.value !== '') {\n                calculatedFilters.set(filter.path, filter.value);\n            }\n        }\n        if (this.globalFilter && this.globalFilterValue) {\n            calculatedFilters.set(globalFilterKey, this.globalFilterValue);\n        }\n        return calculatedFilters;\n    }\n    formatRows(data, page, pageSize) {\n        const formattedRows = data.rows.map((row, idx) => {\n            const formattedRow = this.formatRow(row);\n            formattedRow[this.rowIndexPropertyName] = page * pageSize + idx;\n            formattedRow[this.rowPropertyName] = row;\n            return formattedRow;\n        });\n        return formattedRows;\n    }\n    dataProviderChanged() {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.dataProvider = (params, callback) => {\n            if (this.recreatingHeaders) {\n                callback([], 0);\n                return;\n            }\n            // construct TableDataRequestParamsImpl from params\n            const sortOrders = this.calculateSortOrders(params.sortOrders);\n            const filters = this.calculateFilters(params.filters);\n            const tableDataRequestParams = {\n                page: params.page,\n                pageSize: Math.min(params.pageSize, this.pageSize),\n                filters,\n                globalFilterFields: this.getFieldsForGlobalFilter(),\n                sortOrders,\n                parentItem: params.parentItem ? params.parentItem[this.rowPropertyName] : params.parentItem,\n            };\n            this.dataProvider(tableDataRequestParams).then((providerData) => {\n                const formattedRows = this.formatRows(providerData, params.page, params.pageSize);\n                this.cacheRowsForLookup(providerData, params.page, params.pageSize, formattedRows);\n                if (tableDataRequestParams.parentItem) {\n                    callback(formattedRows, providerData.totalRows);\n                }\n                else {\n                    callback(formattedRows);\n                    this.setTotalRows(providerData.totalRows);\n                }\n                this.updateExpandedItems(this.grid, formattedRows);\n                this.dataProviderCalled = true;\n                this.deselectEverything();\n                this.subscribeToSortDirectionChanged();\n            });\n        };\n    }\n    globalFilterValueChanged() {\n        if (this.dataProviderCalled) {\n            this.clearCache();\n        }\n        this.resetCheckboxes();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (AvlLocalizationService && AvlLocalizationService.translationService) {\n            this.translateLabels();\n        }\n        const ofMenu = this.$.overflowMenu;\n        this.grid.addEventListener('active-item-changed', (e) => this.activeItemChanged(e.detail.value));\n        this.grid.addEventListener('click', (e) => {\n            const constructEventDetail = (t) => ({\n                row: t['item'][this.rowPropertyName],\n                valueField: t.getAttribute('value-field'),\n            });\n            const target = e.target;\n            if (target.tagName.toLocaleLowerCase() === 'avl-button' ||\n                target.tagName.toLocaleLowerCase() === 'avl-icon-button') {\n                if (target.hasAttribute('overflow-menu')) {\n                    if (ofMenu.trigger !== e.target) {\n                        this.handleOverflowMenuClick(e);\n                    }\n                }\n                else {\n                    const detail = constructEventDetail(target);\n                    this.dispatchEvent(new CustomEvent('button-click', {\n                        detail: detail,\n                    }));\n                }\n            }\n            else if (target.tagName.toLowerCase() === 'a') {\n                if (target.hasAttribute('do-not-follow-links')) {\n                    e.preventDefault();\n                }\n                const detail = constructEventDetail(target);\n                this.dispatchEvent(new CustomEvent('link-click', {\n                    detail: detail,\n                }));\n            }\n        });\n        this.grid.addEventListener('column-resize', (event) => {\n            const detail = {\n                columnName: this.getColumnNameFromEvent(event),\n                columnSize: event.detail.resizedColumn.width\n            };\n            this.dispatchEvent(new CustomEvent('column-size-changed', { detail: detail }));\n        });\n    }\n    async translateLabels() {\n        if (!AvlLocalizationService || !AvlLocalizationService.translationService) {\n            return;\n        }\n        const translationService = AvlLocalizationService.translationService;\n        this.columnSelectorLabel = await translationService.translate('VizBox.AvlDatatable.Columns');\n        this.resetButtonLabel = await translationService.translate('VizBox.AvlDatatable.Reset');\n    }\n    handleOverflowMenuClick(e) {\n        const ofMenu = this.$.overflowMenu;\n        const target = e.target;\n        if (ofMenu.trigger !== target) {\n            ofMenu.removeEventListener('item-clicked', this.overflowMenuItemClickedListener);\n            this.overflowMenuItemClickedListener = (event) => {\n                const detail = {\n                    row: target['item'][this.rowPropertyName],\n                    valueField: target.getAttribute('value-field'),\n                    item: event.detail.value,\n                };\n                this.dispatchEvent(new CustomEvent('overflow-menu-item-click', {\n                    detail: detail,\n                }));\n            };\n            const cellId = parseInt(target.parentElement.getAttribute('column-index'), 10);\n            const menuItems = this.leafColumns[cellId].menuItems;\n            ofMenu.items = menuItems;\n            ofMenu.trigger = e.target;\n            setTimeout(() => {\n                ofMenu.open = true;\n            });\n            ofMenu.addEventListener('item-clicked', this.overflowMenuItemClickedListener);\n        }\n    }\n    traverseColumnsAndPerformAction(action) {\n        // copy list\n        const stack = this.columnDefinitions.slice();\n        // do DFS starting from left-most column\n        while (stack.length) {\n            const column = stack.shift();\n            // add children to stack\n            if (isGroupColumn(column) && column.childColumns) {\n                stack.unshift(...column.childColumns.slice());\n            }\n            action(column);\n        }\n    }\n    formatRow(row, index) {\n        // copy row\n        const formattedRow = JSON.parse(JSON.stringify(row));\n        for (const leafCol of this.leafColumns) {\n            // format for certain data types\n            if (leafCol.type === ColumnType.Number || leafCol.type === ColumnType.Date) {\n                const object = getValueFromPath(formattedRow, leafCol.valueField);\n                if (object !== undefined && object !== null) {\n                    const parentObject = getParentObjectFromPath(formattedRow, leafCol.valueField);\n                    const propertyName = leafCol.valueField.split('.')[leafCol.valueField.split('.').length - 1];\n                    if (leafCol.type === ColumnType.Date) {\n                        parentObject[propertyName] = new Date(parentObject[propertyName]);\n                    }\n                    parentObject[propertyName] = leafCol.formatter(parentObject[propertyName]);\n                }\n            }\n        }\n        return formattedRow;\n    }\n    setPages() {\n        if (!this.totalNumOfRows || !this.pageSize) {\n            return;\n        }\n        const pages = {};\n        const totalPages = Math.ceil(this.totalNumOfRows / this.pageSize);\n        if (totalPages <= MAX_PAGES_PER_SECTION + MIN_PAGES_PER_SECTION) {\n            // one section - too few pages to split them into multiple sections\n            pages.left = this.range(0, totalPages);\n        }\n        else if (this.selectedPage < MAX_PAGES_PER_SECTION - 1) {\n            // split pages into two sections with first one containing selected page\n            pages.left = this.range(0, MAX_PAGES_PER_SECTION);\n            pages.middle = this.range(totalPages - MIN_PAGES_PER_SECTION, totalPages);\n        }\n        else {\n            // left section has minimum number of pages\n            pages.left = this.range(0, MIN_PAGES_PER_SECTION);\n            if (this.selectedPage > totalPages - MAX_PAGES_PER_SECTION) {\n                // middle section has maximum number of pages (tail part of the array) and contains selected page\n                pages.middle = this.range(totalPages - MAX_PAGES_PER_SECTION, totalPages);\n            }\n            else {\n                // three sections with selected page in the middle one\n                const startMiddle = this.selectedPage - Math.floor(MAX_PAGES_PER_SECTION / 2);\n                pages.middle = this.range(startMiddle, startMiddle + MAX_PAGES_PER_SECTION);\n                pages.right = this.range(totalPages - MIN_PAGES_PER_SECTION, totalPages);\n            }\n        }\n        this.pages = pages;\n    }\n    pageSizeChanged() {\n        if (!this.pagination) {\n            this.pageSize = 50;\n            return;\n        }\n        if (Number.isNaN(this.pageSize) || this.pageSize < 1) {\n            return;\n        }\n        const truncatedNumber = Math.trunc(this.pageSize);\n        if (this.pageSize !== truncatedNumber) {\n            this.pageSize = truncatedNumber;\n            return;\n        }\n        // Adjusts the page size options dropdown, if value exists\n        this.pageSizeIndex = this.pageSizeOptions.findIndex((option) => option.value === this.pageSize);\n        this.updateTable();\n    }\n    updateTable() {\n        if (this.totalNumOfRows === 0) {\n            this.pages = {};\n            return;\n        }\n        this.selectedPage = 0;\n        const gridSize = Math.min(this.pageSize, this.totalNumOfRows);\n        this.setVaadinGridSize(gridSize);\n        this.setPages();\n    }\n    pageSizeIndexChanged() {\n        if (this.pageSizeIndex > -1) {\n            this.pageSize = this.pageSizeOptions[this.pageSizeIndex].value;\n        }\n    }\n    selectedPageChanged() {\n        this.setPages();\n        if (!this.grid || !this.dataProvider || !this.pagination) {\n            return;\n        }\n        this.grid.dataProvider = (params, callback) => {\n            // construct TableDataRequestParamsImpl from params\n            const sortOrders = this.calculateSortOrders(params.sortOrders);\n            const filters = this.calculateFilters(params.filters);\n            /* if filters changed since the last time dataProvider has been called we need to set selected\n            page to 0 because we don't know how many rows/pages there will be after fetching the data  */\n            if (!this.areFiltersEqual(this._lastFilters, filters)) {\n                this.selectedPage = 0;\n            }\n            this._lastFilters = filters;\n            const tableDataRequestParams = {\n                page: this.selectedPage,\n                pageSize: Math.min(this.totalNumOfRows, this.pageSize),\n                filters,\n                globalFilterFields: this.getFieldsForGlobalFilter(),\n                sortOrders,\n                parentItem: params.parentItem ? params.parentItem[this.rowPropertyName] : params.parentItem,\n            };\n            this.dataProvider(tableDataRequestParams).then((providerData) => {\n                // format rows\n                const formattedRows = this.formatRows(providerData, params.page, params.pageSize);\n                this.cacheRowsForLookup(providerData, params.page, params.pageSize, formattedRows);\n                if (tableDataRequestParams.parentItem) {\n                    callback(formattedRows, providerData.totalRows);\n                }\n                else {\n                    callback(formattedRows);\n                    this.setTotalRows(providerData.totalRows);\n                    // If this is the last page, number of rows might be smaller than the page size.\n                    if (this.selectedPage === Math.ceil(this.totalNumOfRows / this.pageSize) - 1) {\n                        this.setVaadinGridSize(providerData.rows.length);\n                    }\n                    else {\n                        // If the size was changed on the last page, set it back.\n                        this.setVaadinGridSize(this.pageSize);\n                    }\n                }\n                this.updateExpandedItems(this.grid, formattedRows);\n            });\n        };\n    }\n    isLeftButtonDisabled(page) {\n        return page === 0;\n    }\n    isRightButtonDisabled(page, pageSize) {\n        const totalPages = Math.ceil(this.totalNumOfRows / pageSize);\n        return this.totalNumOfRows === 0 || page === totalPages - 1;\n    }\n    deselectEverything() {\n        if (this.singleSelect) {\n            this.selectedValue = undefined;\n        }\n        if (this.multiSelect && this.selectedValues.length > 0) {\n            this.selectedValues = [];\n            this.selectedIndexes = [];\n        }\n    }\n    // Pagination\n    _isSelected(page, item) {\n        return page === item - 1;\n    }\n    _select(e) {\n        // selection is not persistent when changing pages\n        this.deselectEverything();\n        this.collapseEverything();\n        this.resetCheckboxes();\n        this.selectedPage = e.model.item - 1;\n    }\n    _next() {\n        // selection is not persistent when changing pages\n        this.deselectEverything();\n        this.collapseEverything();\n        this.resetCheckboxes();\n        const totalPages = Math.ceil(this.totalNumOfRows / this.pageSize);\n        this.selectedPage = Math.min(totalPages - 1, this.selectedPage + 1);\n    }\n    _prev() {\n        // selection is not persistent when changing pages\n        this.deselectEverything();\n        this.collapseEverything();\n        this.resetCheckboxes();\n        this.selectedPage = Math.max(0, this.selectedPage - 1);\n    }\n    columnDefinitionsChanged() {\n        if (!this.columnDefinitions) {\n            return;\n        }\n        const childColumnsExist = JSON.stringify(this.columnDefinitions).indexOf('childColumns') !== -1;\n        if (childColumnsExist && this.columnSelector) {\n            this.columnSelector = false;\n            throw new Error('Column selector is not supported with grouped headers');\n        }\n        this.createHeaders();\n    }\n    treeColumnChanged() {\n        if (!this.treeColumn || !this.columnDefinitions) {\n            return;\n        }\n        this.createHeaders();\n    }\n    createHeaders() {\n        const oldColumns = this.shadowRoot.querySelectorAll('vaadin-grid-column, vaadin-grid-column-group');\n        if (oldColumns.length) {\n            this.recreatingHeaders = true;\n            // reset filter and sorter when changing headers because vaadin still remembers them even if elements are removed\n            this.grid.querySelectorAll('.filter-textfield').forEach((el) => (el['value'] = ''));\n            this.grid.querySelectorAll('vaadin-grid-sorter').forEach((el) => (el['direction'] = null));\n            oldColumns.forEach((c) => c.parentElement.removeChild(c));\n        }\n        this.traverseColumnsAndPerformAction(this.formatColumn);\n        this.leafColumns = [];\n        this.columnDefinitions\n            .map((col, id) => this.createGridHeaderHTML(col, String(id)))\n            .filter((header) => header)\n            .forEach((header) => this.grid.appendChild(header));\n        if (this.recreatingHeaders) {\n            this.recreatingHeaders = false;\n            if (this.dataProviderCalled) {\n                this.clearCache();\n            }\n        }\n        this.leafColumns\n            .filter((col) => col.filterable)\n            .forEach((col) => setTimeout(() => this.filterLeafColumn(col), 0));\n    }\n    createGridHeaderHTML(col, testLabel) {\n        if (isGroupColumn(col)) {\n            return this.createGroupGridHeaderHTML(col, testLabel);\n        }\n        if (isLeafColumn(col)) {\n            this.leafColumns.push(col);\n            return this.getLeafColumnHTML(col, this.leafColumns.length - 1, testLabel);\n        }\n        throw new Error('Unknown type. Column definition for LeafColumn must have valueField property set' + col);\n    }\n    createGroupGridHeaderHTML(column, testLabel) {\n        const columnGroupHeader = document.createElement('vaadin-grid-column-group');\n        columnGroupHeader.resizable = true;\n        const headerTemplate = document.createElement('template');\n        headerTemplate.classList.add('header');\n        headerTemplate.innerHTML = `<span class=\"header-content\" test-label=\"${testLabel}\">${column.caption}</span>`;\n        columnGroupHeader.appendChild(headerTemplate);\n        column.childColumns\n            .map((col, id) => this.createGridHeaderHTML(col, testLabel + '>' + id))\n            .filter((col) => col)\n            .forEach((col) => columnGroupHeader.appendChild(col));\n        return columnGroupHeader;\n    }\n    getLeafColumnTemplate(column) {\n        const style = `${column.defaultStyle || ''}[[item.${column.valueField}Style]]`;\n        switch (column.type) {\n            case ColumnType.Text:\n                return `<div style=\"${style}\" class=\"textColumn\" title=\"[[item.${column.valueField}]]\">[[item.${column.valueField}]]</div>`;\n            case ColumnType.Number:\n                return `<div style=\"${style}\" class=\"numberColumn\" title=\"[[item.${column.valueField}]]\">[[item.${column.valueField}]]</div>`;\n            case ColumnType.Date:\n                return `<div style=\"${style}\" class=\"elipsis dateColumn\" title=\"[[item.${column.valueField}]]\">[[item.${column.valueField}]]</div>`;\n            case ColumnType.Icon:\n                return `<div class=\"flex-center\" ><avl-icon style=\"${style}\" icon=\"[[item.${column.valueField}]]\"></avl-icon></div>`;\n            case ColumnType.Image:\n                return `<img style=\"${style}\" src=\"[[item.${column.valueField}]]\">`;\n            case ColumnType.Checkbox:\n                return `<avl-checkbox style=\"${style}\" checked=\"[[item.${column.valueField}]]\" disabled></avl-checkbox>`;\n            case ColumnType.Button:\n                return `<template is=\"dom-if\" if=\"[[item.${column.valueField}]]\"><avl-button style=\"${style}\" item=\"{{item}}\" value-field=\"${column.valueField}\">[[item.${column.valueField}]]</avl-button></template>`;\n            case ColumnType.IconButton:\n                return `<avl-icon-button style=\"${style}\" item=\"{{item}}\" value-field=\"${column.valueField}\" icon=\"{{item.${column.valueField}}}\"></avl-icon-button>`;\n            case ColumnType.Link:\n                return `<a style=\"${style}\" href=\"[[item.${column.valueField}.href]]\" target=\"[[item.${column.valueField}.target]]\" item=\"{{item}}\" value-field=\"${column.valueField}\" ${column.doNotFollowLinks ? 'do-not-follow-links' : ''} >[[item.${column.valueField}.text]]</a>`;\n            case ColumnType.IconText:\n                return `<div class=\"iconText\"><avl-icon style=\"${style}\" icon=\"[[item.${column.valueField}.icon]]\"></avl-icon><p>[[item.${column.valueField}.text]]</p></div>`;\n            case ColumnType.OverflowMenu:\n                return `<avl-icon-button item=\"{{item}}\" overflow-menu icon=\"more-vert\" value-field=\"${column.valueField}\" style=\"${style}\"></avl-icon-button>`;\n            default:\n                return '';\n        }\n    }\n    getLeafColumnHTML(column, columnIndex, testLabel) {\n        if (column.hidden) {\n            return undefined;\n        }\n        let header;\n        // Header icon or image\n        let iconOrImageHtml = '';\n        if (column.headerIcon) {\n            iconOrImageHtml = `<avl-icon class=\"header-icon\" icon=\"${column.headerIcon}\"></avl-icon>`;\n        }\n        else if (column.headerImage) {\n            iconOrImageHtml = `<img class=\"header-image\" src=\"${column.headerImage}\"></i>`;\n        }\n        if (column.filterable) {\n            const variableName = '_' + column.valueField.replace('.', '_');\n            header = `<vaadin-grid-filter aria-label=\"${column.caption}\" path=\"${column.valueField}\" value=\"[[${variableName}]]\">\r\n                  <avl-textfield slot=\"filter\" no-label-float compact-mode class=\"filter-textfield\"\r\n                    label=\"${column.caption}\"\r\n                    value=\"{{${variableName}}}\" focus-target> </avl-textfield>\r\n                </vaadin-grid-filter>`;\n        }\n        else if (iconOrImageHtml) {\n            header = `<span class=\"header-icon-content\" test-label=\"${testLabel}\">${iconOrImageHtml}</span>`;\n        }\n        else {\n            header = `<span class=\"header-content\" test-label=\"${testLabel}\">${column.caption}</span>`;\n        }\n        if (column.sortable) {\n            const direction = column.sortDirection ? 'direction=\"' + column.sortDirection + '\"' : '';\n            header = `<vaadin-grid-sorter path=\"${column.valueField}\" ${direction}>\r\n                  <div class=\"cell sortable-header\">\r\n                    ${header}\r\n                  </div>\r\n                </vaadin-grid-sorter>`;\n        }\n        const columnEl = document.createElement('vaadin-grid-column');\n        columnEl.resizable = true;\n        if (column.width) {\n            columnEl.setAttribute('width', column.width);\n        }\n        columnEl.setAttribute('flex-grow', column.flexWidth.toString());\n        const headerTemplate = document.createElement('template');\n        headerTemplate.classList.add('header');\n        headerTemplate.innerHTML = header;\n        const itemTemplate = document.createElement('template');\n        let itemTemplateString = `<span class=\"cell-content\" column-index=\"${columnIndex}\" row-index$=\"{{index}}\">${this.getLeafColumnTemplate(column)}</span>`;\n        if (this.treeColumn && columnIndex === 0) {\n            itemTemplateString = `<vaadin-grid-tree-toggle leaf=\"[[!item.hasChildren]]\" expanded=\"{{expanded}}\" level=\"[[level]]\">\r\n              ${itemTemplateString}\r\n        </vaadin-grid-tree-toggle>`;\n        }\n        itemTemplate.innerHTML = itemTemplateString;\n        columnEl.appendChild(headerTemplate);\n        columnEl.appendChild(itemTemplate);\n        return columnEl;\n    }\n    getGridClass(pagination, globalFilter) {\n        const classList = [];\n        if (pagination) {\n            classList.push('with-pagination');\n        }\n        if (globalFilter) {\n            classList.push('with-global-filter');\n        }\n        if (this.columnSelector) {\n            classList.push('with-column-selector');\n        }\n        return classList.join(' ');\n    }\n    headerCheckboxState() {\n        var _a;\n        const tableHeaderCheckbox = this.grid.querySelector('#table-header-checkbox');\n        if (!((_a = tableHeaderCheckbox === null || tableHeaderCheckbox === void 0 ? void 0 : tableHeaderCheckbox.children) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        const child = this.grid.querySelector('#table-header-checkbox').children[0];\n        if (this.grid.selectedItems.length && this.grid.selectedItems.length !== this.grid.items.length) {\n            child.indeterminate = true;\n        }\n        else if (this.grid.selectedItems.length === this.grid.items.length) {\n            child.checked = true;\n            child.indeterminate = false;\n        }\n        else if (!this.grid.selectedItems.length) {\n            child.checked = false;\n            child.indeterminate = false;\n        }\n    }\n    createCheckBox() {\n        const checkbox = document.createElement('avl-checkbox');\n        checkbox.addEventListener('click', (e) => {\n            e.stopPropagation();\n            if (!this.checkboxClicked || !checkbox.checked) {\n                if (checkbox.checked) {\n                    this.checkboxAllSelectClicked = true;\n                    let items = [].slice.call(this.grid.shadowRoot.querySelector('#items').children);\n                    this.grid.selectedItems = [];\n                    items = items.slice(0, this.grid.items.length);\n                    items.forEach((item) => {\n                        this.grid.selectedItems.push(item._item);\n                        item.children[0]._content.children[0].checked = true;\n                    });\n                    if (this.pagination) {\n                        if (!this.isLazyLoading && this.grid.selectedItems.length === this.grid.items.length) {\n                            const values = this.grid.selectedItems.map((formattedRow) => formattedRow[this.rowPropertyName]);\n                            this.selectedValues = values.slice(0, this.grid.items.length);\n                            this.selectedIndexes = this.selectedValues.map((value) => {\n                                return this.row2formattedRow.get(value)[this.rowIndexPropertyName];\n                            });\n                        }\n                    }\n                    else {\n                        if (!this.isLazyLoading && this.grid.selectedItems.length === this.data.length) {\n                            this.selectedValues = this.grid.selectedItems.map((formattedRow) => formattedRow[this.rowPropertyName]);\n                            this.selectedIndexes = this.selectedValues.map((value) => {\n                                return this.row2formattedRow.get(value)[this.rowIndexPropertyName];\n                            });\n                        }\n                    }\n                }\n                else {\n                    this.grid.selectedItems = [];\n                    if (!this.isLazyLoading) {\n                        this.selectedValues = this.grid.selectedItems.map((formattedRow) => formattedRow[this.rowPropertyName]);\n                        this.selectedIndexes = this.selectedValues.map((value) => {\n                            return this.row2formattedRow.get(value)[this.rowIndexPropertyName];\n                        });\n                    }\n                    this.checkboxClicked = false;\n                    this.checkboxAllSelectClicked = false;\n                }\n            }\n            else {\n                this.checkboxClicked = false;\n            }\n        });\n        return checkbox;\n    }\n    resetCheckboxes() {\n        return new Promise((resolve) => {\n            if (this.grid.selectedItems.length > 0) {\n                this.selectedValues = [];\n            }\n            const tableHeaderCheckbox = this.grid.querySelector('#table-header-checkbox');\n            if (tableHeaderCheckbox && tableHeaderCheckbox.children.length > 0) {\n                tableHeaderCheckbox.children[0].checked = false;\n                tableHeaderCheckbox.children[0].indeterminate = false;\n            }\n            if (this.grid.selectedItems.length > 0) {\n                this.grid.selectedItems = [];\n            }\n            resolve('done');\n        });\n    }\n    doLoadGridTask() {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                const numChilds = this.grid.shadowRoot.querySelector('#items').childElementCount;\n                if (numChilds > 0) {\n                    resolve('done');\n                }\n            }, 100);\n        });\n    }\n    filterLeafColumn(col) {\n        if (this.grid.querySelector(`vaadin-grid-filter[path=\"${col.valueField}\"]`)) {\n            const filterGridFilterElement = this.grid.querySelector(`vaadin-grid-filter[path=\"${col.valueField}\"]`);\n            const filterTextfield = filterGridFilterElement.querySelector('avl-textfield');\n            filterTextfield.addEventListener('value-changed', (e) => {\n                this.resetCheckboxes();\n            });\n            filterTextfield['value'] = col.filterKey;\n        }\n    }\n    cacheRowsForLookup(data, page, pageSize, formattedRows) {\n        data.rows.forEach((row, idx) => {\n            const tableIdx = page * pageSize + idx;\n            this.row2formattedRow.set(row, formattedRows[idx]);\n            this.idx2formattedRow.set(tableIdx, formattedRows[idx]);\n        });\n    }\n    activeItemChanged(activeItem) {\n        if (activeItem === null) {\n            activeItem = this.lastActiveItem;\n        }\n        if (this.allowActiveRow) {\n            this.activeRow = activeItem;\n            this.grid.shadowRoot.querySelectorAll('#items tr').forEach((el) => el.removeAttribute('selected'));\n            this.grid.shadowRoot.activeElement.parentNode.setAttribute('selected', 'true');\n            // set properties\n            if (!this.singleSelect) {\n                this.selectedIndex = activeItem ? activeItem[this.rowIndexPropertyName] : undefined;\n                this.selectedValue = activeItem ? activeItem[this.rowPropertyName] : undefined;\n                this.grid.shadowRoot.activeElement.parentNode.setAttribute('selected', 'true');\n            }\n        }\n        this.lastActiveItem = activeItem;\n        // single select mode\n        if (this.singleSelect && activeItem) {\n            // select clicked item or deselect it if it was previously selected\n            if (this.grid.selectedItems[0] === activeItem) {\n                this.grid.deselectItem(activeItem);\n            }\n            else {\n                // only one can be selected in single select mode\n                this.grid.selectedItems = [];\n                this.grid.selectItem(activeItem);\n            }\n            // set properties\n            this.selectedIndex = this.grid.selectedItems[0] ? activeItem[this.rowIndexPropertyName] : undefined;\n            this.selectedValue = this.grid.selectedItems[0] ? activeItem[this.rowPropertyName] : undefined;\n            return;\n        }\n    }\n    singleSelectChanged() {\n        // reset multi select if someone turned on single select\n        if (this.singleSelect) {\n            this.multiSelect = false;\n            this.selectedIndexes = [];\n            this.selectedValues = [];\n        }\n        this.grid.selectedItems = [];\n    }\n    multiSelectChanged() {\n        // reset single select if someone turned on single select\n        if (this.multiSelect) {\n            // reset selectedIndex and selectedValue\n            this.singleSelect = false;\n            this.selectedIndex = undefined;\n            this.selectedValue = undefined;\n        }\n        this.grid.selectedItems = [];\n    }\n    selectedValueChanged() {\n        if (this.multiSelect) {\n            return;\n        }\n        this.grid.selectedItems = [];\n        // if invalid value or undefined just return\n        if (!this.singleSelect || !this.selectedValue) {\n            return;\n        }\n        // selectItem ignores undefined values\n        this.grid.selectItem(this.row2formattedRow.get(this.selectedValue));\n        // sync index\n        this.selectedIndex = this.row2formattedRow.get(this.selectedValue)[this.rowIndexPropertyName];\n    }\n    selectedIndexChanged() {\n        if (this.multiSelect) {\n            return;\n        }\n        // deselect everything\n        this.grid.selectedItems = [];\n        // if invalid value or undefined just return\n        if (!this.singleSelect || typeof this.selectedIndex !== 'number') {\n            return;\n        }\n        // selectItem ignores undefined values\n        this.grid.selectItem(this.idx2formattedRow.get(this.selectedIndex));\n        // properly set selected value\n        this.selectedValue = this.idx2formattedRow.get(this.selectedIndex)[this.rowPropertyName];\n    }\n    selectedValuesChanged() {\n        this.doLoadGridTask().then(() => {\n            this.refreshSelectedValues();\n            if (!this.isLazyLoading && !this.treeColumn) {\n                this.headerCheckboxState();\n            }\n        });\n    }\n    refreshSelectedValues() {\n        if (!this.multiSelect || !Array.isArray(this.selectedValues)) {\n            return;\n        }\n        // deselect everything\n        this.grid.selectedItems = [];\n        // selectItem ignores undefined values\n        this.selectedValues.forEach((value) => this.grid.selectItem(this.row2formattedRow.get(value)));\n        // compare if already set\n        const selectedIndexes = this.selectedValues.map((value) => {\n            return this.row2formattedRow.get(value)[this.rowIndexPropertyName];\n        });\n        if (this.selectedIndexes.length !== selectedIndexes.length) {\n            this.selectedIndexes = selectedIndexes;\n            return;\n        }\n        for (const idx in selectedIndexes) {\n            if (selectedIndexes[idx] !== this.selectedIndexes[idx]) {\n                this.selectedIndexes = selectedIndexes;\n                return;\n            }\n        }\n    }\n    selectedIndexesChanged() {\n        this.doLoadGridTask().then(() => {\n            this.refreshSelectedIndexes();\n            if (!this.isLazyLoading && !this.treeColumn) {\n                this.headerCheckboxState();\n            }\n        });\n    }\n    refreshSelectedIndexes() {\n        if (!this.multiSelect || !Array.isArray(this.selectedIndexes)) {\n            return;\n        }\n        // deselect everything\n        this.grid.selectedItems = [];\n        // selectItem ignores undefined values\n        this.selectedIndexes.forEach((idx) => this.grid.selectItem(this.idx2formattedRow.get(idx)));\n        // compare if already set\n        const selectedValues = this.selectedIndexes.map((idx) => {\n            return this.idx2formattedRow.get(idx)[this.rowPropertyName];\n        });\n        if (this.selectedValues.length !== selectedValues.length) {\n            this.selectedValues = selectedValues;\n            return;\n        }\n        for (const idx in selectedValues) {\n            if (selectedValues[idx] !== this.selectedValues[idx]) {\n                this.selectedValues = selectedValues;\n                return;\n            }\n        }\n    }\n}\ncustomElements.define(AvlDatatableImpl.is, AvlDatatableImpl);\n\n//# sourceMappingURL=avl-datatable.js.map\n","import { PolymerElement } from '@polymer/polymer';\nexport class OrderImpl {\n    constructor(path, ascending) {\n        this.path = path;\n        this.ascending = ascending;\n    }\n}\nexport class VaadinGrid extends PolymerElement {\n}\n\n//# sourceMappingURL=avl-datatable.models.js.map\n","export class Column {\n    constructor(caption) {\n        this.caption = caption;\n    }\n}\nexport class LeafColumn extends Column {\n    constructor(caption, valueField, type, sortable, filterable, flexWidth, width, formatter, defaultStyle, headerIcon, headerImage, hidden, numberOptions, dateTimeOptions, menuItems, doNotFollowLinks, disabled, sortDirection, filterKey) {\n        super(caption);\n        this.caption = caption;\n        this.valueField = valueField;\n        this.type = type;\n        this.sortable = sortable;\n        this.filterable = filterable;\n        this.flexWidth = flexWidth;\n        this.width = width;\n        this.formatter = formatter;\n        this.defaultStyle = defaultStyle;\n        this.headerIcon = headerIcon;\n        this.headerImage = headerImage;\n        this.hidden = hidden;\n        this.numberOptions = numberOptions;\n        this.dateTimeOptions = dateTimeOptions;\n        this.menuItems = menuItems;\n        this.doNotFollowLinks = doNotFollowLinks;\n        this.disabled = disabled;\n        this.sortDirection = sortDirection;\n        this.filterKey = filterKey;\n    }\n}\nexport class GroupColumn extends Column {\n    constructor(caption, childColumns) {\n        super(caption);\n        this.caption = caption;\n        this.childColumns = childColumns;\n    }\n}\nexport var ColumnType;\n(function (ColumnType) {\n    ColumnType[\"Text\"] = \"Text\";\n    ColumnType[\"Number\"] = \"Number\";\n    ColumnType[\"Date\"] = \"Date\";\n    ColumnType[\"Icon\"] = \"Icon\";\n    ColumnType[\"Image\"] = \"Image\";\n    ColumnType[\"Led\"] = \"Led\";\n    ColumnType[\"Checkbox\"] = \"Checkbox\";\n    ColumnType[\"Link\"] = \"Link\";\n    ColumnType[\"Button\"] = \"Button\";\n    ColumnType[\"IconButton\"] = \"IconButton\";\n    ColumnType[\"IconText\"] = \"IconText\";\n    ColumnType[\"OverflowMenu\"] = \"OverflowMenu\";\n})(ColumnType || (ColumnType = {}));\nexport function isLeafColumn(column) {\n    return !!column.valueField;\n}\nexport function isGroupColumn(column) {\n    return !!column.childColumns;\n}\n\n//# sourceMappingURL=column-definitions.js.map\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nconst $_documentContainer = html `<dom-module id=\"material-grid\" theme-for=\"vaadin-grid\">\r\n  <template>\r\n    <style>\r\n      /* From: https://github.com/vaadin/vaadin-material-theme */\r\n\r\n      :host {\r\n        font-family: Roboto, sans-serif;\r\n      }\r\n\r\n      [part~=\"body-cell\"] {\r\n        height: var(--avl-datatable-row-height, 48px);\r\n      }\r\n\r\n      [part~=\"header-cell\"] {\r\n        height: 48px;\r\n      }\r\n\r\n      [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\r\n        padding: 12px 24px;\r\n      }\r\n\r\n      [part~=\"details-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n        padding: 14px 16px;\r\n      }\r\n\r\n      [part~=\"header-cell\"],\r\n      [part~=\"footer-cell\"] {\r\n        background-color: var(--avl-datatable-row-background-color);\r\n        color: var(--avl-datatable-column-header-color); \r\n        font-size: 14px;\r\n        font-weight: normal;\r\n      }\r\n\r\n      [part~=\"header-cell\"] {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      /* Header and footer divider between body rows */\r\n\r\n      [part~=\"body-cell\"],\r\n      [part~=\"details-cell\"],\r\n      [part~=\"row\"]:last-child > [part~=\"header-cell\"] {\r\n        border-bottom: 1px solid var(--avl-datatable-divider-color);\r\n      }\r\n\r\n      [part~=\"row\"]:first-child > [part~=\"footer-cell\"] {\r\n        border-top: 1px solid var(--avl-datatable-divider-color);\r\n      }\r\n\r\n      /* Body rows/cells */\r\n\r\n      [part~=\"body-cell\"] {\r\n        background-color: var(--avl-datatable-row-background-color);\r\n        overflow: hidden;\r\n      }\r\n\r\n      [part~=\"row\"]:hover > [part~=\"body-cell\"] {\r\n        background: var(--avl-datatable-row-hover-color);\r\n      }\r\n\r\n      /* Selected row */\r\n      [part~=\"body-cell\"]::before {\r\n        content: \"\";\r\n        pointer-events: none;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: var(--avl-datatable-row-selection-color);\r\n        opacity: 0;\r\n        transition: opacity 0.1s cubic-bezier(0.4, 0.0, 0.2, 0.1);\r\n      }\r\n\r\n      :host(:not([reordering])) [part~=\"row\"][selected] > [part~=\"body-cell\"]::before {\r\n        opacity: 0.2;\r\n      }\r\n\r\n      [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n        /* NOTE(platosha): Raise cell content above background cell pseudo elements */\r\n        position: relative;\r\n      }\r\n\r\n      /* Column reordering */\r\n\r\n      :host([reordering]) [part~=\"cell\"] {\r\n        background: var(--material-secondary-background-color);\r\n      }\r\n\r\n      :host([reordering]) [part~=\"cell\"][reorder-status=\"allowed\"] {\r\n        background: var(--material-background-color);\r\n      }\r\n\r\n      :host([reordering]) [part~=\"cell\"][reorder-status=\"dragging\"] {\r\n        background: var(--material-background-color);\r\n      }\r\n\r\n      /* Frozen columns */\r\n\r\n      [part~=\"cell\"][last-frozen] {\r\n        border-right: 1px solid var(--avl-datatable-divider-color);\r\n      }\r\n\r\n      /* Column resizing */\r\n\r\n      :host(:not([theme~=\"column-dividers\"])) [part~=\"cell\"]:not([last-frozen]) [part=\"resize-handle\"] {\r\n        border-right: 1px solid var(--avl-datatable-divider-color);\r\n      }\r\n\r\n      /* Keyboard navigation */\r\n\r\n      [part~=\"cell\"]:focus {\r\n        outline: none;\r\n      }\r\n\r\n      :host([navigating]) [part~=\"cell\"]:focus {\r\n        box-shadow: inset 0 0 0 1px var(--avl-datatable-column-header-color);\r\n      }\r\n    </style>\r\n  </template>\r\n</dom-module>`;\ndocument.head.appendChild($_documentContainer.content);\n\r\n//# sourceMappingURL=vaadin-grid-material-theme.css.js.map\r\n","import '@vaadin/vaadin-material-styles/color.js';\nimport '@vaadin/vaadin-material-styles/font-icons.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nconst $_documentContainer = html `<dom-module id=\"material-grid-sorter\" theme-for=\"vaadin-grid-sorter\">\r\n  <template>\r\n    <style>\r\n      :host {\r\n        justify-content: flex-start;\r\n        height: 100%;\r\n        align-items: center;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        user-select: none;\r\n      }\r\n\r\n      :host([direction]) {\r\n        color: var(--material-body-text-color);\r\n      }\r\n\r\n      [part=\"indicators\"] {\r\n        order: -1;\r\n      }\r\n\r\n      [part=\"indicators\"]::before {\r\n        display: inline-block;\r\n        width: 24px;\r\n        font-family: \"material-icons\";\r\n        font-size: 18px;\r\n        line-height: 18px;\r\n        transition: .1s opacity cubic-bezier(.4, 0, .2, .1), .1s width cubic-bezier(.4, 0, .2, .1);\r\n        opacity: .5;\r\n      }\r\n\r\n      :host(:not([direction])) [part=\"indicators\"]::before {\r\n        content: var(--material-icons-arrow-upward);\r\n        width: 0;\r\n        opacity: 0;\r\n      }\r\n\r\n      :host([direction]) [part=\"indicators\"]::before {\r\n        opacity: 1;\r\n      }\r\n\r\n      :host([direction=\"asc\"]) [part=\"indicators\"]::before {\r\n        content: var(--material-icons-arrow-upward);\r\n      }\r\n\r\n      :host([direction=\"desc\"]) [part=\"indicators\"]::before {\r\n        content: var(--material-icons-arrow-downward);\r\n      }\r\n\r\n      :host(:hover) [part=\"indicators\"]::before {\r\n        width: 24px;\r\n        opacity: 1;\r\n      }\r\n\r\n      [part=\"order\"] {\r\n        right: 4px;\r\n        top: -8px;\r\n        font-size: 10px;\r\n      }\r\n    </style>\r\n  </template>\r\n</dom-module>`;\ndocument.head.appendChild($_documentContainer.content);\n\r\n//# sourceMappingURL=vaadin-grid-sorter-material-theme.css.js.map\r\n","export * from './src/avl-dataprovider';\r\n","/**\r\n * Name of the key used to set global filter value in filters map.\r\n */\r\nexport const globalFilterKey = 'globalFilter';\r\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {resolveUrl} from '@polymer/polymer/lib/utils/resolve-url.js';\n\n/**\n`iron-image` is an element for displaying an image that provides useful sizing and\npreloading options not found on the standard `<img>` tag.\n\nThe `sizing` option allows the image to be either cropped (`cover`) or\nletterboxed (`contain`) to fill a fixed user-size placed on the element.\n\nThe `preload` option prevents the browser from rendering the image until the\nimage is fully loaded.  In the interim, either the element's CSS `background-color`\ncan be be used as the placeholder, or the `placeholder` property can be\nset to a URL (preferably a data-URI, for instant rendering) for an\nplaceholder image.\n\nThe `fade` option (only valid when `preload` is set) will cause the placeholder\nimage/color to be faded out once the image is rendered.\n\nExamples:\n\n  Basically identical to `<img src=\"...\">` tag:\n\n    <iron-image src=\"http://lorempixel.com/400/400\"></iron-image>\n\n  Will letterbox the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"contain\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will crop the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"cover\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show light-gray background until the image loads:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show a base-64 encoded placeholder image until the image loads:\n\n    <iron-image style=\"width:400px; height:400px;\" placeholder=\"data:image/gif;base64,...\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will fade the light-gray background out once the image is loaded:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload fade src=\"http://lorempixel.com/600/400\"></iron-image>\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-image-placeholder` | Mixin applied to #placeholder | `{}`\n`--iron-image-width` | Sets the width of the wrapped image | `auto`\n`--iron-image-height` | Sets the height of the wrapped image | `auto`\n\n@group Iron Elements\n@element iron-image\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        overflow: hidden;\n        position: relative;\n      }\n\n      #baseURIAnchor {\n        display: none;\n      }\n\n      #sizedImgDiv {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        display: none;\n      }\n\n      #img {\n        display: block;\n        width: var(--iron-image-width, auto);\n        height: var(--iron-image-height, auto);\n      }\n\n      :host([sizing]) #sizedImgDiv {\n        display: block;\n      }\n\n      :host([sizing]) #img {\n        display: none;\n      }\n\n      #placeholder {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        background-color: inherit;\n        opacity: 1;\n\n        @apply --iron-image-placeholder;\n      }\n\n      #placeholder.faded-out {\n        transition: opacity 0.5s linear;\n        opacity: 0;\n      }\n    </style>\n\n    <a id=\"baseURIAnchor\" href=\"#\"></a>\n    <div id=\"sizedImgDiv\" role=\"img\" hidden$=\"[[_computeImgDivHidden(sizing)]]\" aria-hidden$=\"[[_computeImgDivARIAHidden(alt)]]\" aria-label$=\"[[_computeImgDivARIALabel(alt, src)]]\"></div>\n    <img id=\"img\" alt$=\"[[alt]]\" hidden$=\"[[_computeImgHidden(sizing)]]\" crossorigin$=\"[[crossorigin]]\" on-load=\"_imgOnLoad\" on-error=\"_imgOnError\">\n    <div id=\"placeholder\" hidden$=\"[[_computePlaceholderHidden(preload, fade, loading, loaded)]]\" class$=\"[[_computePlaceholderClassName(preload, fade, loading, loaded)]]\"></div>\n`,\n\n  is: 'iron-image',\n\n  properties: {\n    /**\n     * The URL of an image.\n     */\n    src: {type: String, value: ''},\n\n    /**\n     * A short text alternative for the image.\n     */\n    alt: {type: String, value: null},\n\n    /**\n     * CORS enabled images support:\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n     */\n    crossorigin: {type: String, value: null},\n\n    /**\n     * When true, the image is prevented from loading and any placeholder is\n     * shown.  This may be useful when a binding to the src property is known to\n     * be invalid, to prevent 404 requests.\n     */\n    preventLoad: {type: Boolean, value: false},\n\n    /**\n     * Sets a sizing option for the image.  Valid values are `contain` (full\n     * aspect ratio of the image is contained within the element and\n     * letterboxed) or `cover` (image is cropped in order to fully cover the\n     * bounds of the element), or `null` (default: image takes natural size).\n     */\n    sizing: {type: String, value: null, reflectToAttribute: true},\n\n    /**\n     * When a sizing option is used (`cover` or `contain`), this determines\n     * how the image is aligned within the element bounds.\n     */\n    position: {type: String, value: 'center'},\n\n    /**\n     * When `true`, any change to the `src` property will cause the\n     * `placeholder` image to be shown until the new image has loaded.\n     */\n    preload: {type: Boolean, value: false},\n\n    /**\n     * This image will be used as a background/placeholder until the src image\n     * has loaded.  Use of a data-URI for placeholder is encouraged for instant\n     * rendering.\n     */\n    placeholder: {type: String, value: null, observer: '_placeholderChanged'},\n\n    /**\n     * When `preload` is true, setting `fade` to true will cause the image to\n     * fade into place.\n     */\n    fade: {type: Boolean, value: false},\n\n    /**\n     * Read-only value that is true when the image is loaded.\n     */\n    loaded: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that tracks the loading state of the image when the\n     * `preload` option is used.\n     */\n    loading: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that indicates that the last set `src` failed to load.\n     */\n    error: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Can be used to set the width of image (e.g. via binding); size may also\n     * be set via CSS.\n     */\n    width: {observer: '_widthChanged', type: Number, value: null},\n\n    /**\n     * Can be used to set the height of image (e.g. via binding); size may also\n     * be set via CSS.\n     *\n     * @attribute height\n     * @type number\n     * @default null\n     */\n    height: {observer: '_heightChanged', type: Number, value: null},\n  },\n\n  observers: [\n    '_transformChanged(sizing, position)',\n    '_loadStateObserver(src, preventLoad)'\n  ],\n\n  created: function() {\n    this._resolvedSrc = '';\n  },\n\n  _imgOnLoad: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this._setLoading(false);\n    this._setLoaded(true);\n    this._setError(false);\n  },\n\n  _imgOnError: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    this._setLoading(false);\n    this._setLoaded(false);\n    this._setError(true);\n  },\n\n  _computePlaceholderHidden: function() {\n    return !this.preload || (!this.fade && !this.loading && this.loaded);\n  },\n\n  _computePlaceholderClassName: function() {\n    return (this.preload && this.fade && !this.loading && this.loaded) ?\n        'faded-out' :\n        '';\n  },\n\n  _computeImgDivHidden: function() {\n    return !this.sizing;\n  },\n\n  _computeImgDivARIAHidden: function() {\n    return this.alt === '' ? 'true' : undefined;\n  },\n\n  _computeImgDivARIALabel: function() {\n    if (this.alt !== null) {\n      return this.alt;\n    }\n\n    // Polymer.ResolveUrl.resolveUrl will resolve '' relative to a URL x to\n    // that URL x, but '' is the default for src.\n    if (this.src === '') {\n      return '';\n    }\n\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    var resolved = this._resolveSrc(this.src);\n    // Remove query parts, get file name.\n    return resolved.replace(/[?|#].*/g, '').split('/').pop();\n  },\n\n  _computeImgHidden: function() {\n    return !!this.sizing;\n  },\n\n  _widthChanged: function() {\n    this.style.width = isNaN(this.width) ? this.width : this.width + 'px';\n  },\n\n  _heightChanged: function() {\n    this.style.height = isNaN(this.height) ? this.height : this.height + 'px';\n  },\n\n  _loadStateObserver: function(src, preventLoad) {\n    var newResolvedSrc = this._resolveSrc(src);\n    if (newResolvedSrc === this._resolvedSrc) {\n      return;\n    }\n\n    this._resolvedSrc = '';\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    if (src === '' || preventLoad) {\n      this._setLoading(false);\n      this._setLoaded(false);\n      this._setError(false);\n    } else {\n      this._resolvedSrc = newResolvedSrc;\n      this.$.img.src = this._resolvedSrc;\n      this.$.sizedImgDiv.style.backgroundImage =\n          'url(\"' + this._resolvedSrc + '\")';\n\n      this._setLoading(true);\n      this._setLoaded(false);\n      this._setError(false);\n    }\n  },\n\n  _placeholderChanged: function() {\n    this.$.placeholder.style.backgroundImage =\n        this.placeholder ? 'url(\"' + this.placeholder + '\")' : '';\n  },\n\n  _transformChanged: function() {\n    var sizedImgDivStyle = this.$.sizedImgDiv.style;\n    var placeholderStyle = this.$.placeholder.style;\n\n    sizedImgDivStyle.backgroundSize = placeholderStyle.backgroundSize =\n        this.sizing;\n\n    sizedImgDivStyle.backgroundPosition = placeholderStyle.backgroundPosition =\n        this.sizing ? this.position : '';\n\n    sizedImgDivStyle.backgroundRepeat = placeholderStyle.backgroundRepeat =\n        this.sizing ? 'no-repeat' : '';\n  },\n\n  _resolveSrc: function(testSrc) {\n    var resolved = resolveUrl(testSrc, this.$.baseURIAnchor.href);\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    if (resolved.length >= 2 && resolved[0] === '/' && resolved[1] !== '/') {\n      // In IE location.origin might not work\n      // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n      resolved = (location.origin || location.protocol + '//' + location.host) +\n          resolved;\n    }\n    return resolved;\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-checkbox>` is a Web Component for customized checkboxes.\n *\n * ```html\n * <vaadin-checkbox>\n *   Make my profile visible\n * </vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `checkbox`        | The wrapper element for the native <input type=\"checkbox\">\n * `label`           | The wrapper element in which the component's children, namely the label, is slotted\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|--------------\n * `active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`   | Set when the checkbox is disabled. | `:host`\n * `focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`    | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n * `checked` | Set when the checkbox is checked. | `:host`\n * `empty` | Set when there is no label provided. | `label`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n * @demo demo/index.html\n */\nclass CheckboxElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        display: inline-flex;\n        align-items: baseline;\n        outline: none;\n      }\n\n      [part=\"checkbox\"] {\n        position: relative;\n        display: inline-block;\n        flex: none;\n      }\n\n      input[type=\"checkbox\"] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n        margin: 0;\n      }\n\n      :host([disabled]) {\n        -webkit-tap-highlight-color: transparent;\n      }\n    </style>\n\n    <label>\n      <span part=\"checkbox\">\n        <input type=\"checkbox\" checked=\"{{checked::change}}\" disabled\\$=\"[[disabled]]\" indeterminate=\"{{indeterminate::change}}\" role=\"presentation\" tabindex=\"-1\">\n      </span>\n\n      <span part=\"label\">\n        <slot></slot>\n      </span>\n    </label>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get version() {\n    return '2.5.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        observer: '_indeterminateChanged',\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * The value given to the data submitted with the checkbox's name to the server when the control is inside a form.\n       */\n      value: {\n        type: String,\n        value: 'on'\n      },\n\n      /** @private */\n      _nativeCheckbox: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    /**\n     * @type {string}\n     * Name of the element.\n     */\n    this.name;\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'checkbox');\n\n    this._nativeCheckbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n\n    this.addEventListener('click', this._handleClick.bind(this));\n\n    this._addActiveListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot.querySelector('[part~=\"label\"]').querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return nodes.length === 0 ||\n          (nodes.length == 1\n          && nodes[0].nodeType == Node.TEXT_NODE\n          && nodes[0].textContent.trim() === '');\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    if (this.indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', Boolean(checked));\n    }\n  }\n\n  /** @private */\n  _indeterminateChanged(indeterminate) {\n    if (indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', this.checked);\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    // DOWN\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (this.__interactionsAllowed(e)) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    // UP\n    this._addEventListenerToNode(this, 'up', () => this.removeAttribute('active'));\n\n    // KEYDOWN\n    this.addEventListener('keydown', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    // KEYUP\n    this.addEventListener('keyup', e => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this._toggleChecked();\n        this.removeAttribute('active');\n\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /**\n   * True if users' interactions (mouse or keyboard)\n   * should toggle the checkbox\n   */\n  __interactionsAllowed(e) {\n    if (this.disabled) {\n      return false;\n    }\n\n    // https://github.com/vaadin/vaadin-checkbox/issues/63\n    if (e.target.localName === 'a') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  _handleClick(e) {\n    if (this.__interactionsAllowed(e)) {\n      if (!this.indeterminate) {\n        if (e.composedPath()[0] !== this._nativeCheckbox) {\n          e.preventDefault();\n          this._toggleChecked();\n        }\n      } else {\n        /*\n         * Required for IE 11 and Edge.\n         * See issue here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7344418/\n         */\n        this.indeterminate = false;\n        e.preventDefault();\n        this._toggleChecked();\n      }\n    }\n  }\n\n  /** @protected */\n  _toggleChecked() {\n    this.checked = !this.checked;\n    this.dispatchEvent(new CustomEvent('change', {composed: false, bubbles: true}));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(CheckboxElement.is, CheckboxElement);\n\nexport { CheckboxElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener(\n  'keydown',\n  () => {\n    keyboardActive = true;\n  },\n  {capture: true}\n);\n\nwindow.addEventListener(\n  'mousedown',\n  () => {\n    keyboardActive = false;\n  },\n  {capture: true}\n);\n\n/**\n * A private mixin to avoid problems with dynamic properties and Polymer Analyzer.\n * No need to expose these properties in the API docs.\n * @polymerMixin\n * @private\n */\nconst TabIndexMixin = superClass => class VaadinTabIndexMixin extends superClass {\n  static get properties() {\n    var properties = {\n      /**\n       * Internal property needed to listen to `tabindex` attribute changes.\n       *\n       * For changing the tabindex of this component use the native `tabIndex` property.\n       * @private\n       */\n      tabindex: {\n        type: Number,\n        value: 0,\n        reflectToAttribute: true,\n        observer: '_tabindexChanged'\n      }\n    };\n\n    if (window.ShadyDOM) {\n      // ShadyDOM browsers need the `tabIndex` in order to notify when the user changes it programmatically.\n      properties['tabIndex'] = properties.tabindex;\n    }\n\n    return properties;\n  }\n};\n\n/**\n * Polymer.IronControlState is not a proper 2.0 class, also, its tabindex\n * implementation fails in the shadow dom, so we have this for vaadin elements.\n * @polymerMixin\n */\nexport const ControlStateMixin = superClass => class VaadinControlStateMixin extends TabIndexMixin(superClass) {\n  static get properties() {\n    return {\n      /**\n       * Specify that this control should have input focus when the page loads.\n       */\n      autofocus: {\n        type: Boolean\n      },\n\n      /**\n       * Stores the previous value of tabindex attribute of the disabled element\n       * @private\n       */\n      _previousTabIndex: {\n        type: Number\n      },\n\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * @private\n       */\n      _isShiftTabbing: {\n        type: Boolean\n      }\n    };\n  }\n\n  /**\n   * @protected\n   */\n  ready() {\n    this.addEventListener('focusin', e => {\n      if (e.composedPath()[0] === this) {\n        // Only focus if the focus is received from somewhere outside\n        if (!this.contains(e.relatedTarget)) {\n          this._focus();\n        }\n      } else if (e.composedPath().indexOf(this.focusElement) !== -1 && !this.disabled) {\n        this._setFocused(true);\n      }\n    });\n    this.addEventListener('focusout', e => this._setFocused(false));\n\n    // In super.ready() other 'focusin' and 'focusout' listeners might be\n    // added, so we call it after our own ones to ensure they execute first.\n    // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n    // input field on iOS after “Done” is pressed.\n    super.ready();\n\n    // This fixes the bug in Firefox 61 (https://bugzilla.mozilla.org/show_bug.cgi?id=1472887)\n    // where focusout event does not go out of shady DOM because composed property in the event is not true\n    const ensureEventComposed = e => {\n      if (!e.composed) {\n        e.target.dispatchEvent(new CustomEvent(e.type, {\n          bubbles: true,\n          composed: true,\n          cancelable: false\n        }));\n      }\n    };\n    this.shadowRoot.addEventListener('focusin', ensureEventComposed);\n    this.shadowRoot.addEventListener('focusout', ensureEventComposed);\n\n    this.addEventListener('keydown', e => {\n      if (!e.defaultPrevented && e.keyCode === 9) {\n        if (e.shiftKey) {\n          // Flag is checked in _focus event handler.\n          this._isShiftTabbing = true;\n          HTMLElement.prototype.focus.apply(this);\n          this._setFocused(false);\n          // Event handling in IE is asynchronous and the flag is removed asynchronously as well\n          setTimeout(() => this._isShiftTabbing = false, 0);\n        } else {\n          // Workaround for FF63-65 bug that causes the focus to get lost when\n          // blurring a slotted component with focusable shadow root content\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1528686\n          // TODO: Remove when safe\n          const firefox = window.navigator.userAgent.match(/Firefox\\/(\\d\\d\\.\\d)/);\n          if (firefox\n            && parseFloat(firefox[1]) >= 63\n            && parseFloat(firefox[1]) < 66\n            && this.parentNode\n            && this.nextSibling) {\n            const fakeTarget = document.createElement('input');\n            fakeTarget.style.position = 'absolute';\n            fakeTarget.style.opacity = '0';\n            fakeTarget.tabIndex = this.tabIndex;\n\n            this.parentNode.insertBefore(fakeTarget, this.nextSibling);\n            fakeTarget.focus();\n            fakeTarget.addEventListener('focusout', () => this.parentNode.removeChild(fakeTarget));\n          }\n        }\n\n      }\n    });\n\n    if (this.autofocus && !this.disabled) {\n      window.requestAnimationFrame(() => {\n        this._focus();\n        this._setFocused(true);\n        this.setAttribute('focus-ring', '');\n      });\n    }\n  }\n\n  /**\n   * @protected\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // in non-Chrome browsers, blur does not fire on the element when it is disconnected.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('focused')) {\n      this._setFocused(false);\n    }\n  }\n\n  /**\n   * @param {boolean} focused\n   * @protected\n   */\n  _setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n    } else {\n      this.removeAttribute('focused');\n    }\n\n    // focus-ring is true when the element was focused from the keyboard.\n    // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n    if (focused && keyboardActive) {\n      this.setAttribute('focus-ring', '');\n    } else {\n      this.removeAttribute('focus-ring');\n    }\n  }\n\n  /**\n   * Any element extending this mixin is required to implement this getter.\n   * It returns the actual focusable element in the component.\n   * @return {Element | null | undefined}\n   */\n  get focusElement() {\n    window.console.warn(`Please implement the 'focusElement' property in <${this.localName}>`);\n    return this;\n  }\n\n  /**\n   * @protected\n   */\n  _focus() {\n    if (!this.focusElement || this._isShiftTabbing) {\n      return;\n    }\n\n    this.focusElement.focus();\n    this._setFocused(true);\n  }\n\n  /**\n   * Moving the focus from the host element causes firing of the blur event what leads to problems in IE.\n   * @private\n   */\n  focus() {\n    if (!this.focusElement || this.disabled) {\n      return;\n    }\n\n    this.focusElement.focus();\n    this._setFocused(true);\n  }\n\n  /**\n   * Native bluring in the host element does nothing because it does not have the focus.\n   * In chrome it works, but not in FF.\n   * @private\n   */\n  blur() {\n    if (!this.focusElement) {\n      return;\n    }\n    this.focusElement.blur();\n    this._setFocused(false);\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @private\n   */\n  _disabledChanged(disabled) {\n    this.focusElement.disabled = disabled;\n    if (disabled) {\n      this.blur();\n      this._previousTabIndex = this.tabindex;\n      this.tabindex = -1;\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      if (typeof this._previousTabIndex !== 'undefined') {\n        this.tabindex = this._previousTabIndex;\n      }\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  /**\n   * @param {number | null | undefined} tabindex\n   * @private\n   */\n  _tabindexChanged(tabindex) {\n    if (tabindex !== undefined) {\n      this.focusElement.tabIndex = tabindex;\n    }\n\n    if (this.disabled && this.tabindex) {\n      // If tabindex attribute was changed while checkbox was disabled\n      if (this.tabindex !== -1) {\n        this._previousTabIndex = this.tabindex;\n      }\n      this.tabindex = tabindex = undefined;\n    }\n\n    if (window.ShadyDOM) {\n      this.setProperties({tabIndex: tabindex, tabindex: tabindex});\n    }\n  }\n\n  /**\n   * @protected\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n};\n","const DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n","/**\n@license\nCopyright (c) 2020 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * Helper that provides a set of functions for RTL.\n */\nclass DirHelper {\n  /**\n   * Get the scroll type in the current browser view.\n   *\n   * @return {string} the scroll type. Possible values are `default|reverse|negative`\n   */\n  static detectScrollType() {\n    const dummy = document.createElement('div');\n    dummy.textContent = 'ABCD';\n    dummy.dir = 'rtl';\n    dummy.style.fontSize = '14px';\n    dummy.style.width = '4px';\n    dummy.style.height = '1px';\n    dummy.style.position = 'absolute';\n    dummy.style.top = '-1000px';\n    dummy.style.overflow = 'scroll';\n    document.body.appendChild(dummy);\n\n    let cachedType = 'reverse';\n    if (dummy.scrollLeft > 0) {\n      cachedType = 'default';\n    } else {\n      dummy.scrollLeft = 2;\n      if (dummy.scrollLeft < 2) {\n        cachedType = 'negative';\n      }\n    }\n    document.body.removeChild(dummy);\n    return cachedType;\n  }\n\n  /**\n   * Get the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @return {number} the scrollLeft value.\n  */\n  static getNormalizedScrollLeft(scrollType, direction, element) {\n    const {scrollLeft} = element;\n    if (direction !== 'rtl' || !scrollType) {\n      return scrollLeft;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        return element.scrollWidth - element.clientWidth + scrollLeft;\n      case 'reverse':\n        return element.scrollWidth - element.clientWidth - scrollLeft;\n    }\n    return scrollLeft;\n  }\n\n  /**\n   * Set the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @param {number} scrollLeft the scrollLeft value to be set\n   */\n  static setNormalizedScrollLeft(scrollType, direction, element, scrollLeft) {\n    if (direction !== 'rtl' || !scrollType) {\n      element.scrollLeft = scrollLeft;\n      return;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n        break;\n      case 'reverse':\n        element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n        break;\n      default:\n        element.scrollLeft = scrollLeft;\n        break;\n    }\n  }\n}\n\nexport { DirHelper };\n","import { DirHelper } from './vaadin-dir-helper.js';\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\nconst directionUpdater = function() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach(element => {\n    alignDirs(element, documentDir);\n  });\n};\n\nlet scrollType;\n\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, {attributes: true, attributeFilter: ['dir']});\n\nconst alignDirs = function(element, documentDir) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else {\n    element.removeAttribute('dir');\n  }\n};\n\nconst getDocumentDir = function() {\n  return document.documentElement.getAttribute('dir');\n};\n\n/**\n * @polymerMixin\n */\nexport const DirMixin = superClass => class VaadinDirMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      dir: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    if (!scrollType) {\n      scrollType = DirHelper.detectScrollType();\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.hasAttribute('dir')) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir());\n    }\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name !== 'dir') {\n      return;\n    }\n\n    // New value equals to the document direction and the element is not subscribed to the changes\n    const newValueEqlDocDir = newValue === getDocumentDir() && directionSubscribers.indexOf(this) === -1;\n    // Value was emptied and the element is not subscribed to the changes\n    const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n    // New value is different and the old equals to document direction and the element is not subscribed to the changes\n    const newDiffValue = newValue !== getDocumentDir() && oldValue === getDocumentDir();\n\n    if (newValueEqlDocDir || newValueEmptied) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir());\n    } else if (newDiffValue) {\n      this.__subscribe(false);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__subscribe(false);\n    this.removeAttribute('dir');\n  }\n\n  /** @private */\n  __subscribe(push = true) {\n    if (push) {\n      directionSubscribers.indexOf(this) === -1 &&\n        directionSubscribers.push(this);\n    } else {\n      directionSubscribers.indexOf(this) > -1 &&\n        directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @return {number}\n   * @protected\n   */\n  __getNormalizedScrollLeft(element) {\n    return DirHelper.getNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {number} scrollLeft\n   * @protected\n   */\n  __setNormalizedScrollLeft(element, scrollLeft) {\n    return DirHelper.setNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element, scrollLeft);\n  }\n};\n","import { idlePeriod } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { enqueueDebouncer } from '@polymer/polymer/lib/utils/flush.js';\n\nimport { DirMixin } from './vaadin-dir-mixin.js';\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\nif (!window.Vaadin) {\n  window['Vaadin'] = {};\n}\n\n/**\n * Array of Vaadin custom element classes that have been finalized.\n */\nwindow['Vaadin'].registrations = window.Vaadin.registrations || [];\n\n// Use the hack to prevent polymer-modulizer from converting to exports\nwindow['Vaadin'].developmentModeCallback = window.Vaadin.developmentModeCallback || {};\nwindow['Vaadin'].developmentModeCallback['vaadin-usage-statistics'] = function() {\n  if (usageStatistics) {\n    usageStatistics();\n  }\n};\n\nlet statsJob;\n\nconst registered = new Set();\n\n/**\n * @polymerMixin\n * @mixes DirMixin\n */\nexport const ElementMixin = superClass => class VaadinElementMixin extends DirMixin(superClass) {\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    const {is} = this;\n\n    // Registers a class prototype for telemetry purposes.\n    if (is && !registered.has(is)) {\n      window.Vaadin.registrations.push(this);\n      registered.add(is);\n\n      if (window.Vaadin.developmentModeCallback) {\n        statsJob = Debouncer.debounce(statsJob,\n          idlePeriod, () => {\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\n          }\n        );\n        enqueueDebouncer(statsJob);\n      }\n    }\n  }\n\n  constructor() {\n    super();\n    if (document.doctype === null) {\n      console.warn(\n        'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.'\n      );\n    }\n  }\n};\n","import './vaadin-grid.js';\nimport './vaadin-grid-column-group.js';\nimport './vaadin-grid-filter.js';\nimport './vaadin-grid-filter-column.js';\nimport './vaadin-grid-sorter.js';\nimport './vaadin-grid-sort-column.js';\nimport './vaadin-grid-selection-column.js';\nimport './vaadin-grid-tree-toggle.js';\nimport './vaadin-grid-tree-column.js';\n\n/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n\nThis is a fork of <iron-list> for <vaadin-grid>'s internal purposes only!\nTo update:\n1. Get the most recent code from https://github.com/PolymerElements/iron-list/\n2. Remove the  <dom-module id=\"iron-list\"> to avoid collisions with actual <iron-list>\n3. Change \"Polymer({\" to \"window.PolymerIronList = Polymer.Class({\" to expose the class\n3.1. Add @namespace\n4. Optional: Remove all properties and functions not needed by <vaadin-grid>\n5. Profit!\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { IronScrollTargetBehavior } from '@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js';\nimport { animationFrame, idlePeriod, microTask } from '@polymer/polymer/lib/utils/async.js';\nimport { Class } from '@polymer/polymer/lib/legacy/class.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { Debouncer, enqueueDebouncer } from '@polymer/polymer/lib/utils/debounce.js';\nvar IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nvar IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nvar DEFAULT_PHYSICAL_COUNT = 3;\nvar ANIMATION_FRAME = animationFrame;\nvar IDLE_TIME = idlePeriod;\nvar MICRO_TASK = microTask;\n\n/**\n * @constructor\n */\nexport const PolymerIronList = Class({\n\n  behaviors: [\n    IronResizableBehavior,\n    IronScrollTargetBehavior\n  ],\n\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is the same as `scrollTop`.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!TemplatizerNode>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A Polymer collection for the items.\n   * @type {?Polymer.Collection}\n   */\n  _collection: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The virtual index of the focused item.\n   */\n  _focusedVirtualIndex: -1,\n\n  /**\n   * The maximum items per row\n   */\n  _itemsPerRow: 1,\n\n  /**\n   * The height of the row in grid layout.\n   */\n  _rowHeight: 0,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    var size = this.grid ? this._physicalRows * this._rowHeight : this._physicalSize;\n    return size - this._viewportHeight;\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    var virtualCount = this._convertIndexToCompleteRow(this._virtualCount);\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._virtualStartVal = val;\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val = val % this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    if (this.grid) {\n      val = val - (val % this._itemsPerRow);\n    }\n    this._physicalStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    var idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      var physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx = this._iterateItems(function(pidx, vidx) {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n\n        if (physicalOffset > this._scrollPosition) {\n          return this.grid ? vidx - (vidx % this._itemsPerRow) : vidx;\n        }\n        // Handle a partially rendered final row in grid mode\n        if (this.grid && this._virtualCount - 1 === vidx) {\n          return vidx - (vidx % this._itemsPerRow);\n        }\n      }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    var idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      if (this.grid) {\n        idx = Math.min(this._virtualCount, this.firstVisibleIndex + this._estRowsInView * this._itemsPerRow - 1);\n      } else {\n        var physicalOffset = this._physicalTop + this._scrollOffset;\n        this._iterateItems(function(pidx, vidx) {\n          if (physicalOffset < this._scrollBottom) {\n            idx = vidx;\n          }\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        });\n      }\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop;\n  },\n\n  attached: function() {\n    this._debounce('_render', this._render, ANIMATION_FRAME);\n    // `iron-resize` is fired when the list is attached if the event is added\n    // before attached causing unnecessary work.\n    this.listen(this, 'iron-resize', '_resizeHandler');\n  },\n\n  detached: function() {\n    this.unlisten(this, 'iron-resize', '_resizeHandler');\n  },\n\n  /**\n   * Invoke this method if you dynamically update the viewport's\n   * size or CSS padding.\n   *\n   * @method updateViewportBoundaries\n   */\n  updateViewportBoundaries: function() {\n    var styles = window.getComputedStyle(this);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.$.items.offsetWidth;\n    this._viewportHeight = this._scrollTargetHeight;\n    this.grid && this._updateGridMetrics();\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function() {\n    var scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    var delta = scrollTop - this._scrollPosition;\n    var isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta = delta - this._scrollOffset;\n      var idxAdjustment = Math.round(delta / this._physicalAverage) * this._itemsPerRow;\n      this._virtualStart = this._virtualStart + idxAdjustment;\n      this._physicalStart = this._physicalStart + idxAdjustment;\n      // Estimate new physical offset.\n      this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage;\n      this._update();\n    } else if (this._physicalCount > 0) {\n      var reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart = this._virtualStart + reusables.indexes.length;\n        this._physicalStart = this._physicalStart + reusables.indexes.length;\n      } else {\n        this._virtualStart = this._virtualStart - reusables.indexes.length;\n        this._physicalStart = this._physicalStart - reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), MICRO_TASK);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function(fromTop) {\n    var ith, offsetContent, physicalItemHeight;\n    var idxs = [];\n    var protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    var virtualStart = this._virtualStart;\n    var virtualEnd = this._virtualEnd;\n    var physicalCount = this._physicalCount;\n    var top = this._physicalTop + this._scrollOffset;\n    var bottom = this._physicalBottom + this._scrollOffset;\n    var scrollTop = this._scrollTop;\n    var scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent = offsetContent - physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top = top + physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top = top - physicalItemHeight;\n        ith = (ith === 0) ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {indexes: idxs, physicalTop: top - this._scrollOffset};\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function(itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._manageFocus();\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        var idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  _isClientFull: function() {\n    return this._scrollBottom != 0 && this._physicalBottom - 1 >= this._scrollBottom &&\n        this._physicalTop <= this._scrollPosition;\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function(count) {\n    var nextPhysicalCount = this._clamp(this._physicalCount + count,\n      DEFAULT_PHYSICAL_COUNT, this._virtualCount - this._virtualStart);\n    nextPhysicalCount = this._convertIndexToCompleteRow(nextPhysicalCount);\n    var delta = nextPhysicalCount - this._physicalCount;\n    var nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      var ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't support it.\n      for (var i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount = this._physicalCount + delta;\n      // Update the physical start if it needs to preserve the model of the focused item.\n      // In this situation, the focused item is currently rendered and its model would\n      // have changed after increasing the pool if the physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd &&\n          this._isIndexRendered(this._focusedVirtualIndex) &&\n          this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd) {\n        this._physicalStart = this._physicalStart + delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(\n          this,\n          nextIncrease\n        ), MICRO_TASK);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is optimal.\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(\n          this,\n          this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)\n        ), IDLE_TIME);\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      var reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart = this._virtualStart + reusables.indexes.length;\n      this._physicalStart = this._physicalStart + reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._collection = this.items && undefined ?\n        undefined.get(this.items) : null;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._removeFocusedItem();\n      this._debounce('_render', this._render, ANIMATION_FRAME);\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function(fn, itemSet) {\n    var pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    var newPhysicalSize = 0;\n    var oldPhysicalSize = 0;\n    var prevAvgCount = this._physicalAverageCount;\n    var prevPhysicalAvg = this._physicalAverage;\n\n    this._iterateItems(function(pidx, vidx) {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    if (this.grid) {\n      this._updateGridMetrics();\n      this._physicalSize = Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n    } else {\n      oldPhysicalSize = (this._itemsPerRow === 1) ?\n        oldPhysicalSize :\n        Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n      this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n      this._itemsPerRow = 1;\n    }\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n        ((prevPhysicalAvg * prevAvgCount) + newPhysicalSize) /\n        this._physicalAverageCount);\n    }\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function() {\n    this._adjustScrollPosition();\n\n    var y = this._physicalTop;\n\n    this._iterateItems(function(pidx, vidx) {\n      this.translate3d(0, y + 'px', 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n\n  _getPhysicalSizeIncrement: function(pidx) {\n    if (!this.grid) {\n      return this._physicalSizes[pidx];\n    }\n    if (this._computeVidx(pidx) % this._itemsPerRow !== this._itemsPerRow - 1) {\n      return 0;\n    }\n    return this._rowHeight;\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function() {\n    var deltaHeight = this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop = this._physicalTop - deltaHeight;\n      var scrollTop = this._scrollTop;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function(forceUpdate) {\n    if (this.grid) {\n      this._estScrollHeight = this._virtualRowCount * this._rowHeight;\n    } else {\n      this._estScrollHeight = (this._physicalBottom +\n          Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage);\n    }\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    forceUpdate = forceUpdate || this.grid && this.$.items.style.height < this._estScrollHeight;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = this.grid ? (idx - this._itemsPerRow * 2) : (idx - 1);\n    }\n    this._manageFocus();\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage;\n\n    var currentTopItem = this._physicalStart;\n    var currentVirtualItem = this._virtualStart;\n    var targetOffsetTop = 0;\n    var hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop = targetOffsetTop + this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem++;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function() {\n    this._debounce('_render', function() {\n      // clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      // Skip the resize event on touch devices when the address bar slides up.\n      this.updateViewportBoundaries();\n      if (this._isVisible) {\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, ANIMATION_FRAME);\n  },\n\n  /**\n   * Converts a random index to the index of the item that completes it's row.\n   * Allows for better order and fill computation when grid == true.\n   */\n  _convertIndexToCompleteRow: function(idx) {\n    // when grid == false _itemPerRow can be unset.\n    this._itemsPerRow = this._itemsPerRow || 1;\n    return this.grid ? Math.ceil(idx / this._itemsPerRow) * this._itemsPerRow : idx;\n  },\n\n  _isIndexRendered: function(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _getPhysicalIndex: function(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n\n  _clamp: function(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function(name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = Debouncer.debounce(\n      this._debouncers[name],\n      asyncModule,\n      cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const A11yMixin = superClass => class A11yMixin extends superClass {\n  static get observers() {\n    return [\n      '_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'\n    ];\n  }\n\n  /** @private */\n  _a11yGetHeaderRowCount(_columnTree) {\n    return _columnTree.filter(level => level.some(col => col._headerTemplate || col.headerRenderer || col.path || col.header)).length;\n  }\n\n  /** @private */\n  _a11yGetFooterRowCount(_columnTree) {\n    return _columnTree.filter(level => level.some(col => col._headerTemplate || col.headerRenderer)).length;\n  }\n\n  /** @private */\n  _a11yUpdateGridSize(size, _columnTree) {\n    if (size === undefined || _columnTree === undefined) {\n      return;\n    }\n\n    const bodyColumns = _columnTree[_columnTree.length - 1];\n    this.$.table.setAttribute(\n      'aria-rowcount',\n      size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree)\n    );\n    this.$.table.setAttribute('aria-colcount', bodyColumns && bodyColumns.length || 0);\n\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n  }\n\n  /** @protected */\n  _a11yUpdateHeaderRows() {\n    Array.from(this.$.header.children).forEach((headerRow, index) =>\n      headerRow.setAttribute('aria-rowindex', index + 1)\n    );\n  }\n\n  /** @protected */\n  _a11yUpdateFooterRows() {\n    Array.from(this.$.footer.children).forEach((footerRow, index) =>\n      footerRow.setAttribute(\n        'aria-rowindex',\n        this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1\n      )\n    );\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {number} index\n   * @protected\n   */\n  _a11yUpdateRowRowindex(row, index) {\n    row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {boolean} selected\n   * @protected\n   */\n  _a11yUpdateRowSelected(row, selected) {\n    // Jaws reads selection only for rows, NVDA only for cells\n    row.setAttribute('aria-selected', Boolean(selected));\n    Array.from(row.children).forEach(cell =>\n      cell.setAttribute('aria-selected', Boolean(selected))\n    );\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {number} level\n   * @protected\n   */\n  _a11yUpdateRowLevel(row, level) {\n    row.setAttribute('aria-level', level + 1);\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {boolean} detailsOpened\n   * @protected\n   */\n  _a11yUpdateRowDetailsOpened(row, detailsOpened) {\n    Array.from(row.children).forEach(cell => {\n      if (typeof detailsOpened === 'boolean') {\n        cell.setAttribute('aria-expanded', detailsOpened);\n      } else {\n        if (cell.hasAttribute('aria-expanded')) {\n          cell.removeAttribute('aria-expanded');\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {!HTMLElement} detailsCell\n   * @protected\n   */\n  _a11ySetRowDetailsCell(row, detailsCell) {\n    Array.from(row.children).forEach(cell => {\n      if (cell !== detailsCell) {\n        cell.setAttribute('aria-controls', detailsCell.id);\n      }\n    });\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {number} colspan\n   * @protected\n   */\n  _a11yUpdateCellColspan(cell, colspan) {\n    cell.setAttribute('aria-colspan', Number(colspan));\n  }\n\n  /** @protected */\n  _a11yUpdateSorters() {\n    Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach(sorter => {\n      let cellContent = sorter.parentNode;\n      while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n        cellContent = cellContent.parentNode;\n      }\n      if (cellContent && cellContent.assignedSlot) {\n        const cell = cellContent.assignedSlot.parentNode;\n        cell.setAttribute('aria-sort', {\n          'asc': 'ascending',\n          'desc': 'descending'\n        }[String(sorter.direction)] || 'none');\n      }\n    });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const ActiveItemMixin = superClass => class ActiveItemMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * The item user has last interacted with. Turns to `null` after user deactivates\n       * the item by re-interacting with the currently active item.\n       * @type {GridItem}\n       */\n      activeItem: {\n        type: Object,\n        notify: true,\n        value: null\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n\n    this.$.scroller.addEventListener('click', this._onClick.bind(this));\n    this.addEventListener('cell-activate', this._activateItem.bind(this));\n  }\n\n  /** @private */\n  _activateItem(e) {\n    const model = e.detail.model;\n    const clickedItem = model ? model.item : null;\n\n    if (clickedItem) {\n      this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n    }\n  }\n\n  /**\n   * We need to listen to click instead of tap because on mobile safari, the\n   * document.activeElement has not been updated (focus has not been shifted)\n   * yet at the point when tap event is being executed.\n   * @param {!MouseEvent} e\n   * @protected\n   */\n  _onClick(e) {\n    if (e.defaultPrevented) {\n      // Something has handled this click already, e. g., <vaadin-grid-sorter>\n      return;\n    }\n\n    const path = e.composedPath();\n    const cell = path[path.indexOf(this.$.table) - 3];\n    if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n      return;\n    }\n    const cellContent = cell._content;\n\n    const activeElement = this.getRootNode().activeElement;\n    const cellContentHasFocus = cellContent.contains(activeElement) &&\n      // MSIE bug: flex children receive focus. Make type & attributes check.\n      (!this._ie || this._isFocusable(activeElement));\n    if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n      this.dispatchEvent(new CustomEvent('cell-activate', {detail: {\n        model: this.__getRowModel(cell.parentElement)\n      }}));\n    }\n  }\n\n  /**\n   * @param {!Element} target\n   * @return {boolean}\n   * @protected\n   */\n  _isFocusable(target) {\n    return isFocusable(target);\n  }\n};\n\n/**\n * @param {!Element} target\n * @return {boolean}\n * @protected\n */\nexport const isFocusable = (target) => {\n  if (!target.parentNode) {\n    return false;\n  }\n  const focusables = Array.from(target.parentNode\n    .querySelectorAll('[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]'))\n    .filter(element => element.getAttribute('part') !== 'cell body-cell');\n\n  const isFocusableElement = focusables.indexOf(target) !== -1;\n  return !target.disabled && isFocusableElement;\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Base } from '@polymer/polymer/polymer-legacy.js';\n\n/**\n * @polymerMixin\n */\nexport const ArrayDataProviderMixin = superClass => class ArrayDataProviderMixin extends superClass {\n\n  static get properties() {\n\n    return {\n      /**\n       * An array containing the items which will be stamped to the column template\n       * instances.\n       *\n       * @type {Array<!GridItem> | undefined}\n       */\n      items: Array\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_itemsChanged(items, items.*, isAttached)'\n    ];\n  }\n\n  /** @private */\n  _itemsChanged(items, splices, isAttached) {\n    if (!isAttached) {\n      return;\n    }\n    if (!Array.isArray(items)) {\n      if (items === undefined || items === null) {\n        this.size = 0;\n      }\n      if (this.dataProvider === this._arrayDataProvider) {\n        this.dataProvider = undefined;\n      }\n      return;\n    }\n\n    this.size = items.length;\n    this.dataProvider = this.dataProvider || this._arrayDataProvider;\n    this.clearCache();\n    this._ensureFirstPageLoaded();\n  }\n\n  /**\n   * @param {GridDataProviderParams} opts\n   * @param {GridDataProviderCallback} cb\n   * @protected\n   */\n  _arrayDataProvider(opts, cb) {\n    let items = (Array.isArray(this.items) ? this.items : []).slice(0);\n\n    if (this._filters && this._checkPaths(this._filters, 'filtering', items)) {\n      items = this._filter(items);\n    }\n\n    this.size = items.length;\n\n    if (opts.sortOrders.length && this._checkPaths(this._sorters, 'sorting', items)) {\n      items = items.sort(this._multiSort.bind(this));\n    }\n\n    const start = opts.page * opts.pageSize;\n    const end = start + opts.pageSize;\n    const slice = items.slice(start, end);\n    cb(slice, items.length);\n  }\n\n  /**\n   * Check array of filters/sorters for paths validity, console.warn invalid items\n   * @param {!Array<!GridFilter | !GridSorter>} arrayToCheck The array of filters/sorters to check\n   * @param {string} action The name of action to include in warning (filtering, sorting)\n   * @param {!Array<!GridItem>} items\n   * @protected\n   */\n  _checkPaths(arrayToCheck, action, items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let result = true;\n\n    for (var i in arrayToCheck) {\n      const path = arrayToCheck[i].path;\n\n      // skip simple paths\n      if (!path || path.indexOf('.') === -1) {\n        continue;\n      }\n\n      const parentProperty = path.replace(/\\.[^\\.]*$/, ''); // a.b.c -> a.b\n      if (Base.get(parentProperty, items[0]) === undefined) {\n        console.warn(`Path \"${path}\" used for ${action} does not exist in all of the items, ${action} is disabled.`);\n        result = false;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {unknown} a\n   * @param {unknown} b\n   * @return {number}\n   * @protected\n   */\n  _multiSort(a, b) {\n    return this._sorters.map(sort => {\n      if (sort.direction === 'asc') {\n        return this._compare(Base.get(sort.path, a), Base.get(sort.path, b));\n      } else if (sort.direction === 'desc') {\n        return this._compare(Base.get(sort.path, b), Base.get(sort.path, a));\n      }\n      return 0;\n    }).reduce((p, n) => {\n      return p ? p : n;\n    }, 0);\n  }\n\n  /**\n   * @param {unknown} value\n   * @return {string}\n   * @protected\n   */\n  _normalizeEmptyValue(value) {\n    if ([undefined, null].indexOf(value) >= 0) {\n      return '';\n    } else if (isNaN(value)) {\n      return value.toString();\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * @param {unknown} a\n   * @param {unknown} b\n   * @return {number}\n   * @protected\n   */\n  _compare(a, b) {\n    a = this._normalizeEmptyValue(a);\n    b = this._normalizeEmptyValue(b);\n\n    if (a < b) {\n      return -1;\n    }\n    if (a > b) {\n      return 1;\n    }\n    return 0;\n  }\n\n  /**\n   * @param {!Array<!GridItem>} items\n   * @return {!Array<!GridItem>}\n   * @protected\n   */\n  _filter(items) {\n    return items.filter((item, index) => {\n      return this._filters.filter(filter => {\n        const value = this._normalizeEmptyValue(Base.get(filter.path, item));\n        const filterValueLowercase = this._normalizeEmptyValue(filter.value).toString().toLowerCase();\n        return value.toString().toLowerCase().indexOf(filterValueLowercase) === -1;\n      }).length === 0;\n    });\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { ColumnBaseMixin } from './vaadin-grid-column.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n/**\n * A `<vaadin-grid-column-group>` is used to make groups of columns in `<vaadin-grid>` and\n * to configure additional headers and footers.\n *\n * Groups can be nested to create complex header and footer configurations.\n *\n * The `class` attribute is used to differentiate header and footer templates.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column-group resizable>\n *  <template class=\"header\">Name</template>\n *\n *  <vaadin-grid-column>\n *    <template class=\"header\">First</template>\n *    <template>[[item.name.first]]</template>\n *  </vaadin-grid-column>\n *  <vaadin-grid-column>\n *    <template class=\"header\">Last</template>\n *    <template>[[item.name.last]]</template>\n *  </vaadin-grid-column>\n * </vaadin-grid-column-group>\n * ```\n *\n * @extends PolymerElement\n * @mixes ColumnBaseMixin\n */\nclass GridColumnGroupElement extends ColumnBaseMixin(PolymerElement) {\n\n  static get is() {\n    return 'vaadin-grid-column-group';\n  }\n\n  static get properties() {\n    return {\n      /** @private */\n      _childColumns: {\n        value: function() {\n          return this._getChildColumns(this);\n        }\n      },\n\n      /**\n       * Flex grow ratio for the column group as the sum of the ratios of its child columns.\n       * @attr {number} flex-grow\n       */\n      flexGrow: {\n        type: Number,\n        readOnly: true\n      },\n\n      /**\n       * Width of the column group as the sum of the widths of its child columns.\n       */\n      width: {\n        type: String,\n        readOnly: true\n      },\n\n      /** @private */\n      _visibleChildColumns: Array,\n\n      /** @private */\n      _colSpan: Number,\n\n      /** @private */\n      _rootColumns: Array\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateVisibleChildColumns(_childColumns)',\n      '_childColumnsChanged(_childColumns)',\n      '_groupFrozenChanged(frozen, _rootColumns)',\n      '_groupHiddenChanged(hidden, _rootColumns)',\n      '_visibleChildColumnsChanged(_visibleChildColumns)',\n      '_colSpanChanged(_colSpan, _headerCell, _footerCell)',\n      '_groupOrderChanged(_order, _rootColumns)',\n      '_groupReorderStatusChanged(_reorderStatus, _rootColumns)',\n      '_groupResizableChanged(resizable, _rootColumns)'\n    ];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._addNodeObserver();\n    this._updateFlexAndWidth();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer && this._observer.disconnect();\n  }\n\n  /**\n   * @param {string} path\n   * @param {unknown=} value\n   * @protected\n   */\n  _columnPropChanged(path, value) {\n    if (path === 'hidden') {\n      this._preventHiddenCascade = true;\n      this._updateVisibleChildColumns(this._childColumns);\n      this._preventHiddenCascade = false;\n    }\n\n    if (/flexGrow|width|hidden|_childColumns/.test(path)) {\n      this._updateFlexAndWidth();\n    }\n\n    if (path === 'frozen') {\n      // Don’t unfreeze the frozen group because of a non-frozen child\n      this.frozen = this.frozen || value;\n    }\n\n    if (path === 'lastFrozen') {\n      // Don’t unfreeze the frozen group because of a non-frozen child\n      this._lastFrozen = this._lastFrozen || value;\n    }\n  }\n\n  /** @private */\n  _groupOrderChanged(order, rootColumns) {\n    if (rootColumns) {\n      const _rootColumns = rootColumns.slice(0);\n\n      if (!order) {\n        _rootColumns.forEach(column => column._order = 0);\n        return;\n      }\n      // The parent column order number cascades downwards to it's children\n      // so that the resulting order numbering constructs as follows:\n      // [             1000              ]\n      // [     1100    ] | [     1200    ]\n      // [1110] | [1120] | [1210] | [1220]\n\n      // Trailing zeros are counted so we know the level on which we're working on.\n      const trailingZeros = /(0+)$/.exec(order).pop().length;\n\n      // In an unlikely situation where a group has more than 9 child columns,\n      // the child scope must have 1 digit less...\n      const childCountDigits = ~~(Math.log(rootColumns.length) / Math.log(Math.LN10)) + 1;\n\n      // Final scope for the child columns needs to mind both factors.\n      const scope = Math.pow(10, trailingZeros - childCountDigits);\n\n\n      if (_rootColumns[0] && _rootColumns[0]._order) {\n        _rootColumns.sort((a, b) => a._order - b._order);\n      }\n\n      _rootColumns.forEach((column, index) => column._order = order + ((index + 1) * scope));\n    }\n  }\n\n  /** @private */\n  _groupReorderStatusChanged(reorderStatus, rootColumns) {\n    if (reorderStatus === undefined || rootColumns === undefined) {\n      return;\n    }\n\n    rootColumns.forEach(column => column._reorderStatus = reorderStatus);\n  }\n\n  /** @private */\n  _groupResizableChanged(resizable, rootColumns) {\n    if (resizable === undefined || rootColumns === undefined) {\n      return;\n    }\n\n    rootColumns.forEach(column => column.resizable = resizable);\n  }\n\n  /** @private */\n  _updateVisibleChildColumns(childColumns) {\n    this._visibleChildColumns = Array.prototype.filter.call(childColumns, col => !col.hidden);\n  }\n\n  /** @private */\n  _childColumnsChanged(childColumns) {\n    if (!this._autoHidden && this.hidden) {\n      Array.prototype.forEach.call(childColumns, column => column.hidden = true);\n      this._updateVisibleChildColumns(childColumns);\n    }\n  }\n\n  /** @protected */\n  _updateFlexAndWidth() {\n    if (!this._visibleChildColumns) {\n      return;\n    }\n\n    if (this._visibleChildColumns.length) {\n      this._setWidth('calc(' + Array.prototype\n        .reduce.call(this._visibleChildColumns, (prev, curr) => prev += ' + ' + (curr.width || '0px')\n          .replace('calc', ''), '')\n        .substring(3) + ')');\n    } else {\n      this._setWidth('0px');\n    }\n\n    this._setFlexGrow(Array.prototype.reduce.call(this._visibleChildColumns, (prev, curr) => prev + curr.flexGrow, 0));\n  }\n\n  /** @private */\n  _groupFrozenChanged(frozen, rootColumns) {\n    if (rootColumns === undefined || frozen === undefined) {\n      return;\n    }\n\n    // Don’t propagate the default `false` value.\n    if (frozen !== false) {\n      Array.from(rootColumns).forEach(col => col.frozen = frozen);\n    }\n  }\n\n  /** @private */\n  _groupHiddenChanged(hidden, rootColumns) {\n    if (rootColumns && !this._preventHiddenCascade) {\n      this._ignoreVisibleChildColumns = true;\n      rootColumns.forEach(column => column.hidden = hidden);\n      this._ignoreVisibleChildColumns = false;\n    }\n\n    this._columnPropChanged('hidden');\n  }\n\n  /** @private */\n  _visibleChildColumnsChanged(visibleChildColumns) {\n    this._colSpan = visibleChildColumns.length;\n\n    if (!this._ignoreVisibleChildColumns) {\n      if (visibleChildColumns.length === 0) {\n        this._autoHidden = this.hidden = true;\n      } else if (this.hidden && this._autoHidden) {\n        this._autoHidden = this.hidden = false;\n      }\n    }\n  }\n\n  /** @private */\n  _colSpanChanged(colSpan, headerCell, footerCell) {\n    if (headerCell) {\n      headerCell.setAttribute('colspan', colSpan);\n      this._grid && this._grid._a11yUpdateCellColspan(headerCell, colSpan);\n    }\n    if (footerCell) {\n      footerCell.setAttribute('colspan', colSpan);\n      this._grid && this._grid._a11yUpdateCellColspan(footerCell, colSpan);\n    }\n  }\n\n  /**\n   * @param {!GridColumnGroupElement} el\n   * @return {!Array<!GridColumnElement>}\n   * @protected\n   */\n  _getChildColumns(el) {\n    return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n  }\n\n  /** @private */\n  _addNodeObserver() {\n    this._observer = new FlattenedNodesObserver(this, info => {\n      if (info.addedNodes.filter(this._isColumnElement).length > 0 ||\n        info.removedNodes.filter(this._isColumnElement).length > 0) {\n\n        this._preventHiddenCascade = true;\n        this._rootColumns = this._getChildColumns(this);\n        this._childColumns = this._rootColumns;\n        this._preventHiddenCascade = false;\n\n        // Update the column tree with microtask timing to avoid shady style scope issues\n        microTask.run(() => {\n          this._grid && this._grid._updateColumnTree && this._grid._updateColumnTree();\n        });\n      }\n    });\n    this._observer.flush();\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _isColumnElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n  }\n}\n\ncustomElements.define(GridColumnGroupElement.is, GridColumnGroupElement);\nexport { GridColumnGroupElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\n\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport { useShadow } from '@polymer/polymer/lib/utils/settings.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnReorderingMixin = superClass => class ColumnReorderingMixin extends GestureEventListeners(superClass) {\n\n  static get properties() {\n    return {\n      /**\n       * Set to true to allow column reordering.\n       * @attr {boolean} column-reordering-allowed\n       * @type {boolean}\n       */\n      columnReorderingAllowed: {\n        type: Boolean,\n        value: false\n      },\n\n      /** @private */\n      _orderBaseScope: {\n        type: Number,\n        value: 10000000\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateOrders(_columnTree, _columnTree.*)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    addListener(this, 'track', this._onTrackEvent);\n    this._reorderGhost = this.shadowRoot.querySelector('[part=\"reorder-ghost\"]');\n\n    this.addEventListener('touchstart', this._onTouchStart.bind(this));\n    this.addEventListener('touchmove', this._onTouchMove.bind(this));\n    this.addEventListener('touchend', this._onTouchEnd.bind(this));\n    this.addEventListener('contextmenu', this._onContextMenu.bind(this));\n  }\n\n  /** @private */\n  _onContextMenu(e) {\n    if (this.hasAttribute('reordering')) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _onTouchStart(e) {\n    // Touch event, delay activation by 100ms\n    this._startTouchReorderTimeout = setTimeout(() => {\n      this._onTrackStart({\n        detail: {\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY\n        }\n      });\n    }, 100);\n  }\n\n  /** @private */\n  _onTouchMove(e) {\n    if (this._draggedColumn) {\n      e.preventDefault();\n    }\n    clearTimeout(this._startTouchReorderTimeout);\n  }\n\n  /** @private */\n  _onTouchEnd() {\n    clearTimeout(this._startTouchReorderTimeout);\n    this._onTrackEnd();\n  }\n\n  /** @private */\n  _onTrackEvent(e) {\n    if (e.detail.state === 'start') {\n      const path = e.composedPath();\n      const headerCell = path[path.indexOf(this.$.header) - 2];\n      if (!headerCell || !headerCell._content) {\n        // Not a header column\n        return;\n      }\n\n      const activeElement = this.getRootNode().activeElement;\n      if (headerCell._content.contains(this.getRootNode().activeElement)\n          && (!this._ie || !this._isFocusable(activeElement))) {\n        // Something was focused inside the cell\n        return;\n      }\n\n      if (this.$.scroller.hasAttribute('column-resizing')) {\n        // Resizing is in progress\n        return;\n      }\n\n      if (!this._touchDevice) {\n        // Not a touch device\n        this._onTrackStart(e);\n      }\n    } else if (e.detail.state === 'track') {\n      this._onTrack(e);\n    } else if (e.detail.state === 'end') {\n      this._onTrackEnd(e);\n    }\n  }\n\n  /** @private */\n  _onTrackStart(e) {\n    if (!this.columnReorderingAllowed) {\n      return;\n    }\n\n    // Cancel reordering if there are draggable nodes on the event path\n    const path = e.path || dom(e).path;\n    if (path && path.filter(node => node.hasAttribute && node.hasAttribute('draggable'))[0]) {\n      return;\n    }\n\n    const headerCell = this._cellFromPoint(e.detail.x, e.detail.y);\n    if (!headerCell || headerCell.getAttribute('part').indexOf('header-cell') === -1) {\n      return;\n    }\n\n    this._toggleAttribute('reordering', true, this);\n    this._draggedColumn = headerCell._column;\n    while (this._draggedColumn.parentElement.childElementCount === 1) {\n      // This is the only column in the group, drag the whole group instead\n      this._draggedColumn = this._draggedColumn.parentElement;\n    }\n    this._setSiblingsReorderStatus(this._draggedColumn, 'allowed');\n    this._draggedColumn._reorderStatus = 'dragging';\n\n    this._updateGhost(headerCell);\n    this._reorderGhost.style.visibility = 'visible';\n    this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n    this._autoScroller();\n  }\n\n  /** @private */\n  _onTrack(e) {\n    if (!this._draggedColumn) {\n      // Reordering didn’t start. Skip this event.\n      return;\n    }\n\n    const targetCell = this._cellFromPoint(e.detail.x, e.detail.y);\n    if (!targetCell) {\n      return;\n    }\n\n    const targetColumn = this._getTargetColumn(targetCell, this._draggedColumn);\n    if (this._isSwapAllowed(this._draggedColumn, targetColumn) &&\n      this._isSwappableByPosition(targetColumn, e.detail.x)) {\n      this._swapColumnOrders(this._draggedColumn, targetColumn);\n    }\n\n    this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n    this._lastDragClientX = e.detail.x;\n  }\n\n  /** @private */\n  _onTrackEnd() {\n    if (!this._draggedColumn) {\n      // Reordering didn’t start. Skip this event.\n      return;\n    }\n\n    this._toggleAttribute('reordering', false, this);\n    this._draggedColumn._reorderStatus = '';\n    this._setSiblingsReorderStatus(this._draggedColumn, '');\n    this._draggedColumn = null;\n    this._lastDragClientX = null;\n    this._reorderGhost.style.visibility = 'hidden';\n\n    this.dispatchEvent(new CustomEvent('column-reorder', {detail: {\n      columns: this._getColumnsInOrder()\n    }}));\n  }\n\n  /**\n   * @return {!Array<!GridColumnElement>}\n   * @protected\n   */\n  _getColumnsInOrder() {\n    return this._columnTree.slice(0).pop()\n      .filter(c => !c.hidden)\n      .sort((b, a) => (b._order - a._order));\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {HTMLElement | undefined}\n   * @protected\n   */\n  _cellFromPoint(x, y) {\n    x = x || 0;\n    y = y || 0;\n    if (!this._draggedColumn) {\n      this._toggleAttribute('no-content-pointer-events', true, this.$.scroller);\n    }\n    let cell;\n    if (useShadow) {\n      cell = this.shadowRoot.elementFromPoint(x, y);\n    } else {\n      cell = document.elementFromPoint(x, y);\n\n      // Workaround a FF58 bug\n      if (cell.localName === 'vaadin-grid-cell-content') {\n        cell = cell.assignedSlot.parentNode;\n      }\n\n    }\n    this._toggleAttribute('no-content-pointer-events', false, this.$.scroller);\n\n    // Make sure the element is actually a cell\n    if (cell && cell._column) {\n      return cell;\n    }\n  }\n\n  /**\n   * @param {number} eventClientX\n   * @param {number} eventClientY\n   * @protected\n   */\n  _updateGhostPosition(eventClientX, eventClientY) {\n    const ghostRect = this._reorderGhost.getBoundingClientRect();\n    // // This is where we want to position the ghost\n    const targetLeft = eventClientX - ghostRect.width / 2;\n    const targetTop = eventClientY - ghostRect.height / 2;\n    // Current position\n    const _left = parseInt(this._reorderGhost._left || 0);\n    const _top = parseInt(this._reorderGhost._top || 0);\n    // Reposition the ghost\n    this._reorderGhost._left = _left - (ghostRect.left - targetLeft);\n    this._reorderGhost._top = _top - (ghostRect.top - targetTop);\n    this._reorderGhost.style.transform = `translate(${this._reorderGhost._left}px, ${this._reorderGhost._top}px)`;\n  }\n\n  /**\n   * @param {!Element} e\n   * @return {string}\n   * @protected\n   */\n  _getInnerText(e) {\n    if (e.localName) {\n      // Custom implementation needed since IE11 doesn't respect the spec in case of hidden elements\n      if (getComputedStyle(e).display === 'none') {\n        return '';\n      } else {\n        return Array.from(e.childNodes).map(n => this._getInnerText(n)).join('');\n      }\n    } else {\n      return e.textContent;\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} cell\n   * @return {!HTMLElement}\n   * @protected\n   */\n  _updateGhost(cell) {\n    const ghost = this._reorderGhost;\n    ghost.textContent = this._getInnerText(cell._content);\n    const style = window.getComputedStyle(cell);\n    ['boxSizing', 'display', 'width', 'height', 'background', 'alignItems', 'padding', 'border', 'flex-direction', 'overflow']\n      .forEach(propertyName => ghost.style[propertyName] = style[propertyName]);\n    return ghost;\n  }\n\n  /** @private */\n  _updateOrders(columnTree, splices) {\n    if (columnTree === undefined || splices === undefined) {\n      return;\n    }\n\n    // Reset all column orders\n    columnTree[0].forEach((column, index) => column._order = 0);\n    // Set order numbers to top-level columns\n    columnTree[0].forEach((column, index) => column._order = (index + 1) * this._orderBaseScope);\n  }\n\n  /**\n   * @param {!GridColumnElement} column\n   * @param {string} status\n   * @protected\n   */\n  _setSiblingsReorderStatus(column, status) {\n    Array.from(column.parentNode.children)\n      .filter(child => /column/.test(child.localName) && this._isSwapAllowed(child, column))\n      .forEach(sibling => sibling._reorderStatus = status);\n  }\n\n  /** @protected */\n  _autoScroller() {\n    if (this._lastDragClientX) {\n      const rightDiff = this._lastDragClientX - this.getBoundingClientRect().right + 50;\n      const leftDiff = this.getBoundingClientRect().left - this._lastDragClientX + 50;\n\n      if (rightDiff > 0) {\n        this.$.table.scrollLeft += rightDiff / 10;\n      } else if (leftDiff > 0) {\n        this.$.table.scrollLeft -= leftDiff / 10;\n      }\n      this._scrollHandler();\n    }\n\n    if (this._draggedColumn) {\n      this.async(this._autoScroller, 10);\n    }\n  }\n\n  /**\n   * @param {GridColumnElement | undefined} column1\n   * @param {GridColumnElement | undefined} column2\n   * @return {boolean | undefined}\n   * @protected\n   */\n  _isSwapAllowed(column1, column2) {\n    if (column1 && column2) {\n      const differentColumns = column1 !== column2;\n      const sameParent = column1.parentElement === column2.parentElement;\n      const sameFrozen = column1.frozen === column2.frozen;\n      return differentColumns && sameParent && sameFrozen;\n    }\n  }\n\n  /**\n   * @param {!GridColumnElement} targetColumn\n   * @param {number} clientX\n   * @return {boolean}\n   * @protected\n   */\n  _isSwappableByPosition(targetColumn, clientX) {\n    const targetCell =\n      Array.from(this.$.header.querySelectorAll('tr:not([hidden]) [part~=\"cell\"]')).filter(cell => targetColumn.contains(cell._column))[0];\n    const sourceCellRect = this.$.header.querySelector('tr:not([hidden]) [reorder-status=dragging]').getBoundingClientRect();\n    const targetRect = targetCell.getBoundingClientRect();\n    if (targetRect.left > sourceCellRect.left) {\n      return clientX > targetRect.right - sourceCellRect.width;\n    } else {\n      return clientX < targetRect.left + sourceCellRect.width;\n    }\n  }\n\n  /**\n   * @param {!GridColumnElement} column1\n   * @param {!GridColumnElement} column2\n   * @protected\n   */\n  _swapColumnOrders(column1, column2) {\n    const _order = column1._order;\n    column1._order = column2._order;\n    column2._order = _order;\n    this._updateLastFrozen();\n    this._updateFirstAndLastColumn();\n  }\n\n  /**\n   * @param {HTMLElement | undefined} targetCell\n   * @param {GridColumnElement} draggedColumn\n   * @return {GridColumnElement | undefined}\n   * @protected\n   */\n  _getTargetColumn(targetCell, draggedColumn) {\n    if (targetCell && draggedColumn) {\n      let candidate = targetCell._column;\n      while (candidate.parentElement !== draggedColumn.parentElement && candidate !== this) {\n        candidate = candidate.parentElement;\n      }\n      if (candidate.parentElement === draggedColumn.parentElement) {\n        return candidate;\n      } else {\n        return targetCell._column;\n      }\n    }\n  }\n\n  /**\n   * Fired when the columns in the grid are reordered.\n   *\n   * @event column-reorder\n   * @param {Object} detail\n   * @param {Object} detail.columns the columns in the new order\n   */\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\n\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnResizingMixin = superClass => class ColumnResizingMixin extends GestureEventListeners(superClass) {\n\n  ready() {\n    super.ready();\n    const scroller = this.$.scroller;\n    addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n    // Disallow scrolling while resizing\n    scroller.addEventListener('touchmove', e => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n    // Disable contextmenu on any resize separator.\n    scroller.addEventListener('contextmenu', e => e.target.getAttribute('part') == 'resize-handle' && e.preventDefault());\n\n    // Disable native cell focus when resizing\n    scroller.addEventListener('mousedown', e => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault());\n  }\n\n  /** @private */\n  _onHeaderTrack(e) {\n    const handle = e.target;\n    if (handle.getAttribute('part') === 'resize-handle') {\n      const cell = handle.parentElement;\n      let column = cell._column;\n\n      this._toggleAttribute('column-resizing', true, this.$.scroller);\n\n      // Get the target column to resize\n      while (column.localName === 'vaadin-grid-column-group') {\n        column = Array.prototype.slice.call(column._childColumns, 0)\n          .sort(function(a, b) {\n            return a._order - b._order;\n          })\n          .filter(function(column) {\n            return !column.hidden;\n          }).pop();\n      }\n\n      const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n      var targetCell = columnRowCells.filter(cell => cell._column === column)[0];\n      // Resize the target column\n      if (targetCell.offsetWidth) {\n        var style = window.getComputedStyle(targetCell);\n        var minWidth = 10 + parseInt(style.paddingLeft) + parseInt(style.paddingRight) + parseInt(style.borderLeftWidth)\n          + parseInt(style.borderRightWidth) + parseInt(style.marginLeft) + parseInt(style.marginRight);\n        const maxWidth = targetCell.offsetWidth + (this.__isRTL ? targetCell.getBoundingClientRect().left - e.detail.x :\n          e.detail.x - targetCell.getBoundingClientRect().right);\n        column.width = Math.max(minWidth, maxWidth) + 'px';\n        column.flexGrow = 0;\n      }\n      // Fix width and flex-grow for all preceding columns\n      columnRowCells\n        .sort(\n          function(a, b) {\n            return a._column._order - b._column._order;\n          })\n        .forEach(function(cell, index, array) {\n          if (index < array.indexOf(targetCell)) {\n            cell._column.width = cell.offsetWidth + 'px';\n            cell._column.flexGrow = 0;\n          }\n        });\n\n      if (e.detail.state === 'end') {\n        this._toggleAttribute('column-resizing', false, this.$.scroller);\n        this.dispatchEvent(new CustomEvent('column-resize', {\n          detail: {resizedColumn: column}\n        }));\n      }\n\n      // Notify resize\n      this._resizeHandler();\n    }\n  }\n\n  /**\n  * Fired when a column in the grid is resized by the user.\n  *\n  * @event column-resize\n  * @param {Object} detail\n  * @param {Object} detail.resizedColumn the column that was resized\n  */\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { Templatizer } from './vaadin-grid-templatizer.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnBaseMixin = superClass => class ColumnBaseMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When set to true, the column is user-resizable.\n       * @default false\n       */\n      resizable: {\n        type: Boolean,\n        value: function() {\n          if (this.localName === 'vaadin-grid-column-group') {\n            return;\n          }\n\n          const parent = this.parentNode;\n          if (parent && parent.localName === 'vaadin-grid-column-group') {\n            return parent.resizable || false;\n          } else {\n            return false;\n          }\n        }\n      },\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @protected\n       */\n      _headerTemplate: {\n        type: Object\n      },\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @protected\n       */\n      _footerTemplate: {\n        type: Object\n      },\n\n      /**\n       * When true, the column is frozen. When a column inside of a column group is frozen,\n       * all of the sibling columns inside the group will get frozen also.\n       * @type {boolean}\n       */\n      frozen: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * When set to true, the cells for this column are hidden.\n       */\n      hidden: {\n        type: Boolean\n      },\n\n      /**\n       * Text content to display in the header cell of the column.\n       */\n      header: {\n        type: String\n      },\n\n      /**\n       * Aligns the columns cell content horizontally.\n       * Supported values: \"start\", \"center\" and \"end\".\n       * @attr {start|center|end} text-align\n       * @type {GridColumnTextAlign | null | undefined}\n       */\n      textAlign: {\n        type: String\n      },\n\n      /**\n       * @type {boolean}\n       * @protected\n       */\n      _lastFrozen: {\n        type: Boolean,\n        value: false\n      },\n\n      /** @protected */\n      _order: Number,\n\n      /** @private */\n      _reorderStatus: Boolean,\n\n      /**\n       * @type {Array<!HTMLElement>}\n       * @protected\n       */\n      _emptyCells: Array,\n\n      /** @private */\n      _headerCell: Object,\n\n      /** @private */\n      _footerCell: Object,\n\n      /** @protected */\n      _grid: Object,\n\n      /**\n       * Custom function for rendering the header content.\n       * Receives two arguments:\n       *\n       * - `root` The header cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       *\n       * @type {GridHeaderFooterRenderer | null | undefined}\n       */\n      headerRenderer: Function,\n\n      /**\n       * Custom function for rendering the footer content.\n       * Receives two arguments:\n       *\n       * - `root` The footer cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       *\n       * @type {GridHeaderFooterRenderer | null | undefined}\n       */\n      footerRenderer: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '_widthChanged(width, _headerCell, _footerCell, _cells.*)',\n      '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)',\n      '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)',\n      '_pathOrHeaderChanged(path, header, _headerCell, _footerCell, _cells.*, renderer, headerRenderer, _bodyTemplate, _headerTemplate)',\n      '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)',\n      '_orderChanged(_order, _headerCell, _footerCell, _cells.*)',\n      '_lastFrozenChanged(_lastFrozen)',\n      '_setBodyTemplateOrRenderer(_bodyTemplate, renderer, _cells, _cells.*)',\n      '_setHeaderTemplateOrRenderer(_headerTemplate, headerRenderer, _headerCell)',\n      '_setFooterTemplateOrRenderer(_footerTemplate, footerRenderer, _footerCell)',\n      '_resizableChanged(resizable, _headerCell)',\n      '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)',\n      '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)'\n    ];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._bodyTemplate && (this._bodyTemplate.templatizer._grid = this._grid);\n    this._headerTemplate && (this._headerTemplate.templatizer._grid = this._grid);\n    this._footerTemplate && (this._footerTemplate.templatizer._grid = this._grid);\n\n    this._templateObserver.flush();\n    if (!this._bodyTemplate) {\n      // The observer might not have triggered if the tag is empty. Run manually.\n      this._templateObserver.callback();\n    }\n\n    requestAnimationFrame(() => {\n      this._allCells.forEach(cell => {\n        if (!cell._content.parentNode) {\n          this._grid && this._grid.appendChild(cell._content);\n        }\n      });\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    requestAnimationFrame(() => {\n      if (!this._findHostGrid()) {\n        this._allCells.forEach(cell => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      }\n    });\n\n    this._gridValue = undefined;\n  }\n\n  /**\n   * @return {!GridElement | undefined}\n   * @protected\n   */\n  _findHostGrid() {\n    let el = this;\n    // Custom elements extending grid must have a specific localName\n    while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n      el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n    }\n    return el || undefined;\n  }\n\n  /**\n   * @return {!GridElement | undefined}\n   * @protected\n   */\n  get _grid() {\n    if (!this._gridValue) {\n      this._gridValue = this._findHostGrid();\n    }\n    return this._gridValue;\n  }\n\n  /**\n   * @return {!Array<!HTMLElement>}\n   * @protected\n   */\n  get _allCells() {\n    return []\n      .concat(this._cells || [])\n      .concat(this._emptyCells || [])\n      .concat(this._headerCell)\n      .concat(this._footerCell)\n      .filter(cell => cell);\n  }\n\n  constructor() {\n    super();\n\n    this._templateObserver = new FlattenedNodesObserver(this, info => {\n      this._headerTemplate = this._prepareHeaderTemplate();\n      this._footerTemplate = this._prepareFooterTemplate();\n      this._bodyTemplate = this._prepareBodyTemplate();\n    });\n  }\n\n  /**\n   * @return {HTMLTemplateElement}\n   * @protected\n   */\n  _prepareHeaderTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(true) || null, {});\n  }\n\n  /**\n   * @return {HTMLTemplateElement}\n   * @protected\n   */\n  _prepareFooterTemplate() {\n    return this._prepareTemplatizer(this._findTemplate(false, true) || null, {});\n  }\n\n  /**\n   * @return {HTMLTemplateElement}\n   * @protected\n   */\n  _prepareBodyTemplate() {\n    return this._prepareTemplatizer(this._findTemplate() || null);\n  }\n\n  /**\n   * @param {HTMLTemplateElement} template\n   * @param {object} instanceProps\n   * @return {HTMLTemplateElement}\n   * @protected\n   */\n  _prepareTemplatizer(template, instanceProps) {\n    if (template && !template.templatizer) {\n      const templatizer = new Templatizer();\n      templatizer._grid = this._grid;\n      templatizer.dataHost = this.dataHost;\n      templatizer._instanceProps = instanceProps || templatizer._instanceProps;\n      templatizer.template = template;\n      template.templatizer = templatizer;\n    }\n\n    return template;\n  }\n\n  /** @protected */\n  _renderHeaderAndFooter() {\n    if (this.headerRenderer && this._headerCell) {\n      this.__runRenderer(this.headerRenderer, this._headerCell);\n    }\n    if (this.footerRenderer && this._footerCell) {\n      this.__runRenderer(this.footerRenderer, this._footerCell);\n    }\n  }\n\n  /** @private */\n  __runRenderer(renderer, cell, model) {\n    const args = [cell._content, this];\n    if (model && model.item) {\n      args.push(model);\n    }\n    renderer.apply(this, args);\n  }\n\n  /** @private */\n  __setColumnTemplateOrRenderer(template, renderer, cells) {\n    if (template && renderer) {\n      throw new Error('You should only use either a renderer or a template');\n    }\n\n    cells.forEach(cell => {\n      const model = this._grid.__getRowModel(cell.parentElement);\n\n      if (renderer) {\n        cell._renderer = renderer;\n\n        if (model.item || renderer === this.headerRenderer || renderer === this.footerRenderer) {\n          this.__runRenderer(renderer, cell, model);\n        }\n      } else if (cell._template !== template) {\n        cell._template = template;\n\n        cell._content.innerHTML = '';\n        template.templatizer._grid = template.templatizer._grid || this._grid;\n        const inst = template.templatizer.createInstance();\n        cell._content.appendChild(inst.root);\n        cell._instance = inst;\n        if (model.item) {\n          cell._instance.setProperties(model);\n        }\n      }\n    });\n  }\n\n  /** @private */\n  _setBodyTemplateOrRenderer(template, renderer, cells, splices) {\n    if ((template || renderer) && cells) {\n      this.__setColumnTemplateOrRenderer(template, renderer, cells);\n    }\n  }\n\n  /** @private */\n  _setHeaderTemplateOrRenderer(headerTemplate, headerRenderer, headerCell) {\n    if ((headerTemplate || headerRenderer) && headerCell) {\n      this.__setColumnTemplateOrRenderer(headerTemplate, headerRenderer, [headerCell]);\n    }\n  }\n\n  /** @private */\n  _setFooterTemplateOrRenderer(footerTemplate, footerRenderer, footerCell) {\n    if ((footerTemplate || footerRenderer) && footerCell) {\n      this.__setColumnTemplateOrRenderer(footerTemplate, footerRenderer, [footerCell]);\n      this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n    }\n  }\n\n  /**\n   * @param {boolean} header\n   * @param {boolean} footer\n   * @return {HTMLTemplateElement}\n   * @protected\n   */\n  _selectFirstTemplate(header = false, footer = false) {\n    return FlattenedNodesObserver.getFlattenedNodes(this)\n      .filter(node =>\n        node.localName === 'template'\n        && node.classList.contains('header') === header\n        && node.classList.contains('footer') === footer\n      )[0];\n  }\n\n  /**\n   * @param {boolean} header\n   * @param {boolean} footer\n   * @return {HTMLTemplateElement}\n   * @protected\n   */\n  _findTemplate(header, footer) {\n    const template = this._selectFirstTemplate(header, footer);\n    if (template) {\n      if (this.dataHost) {\n        // set dataHost to the context where template has been defined\n        template._rootDataHost = this.dataHost._rootDataHost || this.dataHost;\n      }\n    }\n    return template;\n  }\n\n  /** @private */\n  _flexGrowChanged(flexGrow, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('flexGrow');\n    }\n\n    this._allCells.forEach(cell => cell.style.flexGrow = flexGrow);\n  }\n\n  /** @private */\n  _orderChanged(order, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.style.order = order);\n  }\n\n  /** @private */\n  _widthChanged(width, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('width');\n    }\n\n    this._allCells.forEach(cell => cell.style.width = width);\n\n    // Force a reflow to workaround browser issues causing double scrollbars to grid\n    // https://github.com/vaadin/vaadin-grid/issues/1586\n    if (this._grid && this._grid.__forceReflow) {\n      this._grid.__forceReflow();\n    }\n  }\n\n  /** @private */\n  _frozenChanged(frozen, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('frozen', frozen);\n    }\n\n    this._allCells.forEach(cell => this._toggleAttribute('frozen', frozen, cell));\n\n    this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n  }\n\n  /** @private */\n  _lastFrozenChanged(lastFrozen) {\n    this._allCells.forEach(cell => this._toggleAttribute('last-frozen', lastFrozen, cell));\n\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._lastFrozen = lastFrozen;\n    }\n  }\n\n  /**\n   * @param {string | undefined} path\n   * @param {string | undefined} header\n   * @param {!HTMLTableCellElement | undefined} headerCell\n   * @param {!HTMLTableCellElement | undefined} footerCell\n   * @param {!object | undefined} cells\n   * @param {GridBodyRenderer | undefined} renderer\n   * @param {GridHeaderFooterRenderer | undefined} headerRenderer\n   * @param {HTMLTemplateElement | undefined} bodyTemplate\n   * @param {HTMLTemplateElement | undefined} headerTemplate\n   * @protected\n   */\n  _pathOrHeaderChanged(path, header, headerCell, footerCell, cells, renderer, headerRenderer, bodyTemplate, headerTemplate) {\n    const hasHeaderText = header !== undefined;\n    if (!headerRenderer && !headerTemplate && hasHeaderText && headerCell) {\n      this.__setTextContent(headerCell._content, header);\n    }\n\n    if (path && cells.value) {\n      if (!renderer && !bodyTemplate) {\n        const pathRenderer = (root, owner, {item}) => this.__setTextContent(root, this.get(path, item));\n        this.__setColumnTemplateOrRenderer(undefined, pathRenderer, cells.value);\n      }\n\n      if (!headerRenderer && !headerTemplate && !hasHeaderText && headerCell && header !== null) {\n        this.__setTextContent(headerCell._content, this._generateHeader(path));\n      }\n    }\n\n    if (headerCell) {\n      this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n    }\n  }\n\n  /** @private */\n  __setTextContent(node, textContent) {\n    node.textContent !== textContent && (node.textContent = textContent);\n  }\n\n  /**\n   * @param {string} path\n   * @return {string}\n   * @protected\n   */\n  _generateHeader(path) {\n    return path\n      .substr(path.lastIndexOf('.') + 1)\n      .replace(/([A-Z])/g, '-$1').toLowerCase()\n      .replace(/-/g, ' ')\n      .replace(/^./, match => match.toUpperCase());\n  }\n\n  /**\n   * @param {string} name\n   * @param {boolean} bool\n   * @param {!Element} node\n   * @protected\n   */\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  /** @private */\n  _reorderStatusChanged(reorderStatus, headerCell, footerCell, cells) {\n    this._allCells.forEach(cell => cell.setAttribute('reorder-status', reorderStatus));\n  }\n\n  /** @private */\n  _resizableChanged(resizable, headerCell) {\n    if (resizable === undefined || headerCell === undefined) {\n      return;\n    }\n\n    if (headerCell) {\n      [headerCell].concat(this._emptyCells).forEach(cell => {\n        if (cell) {\n          const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n          if (existingHandle) {\n            cell.removeChild(existingHandle);\n          }\n\n          if (resizable) {\n            const handle = document.createElement('div');\n            handle.setAttribute('part', 'resize-handle');\n            cell.appendChild(handle);\n          }\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _textAlignChanged(textAlign, _cells, _headerCell, _footerCell) {\n    if (textAlign === undefined) {\n      return;\n    }\n    if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n      console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n      return;\n    }\n\n    let textAlignFallback;\n    if (getComputedStyle(this._grid).direction === 'ltr') {\n      if (textAlign === 'start') {\n        textAlignFallback = 'left';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'right';\n      }\n    } else {\n      if (textAlign === 'start') {\n        textAlignFallback = 'right';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'left';\n      }\n    }\n\n    this._allCells.forEach(cell => {\n      cell._content.style.textAlign = textAlign;\n      if (getComputedStyle(cell._content).textAlign !== textAlign) {\n        cell._content.style.textAlign = textAlignFallback;\n      }\n    });\n  }\n\n  /** @private */\n  _hiddenChanged(hidden, headerCell, footerCell, cells) {\n    if (this.parentElement && this.parentElement._columnPropChanged) {\n      this.parentElement._columnPropChanged('hidden', hidden);\n    }\n\n    if (!!hidden !== !!this._previousHidden && this._grid) {\n      if (hidden === true) {\n        this._allCells.forEach(cell => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      }\n      this._grid._debouncerHiddenChanged = Debouncer.debounce(\n        this._grid._debouncerHiddenChanged,\n        animationFrame,\n        () => {\n          if (this._grid && this._grid._renderColumnTree) {\n            this._grid._renderColumnTree(this._grid._columnTree);\n          }\n        }\n      );\n\n      this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n      this._grid.notifyResize && this._grid.notifyResize();\n      this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n    }\n    this._previousHidden = hidden;\n  }\n\n};\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See `<vaadin-grid>` documentation and demos for instructions and examples on how\n * to configure the `<vaadin-grid-column>`.\n * ```\n *\n * @extends PolymerElement\n * @mixes ColumnBaseMixin\n */\nclass GridColumnElement extends ColumnBaseMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px'\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       * @attr {number} flex-grow\n       * @type {number}\n       */\n      flexGrow: {\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *\n       * @type {GridBodyRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String\n      },\n\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       * @attr {boolean} auto-width\n       * @type {boolean}\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @protected\n       */\n      _bodyTemplate: {\n        type: Object\n      },\n\n      /**\n       * @type {Array<!HTMLElement>}\n       * @protected\n       */\n      _cells: Array\n\n    };\n  }\n\n}\n\ncustomElements.define(GridColumnElement.is, GridColumnElement);\nexport { GridColumnElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\n\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\n\nexport const ItemCache = class ItemCache {\n  /**\n   * @param {!HTMLElement} grid\n   * @param {!ItemCache | undefined} parentCache\n   * @param {!GridItem | undefined} parentItem\n   */\n  constructor(grid, parentCache, parentItem) {\n    /** @type {!HTMLElement} */\n    this.grid = grid;\n    /** @type {!ItemCache | undefined} */\n    this.parentCache = parentCache;\n    /** @type {!GridItem | undefined} */\n    this.parentItem = parentItem;\n    /** @type {object} */\n    this.itemCaches = {};\n    /** @type {object} */\n    this.items = {};\n    /** @type {number} */\n    this.effectiveSize = 0;\n    /** @type {number} */\n    this.size = 0;\n    /** @type {object} */\n    this.pendingRequests = {};\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLoading() {\n    return Boolean(Object.keys(this.pendingRequests).length || Object.keys(this.itemCaches).filter(index => {\n      return this.itemCaches[index].isLoading();\n    })[0]);\n  }\n\n  /**\n   * @param {number} index\n   * @return {!GridItem | undefined}\n   */\n  getItemForIndex(index) {\n    const {cache, scaledIndex} = this.getCacheAndIndex(index);\n    return cache.items[scaledIndex];\n  }\n\n  updateSize() {\n    this.effectiveSize = (!this.parentItem || this.grid._isExpanded(this.parentItem)) ?\n      this.size + Object.keys(this.itemCaches).reduce((prev, curr) => {\n        const subCache = this.itemCaches[curr];\n        subCache.updateSize();\n        return prev + subCache.effectiveSize;\n      }, 0) :\n      0;\n  }\n\n  /**\n   * @param {number} scaledIndex\n   */\n  ensureSubCacheForScaledIndex(scaledIndex) {\n    if (!this.itemCaches[scaledIndex]) {\n      const subCache = new ItemCache(this.grid, this, this.items[scaledIndex]);\n      this.itemCaches[scaledIndex] = subCache;\n      this.grid._loadPage(0, subCache);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {{cache: !ItemCache, scaledIndex: number}}\n   */\n  getCacheAndIndex(index) {\n    let thisLevelIndex = index;\n    const keys = Object.keys(this.itemCaches);\n    for (var i = 0; i < keys.length; i++) {\n      const expandedIndex = Number(keys[i]);\n      const subCache = this.itemCaches[expandedIndex];\n      if (thisLevelIndex <= expandedIndex) {\n        return {cache: this, scaledIndex: thisLevelIndex};\n      } else if (thisLevelIndex <= expandedIndex + subCache.effectiveSize) {\n        return subCache.getCacheAndIndex(thisLevelIndex - expandedIndex - 1);\n      }\n      thisLevelIndex -= subCache.effectiveSize;\n    }\n    return {cache: this, scaledIndex: thisLevelIndex};\n  }\n\n};\n\n/**\n * @polymerMixin\n */\nexport const DataProviderMixin = superClass => class DataProviderMixin extends superClass {\n\n  static get properties() {\n    return {\n\n      /**\n       * Number of items fetched at a time from the dataprovider.\n       * @attr {number} page-size\n       * @type {number}\n       */\n      pageSize: {\n        type: Number,\n        value: 50,\n        observer: '_pageSizeChanged'\n      },\n\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       *\n       * `params.pageSize` Current page size\n       *\n       * `params.filters` Currently applied filters\n       *\n       * `params.sortOrders` Currently applied sorting orders\n       *\n       * `params.parentItem` When tree is used, and sublevel items\n       * are requested, reference to parent item of the requested sublevel.\n       * Otherwise `undefined`.\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items. When tree sublevel items\n       *     are requested, total number of items in the requested sublevel.\n       *     Optional when tree is not used, required for tree.\n       *\n       * @type {GridDataProvider | null | undefined}\n       */\n      dataProvider: {\n        type: Object,\n        notify: true,\n        observer: '_dataProviderChanged'\n      },\n\n      /**\n       * `true` while data is being requested from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n        reflectToAttribute: true\n      },\n\n      /**\n       * @type {!ItemCache}\n       * @protected\n       */\n      _cache: {\n        type: Object,\n        value: function() {\n          const cache = new ItemCache(this);\n          return cache;\n        }\n      },\n\n      /**\n       * Path to an item sub-property that identifies the item.\n       * @attr {string} item-id-path\n       */\n      itemIdPath: {\n        type: String,\n        value: null\n      },\n\n      /**\n       * An array that contains the expanded items.\n       * @type {!Array<!GridItem>}\n       */\n      expandedItems: {\n        type: Object,\n        notify: true,\n        value: () => []\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_sizeChanged(size)',\n      '_itemIdPathChanged(itemIdPath)',\n      '_expandedItemsChanged(expandedItems.*)'\n    ];\n  }\n\n  /** @private */\n  _sizeChanged(size) {\n    const delta = size - this._cache.size;\n    this._cache.size += delta;\n    this._cache.effectiveSize += delta;\n    this._effectiveSize = this._cache.effectiveSize;\n  }\n\n  /**\n   * @param {number} index\n   * @param {HTMLElement} el\n   * @protected\n   */\n  _getItem(index, el) {\n    if (index >= this._effectiveSize) {\n      return;\n    }\n\n    el.index = index;\n    const {cache, scaledIndex} = this._cache.getCacheAndIndex(index);\n    const item = cache.items[scaledIndex];\n    if (item) {\n      this._toggleAttribute('loading', false, el);\n      this._updateItem(el, item);\n      if (this._isExpanded(item)) {\n        cache.ensureSubCacheForScaledIndex(scaledIndex);\n      }\n    } else {\n      this._toggleAttribute('loading', true, el);\n      this._loadPage(this._getPageForIndex(scaledIndex), cache);\n    }\n\n  }\n\n  /** @private */\n  _expandedInstanceChangedCallback(inst, value) {\n    if (inst.item === undefined) {\n      return;\n    }\n    if (value) {\n      this.expandItem(inst.item);\n    } else {\n      this.collapseItem(inst.item);\n    }\n  }\n\n  /**\n   * Returns a value that identifies the item. Uses `itemIdPath` if available.\n   * Can be customized by overriding.\n   * @param {!GridItem} item\n   * @return {!GridItem | !unknown}\n   */\n  getItemId(item) {\n    return this.itemIdPath ? this.get(this.itemIdPath, item) : item;\n  }\n\n  /**\n   * @param {!GridItem} item\n   * @return {boolean}\n   * @protected\n   */\n  _isExpanded(item) {\n    return this.__expandedKeys.has(this.getItemId(item));\n  }\n\n  /** @private */\n  _expandedItemsChanged(e) {\n    this.__cacheExpandedKeys();\n    this._cache.updateSize();\n    this._effectiveSize = this._cache.effectiveSize;\n    this._assignModels();\n  }\n\n  /** @private */\n  _itemIdPathChanged(e) {\n    this.__cacheExpandedKeys();\n  }\n\n  /** @private */\n  __cacheExpandedKeys() {\n    if (this.expandedItems) {\n      this.__expandedKeys = new Set();\n      this.expandedItems.forEach(item => {\n        this.__expandedKeys.add(this.getItemId(item));\n      });\n    }\n  }\n\n  /**\n   * Expands the given item tree.\n   * @param {!GridItem} item\n   */\n  expandItem(item) {\n    if (!this._isExpanded(item)) {\n      this.push('expandedItems', item);\n    }\n  }\n\n  /**\n   * Collapses the given item tree.\n   * @param {!GridItem} item\n   */\n  collapseItem(item) {\n    if (this._isExpanded(item)) {\n      this.splice('expandedItems', this._getItemIndexInArray(item, this.expandedItems), 1);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {number}\n   * @protected\n   */\n  _getIndexLevel(index) {\n    let {cache} = this._cache.getCacheAndIndex(index);\n    let level = 0;\n    while (cache.parentCache) {\n      cache = cache.parentCache;\n      level++;\n    }\n    return level;\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _canPopulate() {\n    return Boolean(this._hasData && this._columnTree);\n  }\n\n  /**\n   * @param {number} page\n   * @param {ItemCache} cache\n   * @protected\n   */\n  _loadPage(page, cache) {\n    // make sure same page isn't requested multiple times.\n    if (!cache.pendingRequests[page] && this.dataProvider) {\n      this._setLoading(true);\n      cache.pendingRequests[page] = true;\n      const params = {\n        page,\n        pageSize: this.pageSize,\n        sortOrders: this._mapSorters(),\n        filters: this._mapFilters(),\n        parentItem: cache.parentItem\n      };\n\n      this.dataProvider(params, (items, size) => {\n        if (size !== undefined) {\n          cache.size = size;\n        } else {\n          if (params.parentItem) {\n            cache.size = items.length;\n          }\n        }\n\n        const currentItems = Array.from(this.$.items.children).map(row => row._item);\n\n        // Populate the cache with new items\n        items.forEach((item, itemsIndex) => {\n          const itemIndex = page * this.pageSize + itemsIndex;\n          cache.items[itemIndex] = item;\n          if (this._isExpanded(item) && currentItems.indexOf(item) > -1) {\n            // Force synchronous data request for expanded item sub-cache\n            cache.ensureSubCacheForScaledIndex(itemIndex);\n          }\n        });\n\n        this._hasData = true;\n\n        delete cache.pendingRequests[page];\n\n        this._debouncerApplyCachedData = Debouncer.debounce(\n          this._debouncerApplyCachedData,\n          timeOut.after(0),\n          () => {\n            this._setLoading(false);\n            this._cache.updateSize();\n            this._effectiveSize = this._cache.effectiveSize;\n\n            Array.from(this.$.items.children)\n              .filter(row => !row.hidden)\n              .forEach(row => {\n                const cachedItem = this._cache.getItemForIndex(row.index);\n                if (cachedItem) {\n                  this._getItem(row.index, row);\n                }\n              });\n\n            this._increasePoolIfNeeded(0);\n          }\n        );\n\n        if (!this._cache.isLoading()) {\n          this._debouncerApplyCachedData.flush();\n        }\n\n        this.__itemsReceived();\n      });\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {number}\n   * @private\n   */\n  _getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n\n  /**\n   * Clears the cached pages and reloads data from dataprovider when needed.\n   */\n  clearCache() {\n    this._cache = new ItemCache(this);\n    Array.from(this.$.items.children).forEach(row => {\n      Array.from(row.children).forEach(cell => {\n        // Force data system to pick up subproperty changes\n        cell._instance && cell._instance._setPendingProperty('item', {}, false);\n      });\n    });\n    this._cache.size = this.size || 0;\n    this._cache.updateSize();\n    this._hasData = false;\n    this._assignModels();\n\n    if (!this._effectiveSize) {\n      this._loadPage(0, this._cache);\n    }\n  }\n\n  /** @private */\n  _pageSizeChanged(pageSize, oldPageSize) {\n    if (oldPageSize !== undefined && pageSize !== oldPageSize) {\n      this.clearCache();\n    }\n  }\n\n  /** @protected */\n  _checkSize() {\n    if (this.size === undefined && this._effectiveSize === 0) {\n      console.warn(\n        'The <vaadin-grid> needs the total number of items' +\n        ' in order to display rows. Set the total number of items' +\n        ' to the `size` property, or provide the total number of items' +\n        ' in the second argument of the `dataProvider`’s `callback` call.'\n      );\n    }\n  }\n\n  /** @private */\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    if (oldDataProvider !== undefined) {\n      this.clearCache();\n    }\n\n    if (dataProvider && this.items && this.items.length) {\n      // Fixes possibly invalid cached lastVisibleIndex value in <iron-list>\n      this._scrollToIndex(this._firstVisibleIndex);\n    }\n\n    this._ensureFirstPageLoaded();\n\n    this._debouncerCheckSize = Debouncer.debounce(\n      this._debouncerCheckSize,\n      timeOut.after(2000),\n      this._checkSize.bind(this));\n\n    this._scrollHandler();\n  }\n\n  /** @protected */\n  _ensureFirstPageLoaded() {\n    if (!this._hasData) {\n      // load data before adding rows to make sure they have content when\n      // rendered for the first time.\n      this._loadPage(0, this._cache);\n    }\n  }\n\n  /**\n   * @param {!GridItem} item1\n   * @param {!GridItem} item2\n   * @return {boolean}\n   * @protected\n   */\n  _itemsEqual(item1, item2) {\n    return this.getItemId(item1) === this.getItemId(item2);\n  }\n\n  /**\n   * @param {!GridItem} item\n   * @param {!Array<!GridItem>} array\n   * @return {number}\n   * @protected\n   */\n  _getItemIndexInArray(item, array) {\n    let result = -1;\n    array.forEach((i, idx) => {\n      if (this._itemsEqual(i, item)) {\n        result = idx;\n      }\n    });\n    return result;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2019 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nconst DropMode = {\n  BETWEEN: 'between',\n  ON_TOP: 'on-top',\n  ON_TOP_OR_BETWEEN: 'on-top-or-between',\n  ON_GRID: 'on-grid'\n};\n\nconst DropLocation = {\n  ON_TOP: 'on-top',\n  ABOVE: 'above',\n  BELOW: 'below',\n  EMPTY: 'empty'\n};\n\n/**\n * @polymerMixin\n */\nexport const DragAndDropMixin = superClass => class DragAndDropMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * Defines the locations within the Grid row where an element can be dropped.\n       *\n       * Possible values are:\n       * - `between`: The drop event can happen between Grid rows.\n       * - `on-top`: The drop event can happen on top of Grid rows.\n       * - `on-top-or-between`: The drop event can happen either on top of or between Grid rows.\n       * - `on-grid`: The drop event will not happen on any specific row, it will show the drop target outline around the whole grid.\n       * @attr {between|on-top|on-top-or-between|on-grid} drop-mode\n       * @type {GridDropMode | null | undefined}\n       */\n      dropMode: String,\n\n      /**\n       * Marks the grid's rows to be available for dragging.\n       * @attr {boolean} rows-draggable\n       */\n      rowsDraggable: Boolean,\n\n      /**\n       * A function that filters dragging of specific grid rows. The return value should be false\n       * if dragging of the row should be disabled.\n       *\n       * Receives one argument:\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *\n       * @type {GridDragAndDropFilter | null | undefined}\n       */\n      dragFilter: Function,\n\n      /**\n       * A function that filters dropping on specific grid rows. The return value should be false\n       * if dropping on the row should be disabled.\n       *\n       * Receives one argument:\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *\n       * @type {GridDragAndDropFilter | null | undefined}\n       */\n      dropFilter: Function,\n\n      /** @private */\n      __dndAutoScrollThreshold: {\n        value: 50\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.$.table.addEventListener('dragstart', this._onDragStart.bind(this));\n    this.$.table.addEventListener('dragend', this._onDragEnd.bind(this));\n    this.$.table.addEventListener('dragover', this._onDragOver.bind(this));\n    this.$.table.addEventListener('dragleave', this._onDragLeave.bind(this));\n    this.$.table.addEventListener('drop', this._onDrop.bind(this));\n    this.$.table.addEventListener('dragenter', e => {\n      if (this.dropMode) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n\n  }\n\n  /** @private */\n  _onDragStart(e) {\n    if (this.rowsDraggable) {\n      let row = e.target;\n      if (row.localName === 'vaadin-grid-cell-content') {\n        // The draggable node is the cell content element on browsers that support native shadow\n        row = row.assignedSlot.parentNode.parentNode;\n      }\n      if (row.parentNode !== this.$.items) {\n        return;\n      }\n\n      e.stopPropagation();\n      this._toggleAttribute('dragging-rows', true, this);\n\n      if (this._safari) {\n        // Safari doesn't get proper drag images from transformed\n        // elements so we need to switch to top temporarily\n        const transform = row.style.transform;\n        row.style.top = /translateY\\((.*)\\)/.exec(transform)[1];\n        row.style.transform = 'none';\n        requestAnimationFrame(() => {\n          row.style.top = '';\n          row.style.transform = transform;\n        });\n      }\n\n      const rowRect = row.getBoundingClientRect();\n      if (!window.ShadyDOM) {\n        if (this._ios) {\n          e.dataTransfer.setDragImage(row);\n        } else {\n          e.dataTransfer.setDragImage(row, e.clientX - rowRect.left, e.clientY - rowRect.top);\n        }\n\n      }\n\n      let rows = [row];\n      if (this._isSelected(row._item)) {\n        rows = this.__getViewportRows()\n          .filter(row => this._isSelected(row._item))\n          .filter(row => !this.dragFilter || this.dragFilter(this.__getRowModel(row)));\n      }\n\n      // Set the default transfer data\n      e.dataTransfer.setData('text', this.__formatDefaultTransferData(rows));\n\n      row.setAttribute('dragstart', rows.length > 1 ? rows.length : '');\n      this.updateStyles({\n        '--_grid-drag-start-x': `${e.clientX - rowRect.left + 20}px`,\n        '--_grid-drag-start-y': `${e.clientY - rowRect.top + 10}px`\n      });\n\n      requestAnimationFrame(() => {\n        row.removeAttribute('dragstart');\n        this.updateStyles({'--_grid-drag-start-x': '', '--_grid-drag-start-y': ''});\n      });\n\n      const event = new CustomEvent('grid-dragstart', {\n        detail: {\n          draggedItems: rows.map(row => row._item),\n          setDragData: (type, data) => e.dataTransfer.setData(type, data),\n          setDraggedItemsCount: count => row.setAttribute('dragstart', count)\n        }\n      });\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n  }\n\n  /** @private */\n  _onDragEnd(e) {\n    this._toggleAttribute('dragging-rows', false, this);\n    e.stopPropagation();\n    const event = new CustomEvent('grid-dragend');\n    event.originalEvent = e;\n    this.dispatchEvent(event);\n  }\n\n  /** @private */\n  _onDragLeave(e) {\n    e.stopPropagation();\n    this._clearDragStyles();\n  }\n\n  /** @private */\n  _onDragOver(e) {\n\n    if (this.dropMode) {\n      this._dropLocation = undefined;\n      this._dragOverItem = undefined;\n\n      if (this.__dndAutoScroll(e.clientY)) {\n        this._clearDragStyles();\n        return;\n      }\n\n      let row = e.composedPath().filter(node => node.localName === 'tr')[0];\n\n      if (!this._effectiveSize || this.dropMode === DropMode.ON_GRID) {\n        // The grid is empty or \"on-grid\" drop mode was used, always default to \"empty\"\n        this._dropLocation = DropLocation.EMPTY;\n      } else if (!row || row.parentNode !== this.$.items) {\n        // The dragover didn't occur on a body row but the grid has items\n        if (row) {\n          // The dragover occurred over a header/footer row\n          return;\n        } else if (this.dropMode === DropMode.BETWEEN || this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n          // The drop mode allows setting the last row as the drag over item\n          row = Array.from(this.$.items.children).filter(row => !row.hidden).pop();\n          this._dropLocation = DropLocation.BELOW;\n        } else {\n          // Drop mode on-top used but the dragover didn't occur over one of the existing rows\n          return;\n        }\n      } else {\n        // The dragover occurred on a body row, determine the drop location from coordinates\n        const rowRect = row.getBoundingClientRect();\n\n        this._dropLocation = DropLocation.ON_TOP;\n\n        if (this.dropMode === DropMode.BETWEEN) {\n          const dropAbove = e.clientY - rowRect.top < rowRect.bottom - e.clientY;\n          this._dropLocation = dropAbove ? DropLocation.ABOVE : DropLocation.BELOW;\n\n        } else if (this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n          if (e.clientY - rowRect.top < rowRect.height / 3) {\n            this._dropLocation = DropLocation.ABOVE;\n          } else if (e.clientY - rowRect.top > (rowRect.height / 3) * 2) {\n            this._dropLocation = DropLocation.BELOW;\n          }\n        }\n      }\n\n      if (row && row.hasAttribute('drop-disabled')) {\n        this._dropLocation = undefined;\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (this._dropLocation === DropLocation.EMPTY) {\n        this._toggleAttribute('dragover', true, this);\n      } else if (row) {\n        this._dragOverItem = row._item;\n        if (row.getAttribute('dragover') !== this._dropLocation) {\n          row.setAttribute('dragover', this._dropLocation);\n        }\n      } else {\n        this._clearDragStyles();\n      }\n    }\n  }\n\n  /** @private */\n  __dndAutoScroll(clientY) {\n    if (this.__dndAutoScrolling) {\n      return true;\n    }\n\n    const headerBottom = this.$.header.getBoundingClientRect().bottom;\n    const footerTop = this.$.footer.getBoundingClientRect().top;\n    const topDiff = headerBottom - clientY + this.__dndAutoScrollThreshold;\n    const bottomDiff = clientY - footerTop + this.__dndAutoScrollThreshold;\n    let scrollTopDelta = 0;\n\n    if (bottomDiff > 0) {\n      scrollTopDelta = bottomDiff * 2;\n    } else if (topDiff > 0) {\n      scrollTopDelta = -topDiff * 2;\n    }\n\n    if (scrollTopDelta) {\n      const scrollTop = this.$.table.scrollTop;\n      this.$.table.scrollTop += scrollTopDelta;\n      const scrollTopChanged = scrollTop !== this.$.table.scrollTop;\n      if (scrollTopChanged) {\n        this.__dndAutoScrolling = true;\n        // Disallow more auto-scrolls within 20ms\n        setTimeout(() => this.__dndAutoScrolling = false, 20);\n        this._scrollHandler();\n        return true;\n      }\n    }\n  }\n\n  /** @private */\n  __getViewportRows() {\n    const headerBottom = this.$.header.getBoundingClientRect().bottom;\n    const footerTop = this.$.footer.getBoundingClientRect().top;\n    return Array.from(this.$.items.children)\n      .filter(row => {\n        const rowRect = row.getBoundingClientRect();\n        return rowRect.bottom > headerBottom && rowRect.top < footerTop;\n      });\n  }\n\n  /** @protected */\n  _clearDragStyles() {\n    this.removeAttribute('dragover');\n    Array.from(this.$.items.children).forEach(row => row.removeAttribute('dragover'));\n  }\n\n  /** @private */\n  _onDrop(e) {\n    if (this.dropMode) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      const dragData = e.dataTransfer.types && Array.from(e.dataTransfer.types).map(type => {\n        return {\n          type,\n          data: e.dataTransfer.getData(type)\n        };\n      });\n\n      this._clearDragStyles();\n\n      const event = new CustomEvent('grid-drop', {\n        bubbles: e.bubbles,\n        cancelable: e.cancelable,\n        detail: {\n          dropTargetItem: this._dragOverItem,\n          dropLocation: this._dropLocation,\n          dragData\n        }\n      });\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n  }\n\n  /** @private */\n  __formatDefaultTransferData(rows) {\n    return rows\n      .map(row => {\n        return Array.from(row.children)\n          .filter(cell => !cell.hidden && cell.getAttribute('part').indexOf('details-cell') === -1)\n          .sort((a, b) => {\n            return a._column._order > b._column._order ? 1 : -1;\n          })\n          .map(cell => cell._content.textContent.trim())\n          .filter(content => content)\n          .join('\\t');\n      })\n      .join('\\n');\n  }\n\n  /** @private */\n  _dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter) {\n    this.filterDragAndDrop();\n  }\n\n  /**\n   * Runs the `dragFilter` and `dropFilter` hooks for the visible cells.\n   * If the filter depends on varying conditions, you may need to\n   * call this function manually in order to update the draggability when\n   * the conditions change.\n   */\n  filterDragAndDrop() {\n    Array.from(this.$.items.children).filter(row => !row.hidden).forEach(\n      row => {\n        this._filterDragAndDrop(row, this.__getRowModel(row));\n      }\n    );\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {!GridItemModel} model\n   * @protected\n   */\n  _filterDragAndDrop(row, model) {\n    const dragDisabled = !this.rowsDraggable || (this.dragFilter && !this.dragFilter(model));\n    const dropDisabled = !this.dropMode || (this.dropFilter && !this.dropFilter(model));\n\n    const draggableElements = window.ShadyDOM\n      ? [row]\n      : Array.from(row.children).map(cell => cell._content);\n\n    draggableElements.forEach(e => {\n      if (dragDisabled) {\n        e.removeAttribute('draggable');\n      } else {\n        e.setAttribute('draggable', true);\n      }\n    });\n\n    this._toggleAttribute('drag-disabled', dragDisabled, row);\n    this._toggleAttribute('drop-disabled', dropDisabled, row);\n  }\n\n  /**\n   * Fired when starting to drag grid rows.\n   *\n   * @event grid-dragstart\n   * @param {Object} originalEvent The native dragstart event\n   * @param {Object} detail\n   * @param {Object} detail.draggedItems the items in the visible viewport that are dragged\n   * @param {Function} detail.setDraggedItemsCount Overrides the default number shown in the drag image on multi row drag.\n   * Parameter is of type number.\n   * @param {Function} detail.setDragData Sets dataTransfer data for the drag operation.\n   * Note that \"text\" is the only data type supported by all the browsers the grid currently supports (including IE11).\n   * The function takes two parameters:\n   * - type:string The type of the data\n   * - data:string The data\n   */\n\n  /**\n   * Fired when the dragging of the rows ends.\n   *\n   * @event grid-dragend\n   * @param {Object} originalEvent The native dragend event\n   */\n\n  /**\n   * Fired when a drop occurs on top of the grid.\n   *\n   * @event grid-drop\n   * @param {Object} originalEvent The native drop event\n   * @param {Object} detail\n   * @param {Object} detail.dropTargetItem The item of the grid row on which the drop occurred.\n   * @param {string} detail.dropLocation The position at which the drop event took place relative to a row.\n   * Depending on the dropMode value, the drop location can be one of the following\n   * - `on-top`: when the drop occurred on top of the row\n   * - `above`: when the drop occurred above the row\n   * - `below`: when the drop occurred below the row\n   * - `empty`: when the drop occurred over the grid, not relative to any specific row\n   * @param {string} detail.dragData An array of items with the payload as a string representation as the\n   * `data` property and the type of the data as `type` property.\n   */\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\n\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * @polymerMixin\n */\nexport const DynamicColumnsMixin = superClass => class DynamicColumnsMixin extends superClass {\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._addNodeObserver();\n  }\n\n  /** @private */\n  _hasColumnGroups(columns) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].localName === 'vaadin-grid-column-group') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {!GridColumnGroupElement} el\n   * @return {!Array<!GridColumnElement>}\n   * @protected\n   */\n  _getChildColumns(el) {\n    return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n  }\n\n  /** @private */\n  _flattenColumnGroups(columns) {\n    return columns.map(col => {\n      if (col.localName === 'vaadin-grid-column-group') {\n        return this._getChildColumns(col);\n      } else {\n        return [col];\n      }\n    }).reduce((prev, curr) => {\n      return prev.concat(curr);\n    }, []);\n  }\n\n  /** @private */\n  _getColumnTree() {\n    var rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n    var _columnTree = [];\n\n    for (var c = rootColumns; ;) {\n      _columnTree.push(c);\n      if (!this._hasColumnGroups(c)) {\n        break;\n      }\n      c = this._flattenColumnGroups(c);\n    }\n\n    return _columnTree;\n  }\n\n  /** @protected */\n  _updateColumnTree() {\n    var columnTree = this._getColumnTree();\n    if (!this._arrayEquals(columnTree, this._columnTree)) {\n      this._columnTree = columnTree;\n    }\n  }\n\n  /** @private */\n  _addNodeObserver() {\n    this._observer = new FlattenedNodesObserver(this, info => {\n\n      const rowDetailsTemplate = info.addedNodes.filter(n => n.localName === 'template' && n.classList.contains('row-details'))[0];\n      if (rowDetailsTemplate && this._rowDetailsTemplate !== rowDetailsTemplate) {\n        this._rowDetailsTemplate = rowDetailsTemplate;\n      }\n\n      if (info.addedNodes.filter(this._isColumnElement).length > 0 ||\n        info.removedNodes.filter(this._isColumnElement).length > 0) {\n        this._updateColumnTree();\n      }\n\n      this._debouncerCheckImports = Debouncer.debounce(\n        this._debouncerCheckImports,\n        timeOut.after(2000),\n        this._checkImports.bind(this));\n\n      this._ensureFirstPageLoaded();\n    });\n  }\n\n  /** @private */\n  _arrayEquals(arr1, arr2) {\n    if (!arr1 || !arr2 || arr1.length != arr2.length) {\n      return false;\n    }\n\n    for (var i = 0, l = arr1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!this._arrayEquals(arr1[i], arr2[i])) {\n          return false;\n        }\n      } else if (arr1[i] != arr2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @protected */\n  _checkImports() {\n    [\n      'vaadin-grid-column-group',\n      'vaadin-grid-filter',\n      'vaadin-grid-filter-column',\n      'vaadin-grid-tree-toggle',\n      'vaadin-grid-selection-column',\n      'vaadin-grid-sort-column',\n      'vaadin-grid-sorter'\n    ].forEach(elementName => {\n      var element = this.querySelector(elementName);\n      if (element && !(element instanceof PolymerElement)) {\n        console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n      }\n    });\n  }\n\n  /** @protected */\n  _updateFirstAndLastColumn() {\n    Array.from(this.shadowRoot.querySelectorAll('tr')).forEach(row => this._updateFirstAndLastColumnForRow(row));\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @protected\n   */\n  _updateFirstAndLastColumnForRow(row) {\n    Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])'))\n      .sort((a, b) => {\n        return a._column._order - b._column._order;\n      }).forEach((cell, cellIndex, children) => {\n        this._toggleAttribute('first-column', cellIndex === 0, cell);\n        this._toggleAttribute('last-column', cellIndex === children.length - 1, cell);\n      });\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _isColumnElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n  }\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const EventContextMixin = superClass => class EventContextMixin extends superClass {\n\n  /**\n   * Returns an object with context information about the event target:\n   * - `item`: the data object corresponding to the targeted row (not specified when targeting header or footer)\n   * - `column`: the column element corresponding to the targeted cell (not specified when targeting row details)\n   * - `section`: whether the event targeted the body, header, footer or details of the grid\n   *\n   * These additional properties are included when `item` is specified:\n   * - `index`: the index of the item\n   * - `selected`: the selected state of the item\n   * - `detailsOpened`: whether the row details are open for the item\n   * - `expanded`: the expanded state of the tree toggle\n   * - `level`: the tree hierarchy level\n   *\n   * The returned object is populated only when a grid cell, header, footer or row details is found in `event.composedPath()`.\n   * This means mostly mouse and keyboard events. If such a grid part is not found in the path, an empty object is returned.\n   * This may be the case eg. if the event is fired on the `<vaadin-grid>` element and not any deeper in the DOM, or if\n   * the event targets the empty part of the grid body.\n   *\n   * @param {!Event} event\n   * @return {GridEventContext | object}\n   */\n  getEventContext(event) {\n\n    const context = {};\n\n    const path = event.composedPath();\n    const cell = path[path.indexOf(this.$.table) - 3];\n\n    if (!cell) {\n      return context;\n    }\n\n    context.section = ['body', 'header', 'footer', 'details']\n      .filter(section => cell.getAttribute('part').indexOf(section) > -1)[0];\n\n    if (cell._column) {\n      context.column = cell._column;\n    }\n\n    if (context.section === 'body' || context.section === 'details') {\n      Object.assign(context, this.__getRowModel(cell.parentElement));\n    }\n\n    return context;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GridColumnElement } from './vaadin-grid-column.js';\n\nimport './vaadin-grid-filter.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-grid-filter-column>` is a helper element for the `<vaadin-grid>`\n * that provides default header template and functionality for filtering.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-filter-column path=\"name.first\"></vaadin-grid-filter-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n *\n */\nclass GridFilterColumnElement extends GridColumnElement {\n  static get template() {\n    return html`\n    <template class=\"header\" id=\"headerTemplate\">\n      <vaadin-grid-filter path=\"[[path]]\" value=\"[[_filterValue]]\">\n        <vaadin-text-field theme=\"small\" focus-target=\"\" style=\"max-width: 100%;\" slot=\"filter\" value=\"{{_filterValue}}\" label=\"[[_getHeader(header, path)]]\"></vaadin-text-field>\n      </vaadin-grid-filter>\n    </template>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-filter-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for filtering the data.\n       */\n      path: String,\n\n      /**\n       * Text to display as the label of the column filter text-field.\n       */\n      header: String\n    };\n  }\n\n  /** @private */\n  _prepareHeaderTemplate() {\n    const headerTemplate = this._prepareTemplatizer(this.$.headerTemplate);\n    // needed to override the dataHost correctly in case internal template is used.\n    headerTemplate.templatizer.dataHost = this;\n    return headerTemplate;\n  }\n\n  /** @private */\n  _getHeader(header, path) {\n    return header || this._generateHeader(path);\n  }\n}\n\ncustomElements.define(GridFilterColumnElement.is, GridFilterColumnElement);\n\nexport { GridFilterColumnElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const FilterMixin = superClass => class FilterMixin extends superClass {\n\n  static get properties() {\n    return {\n      /** @private */\n      _filters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('filter-changed', this._filterChanged.bind(this));\n  }\n\n  /** @private */\n  _filterChanged(e) {\n    if (this._filters.indexOf(e.target) === -1) {\n      this._filters.push(e.target);\n    }\n\n    e.stopPropagation();\n\n    if (this.dataProvider) {\n      this.clearCache();\n    }\n  }\n\n  /**\n   * @return {!Array<!GridFilter>}\n   * @protected\n   */\n  _mapFilters() {\n    return this._filters.map(filter => {\n      return {\n        path: filter.path,\n        value: filter.value\n      };\n    });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@vaadin/vaadin-text-field/src/vaadin-text-field.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n/**\n * `<vaadin-grid-filter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\n * and handlers for filtering the grid data.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">\n *     <vaadin-grid-filter path=\"name.first\"></vaadin-grid-filter>\n *   </template>\n *   <template>[[item.name.first]]</template>\n * </vaadin-grid-column>\n * ```\n *\n */\nclass GridFilterElement extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        max-width: 100%;\n      }\n\n      #filter {\n        width: 100%;\n        box-sizing: border-box;\n      }\n    </style>\n    <slot name=\"filter\">\n      <vaadin-text-field id=\"filter\" value=\"{{value}}\"></vaadin-text-field>\n    </slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-filter';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for filtering the data.\n       */\n      path: String,\n\n      /**\n       * Current filter value.\n       */\n      value: {\n        type: String,\n        notify: true\n      },\n\n      /** @private */\n      _connected: Boolean\n    };\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._connected = true;\n  }\n\n  static get observers() {\n    return ['_filterChanged(path, value, _connected)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    const child = this.firstElementChild;\n    if (child && child.getAttribute('slot') !== 'filter') {\n      console.warn('Make sure you have assigned slot=\"filter\" to the child elements of <vaadin-grid-filter>');\n      child.setAttribute('slot', 'filter');\n    }\n  }\n\n  /** @private */\n  _filterChanged(path, value, connected) {\n    if (path === undefined || value === undefined || !connected) {\n      return;\n    }\n    if (this._previousValue === undefined && value === '') {\n      return;\n    }\n    this._previousValue = value;\n\n    this._debouncerFilterChanged = Debouncer.debounce(\n      this._debouncerFilterChanged,\n      timeOut.after(200),\n      () => {\n        this.dispatchEvent(new CustomEvent('filter-changed', {bubbles: true}));\n      });\n  }\n\n  focus() {\n    this.$.filter.focus();\n  }\n}\n\ncustomElements.define(GridFilterElement.is, GridFilterElement);\n\nexport { GridFilterElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const KeyboardNavigationMixin = superClass => class KeyboardNavigationMixin extends superClass {\n  static get properties() {\n    return {\n      /** @private */\n      _headerFocusable: {\n        type: Object,\n        observer: '_focusableChanged'\n      },\n\n      /**\n       * @type {!HTMLElement | undefined}\n       * @protected\n       */\n      _itemsFocusable: {\n        type: Object,\n        observer: '_focusableChanged'\n      },\n\n      /** @private */\n      _footerFocusable: {\n        type: Object,\n        observer: '_focusableChanged'\n      },\n\n      /** @private */\n      _navigatingIsHidden: Boolean,\n\n      /**\n       * @type {number}\n       * @protected\n       */\n      _focusedItemIndex: {\n        type: Number,\n        value: 0\n      },\n\n      /** @private */\n      _focusedColumnOrder: Number\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    if (this._ios || this._android) {\n      // Disable keyboard navigation on mobile devices\n      return;\n    }\n\n    this.addEventListener('keydown', this._onKeyDown);\n    this.addEventListener('keyup', this._onKeyUp);\n\n    this.addEventListener('focusin', this._onFocusIn);\n    this.addEventListener('focusout', this._onFocusOut);\n\n    // When focus goes from cell to another cell, focusin/focusout events do\n    // not escape the grid’s shadowRoot, thus listening inside the shadowRoot.\n    this.$.table.addEventListener('focusin', this._onCellFocusIn.bind(this));\n    this.$.table.addEventListener('focusout', this._onCellFocusOut.bind(this));\n\n    this.addEventListener('mousedown', () => {\n      this._toggleAttribute('navigating', false, this);\n      this._isMousedown = true;\n    });\n    this.addEventListener('mouseup', () => this._isMousedown = false);\n  }\n\n  /** @private */\n  _focusableChanged(focusable, oldFocusable) {\n    if (oldFocusable) {\n      oldFocusable.setAttribute('tabindex', '-1');\n    }\n    if (focusable) {\n      focusable.setAttribute('tabindex', '0');\n    }\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    // Ensure standard key value, unified across browsers\n    let key = e.key;\n    if (key === 'Up' || key === 'Down' || key === 'Left' || key === 'Right') {\n      // MSIE & Edge\n      key = 'Arrow' + key;\n    }\n    if (key === 'Esc') {\n      // MSIE & Edge\n      key = 'Escape';\n    }\n    if (key === 'Spacebar') {\n      // MSIE\n      key = ' ';\n    }\n\n    let keyGroup;\n    switch (key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'PageUp':\n      case 'PageDown':\n      case 'Home':\n      case 'End':\n        keyGroup = 'Navigation';\n        break;\n      case 'Enter':\n      case 'Escape':\n      case 'F2':\n        keyGroup = 'Interaction';\n        break;\n      case 'Tab':\n        keyGroup = 'Tab';\n        break;\n      case ' ':\n        keyGroup = 'Space';\n        break;\n    }\n\n    this._detectInteracting(e);\n    if (this.hasAttribute('interacting') && keyGroup !== 'Interaction') {\n      // When in the interacting mode, only the “Interaction” keys are handled.\n      keyGroup = undefined;\n    }\n\n    if (keyGroup) {\n      this[`_on${keyGroup}KeyDown`](e, key);\n    }\n  }\n\n  /** @private */\n  _ensureScrolledToIndex(index) {\n    const targetRowInDom = Array.from(this.$.items.children).filter(child => child.index === index)[0];\n    if (!targetRowInDom) {\n      this._scrollToIndex(index);\n    }\n  }\n\n  /** @private */\n  _onNavigationKeyDown(e, key) {\n    this._scrollHandler();\n\n    e.preventDefault();\n\n    function indexOfChildElement(el) {\n      return Array.prototype.indexOf.call(el.parentNode.children, el);\n    }\n\n    const visibleItemsCount = this._lastVisibleIndex - this._firstVisibleIndex - 1;\n\n    let dx = 0, dy = 0;\n    switch (key) {\n      case 'ArrowRight':\n        dx = this.__isRTL ? -1 : 1;\n        break;\n      case 'ArrowLeft':\n        dx = this.__isRTL ? 1 : -1;\n        break;\n      case 'Home':\n        dx = -Infinity;\n        e.ctrlKey && (dy = -Infinity);\n        break;\n      case 'End':\n        dx = Infinity;\n        e.ctrlKey && (dy = Infinity);\n        break;\n      case 'ArrowDown':\n        dy = 1;\n        break;\n      case 'ArrowUp':\n        dy = -1;\n        break;\n      case 'PageDown':\n        dy = visibleItemsCount;\n        break;\n      case 'PageUp':\n        dy = -visibleItemsCount;\n        break;\n    }\n\n    const activeCell = e.composedPath()[0];\n    const columnIndex = indexOfChildElement(activeCell);\n    const isRowDetails = this._elementMatches(activeCell, '[part~=\"details-cell\"]');\n\n    const activeRow = activeCell.parentNode;\n\n    const activeRowGroup = activeRow.parentNode;\n    const maxRowIndex = (activeRowGroup === this.$.items ? this._effectiveSize : activeRowGroup.children.length) - 1;\n\n    // Body rows have index property, otherwise DOM child index of the row is used.\n    const rowIndex = (activeRowGroup === this.$.items) ?\n      (this._focusedItemIndex !== undefined ? this._focusedItemIndex : activeRow.index) :\n      indexOfChildElement(activeRow);\n\n    // Index of the destination row\n    let dstRowIndex = Math.max(0, Math.min(rowIndex + dy, maxRowIndex));\n\n    // Row details navigation logic\n    let dstIsRowDetails = false;\n    if (activeRowGroup === this.$.items) {\n      const item = activeRow._item;\n      const dstItem = this._cache.getItemForIndex(dstRowIndex);\n      // Should we navigate to row details?\n      if (isRowDetails) {\n        dstIsRowDetails = dy === 0;\n      } else {\n        dstIsRowDetails = dy === 1 && this._isDetailsOpened(item) ||\n          dy === -1 && dstRowIndex !== rowIndex && this._isDetailsOpened(dstItem);\n      }\n      // Should we navigate between details and regular cells of the same row?\n      if (dstIsRowDetails !== isRowDetails &&\n          (dy === 1 && dstIsRowDetails || dy === -1 && !dstIsRowDetails)) {\n        dstRowIndex = rowIndex;\n      }\n    }\n\n    // Header and footer could have hidden rows, e. g., if none of the columns\n    // or groups on the given column tree level define template. Skip them\n    // in vertical keyboard navigation.\n    if (activeRowGroup !== this.$.items) {\n      if (dstRowIndex > rowIndex) {\n        while (\n          dstRowIndex < maxRowIndex &&\n          activeRowGroup.children[dstRowIndex].hidden\n        ) {\n          dstRowIndex++;\n        }\n      } else if (dstRowIndex < rowIndex) {\n        while (\n          dstRowIndex > 0 &&\n          activeRowGroup.children[dstRowIndex].hidden\n        ) {\n          dstRowIndex--;\n        }\n      }\n    }\n\n    // _focusedColumnOrder is memoized — this is to ensure predictable\n    // navigation when entering and leaving detail and column group cells.\n    if (this._focusedColumnOrder === undefined) {\n      if (isRowDetails) {\n        this._focusedColumnOrder = 0;\n      } else {\n        this._focusedColumnOrder = this._getColumns(activeRowGroup, rowIndex).filter(c => !c.hidden)[columnIndex]._order;\n      }\n    }\n\n    // Find orderedColumnIndex — the index of order closest matching the\n    // original _focusedColumnOrder in the sorted array of orders\n    // of the visible columns on the destination row.\n    const dstColumns = this._getColumns(activeRowGroup, dstRowIndex).filter(c => !c.hidden);\n    const dstSortedColumnOrders = dstColumns.map(c => c._order)\n      .sort((b, a) => (b - a));\n    const maxOrderedColumnIndex = dstSortedColumnOrders.length - 1;\n    const orderedColumnIndex = dstSortedColumnOrders.indexOf(\n      dstSortedColumnOrders.slice(0).sort((b, a) =>\n        Math.abs(b - this._focusedColumnOrder) - Math.abs(a - this._focusedColumnOrder)\n      )[0]\n    );\n\n    // Index of the destination column order\n    const dstOrderedColumnIndex = (dy === 0 && isRowDetails) ? orderedColumnIndex :\n      Math.max(0, Math.min(orderedColumnIndex + dx, maxOrderedColumnIndex));\n\n    if (dstOrderedColumnIndex !== orderedColumnIndex) {\n      // Horizontal movement invalidates stored _focusedColumnOrder\n      this._focusedColumnOrder = undefined;\n    }\n\n    // Ensure correct vertical scroll position, destination row is visible\n    if (activeRowGroup === this.$.items) {\n      this._ensureScrolledToIndex(dstRowIndex);\n    }\n\n    // This has to be set after scrolling, otherwise it can be removed by\n    // `_preventScrollerRotatingCellFocus(row, index)` during scrolling.\n    this._toggleAttribute('navigating', true, this);\n\n    const columnIndexByOrder = dstColumns.reduce((acc, col, i) => (acc[col._order] = i, acc), {});\n    const dstColumnIndex = columnIndexByOrder[dstSortedColumnOrders[dstOrderedColumnIndex]];\n\n    // For body rows, use index property to find destination row, otherwise use DOM child index\n    const dstRow = activeRowGroup === this.$.items ?\n      Array.from(activeRowGroup.children).filter(el => el.index === dstRowIndex)[0] :\n      activeRowGroup.children[dstRowIndex];\n    if (!dstRow) {\n      return;\n    }\n\n    // Here we go!\n    const dstCell = dstIsRowDetails ?\n      Array.from(dstRow.children)\n        .filter(el => this._elementMatches(el, '[part~=\"details-cell\"]'))[0] :\n      dstRow.children[dstColumnIndex];\n    this._scrollHorizontallyToCell(dstCell);\n    if (activeRowGroup === this.$.items) {\n      // When scrolling with repeated keydown, sometimes FocusEvent listeners\n      // are too late to update _focusedItemIndex. Ensure next keydown\n      // listener invocation gets updated _focusedItemIndex value.\n      this._focusedItemIndex = dstRowIndex;\n    }\n\n    if (activeRowGroup === this.$.items) {\n      const dstRect = dstCell.getBoundingClientRect();\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      if (dstRect.bottom > footerTop) {\n        this.$.table.scrollTop += dstRect.bottom - footerTop;\n        this._scrollHandler();\n      } else if (dstRect.top < headerBottom) {\n        this.$.table.scrollTop -= headerBottom - dstRect.top;\n        this._scrollHandler();\n      }\n    }\n\n    dstCell.focus();\n  }\n\n  /** @private */\n  _parseEventPath(path) {\n    const tableIndex = path.indexOf(this.$.table);\n    return {\n      rowGroup: path[tableIndex - 1],\n      row: path[tableIndex - 2],\n      cell: path[tableIndex - 3]\n    };\n  }\n\n  /** @private */\n  _onInteractionKeyDown(e, key) {\n    const localTarget = e.composedPath()[0];\n    const localTargetIsTextInput = localTarget.localName === 'input' &&\n      !/^(button|checkbox|color|file|image|radio|range|reset|submit)$/i.test(localTarget.type);\n\n    let wantInteracting;\n    switch (key) {\n      case 'Enter':\n        wantInteracting = this.hasAttribute('interacting') ? !localTargetIsTextInput : true;\n        break;\n      case 'Escape':\n        wantInteracting = false;\n        break;\n      case 'F2':\n        wantInteracting = !this.hasAttribute('interacting');\n        break;\n    }\n\n    const {cell} = this._parseEventPath(e.composedPath());\n\n    if (this.hasAttribute('interacting') !== wantInteracting) {\n      if (wantInteracting) {\n        const focusTarget = cell._content.querySelector('[focus-target]') ||\n          cell._content.firstElementChild;\n        if (focusTarget) {\n          e.preventDefault();\n          focusTarget.focus();\n          this._toggleAttribute('interacting', true, this);\n          this._toggleAttribute('navigating', false, this);\n        }\n      } else {\n        e.preventDefault();\n        this._focusedColumnOrder = undefined;\n        cell.focus();\n        this._toggleAttribute('interacting', false, this);\n        this._toggleAttribute('navigating', true, this);\n      }\n    }\n  }\n\n  /** @private */\n  _predictFocusStepTarget(srcElement, step) {\n    const tabOrder = [\n      this.$.table,\n      this._headerFocusable,\n      this._itemsFocusable,\n      this._footerFocusable,\n      this.$.focusexit\n    ];\n\n    let index = tabOrder.indexOf(srcElement);\n\n    index += step;\n    while (index >= 0 && index <= tabOrder.length - 1 &&\n        (!tabOrder[index] || tabOrder[index].parentNode.hidden)) {\n      index += step;\n    }\n\n    return tabOrder[index];\n  }\n\n  /** @private */\n  _onTabKeyDown(e) {\n    const focusTarget = this._predictFocusStepTarget(e.composedPath()[0], e.shiftKey ? -1 : 1);\n\n    if (focusTarget === this.$.table) {\n      // The focus is about to exit the grid to the top.\n      this.$.table.focus();\n    } else if (focusTarget === this.$.focusexit) {\n      // The focus is about to exit the grid to the bottom.\n      this.$.focusexit.focus();\n    } else if (focusTarget === this._itemsFocusable) {\n      let itemsFocusTarget = focusTarget;\n      const targetRow = this._itemsFocusable.parentNode;\n      this._ensureScrolledToIndex(this._focusedItemIndex);\n      if (targetRow.index !== this._focusedItemIndex) {\n        // The target row, which is about to be focused next, has been\n        // assigned with a new index since last focus, probably because of\n        // scrolling. Focus the row for the stored focused item index instead.\n        const columnIndex = Array.from(targetRow.children).indexOf(this._itemsFocusable);\n        const focusedItemRow = Array.from(this.$.items.children)\n          .filter(row => row.index === this._focusedItemIndex)[0];\n        if (focusedItemRow) {\n          itemsFocusTarget = focusedItemRow.children[columnIndex];\n        }\n      }\n      e.preventDefault();\n      itemsFocusTarget.focus();\n    } else {\n      e.preventDefault();\n      focusTarget.focus();\n    }\n\n    this._toggleAttribute('navigating', true, this);\n  }\n\n  /** @private */\n  _onSpaceKeyDown(e) {\n    e.preventDefault();\n\n    const cell = e.composedPath()[0];\n    if (!cell._content || !cell._content.firstElementChild) {\n      this.dispatchEvent(new CustomEvent('cell-activate', {detail: {\n        model: this.__getRowModel(cell.parentElement)\n      }}));\n    }\n  }\n\n  /** @private */\n  _onKeyUp(e) {\n    if (!/^( |SpaceBar)$/.test(e.key)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const cell = e.composedPath()[0];\n    if (cell._content && cell._content.firstElementChild) {\n      const wasNavigating = this.hasAttribute('navigating');\n      cell._content.firstElementChild.click();\n      this._toggleAttribute('navigating', wasNavigating, this);\n    }\n  }\n\n  /**\n   * @param {!FocusEvent} e\n   * @protected\n   */\n  _onFocusIn(e) {\n    if (!this._isMousedown) {\n      this._toggleAttribute('navigating', true, this);\n    }\n\n    const rootTarget = e.composedPath()[0];\n\n    if (rootTarget === this.$.table ||\n        rootTarget === this.$.focusexit) {\n      // The focus enters the top (bottom) of the grid, meaning that user has\n      // tabbed (shift-tabbed) into the grid. Move the focus to\n      // the first (the last) focusable.\n      this._predictFocusStepTarget(\n        rootTarget,\n        rootTarget === this.$.table ? 1 : -1\n      ).focus();\n      this._toggleAttribute('interacting', false, this);\n    } else {\n      this._detectInteracting(e);\n    }\n  }\n\n  /**\n   * @param {!FocusEvent} e\n   * @protected\n   */\n  _onFocusOut(e) {\n    this._toggleAttribute('navigating', false, this);\n    this._detectInteracting(e);\n  }\n\n  /** @private */\n  _onCellFocusIn(e) {\n    this._detectInteracting(e);\n\n    if (e.composedPath().indexOf(this.$.table) === 3) {\n      const cell = e.composedPath()[0];\n      this._activeRowGroup = cell.parentNode.parentNode;\n      if (this._activeRowGroup === this.$.header) {\n        this._headerFocusable = cell;\n      } else if (this._activeRowGroup === this.$.items) {\n        this._itemsFocusable = cell;\n      } else if (this._activeRowGroup === this.$.footer) {\n        this._footerFocusable = cell;\n      }\n      // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n      cell._content.dispatchEvent(new CustomEvent('cell-focusin', {bubbles: false}));\n    }\n\n    this._detectFocusedItemIndex(e);\n  }\n\n  /** @private */\n  _onCellFocusOut(e) {\n    if (e.composedPath().indexOf(this.$.table) === 3) {\n      const cell = e.composedPath()[0];\n      // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n      cell._content.dispatchEvent(new CustomEvent('cell-focusout', {bubbles: false}));\n    }\n  }\n\n  /** @private */\n  _detectInteracting(e) {\n    this._toggleAttribute('interacting',\n      e.composedPath().some(el => el.localName === 'vaadin-grid-cell-content'),\n      this);\n  }\n\n  /** @private */\n  _detectFocusedItemIndex(e) {\n    const {rowGroup, row} = this._parseEventPath(e.composedPath());\n    if (rowGroup === this.$.items) {\n      this._focusedItemIndex = row.index;\n    }\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @param {number} index\n   * @protected\n   */\n  _preventScrollerRotatingCellFocus(row, index) {\n    if (row.index === this._focusedItemIndex && this.hasAttribute('navigating') && this._activeRowGroup === this.$.items) {\n      // Focused item has went, hide navigation mode\n      this._navigatingIsHidden = true;\n      this._toggleAttribute('navigating', false, this);\n    }\n    if (index === this._focusedItemIndex && this._navigatingIsHidden) {\n      // Focused item is back, restore navigation mode\n      this._navigatingIsHidden = false;\n      this._toggleAttribute('navigating', true, this);\n    }\n  }\n\n  /**\n   * @param {HTMLTableSectionElement=} rowGroup\n   * @param {number=} rowIndex\n   * @return {!Array<!GridColumnElement>}\n   * @protected\n   */\n  _getColumns(rowGroup, rowIndex) {\n    let columnTreeLevel = this._columnTree.length - 1;\n    if (rowGroup === this.$.header) {\n      columnTreeLevel = rowIndex;\n    } else if (rowGroup === this.$.footer) {\n      columnTreeLevel = this._columnTree.length - 1 - rowIndex;\n    }\n    return this._columnTree[columnTreeLevel];\n  }\n\n  /** @protected */\n  _resetKeyboardNavigation() {\n    if (this.$.header.firstElementChild) {\n      this._headerFocusable = Array.from(this.$.header.firstElementChild.children).filter(el => !el.hidden)[0];\n    }\n\n    if (this.$.items.firstElementChild) {\n      const firstVisibleIndexRow = this._iterateItems((pidx, vidx) => {\n        if (this._firstVisibleIndex === vidx) {\n          return this.$.items.children[pidx];\n        }\n      });\n      if (firstVisibleIndexRow) {\n        this._itemsFocusable = Array.from(firstVisibleIndexRow.children).filter(el => !el.hidden)[0];\n      }\n    }\n\n    if (this.$.footer.firstElementChild) {\n      this._footerFocusable = Array.from(this.$.footer.firstElementChild.children).filter(el => !el.hidden)[0];\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} dstCell\n   * @protected\n   */\n  _scrollHorizontallyToCell(dstCell) {\n    if (dstCell.hasAttribute('frozen') || this._elementMatches(dstCell, '[part~=\"details-cell\"]')) {\n      // These cells are, by design, always visible, no need to scroll.\n      return;\n    }\n\n    const dstCellRect = dstCell.getBoundingClientRect();\n    const dstRow = dstCell.parentNode;\n    const dstCellIndex = Array.from(dstRow.children).indexOf(dstCell);\n    const tableRect = this.$.table.getBoundingClientRect();\n    let leftBoundary = tableRect.left, rightBoundary = tableRect.right;\n    for (let i = dstCellIndex - 1; i >= 0; i--) {\n      const cell = dstRow.children[i];\n      if (cell.hasAttribute('hidden') ||\n          this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n        continue;\n      }\n      if (cell.hasAttribute('frozen')) {\n        leftBoundary = cell.getBoundingClientRect().right;\n        break;\n      }\n    }\n    for (let i = dstCellIndex + 1; i < dstRow.children.length; i++) {\n      const cell = dstRow.children[i];\n      if (cell.hasAttribute('hidden') ||\n          this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n        continue;\n      }\n      if (cell.hasAttribute('frozen')) {\n        rightBoundary = cell.getBoundingClientRect().left;\n        break;\n      }\n    }\n\n    if (dstCellRect.left < leftBoundary) {\n      this.$.table.scrollLeft += Math.round(dstCellRect.left - leftBoundary);\n    }\n    if (dstCellRect.right > rightBoundary) {\n      this.$.table.scrollLeft += Math.round(dstCellRect.right - rightBoundary);\n    }\n  }\n\n  /** @private */\n  _elementMatches(el, query) {\n    return el.matches ? el.matches(query) :\n      Array.from(el.parentNode.querySelectorAll(query)).indexOf(el) !== -1;\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Templatizer } from './vaadin-grid-templatizer.js';\n\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\n\n/**\n * @polymerMixin\n */\nexport const RowDetailsMixin = superClass => class RowDetailsMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * An array containing references to items with open row details.\n       * @type {Array<GridItem> | null | undefined}\n       */\n      detailsOpenedItems: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @protected\n       */\n      _rowDetailsTemplate: Object,\n\n      /**\n       * Custom function for rendering the content of the row details.\n       * Receives three arguments:\n       *\n       * - `root` The row details content DOM element. Append your content to it.\n       * - `grid` The `<vaadin-grid>` element.\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *\n       * @type {GridRowDetailsRenderer | null | undefined}\n       */\n      rowDetailsRenderer: Function,\n\n      /**\n       * @type {!Array<!HTMLElement> | undefined}\n       * @protected\n       */\n      _detailsCells: {\n        type: Array,\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_detailsOpenedItemsChanged(detailsOpenedItems.*, _rowDetailsTemplate, rowDetailsRenderer)',\n      '_rowDetailsTemplateOrRendererChanged(_rowDetailsTemplate, rowDetailsRenderer)'\n    ];\n  }\n\n  /** @private */\n  _rowDetailsTemplateOrRendererChanged(rowDetailsTemplate, rowDetailsRenderer) {\n    if (rowDetailsTemplate && rowDetailsRenderer) {\n      throw new Error('You should only use either a renderer or a template for row details');\n    }\n    if (rowDetailsTemplate || rowDetailsRenderer) {\n      if (rowDetailsTemplate && !rowDetailsTemplate.templatizer) {\n        var templatizer = new Templatizer();\n        templatizer._grid = this;\n        templatizer.dataHost = this.dataHost;\n        templatizer.template = rowDetailsTemplate;\n        rowDetailsTemplate.templatizer = templatizer;\n      }\n\n      if (this._columnTree) {\n        // Only update the rows if the column tree has already been initialized\n        Array.from(this.$.items.children).forEach(row => {\n          if (!row.querySelector('[part~=details-cell]')) {\n            this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n            this._a11yUpdateRowDetailsOpened(row, false);\n          }\n          // Clear any old template instances\n          delete row.querySelector('[part~=details-cell]')._instance;\n        });\n      }\n\n      if (this.detailsOpenedItems.length) {\n        Array.from(this.$.items.children).forEach(this._toggleDetailsCell, this);\n        this._update();\n      }\n    }\n  }\n\n  /** @private */\n  _detailsOpenedItemsChanged(changeRecord, rowDetailsTemplate, rowDetailsRenderer) {\n    if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n      // Let’s avoid duplicate work of both “.splices” and “.length” updates.\n      return;\n    }\n    Array.from(this.$.items.children).forEach(row => {\n      this._toggleDetailsCell(row, row._item);\n      this._a11yUpdateRowDetailsOpened(row, this._isDetailsOpened(row._item));\n      this._toggleAttribute('details-opened', this._isDetailsOpened(row._item), row);\n    });\n  }\n\n  /**\n   * @param {!HTMLElement} cell\n   * @protected\n   */\n  _configureDetailsCell(cell) {\n    cell.setAttribute('part', 'cell details-cell');\n    // Freeze the details cell, so that it does not scroll horizontally\n    // with the normal cells. This way it looks less weird.\n    this._toggleAttribute('frozen', true, cell);\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {!GridItem} item\n   * @protected\n   */\n  _toggleDetailsCell(row, item) {\n    const cell = row.querySelector('[part~=\"details-cell\"]');\n    if (!cell) {\n      return;\n    }\n    const detailsHidden = !this._isDetailsOpened(item);\n    const hiddenChanged = !!cell.hidden !== detailsHidden;\n\n    if (!cell._instance && !cell._renderer || cell.hidden !== detailsHidden) {\n      cell.hidden = detailsHidden;\n      if (detailsHidden) {\n        row.style.removeProperty('padding-bottom');\n      } else {\n        if (this.rowDetailsRenderer) {\n          cell._renderer = this.rowDetailsRenderer;\n          cell._renderer.call(this, cell._content, this, {index: row.index, item: item});\n        } else if (this._rowDetailsTemplate && !cell._instance) {\n          // Stamp the template\n          cell._instance = this._rowDetailsTemplate.templatizer.createInstance();\n          cell._content.innerHTML = '';\n          cell._content.appendChild(cell._instance.root);\n          this._updateItem(row, item);\n        }\n\n        flush();\n        row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n\n        requestAnimationFrame(() => this.notifyResize());\n      }\n    }\n    if (hiddenChanged) {\n      this._updateMetrics();\n      this._positionItems();\n    }\n  }\n\n  /** @protected */\n  _updateDetailsCellHeights() {\n    Array.from(this.$.items.querySelectorAll('[part~=\"details-cell\"]:not([hidden])')).forEach(cell => {\n      cell.parentElement.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n    });\n  }\n\n  /**\n   * @param {!GridItem} item\n   * @return {boolean}\n   * @protected\n   */\n  _isDetailsOpened(item) {\n    return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n  }\n\n  /**\n   * Open the details row of a given item.\n   * @param {!GridItem} item\n   */\n  openItemDetails(item) {\n    if (!this._isDetailsOpened(item)) {\n      this.push('detailsOpenedItems', item);\n    }\n  }\n\n  /**\n   * Close the details row of a given item.\n   * @param {!GridItem} item\n   */\n  closeItemDetails(item) {\n    if (this._isDetailsOpened(item)) {\n      this.splice('detailsOpenedItems', this._getItemIndexInArray(item, this.detailsOpenedItems), 1);\n    }\n  }\n\n  /** @private */\n  _detailsOpenedInstanceChangedCallback(instance, value) {\n    if (super._detailsOpenedInstanceChangedCallback) {\n      super._detailsOpenedInstanceChangedCallback(instance, value);\n    }\n    if (value) {\n      this.openItemDetails(instance.item);\n    } else {\n      this.closeItemDetails(instance.item);\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\n\nimport { animationFrame, timeOut, microTask } from '@polymer/polymer/lib/utils/async.js';\n\n/**\n * @polymerMixin\n */\nexport const ScrollMixin = superClass => class ScrollMixin extends superClass {\n  /** @private */\n  get _timeouts() {\n    return {\n      SCROLLING: 500,\n      IGNORE_WHEEL: 500\n    };\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Cached array of frozen cells\n       * @private\n       */\n      _frozenCells: {\n        type: Array,\n        value: () => [],\n      },\n\n      /** @private */\n      _rowWithFocusedElement: Element,\n\n      /** @private */\n      _deltaYAcc: {\n        type: Number,\n        value: 0\n      },\n\n      /** @private */\n      _useSticky: {\n        type: Boolean,\n        value: window.CSS && window.CSS.supports &&\n          (window.CSS.supports('position', 'sticky') || window.CSS.supports('position', '-webkit-sticky'))\n      }\n\n    };\n  }\n\n  static get observers() {\n    return [\n      '_scrollViewportHeightUpdated(_viewportHeight)'\n    ];\n  }\n\n  /**\n   * Override (from iron-scroll-target-behavior) to avoid document scroll\n   * @private\n   */\n  set _scrollTop(top) {\n    this.$.table.scrollTop = top;\n  }\n\n  /** @private */\n  get _scrollTop() {\n    return this.$.table.scrollTop;\n  }\n\n  constructor() {\n    super();\n    this._scrollLineHeight = this._getScrollLineHeight();\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   * @private\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n\n  /** @private */\n  _scrollViewportHeightUpdated(_viewportHeight) {\n    this._scrollPageHeight = _viewportHeight - this.$.header.clientHeight - this.$.footer.clientHeight - this._scrollLineHeight;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Preserve accessor to the legacy scrolling functionality\n    this.$.outerscroller = document.createElement('div');\n\n    this.scrollTarget = this.$.table;\n\n    this.addEventListener('wheel', this._onWheel);\n\n    this.$.items.addEventListener('focusin', (e) => {\n      const itemsIndex = e.composedPath().indexOf(this.$.items);\n      this._rowWithFocusedElement = e.composedPath()[itemsIndex - 1];\n    });\n    this.$.items.addEventListener('focusout', () => this._rowWithFocusedElement = undefined);\n\n    // Reordering the physical rows cancels the user's grab of the scroll bar handle on Safari.\n    // Need to defer reordering until the user lets go of the scroll bar handle.\n    this.scrollTarget.addEventListener('mousedown', () => this.__mouseDown = true);\n    this.scrollTarget.addEventListener('mouseup', () => {\n      this.__mouseDown = false;\n      if (this.__pendingReorder) {\n        this.__pendingReorder = false;\n        setTimeout(() => this._reorderRows(), this._timeouts.SCROLLING);\n      }\n    });\n  }\n\n  /**\n   * Scroll to a specific row index in the virtual list. Note that the row index is\n   * not always the same for any particular item. For example, sorting/filtering/expanding\n   * or collapsing hierarchical items can affect the row index related to an item.\n   *\n   * @param {number} index Row index to scroll to\n   */\n  scrollToIndex(index) {\n    this._accessIronListAPI(() => super.scrollToIndex(index));\n  }\n\n  /** @private */\n  _onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n\n    const table = this.$.table;\n\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n\n    if (this._wheelAnimationFrame) {\n      // Skip new wheel events while one is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n\n    this._wheelAnimationFrame = true;\n    this._debouncerWheelAnimationFrame = Debouncer.debounce(\n      this._debouncerWheelAnimationFrame,\n      animationFrame,\n      () => this._wheelAnimationFrame = false\n    );\n\n    var momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n\n    if (this._canScroll(table, e.deltaX, deltaY)) {\n      e.preventDefault();\n      table.scrollTop += deltaY;\n      table.scrollLeft += e.deltaX;\n      this._scrollHandler();\n      this._hasResidualMomentum = true;\n\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = Debouncer.debounce(\n        this._debouncerIgnoreNewWheel,\n        timeOut.after(this._timeouts.IGNORE_WHEEL),\n        () => this._ignoreNewWheel = false\n      );\n    } else if (this._hasResidualMomentum && momentum <= this._previousMomentum || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor prior to this\n   * cell content that handles the scroll delta\n   * @private\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el.localName === 'vaadin-grid-cell-content') {\n      return false;\n    } else if (this._canScroll(el, deltaX, deltaY)\n      && ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n\n  /**\n   * Determines if the the given scroll deltas can be applied to the element\n   * (fully or partially)\n   * @private\n   */\n  _canScroll(el, deltaX, deltaY) {\n    return (deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight) ||\n    (deltaY < 0 && el.scrollTop > 0) ||\n    (deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth) ||\n    (deltaX < 0 && el.scrollLeft > 0);\n  }\n\n  /** @private */\n  _scheduleScrolling() {\n    if (!this._scrollingFrame) {\n      // Defer setting state attributes to avoid Edge hiccups\n      this._scrollingFrame = requestAnimationFrame(() => this._toggleAttribute('scrolling', true, this.$.scroller));\n    }\n    this._debounceScrolling = Debouncer.debounce(\n      this._debounceScrolling,\n      timeOut.after(this._timeouts.SCROLLING),\n      () => {\n        cancelAnimationFrame(this._scrollingFrame);\n        delete this._scrollingFrame;\n        this._toggleAttribute('scrolling', false, this.$.scroller);\n        this._reorderRows();\n      }\n    );\n  }\n\n  /** @private */\n  _afterScroll() {\n    this._translateStationaryElements();\n\n    if (!this.hasAttribute('reordering')) {\n      this._scheduleScrolling();\n    }\n\n    this._updateOverflow();\n  }\n\n  /** @private */\n  _updateOverflow() {\n    // Set overflow styling attributes\n    let overflow = '';\n    const table = this.$.table;\n    if (table.scrollTop < table.scrollHeight - table.clientHeight) {\n      overflow += ' bottom';\n    }\n\n    if (table.scrollTop > 0) {\n      overflow += ' top';\n    }\n\n    if (table.scrollLeft < table.scrollWidth - table.clientWidth) {\n      overflow += ' right';\n    }\n\n    if (table.scrollLeft > 0) {\n      overflow += ' left';\n    }\n\n    this._debounceOverflow = Debouncer.debounce(\n      this._debounceOverflow,\n      animationFrame,\n      () => {\n        const value = overflow.trim();\n        if (value.length > 0 && this.getAttribute('overflow') !== value) {\n          this.setAttribute('overflow', value);\n        } else if (value.length == 0 && this.hasAttribute('overflow')) {\n          this.removeAttribute('overflow');\n        }\n      }\n    );\n  }\n\n  /**\n   * Correct order needed for preserving correct tab order between cell contents.\n   * @private\n   */\n  _reorderRows() {\n    if (this.__mouseDown) {\n      this.__pendingReorder = true;\n      return;\n    }\n\n    const body = this.$.items;\n    const items = body.querySelectorAll('tr');\n    if (!items.length) {\n      return;\n    }\n\n    const adjustedVirtualStart = this._virtualStart + this._vidxOffset;\n\n    // Which row to use as a target?\n    const targetRow = this._rowWithFocusedElement || Array.from(items).filter(row => !row.hidden)[0];\n    if (!targetRow) {\n      // All rows are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetRow.index - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = Array.from(items).indexOf(targetRow) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        body.appendChild(items[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = items.length + delta; i < items.length; i++) {\n        body.insertBefore(items[i], items[0]);\n      }\n    }\n\n    // Due to a rendering bug, reordering the rows can make the sticky header disappear on Safari\n    // if the grid is used inside of a flex box. This is a workaround for the issue.\n    if (this._safari) {\n      const {transform} = this.$.header.style;\n      this.$.header.style.transform = '';\n      setTimeout(() => this.$.header.style.transform = transform);\n    }\n  }\n\n  /** @protected */\n  _frozenCellsChanged() {\n    this._debouncerCacheElements = Debouncer.debounce(\n      this._debouncerCacheElements,\n      microTask,\n      () => {\n        Array.from(this.shadowRoot.querySelectorAll('[part~=\"cell\"]')).forEach(function(cell) {\n          cell.style.transform = '';\n        });\n        this._frozenCells = Array.prototype.slice.call(this.$.table.querySelectorAll('[frozen]'));\n        this._updateScrollerMeasurements();\n        this._translateStationaryElements();\n      }\n    );\n    this._updateLastFrozen();\n  }\n\n  /** @protected */\n  _updateScrollerMeasurements() {\n    if (this._frozenCells.length > 0 && this.__isRTL) {\n      this.__scrollerMetrics = {\n        scrollWidth: this.$.table.scrollWidth,\n        clientWidth: this.$.table.clientWidth\n      };\n    }\n  }\n\n  /** @protected */\n  _updateLastFrozen() {\n    if (!this._columnTree) {\n      return;\n    }\n\n    const columnsRow = this._columnTree[this._columnTree.length - 1].slice(0);\n    columnsRow.sort((a, b) => {\n      return a._order - b._order;\n    });\n    const lastFrozen = columnsRow.reduce((prev, col, index) => {\n      col._lastFrozen = false;\n      return col.frozen && !col.hidden ? index : prev;\n    }, undefined);\n    if (lastFrozen !== undefined) {\n      columnsRow[lastFrozen]._lastFrozen = true;\n    }\n  }\n\n  /** @private */\n  _translateStationaryElements() {\n    const scrollLeft = Math.max(0, this._scrollLeft);\n    const scrollTop = Math.max(0, this._scrollTop);\n\n    let leftOffset = 0;\n    let topOffset = 0;\n    let footerOffset = 0;\n    if (!this._useSticky) {\n      leftOffset = scrollLeft;\n      topOffset = scrollTop;\n      footerOffset = this.$.table.clientHeight - this.$.footer.offsetHeight - this.$.footer.offsetTop;\n    }\n\n    this.$.header.style.transform = this._getTranslate(-scrollLeft + leftOffset, topOffset);\n    this.$.footer.style.transform = this._getTranslate(-scrollLeft + leftOffset, topOffset + footerOffset);\n    this.$.items.style.transform = this._getTranslate(-scrollLeft + leftOffset, 0);\n\n    if (this._frozenCells.length > 0) {\n      const x = this.__isRTL ?\n        this.__getNormalizedScrollLeft(this.$.table) + this.__scrollerMetrics.clientWidth -\n        this.__scrollerMetrics.scrollWidth\n        : this._scrollLeft;\n      var frozenCellTransform = this._getTranslate(x, 0);\n\n      for (var i = 0; i < this._frozenCells.length; i++) {\n        this._frozenCells[i].style.transform = frozenCellTransform;\n      }\n    }\n  }\n\n  /** @private */\n  _getTranslate(x, y) {\n    return `translate(${x}px, ${y}px)`;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\n\nimport { animationFrame } from '@polymer/polymer/lib/utils/async.js';\nimport { flush } from '@polymer/polymer/lib/utils/flush.js';\nimport { PolymerIronList } from './iron-list.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\n/**\n * This Element is used internally by vaadin-grid.\n *\n * @implements PolymerIronList\n * @extends HTMLElement\n */\nclass GridScrollerElement extends PolymerIronList {\n\n  static get is() {\n    return 'vaadin-grid-scroller';\n  }\n\n  static get properties() {\n    return {\n      size: {\n        type: Number,\n        notify: true\n      },\n\n      /**\n       * @type {number}\n       * @protected\n       */\n      _vidxOffset: {\n        value: 0\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_effectiveSizeChanged(_effectiveSize)'\n    ];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._scrollHandler();\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} item\n   * @param {number} index\n   * @protected\n   */\n  _updateScrollerItem(item, index) {}\n\n  /** @protected */\n  _afterScroll() {}\n\n  /** @protected */\n  _getRowTarget() {}\n\n  /** @protected */\n  _createScrollerRows() {}\n\n  /** @protected */\n  _canPopulate() {}\n\n  /**\n   * @param {number} index\n   * @protected\n   */\n  scrollToIndex(index) {\n    this._warnPrivateAPIAccess('scrollToIndex');\n\n    this._scrollingToIndex = true;\n    index = Math.min(Math.max(index, 0), this._effectiveSize - 1);\n    this.$.table.scrollTop = index / this._effectiveSize * (this.$.table.scrollHeight - this.$.table.offsetHeight);\n    this._scrollHandler();\n\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(1000000);\n    }\n\n    this._accessIronListAPI(() => super.scrollToIndex(index - this._vidxOffset));\n    this._scrollHandler();\n\n    // Ensure scroll position\n    const row = Array.from(this.$.items.children).filter(child => child.index === index)[0];\n    if (row) {\n      const headerOffset = row.getBoundingClientRect().top - this.$.header.getBoundingClientRect().bottom;\n      if (Math.abs(headerOffset) > 1) {\n        this.$.table.scrollTop += headerOffset;\n        this._scrollHandler();\n      }\n    }\n\n    this._scrollingToIndex = false;\n  }\n\n  /** @private */\n  _effectiveSizeChanged(size) {\n    let fvi; // first visible (adjusted) index\n    let fviOffset = 0;\n    this._iterateItems((pidx, vidx) => {\n      if (vidx === this._firstVisibleIndex) {\n        const row = this._physicalItems[pidx];\n        fvi = row.index;\n        fviOffset = row.getBoundingClientRect().top;\n      }\n    });\n\n    if (this.items && size < this.items.length) {\n      // Size was reduced, scroll to 0 first\n      this._scrollTop = 0;\n    }\n    if (!Array.isArray(this.items)) {\n      // Edge/IE seems to have the lowest maximum\n      const maxVirtualItems = this._edge || this._ie ? 30000 : 100000;\n      this.items = {length: Math.min(size, maxVirtualItems)};\n    }\n\n    this._accessIronListAPI(() => super._itemsChanged({path: 'items'}));\n\n    this._virtualCount = Math.min(this.items.length, size) || 0;\n\n    if (this._scrollTop === 0) {\n      this._accessIronListAPI(() => this._scrollToIndex(Math.min(size - 1, fvi)));\n      this._iterateItems((pidx, vidx) => {\n        const row = this._physicalItems[pidx];\n        if (row.index === fvi) {\n          this.$.table.scrollTop += Math.round(row.getBoundingClientRect().top - fviOffset);\n        }\n        // Restore keyboard focus to the right cell\n        if (row.index === this._focusedItemIndex && this._itemsFocusable && this.$.items.contains(this.shadowRoot.activeElement)) {\n          const cellIndex = Array.from(this._itemsFocusable.parentElement.children).indexOf(this._itemsFocusable);\n          row.children[cellIndex].focus();\n        }\n      });\n    }\n    this._assignModels();\n    requestAnimationFrame(() => this._update());\n\n    this.__updateFooterPositioning();\n\n    if (this._ie) {\n      // Workaround an IE flexbox bug where the rows would horizontally collapse\n      // whenever item count change toggles the scrollbar visibility (is tested)\n      this.$.table.style.display = 'block';\n      setTimeout(() => {\n        this.$.table.style.display = 'flex';\n        this._translateStationaryElements();\n      });\n    }\n  }\n\n  /** @protected */\n  _positionItems() {\n    this._adjustScrollPosition();\n\n    let rePosition;\n    if (isNaN(this._physicalTop)) {\n      rePosition = true;\n      this._physicalTop = 0;\n    }\n\n    let y = this._physicalTop;\n    this._iterateItems((pidx, vidx) => {\n      this._physicalItems[pidx].style.transform = `translateY(${y}px)`;\n      y += this._physicalSizes[pidx];\n    });\n\n    if (rePosition) {\n      this._scrollToIndex(0);\n    }\n  }\n\n  /**\n   * @param {number} count\n   * @protected\n   */\n  _increasePoolIfNeeded(count) {\n    if ((count === 0 && this._scrollingToIndex) || !this._canPopulate() || !this._effectiveSize) {\n      return;\n    }\n\n    if (!this._initialPoolCreated) {\n      this._initialPoolCreated = true;\n      super._increasePoolIfNeeded(25);\n    } else if (this._optPhysicalSize !== Infinity) {\n      this._debounceIncreasePool = Debouncer.debounce(\n        this._debounceIncreasePool,\n        animationFrame,\n        () => {\n          this._updateMetrics();\n          const remainingPhysicalSize = this._optPhysicalSize - this._physicalSize;\n          let estimatedMissingRowCount = Math.ceil(remainingPhysicalSize / this._physicalAverage);\n\n          if (this._physicalCount + estimatedMissingRowCount > this._effectiveSize) {\n            // Do not increase the physical item count above the this._effectiveSize\n            estimatedMissingRowCount = Math.max(0, this._effectiveSize - this._physicalCount);\n          }\n\n          if (this._physicalSize && estimatedMissingRowCount > 0 && this._optPhysicalSize !== Infinity) {\n            super._increasePoolIfNeeded(estimatedMissingRowCount);\n            // Ensure the rows are in order after increasing pool\n            this.__reorderChildNodes();\n          }\n        });\n    }\n  }\n\n  /** @private */\n  __reorderChildNodes() {\n    const childNodes = Array.from(this.$.items.childNodes);\n    const rowsInOrder = !!childNodes.reduce((inOrder, current, currentIndex, array) => {\n      if (currentIndex === 0 || array[currentIndex - 1].index === current.index - 1) {\n        return inOrder;\n      }\n    }, true);\n\n    if (!rowsInOrder) {\n      childNodes.sort((row1, row2) => {\n        return row1.index - row2.index;\n      }).forEach(row => this.$.items.appendChild(row));\n    }\n  }\n\n  /** @private */\n  _createPool(size) {\n    const fragment = document.createDocumentFragment();\n    const physicalItems = this._createScrollerRows(size);\n\n    physicalItems.forEach(inst => fragment.appendChild(inst));\n    this._getRowTarget().appendChild(fragment);\n\n    // Weird hack needed to get Safari to actually distribute slots\n    const content = this.querySelector('[slot]');\n    if (content) {\n      const slot = content.getAttribute('slot');\n      content.setAttribute('slot', 'foo-bar');\n      content.setAttribute('slot', slot);\n    }\n\n    afterNextRender(this, () => this.notifyResize());\n    return physicalItems;\n  }\n\n  /**\n   * Assigns the data models to a given set of items.\n   * @param {!Array<number>=} itemSet\n   * @protected\n   */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      this._toggleAttribute('hidden', vidx >= this._effectiveSize, el);\n      this._updateScrollerItem(el, vidx + (this._vidxOffset || 0));\n    }, itemSet);\n  }\n\n  /** @protected */\n  _scrollHandler() {\n    const delta = this.$.table.scrollTop - this._scrollPosition;\n    this._accessIronListAPI(super._scrollHandler);\n    const oldOffset = this._vidxOffset;\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(delta);\n    } else {\n      this._vidxOffset = 0;\n    }\n    if (this._vidxOffset !== oldOffset) {\n      this._update();\n    }\n    this._afterScroll();\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (Math.abs(delta) > 10000) {\n      if (this._noScale) {\n        this._noScale = false;\n        return;\n      }\n      const scale = this.$.table.scrollTop / (this.$.table.scrollHeight - this.$.table.offsetHeight);\n      const offset = scale * this._effectiveSize;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset || 0;\n      const threshold = 1000;\n      const maxShift = 100;\n      // At start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n        }\n        this._noScale = true;\n      }\n      // At end\n      const maxOffset = this._effectiveSize - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n        }\n        this._noScale = true;\n      }\n    }\n  }\n\n  /** @private */\n  _accessIronListAPI(cb) {\n    this._warnPrivateAPIAccessAsyncEnabled = false;\n    const returnValue = cb.apply(this);\n    this._debouncerWarnPrivateAPIAccess = Debouncer.debounce(\n      this._debouncerWarnPrivateAPIAccess,\n      animationFrame,\n      () => this._warnPrivateAPIAccessAsyncEnabled = true\n    );\n    return returnValue;\n  }\n\n  /**\n   * Allow iron-list to access its APIs from debounced callbacks without warns\n   * @private\n   */\n  _debounceRender(cb, asyncModule) {\n    super._debounceRender(() => this._accessIronListAPI(cb), asyncModule);\n  }\n\n  /**\n   * Warn when iron-list APIs are being accessed directly\n   * @private\n   */\n  _warnPrivateAPIAccess(apiName) {\n    if (this._warnPrivateAPIAccessAsyncEnabled) {\n      console.warn(`Accessing private API (${apiName})!`);\n    }\n  }\n\n  /** @protected */\n  _render() {\n    this._accessIronListAPI(super._render);\n  }\n\n  /** @private */\n  _createFocusBackfillItem() { /* Ignore */ }\n\n  /** @private */\n  _multiSelectionChanged() { /* Ignore */ }\n\n  /** @private */\n  clearSelection() { /* Ignore */ }\n\n  /** @protected */\n  _itemsChanged() { /* Ignore */ }\n\n  /** @private */\n  _manageFocus() { /* Ignore */ }\n\n  /** @private */\n  _removeFocusedItem() { /* Ignore */ }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _firstVisibleIndex() {\n    return this._accessIronListAPI(() => super.firstVisibleIndex);\n  }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _lastVisibleIndex() {\n    return this._accessIronListAPI(() => super.lastVisibleIndex);\n  }\n\n  /**\n   * @param {number} index\n   * @protected\n   */\n  _scrollToIndex(index) {\n    this._accessIronListAPI(() => this.scrollToIndex(index));\n  }\n\n  /** @private */\n  get firstVisibleIndex() {\n    this._warnPrivateAPIAccess('firstVisibleIndex'); return super.firstVisibleIndex;\n  }\n\n  /** @private */\n  set firstVisibleIndex(value) {\n    this._warnPrivateAPIAccess('firstVisibleIndex'); super.firstVisibleIndex = value;\n  }\n\n  /** @private */\n  get lastVisibleIndex() {\n    this._warnPrivateAPIAccess('lastVisibleIndex'); return super.lastVisibleIndex;\n  }\n\n  /** @private */\n  set lastVisibleIndex(value) {\n    this._warnPrivateAPIAccess('lastVisibleIndex'); super.lastVisibleIndex = value;\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    this._warnPrivateAPIAccess('updateViewportBoundaries'); super.updateViewportBoundaries.apply(this, arguments);\n  }\n\n  /** @protected */\n  _resizeHandler() {\n    super._resizeHandler();\n    flush();\n  }\n}\n\ncustomElements.define(GridScrollerElement.is, GridScrollerElement);\n\nexport { GridScrollerElement as ScrollerElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { GridColumnElement } from './vaadin-grid-column.js';\nimport '@vaadin/vaadin-checkbox/src/vaadin-checkbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-grid-selection-column>` is a helper element for the `<vaadin-grid>`\n * that provides default templates and functionality for item selection.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-selection-column frozen auto-select></vaadin-grid-selection-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n *\n * By default the selection column displays `<vaadin-checkbox>` elements in the\n * column cells. The checkboxes in the body rows toggle selection of the corresponding row items.\n *\n * When the grid data is provided as an array of [`items`](#/elements/vaadin-grid#property-items),\n * the column header gets an additional checkbox that can be used for toggling\n * selection for all the items at once.\n *\n * __The default content can also be overridden__\n *\n */\nclass GridSelectionColumnElement extends GridColumnElement {\n  static get template() {\n    return html`\n    <template class=\"header\" id=\"defaultHeaderTemplate\">\n      <vaadin-checkbox class=\"vaadin-grid-select-all-checkbox\" aria-label=\"Select All\" hidden\\$=\"[[_selectAllHidden]]\" on-checked-changed=\"_onSelectAllCheckedChanged\" checked=\"[[_isChecked(selectAll, _indeterminate)]]\" indeterminate=\"[[_indeterminate]]\"></vaadin-checkbox>\n    </template>\n    <template id=\"defaultBodyTemplate\">\n      <vaadin-checkbox aria-label=\"Select Row\" checked=\"{{selected}}\"></vaadin-checkbox>\n    </template>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-selection-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '58px'\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       * @attr {number} flex-grow\n       * @type {number}\n       */\n      flexGrow: {\n        type: Number,\n        value: 0\n      },\n\n      /**\n       * When true, all the items are selected.\n       * @attr {boolean} select-all\n       * @type {boolean}\n       */\n      selectAll: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * When true, the active gets automatically selected.\n       * @attr {boolean} auto-select\n       * @type {boolean}\n       */\n      autoSelect: {\n        type: Boolean,\n        value: false,\n      },\n\n      /** @private */\n      _indeterminate: Boolean,\n\n      /**\n       * The previous state of activeItem. When activeItem turns to `null`,\n       * previousActiveItem will have an Object with just unselected activeItem\n       * @private\n       */\n      _previousActiveItem: Object,\n\n      /** @private */\n      _selectAllHidden: Boolean\n    };\n  }\n\n  static get observers() {\n    return [\n      '_onSelectAllChanged(selectAll)'\n    ];\n  }\n\n  /** @private */\n  _pathOrHeaderChanged(path, header, headerCell, footerCell, cells, renderer, headerRenderer, bodyTemplate, headerTemplate) {\n    // As a special case, allow overriding the default header / body templates\n    if (cells.value && (path !== undefined || renderer !== undefined)) {\n      this._bodyTemplate = bodyTemplate = undefined;\n      this.__cleanCellsOfTemplateProperties(cells.value);\n    }\n    if (headerCell && (header !== undefined || headerRenderer !== undefined)) {\n      this._headerTemplate = headerTemplate = undefined;\n      this.__cleanCellsOfTemplateProperties([headerCell]);\n    }\n    super._pathOrHeaderChanged(path, header, headerCell, footerCell, cells, renderer, headerRenderer, bodyTemplate, headerTemplate);\n  }\n\n  /** @private */\n  __cleanCellsOfTemplateProperties(cells) {\n    cells.forEach(cell => {\n      cell._content.innerHTML = '';\n      delete cell._instance;\n      delete cell._template;\n    });\n  }\n\n  /** @private */\n  _prepareHeaderTemplate() {\n    const headerTemplate = this._prepareTemplatizer(this._findTemplate(true) || this.$.defaultHeaderTemplate);\n    // needed to override the dataHost correctly in case internal template is used.\n    headerTemplate.templatizer.dataHost = headerTemplate === this.$.defaultHeaderTemplate ? this : this.dataHost;\n\n    return headerTemplate;\n  }\n\n  /** @private */\n  _prepareBodyTemplate() {\n    const template = this._prepareTemplatizer(this._findTemplate() || this.$.defaultBodyTemplate);\n    // needed to override the dataHost correctly in case internal template is used.\n    template.templatizer.dataHost = template === this.$.defaultBodyTemplate ? this : this.dataHost;\n\n    return template;\n  }\n\n  constructor() {\n    super();\n\n    this._boundOnActiveItemChanged = this._onActiveItemChanged.bind(this);\n    this._boundOnDataProviderChanged = this._onDataProviderChanged.bind(this);\n    this._boundOnSelectedItemsChanged = this._onSelectedItemsChanged.bind(this);\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    this._grid.removeEventListener('active-item-changed', this._boundOnActiveItemChanged);\n    this._grid.removeEventListener('data-provider-changed', this._boundOnDataProviderChanged);\n    this._grid.removeEventListener('filter-changed', this._boundOnSelectedItemsChanged);\n    this._grid.removeEventListener('selected-items-changed', this._boundOnSelectedItemsChanged);\n\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    if (isSafari && window.ShadyDOM && this.parentElement) {\n      // Detach might have beem caused by order change.\n      // Shady on safari doesn't restore isAttached so we'll need to do it manually.\n      const parent = this.parentElement;\n      const nextSibling = this.nextElementSibling;\n      parent.removeChild(this);\n      if (nextSibling) {\n        parent.insertBefore(this, nextSibling);\n      } else {\n        parent.appendChild(this);\n      }\n    }\n\n    super.disconnectedCallback();\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (this._grid) {\n      this._grid.addEventListener('active-item-changed', this._boundOnActiveItemChanged);\n      this._grid.addEventListener('data-provider-changed', this._boundOnDataProviderChanged);\n      this._grid.addEventListener('filter-changed', this._boundOnSelectedItemsChanged);\n      this._grid.addEventListener('selected-items-changed', this._boundOnSelectedItemsChanged);\n    }\n  }\n\n  /** @private */\n  _onSelectAllChanged(selectAll) {\n    if (selectAll === undefined || !this._grid) {\n      return;\n    }\n\n    if (this._selectAllChangeLock) {\n      return;\n    }\n\n    this._grid.selectedItems = selectAll && Array.isArray(this._grid.items) ? this._grid._filter(this._grid.items) : [];\n  }\n\n  /**\n   * Return true if array `a` contains all the items in `b`\n   * We need this when sorting or to preserve selection after filtering.\n   * @private\n   */\n  _arrayContains(a, b) {\n    for (var i = 0; a && b && b[i] && a.indexOf(b[i]) >= 0; i++); // eslint-disable-line\n    return i == b.length;\n  }\n\n  /** @private */\n  _onSelectAllCheckedChanged(e) {\n    this.selectAll = this._indeterminate || e.target.checked;\n  }\n\n  /**\n   * iOS needs indeterminated + checked at the same time\n   * @private\n   */\n  _isChecked(selectAll, indeterminate) {\n    return indeterminate || selectAll;\n  }\n\n  /** @private */\n  _onActiveItemChanged(e) {\n    const activeItem = e.detail.value;\n    if (this.autoSelect) {\n      const item = activeItem || this._previousActiveItem;\n      if (item) {\n        this._grid._toggleItem(item);\n      }\n    }\n    this._previousActiveItem = activeItem;\n  }\n\n  /** @private */\n  _onSelectedItemsChanged(e) {\n    this._selectAllChangeLock = true;\n    if (Array.isArray(this._grid.items)) {\n      if (!this._grid.selectedItems.length) {\n        this.selectAll = false;\n        this._indeterminate = false;\n      } else if (this._arrayContains(this._grid.selectedItems, this._grid._filter(this._grid.items))) {\n        this.selectAll = true;\n        this._indeterminate = false;\n      } else {\n        this.selectAll = false;\n        this._indeterminate = true;\n      }\n    }\n    this._selectAllChangeLock = false;\n  }\n\n  /** @private */\n  _onDataProviderChanged(e) {\n    this._selectAllHidden = !Array.isArray(this._grid.items);\n  }\n}\n\ncustomElements.define(GridSelectionColumnElement.is, GridSelectionColumnElement);\n\nexport { GridSelectionColumnElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const SelectionMixin = superClass => class SelectionMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * An array that contains the selected items.\n       * @type {Array<GridItem>}\n       */\n      selectedItems: {\n        type: Object,\n        notify: true,\n        value: () => []\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_selectedItemsChanged(selectedItems.*)'\n    ];\n  }\n\n  /**\n   * @param {!GridItem} item\n   * @return {boolean}\n   * @protected\n   */\n  _isSelected(item) {\n    return this.selectedItems && this._getItemIndexInArray(item, this.selectedItems) > -1;\n  }\n\n  /**\n   * Selects the given item.\n   *\n   * @method selectItem\n   * @param {!GridItem} item The item object\n   */\n  selectItem(item) {\n    if (!this._isSelected(item)) {\n      this.push('selectedItems', item);\n    }\n  }\n\n  /**\n   * Deselects the given item if it is already selected.\n   *\n   * @method deselect\n   * @param {!GridItem} item The item object\n   */\n  deselectItem(item) {\n    const index = this._getItemIndexInArray(item, this.selectedItems);\n    if (index > -1) {\n      this.splice('selectedItems', index, 1);\n    }\n  }\n\n  /**\n   * Toggles the selected state of the given item.\n   *\n   * @method toggle\n   * @param {!GridItem} item The item object\n   * @protected\n   */\n  _toggleItem(item) {\n    const index = this._getItemIndexInArray(item, this.selectedItems);\n    if (index === -1) {\n      this.selectItem(item);\n    } else {\n      this.deselectItem(item);\n    }\n  }\n\n  /** @private */\n  _selectedItemsChanged(e) {\n    if (this.$.items.children.length && (e.path === 'selectedItems' || e.path === 'selectedItems.splices')) {\n      Array.from(this.$.items.children).forEach(row => {\n        this._updateItem(row, row._item);\n      });\n    }\n  }\n\n  /** @private */\n  _selectedInstanceChangedCallback(instance, value) {\n    if (super._selectedInstanceChangedCallback) {\n      super._selectedInstanceChangedCallback(instance, value);\n    }\n    if (value) {\n      this.selectItem(instance.item);\n    } else {\n      this.deselectItem(instance.item);\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GridColumnElement } from './vaadin-grid-column.js';\n\nimport './vaadin-grid-sorter.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-grid-sort-column>` is a helper element for the `<vaadin-grid>`\n * that provides default header template and functionality for sorting.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-sort-column path=\"name.first\" direction=\"asc\"></vaadin-grid-sort-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n *\n */\nclass GridSortColumnElement extends GridColumnElement {\n  static get template() {\n    return html`\n    <template class=\"header\" id=\"headerTemplate\">\n      <vaadin-grid-sorter path=\"[[path]]\" direction=\"{{direction}}\">[[_getHeader(header, path)]]</vaadin-grid-sorter>\n    </template>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-sort-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        notify: true\n      }\n    };\n  }\n\n  /** @private */\n  _prepareHeaderTemplate() {\n    const headerTemplate = this._prepareTemplatizer(this.$.headerTemplate);\n    // needed to override the dataHost correctly in case internal template is used.\n    headerTemplate.templatizer.dataHost = this;\n    return headerTemplate;\n  }\n\n  /** @private */\n  _getHeader(header, path) {\n    return header || this._generateHeader(path);\n  }\n}\n\ncustomElements.define(GridSortColumnElement.is, GridSortColumnElement);\n\nexport { GridSortColumnElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\n\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * @polymerMixin\n */\nexport const SortMixin = superClass => class SortMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n       * @attr {boolean} multi-sort\n       * @type {boolean}\n       */\n      multiSort: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * @type {!Array<!GridSorter>}\n       * @protected\n       */\n      _sorters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      /** @private */\n      _previousSorters: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('sorter-changed', this._onSorterChanged);\n\n    // With Polymer 2 & shady the 'sorter-changed' listener isn't guaranteed to be registered\n    // before child <vaadin-grid-sorter>'s upgrade and fire the events. The following\n    // makes sure that 'sorter-changed' is fired for all <vaadin-grid-sorter> elements\n    // after this (<vaadin-grid>) is ready (and the listeners are active).\n    if (window.ShadyDOM) {\n      microTask.run(() => {\n        const sorters = this.querySelectorAll('vaadin-grid-sorter');\n        Array.from(sorters).forEach((sorter) => {\n          // Don't try to fire if the sorter hasn't been upgraded yet\n          if (sorter instanceof PolymerElement) {\n            sorter.dispatchEvent(new CustomEvent('sorter-changed', {bubbles: true, composed: true}));\n          }\n        });\n      });\n    }\n  }\n\n  /** @private */\n  _onSorterChanged(e) {\n    const sorter = e.target;\n\n    this._removeArrayItem(this._sorters, sorter);\n    sorter._order = null;\n\n    if (this.multiSort) {\n      if (sorter.direction) {\n        this._sorters.unshift(sorter);\n      }\n\n      this._sorters.forEach((sorter, index) => sorter._order = this._sorters.length > 1 ? index : null, this);\n    } else {\n      if (sorter.direction) {\n        this._sorters.forEach(sorter => {\n          sorter._order = null;\n          sorter.direction = null;\n        });\n        this._sorters = [sorter];\n      }\n    }\n\n    e.stopPropagation();\n\n    if (this.dataProvider &&\n      // No need to clear cache if sorters didn't change\n      JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())) {\n      this.clearCache();\n    }\n\n    this._a11yUpdateSorters();\n\n    this._previousSorters = this._mapSorters();\n  }\n\n  /**\n   * @return {!Array<!GridSorter>}\n   * @protected\n   */\n  _mapSorters() {\n    return this._sorters.map(sorter => {\n      return {\n        path: sorter.path,\n        direction: sorter.direction\n      };\n    });\n  }\n\n  /** @private */\n  _removeArrayItem(array, item) {\n    const index = array.indexOf(item);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: 'vaadin-grid-sorter-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQwAA0AAAAABuwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAEFAAAABkAAAAcfep+mUdERUYAAAP4AAAAHAAAAB4AJwAOT1MvMgAAAZgAAAA/AAAAYA8TBPpjbWFwAAAB7AAAAFUAAAFeF1fZ4mdhc3AAAAPwAAAACAAAAAgAAAAQZ2x5ZgAAAlgAAABcAAAAnMvguMloZWFkAAABMAAAAC8AAAA2C5Ap72hoZWEAAAFgAAAAHQAAACQGbQPHaG10eAAAAdgAAAAUAAAAHAoAAABsb2NhAAACRAAAABIAAAASAIwAYG1heHAAAAGAAAAAFgAAACAACwAKbmFtZQAAArQAAAECAAACZxWCgKhwb3N0AAADuAAAADUAAABZCrApUXicY2BkYGAA4rDECVrx/DZfGbhZGEDgyqNPOxH0/wNMq5kPALkcDEwgUQBWRA0dAHicY2BkYGA+8P8AAwMLAwgwrWZgZEAFbABY4QM8AAAAeJxjYGRgYOAAQiYGEICQSAAAAi8AFgAAeJxjYGY6yziBgZWBgWkm0xkGBoZ+CM34msGYkZMBFTAKoAkwODAwvmRiPvD/AIMDMxCD1CDJKjAwAgBktQsXAHicY2GAAMZQCM0EwqshbAALxAEKeJxjYGBgZoBgGQZGBhCIAPIYwXwWBhsgzcXAwcAEhIwMCi+Z/v/9/x+sSuElA4T9/4k4K1gHFwMMMILMY2QDYmaoABOQYGJABUA7WBiGNwAAJd4NIQAAAAAAAAAACAAIABAAGAAmAEAATgAAeJyNjLENgDAMBP9tIURJwQCMQccSZgk2i5fIYBDAidJjycXr7x5EPwE2wY8si7jmyBNXGo/bNBerxJNrpxhbO3/fEFpx8ZICpV+ghxJ74fAMe+h7Ox14AbrsHB14nK2QQWrDMBRER4mTkhQK3ZRQKOgCNk7oGQqhhEIX2WSlWEI1BAlkJ5CDdNsj5Ey9Rncdi38ES+jzNJo/HwTgATcoDEthhY3wBHc4CE+pfwsX5F/hGe7Vo/AcK/UhvMSz+mGXKhZU6pww8ISz3oWn1BvhgnwTnuEJf8Jz1OpFeIlX9YULDLdFi4ASHolkSR0iuYdjLak1vAequBhj21D61Nqyi6l3qWybGPjySbPHGScGJl6dP58MYcQRI0bts7mjebBqrFENH7t3qWtj0OuqHnXcW7b0HOTZFnKryRGW2hFX1m0O2vEM3opNMfTau+CS6Z3Vx6veNnEXY6jwDxhsc2gAAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSrpYEBlIbxjQDrzgsuAAAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKyoz1cD0o087YTQATOcIewAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n/**\n * `<vaadin-grid-sorter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\n * visual feedback, and handlers for sorting the grid data.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">\n *     <vaadin-grid-sorter path=\"name.first\">First name</vaadin-grid-sorter>\n *   </template>\n *   <template>[[item.name.first]]</template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `content` | The slotted content wrapper\n * `indicators` | The internal sorter indicators.\n * `order` | The internal sorter order\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `direction` | Sort direction of a sorter | :host\n *\n * @extends PolymerElement\n */\nclass GridSorterElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        cursor: pointer;\n        max-width: 100%;\n      }\n\n      [part=\"content\"] {\n        flex: 1 1 auto;\n      }\n\n      [part=\"indicators\"] {\n        position: relative;\n        align-self: center;\n        flex: none;\n      }\n\n      [part=\"order\"] {\n        display: inline;\n        vertical-align: super;\n      }\n\n      [part=\"indicators\"]::before {\n        font-family: 'vaadin-grid-sorter-icons';\n        display: inline-block;\n      }\n\n      :host(:not([direction])) [part=\"indicators\"]::before {\n        content: \"\\\\e901\";\n      }\n\n      :host([direction=asc]) [part=\"indicators\"]::before {\n        content: \"\\\\e900\";\n      }\n\n      :host([direction=desc]) [part=\"indicators\"]::before {\n        content: \"\\\\e902\";\n      }\n    </style>\n\n    <div part=\"content\">\n      <slot></slot>\n    </div>\n    <div part=\"indicators\">\n      <span part=\"order\">[[_getDisplayOrder(_order)]]</span>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-sorter';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        reflectToAttribute: true,\n        notify: true,\n        value: null\n      },\n\n      /**\n       * @type {number | null}\n       * @protected\n       */\n      _order: {\n        type: Number,\n        value: null\n      },\n\n      /** @private */\n      _isConnected: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_pathOrDirectionChanged(path, direction, _isConnected)',\n      '_directionOrOrderChanged(direction, _order)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('click', this._onClick.bind(this));\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._isConnected = true;\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._isConnected = false;\n  }\n\n  /** @private */\n  _pathOrDirectionChanged(path, direction, isConnected) {\n    if (path === undefined || direction === undefined || isConnected === undefined) {\n      return;\n    }\n\n    if (isConnected) {\n      this.dispatchEvent(new CustomEvent('sorter-changed', {bubbles: true, composed: true}));\n    }\n  }\n\n  /** @private */\n  _getDisplayOrder(order) {\n    return order === null ? '' : order + 1;\n  }\n\n  /** @private */\n  _onClick(e) {\n    const activeElement = this.getRootNode().activeElement;\n    if (this !== activeElement && this.contains(activeElement)) {\n      // Some focusable content inside the sorter was clicked, do nothing.\n      return;\n    }\n\n    e.preventDefault();\n    if (this.direction === 'asc') {\n      this.direction = 'desc';\n    } else if (this.direction === 'desc') {\n      this.direction = null;\n    } else {\n      this.direction = 'asc';\n    }\n  }\n\n  /** @private */\n  _directionOrOrderChanged(direction, order) {\n    if (direction === undefined || order === undefined) {\n      return;\n    }\n\n    // Safari has an issue with repainting shadow root element styles when a host attribute changes.\n    // Need this workaround (toggle any inline css property on and off) until the issue gets fixed.\n    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    if (isSafari && this.root) {\n      this.root.querySelectorAll('*').forEach(function(el) {\n        el.style['-webkit-backface-visibility'] = 'visible';\n        el.style['-webkit-backface-visibility'] = '';\n      });\n    }\n  }\n}\n\ncustomElements.define(GridSorterElement.is, GridSorterElement);\n\nexport { GridSorterElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/lib/elements/dom-module.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nconst VaadinGridStyles = document.createElement('dom-module');\n\n// NOTE(web-padawan): https://github.com/vaadin/vaadin-grid/issues/1514\nVaadinGridStyles.appendChild(\n  html`\n  <style>\n    @keyframes vaadin-grid-appear {\n      to {\n        opacity: 1;\n      }\n    }\n\n    :host {\n      display: block;\n      animation: 1ms vaadin-grid-appear;\n      height: 400px;\n      flex: 1 1 auto;\n      align-self: stretch;\n      position: relative;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    #scroller {\n      display: block;\n      transform: translateY(0);\n      width: auto;\n      height: auto;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    :host([height-by-rows]) {\n      height: auto;\n      align-self: flex-start;\n      flex-grow: 0;\n      width: 100%;\n    }\n\n    :host([height-by-rows]) #scroller {\n      width: 100%;\n      height: 100%;\n      position: relative;\n    }\n\n    #table {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      position: relative;\n      outline: none;\n      /* Workaround for a Desktop Safari bug: new stacking context here prevents the scrollbar from getting hidden */\n      z-index: 0;\n    }\n\n    #header,\n    #footer {\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      left: 0;\n      overflow: visible;\n      width: 100%;\n      z-index: 1;\n    }\n\n    #header {\n      top: 0;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    /* Safari doesn't work with \"inherit\" */\n    [safari] th {\n      text-align: initial;\n    }\n\n    #footer {\n      bottom: 0;\n    }\n\n    #items {\n      flex-grow: 1;\n      flex-shrink: 0;\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      width: 100%;\n      left: 0;\n      overflow: visible;\n    }\n\n    [part~=\"row\"] {\n      display: flex;\n      width: 100%;\n      box-sizing: border-box;\n      margin: 0;\n    }\n\n    [part~=\"row\"][loading] [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\n      opacity: 0;\n    }\n\n    #items [part~=\"row\"] {\n      position: absolute;\n    }\n\n    #items [part~=\"row\"]:empty {\n      height: 1em;\n    }\n\n    [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n      flex-shrink: 0;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      position: relative;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n    }\n\n    [part~=\"details-cell\"] {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    [frozen] {\n      z-index: 2;\n      will-change: transform;\n    }\n\n    [no-scrollbars][safari] #table,\n    [no-scrollbars][firefox] #table {\n      overflow: hidden;\n    }\n\n    /* Reordering styles */\n    :host([reordering]) [part~=\"cell\"] ::slotted(vaadin-grid-cell-content),\n    :host([reordering]) [part~=\"resize-handle\"],\n    #scroller[no-content-pointer-events] [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      pointer-events: none;\n    }\n\n    [part~=\"reorder-ghost\"] {\n      visibility: hidden;\n      position: fixed;\n      pointer-events: none;\n      opacity: 0.5;\n\n      /* Prevent overflowing the grid in Firefox */\n      top: 0;\n      left: 0;\n    }\n\n    :host([reordering]) {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    #scroller[ie][column-reordering-allowed] [part~=\"header-cell\"] {\n      -ms-user-select: none;\n    }\n\n    /* Resizing styles */\n    [part~=\"resize-handle\"] {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      cursor: col-resize;\n      z-index: 1;\n    }\n\n    [part~=\"resize-handle\"]::before {\n      position: absolute;\n      content: \"\";\n      height: 100%;\n      width: 35px;\n      transform: translateX(-50%);\n    }\n\n    [last-column] [part~=\"resize-handle\"]::before,\n    [last-frozen] [part~=\"resize-handle\"]::before {\n      width: 18px;\n      transform: none;\n      right: 0;\n    }\n\n    #scroller[column-resizing] {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Sizer styles */\n    #sizer {\n      display: flex;\n      position: absolute;\n      visibility: hidden;\n    }\n\n    #sizer [part~=\"details-cell\"] {\n      display: none !important;\n    }\n\n    #sizer [part~=\"cell\"][hidden] {\n      display: none !important;\n    }\n\n    #sizer [part~=\"cell\"] {\n      display: block;\n      flex-shrink: 0;\n      line-height: 0;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      padding: 0 !important;\n      border: none !important;\n    }\n\n    #sizer [part~=\"cell\"]::before {\n      content: \"-\";\n    }\n\n    #sizer [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      display: none !important;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir=\"rtl\"]) #items,\n    :host([dir=\"rtl\"]) #header,\n    :host([dir=\"rtl\"]) #footer {\n      left: auto;\n    }\n\n    :host([dir=\"rtl\"]) [part~=\"reorder-ghost\"] {\n      left: auto;\n      right: 0;\n    }\n\n    :host([dir=\"rtl\"]) [part~=\"resize-handle\"] {\n      left: 0;\n      right: auto;\n    }\n\n    :host([dir=\"rtl\"]) [part~=\"resize-handle\"]::before {\n      transform: translateX(50%);\n    }\n\n    :host([dir=\"rtl\"]) [last-column] [part~=\"resize-handle\"]::before,\n    :host([dir=\"rtl\"]) [last-frozen] [part~=\"resize-handle\"]::before {\n      left: 0;\n      right: auto;\n    }\n  </style>\n`);\n\nVaadinGridStyles.register('vaadin-grid-styles');\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * @polymerMixin\n */\nexport const StylingMixin = superClass => class StylingMixin extends superClass {\n\n  static get properties() {\n    return {\n      /**\n       * A function that allows generating CSS class names for grid cells\n       * based on their row and column. The return value should be the generated\n       * class name as a string, or multiple class names separated by whitespace\n       * characters.\n       *\n       * Receives two arguments:\n       * - `column` The `<vaadin-grid-column>` element (`undefined` for details-cell).\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *\n       * @type {GridCellClassNameGenerator | null | undefined}\n       */\n      cellClassNameGenerator: Function\n    };\n  }\n\n  static get observers() {\n    return [\n      '__cellClassNameGeneratorChanged(cellClassNameGenerator)'\n    ];\n  }\n\n  __cellClassNameGeneratorChanged(cellClassGenerator) {\n    this.generateCellClassNames();\n  }\n\n  /**\n   * Runs the `cellClassNameGenerator` for the visible cells.\n   * If the generator depends on varying conditions, you need to\n   * call this function manually in order to update the styles when\n   * the conditions change.\n   */\n  generateCellClassNames() {\n    Array.from(this.$.items.children).filter(row => !row.hidden).forEach(\n      row => this._generateCellClassNames(row, this.__getRowModel(row)));\n  }\n\n  /** @private */\n  _generateCellClassNames(row, model) {\n    Array.from(row.children).forEach(cell => {\n      if (cell.__generatedClasses) {\n        cell.__generatedClasses.forEach(className => cell.classList.remove(className));\n      }\n      if (this.cellClassNameGenerator) {\n        const result = this.cellClassNameGenerator(cell._column, model);\n        cell.__generatedClasses = result && result.split(' ').filter(className => className.length > 0);\n        if (cell.__generatedClasses) {\n          cell.__generatedClasses.forEach(className => cell.classList.add(className));\n        }\n      }\n    });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\n/**\n * `vaadin-grid-templatizer` is a helper element for the `vaadin-grid` that is preparing and\n * stamping instances of cells and columns templates\n *\n * @extends PolymerElement\n * @private\n */\nclass GridTemplatizer extends (class extends PolymerElement {}) {\n  static get is() {\n    return 'vaadin-grid-templatizer';\n  }\n\n  static get properties() {\n    return {\n      dataHost: Object,\n\n      template: Object,\n\n      _templateInstances: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n\n      _parentPathValues: {\n        value: function() {\n          return {};\n        }\n      },\n\n      _grid: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_templateInstancesChanged(_templateInstances.*, _parentPathValues.*)'\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this._instanceProps = {\n      detailsOpened: true,\n      index: true,\n      item: true,\n      selected: true,\n      expanded: true,\n      level: true\n    };\n  }\n\n  createInstance() {\n    this._ensureTemplatized();\n    const instance = new this._TemplateClass({});\n    this.addInstance(instance);\n\n    return instance;\n  }\n\n  addInstance(instance) {\n    if (this._templateInstances.indexOf(instance) === -1) {\n      this._templateInstances.push(instance);\n      requestAnimationFrame(() => this.notifyPath('_templateInstances.*', this._templateInstances));\n    }\n  }\n\n  removeInstance(instance) {\n    const index = this._templateInstances.indexOf(instance);\n    this.splice('_templateInstances', index, 1);\n  }\n\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      this._TemplateClass = templatize(this.template, this, {\n        instanceProps: this._instanceProps,\n        parentModel: true,\n\n        forwardHostProp: function(prop, value) {\n          this._forwardParentProp(prop, value);\n\n          if (this._templateInstances) {\n            this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n          }\n        },\n\n        notifyInstanceProp: function(inst, prop, value) {\n          if (prop === 'index' || prop === 'item') {\n            // We don’t need a change notification for these.\n            return;\n          }\n\n          const originalProp = `__${prop}__`;\n\n          // Notify for only user-action changes, not for scrolling updates. E. g.,\n          // if `detailsOpened` is different from `__detailsOpened__`, which was set during render.\n          if (inst[originalProp] === value) {\n            return;\n          }\n          inst[originalProp] = value;\n\n          const row = Array.from(this._grid.$.items.children).filter(row => this._grid._itemsEqual(row._item, inst.item))[0];\n          if (row) {\n            Array.from(row.children).forEach(cell => {\n              if (cell._instance) {\n                cell._instance[originalProp] = value;\n                cell._instance.notifyPath(prop, value);\n              }\n            });\n          }\n\n          const itemPrefix = 'item.';\n          if (Array.isArray(this._grid.items) && prop.indexOf(itemPrefix) === 0) {\n            const itemsIndex = this._grid.items.indexOf(inst.item);\n            const path = prop.slice(itemPrefix.length);\n            this._grid.notifyPath(`items.${itemsIndex}.${path}`, value);\n          }\n\n          const gridCallback = `_${prop}InstanceChangedCallback`;\n          if (this._grid && this._grid[gridCallback]) {\n            this._grid[gridCallback](inst, value);\n          }\n        }\n\n      });\n    }\n  }\n\n  _forwardParentProp(prop, value) {\n    this._parentPathValues[prop] = value;\n    this._templateInstances.forEach(inst => inst.notifyPath(prop, value));\n  }\n\n  _templateInstancesChanged(t, p) {\n    let index, count;\n    if (t.path === '_templateInstances') {\n      // Iterate all instances\n      index = 0;\n      count = this._templateInstances.length;\n    } else if (t.path === '_templateInstances.splices') {\n      // Iterate only new instances\n      index = t.value.index;\n      count = t.value.addedCount;\n    } else {\n      return;\n    }\n    Object.keys(this._parentPathValues || {}).forEach(keyName => {\n      for (var i = index; i < index + count; i++) {\n        this._templateInstances[i].set(keyName, this._parentPathValues[keyName]);\n      }\n    });\n  }\n\n}\n\ncustomElements.define(GridTemplatizer.is, GridTemplatizer);\n\nexport { GridTemplatizer as Templatizer };\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GridColumnElement } from './vaadin-grid-column.js';\n\nimport './vaadin-grid-tree-toggle.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-grid-tree-column>` is a helper element for the `<vaadin-grid>`\n * that provides default template and functionality for toggling tree/hierarchical items.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-tree-column path=\"name.first\"></vaadin-grid-tree-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n *\n */\nclass GridTreeColumnElement extends GridColumnElement {\n  static get template() {\n    return html`\n    <template id=\"template\">\n      <vaadin-grid-tree-toggle leaf=\"[[__isLeafItem(item, itemHasChildrenPath)]]\" expanded=\"{{expanded}}\" level=\"[[level]]\">\n        [[__getToggleContent(path, item)]]\n      </vaadin-grid-tree-toggle>\n    </template>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used as text content for the tree toggle.\n       */\n      path: String,\n\n      /**\n       * JS Path of the property in the item that indicates whether the item has child items.\n       * @attr {string} item-has-children-path\n       */\n      itemHasChildrenPath: {\n        type: String,\n        value: 'children'\n      }\n    };\n  }\n\n  /** @private */\n  _prepareBodyTemplate() {\n    const template = this._prepareTemplatizer(this.$.template);\n    // needed to override the dataHost correctly in case internal template is used.\n    template.templatizer.dataHost = this;\n    return template;\n  }\n\n  __isLeafItem(item, itemHasChildrenPath) {\n    return !(item && item[itemHasChildrenPath]);\n  }\n\n  __getToggleContent(path, item) {\n    return path && this.get(path, item);\n  }\n}\n\ncustomElements.define(GridTreeColumnElement.is, GridTreeColumnElement);\n\nexport { GridTreeColumnElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { isFocusable } from './vaadin-grid-active-item-mixin.js';\nimport { microTask } from '@polymer/polymer/lib/utils/async.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: \"vaadin-grid-tree-icons\";\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQkAA0AAAAABrwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAECAAAABoAAAAcgHwa6EdERUYAAAPsAAAAHAAAAB4AJwAOT1MvMgAAAZQAAAA/AAAAYA8TBIJjbWFwAAAB8AAAAFUAAAFeGJvXWmdhc3AAAAPkAAAACAAAAAgAAAAQZ2x5ZgAAAlwAAABLAAAAhIrPOhFoZWFkAAABMAAAACsAAAA2DsJI02hoZWEAAAFcAAAAHQAAACQHAgPHaG10eAAAAdQAAAAZAAAAHAxVAgBsb2NhAAACSAAAABIAAAASAIAAVG1heHAAAAF8AAAAGAAAACAACgAFbmFtZQAAAqgAAAECAAACTwflzbdwb3N0AAADrAAAADYAAABZQ7Ajh3icY2BkYGAA4twv3Vfi+W2+MnCzMIDANSOmbGSa2YEZRHEwMIEoAAoiB6sAeJxjYGRgYD7w/wADAwsDCDA7MDAyoAI2AFEEAtIAAAB4nGNgZGBg4GBgZgDRDAxMDGgAAAGbABB4nGNgZp7JOIGBlYGBaSbTGQYGhn4IzfiawZiRkwEVMAqgCTA4MDA+38d84P8BBgdmIAapQZJVYGAEAGc/C54AeJxjYYAAxlAIzQTELAwMBxgZGB0ACy0BYwAAAHicY2BgYGaAYBkGRgYQiADyGMF8FgYbIM3FwMHABISMDArP9/3/+/8/WJXC8z0Q9v8nEp5gHVwMMMAIMo+RDYiZoQJMQIKJARUA7WBhGN4AACFKDtoAAAAAAAAAAAgACAAQABgAJgA0AEIAAHichYvBEYBADAKBVHBjBT4swl9KS2k05o0XHd/yW1hAfBFwCv9sIlJu3nZaNS3PXAaXXHI8Lge7DlzF7C1RgXc7xkK6+gvcD2URmQB4nK2RQWoCMRiFX3RUqtCli65yADModOMBLLgQSqHddRFnQghIAnEUvEA3vUUP0LP0Fj1G+yb8R5iEhO9/ef/7FwFwj28o9EthiVp4hBlehcfUP4Ur8o/wBAv8CU+xVFvhOR7UB7tUdUdlVRJ6HnHWTnhM/V24In8JT5j/KzzFSi2E53hUz7jCcrcIiDDwyKSW1JEct2HdIPH1DFytbUM0PofWdNk5E5oUqb/Q6HHBiVGZpfOXkyUMEj5IyBuNmYZQjBobfsuassvnkKLe1OuBBj0VQ8cRni2xjLWsHaM0jrjx3peYA0/vrdmUYqe9iy7bzrX6eNP7Jh1SijX+AaUVbB8AAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSruZMzlHaB0q4A76kLlwAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKxJigiD6mhFTNowGACmcA/8AAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n/**\n * `<vaadin-grid-tree-toggle>` is a helper element for the `<vaadin-grid>`\n * that provides toggle and level display functionality for the item tree.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">Package name</template>\n *   <template>\n *     <vaadin-grid-tree-toggle\n *         leaf=\"[[!item.hasChildren]]\"\n *         expanded=\"{{expanded}}\"\n *         level=\"[[level]]\">\n *       [[item.name]]\n *     </vaadin-grid-tree-toggle>\n *   </template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `toggle` | The tree toggle icon\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * ---|---|---\n * `expanded` | When present, the toggle is expanded | :host\n * `leaf` | When present, the toggle is not expandable, i. e., the current item is a leaf | :host\n *\n * The following custom CSS properties are available on\n * the `<vaadin-grid-tree-toggle>` element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-grid-tree-toggle-level-offset` | Visual offset step for each tree sublevel | `1em`\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n */\nclass GridTreeToggleElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        align-items: baseline;\n\n        /* CSS API for :host */\n        --vaadin-grid-tree-toggle-level-offset: 1em;\n\n        /*\n          ShadyCSS seems to polyfill :dir(rtl) only for :host, thus using\n          a host custom CSS property for ltr/rtl toggle icon choice.\n         */\n        ---collapsed-icon: \"\\\\e7be\\\\00a0\";\n      }\n\n      :host(:dir(rtl)) {\n        ---collapsed-icon: \"\\\\e7bd\\\\00a0\";\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:not([leaf])) {\n        cursor: pointer;\n      }\n\n      #level-spacer,\n      [part=\"toggle\"] {\n        flex: none;\n      }\n\n      #level-spacer {\n        display: inline-block;\n        width: calc(var(---level, '0') * var(--vaadin-grid-tree-toggle-level-offset));\n      }\n\n      [part=\"toggle\"]::before {\n        font-family: \"vaadin-grid-tree-icons\";\n        line-height: 1em; /* make icon font metrics not affect baseline */\n      }\n\n      :host(:not([expanded])) [part=\"toggle\"]::before {\n        content: var(---collapsed-icon);\n      }\n\n      :host([expanded]) [part=\"toggle\"]::before {\n        content: \"\\\\e7bc\\\\00a0\"; /* icon glyph + single non-breaking space */\n      }\n\n      :host([leaf]) [part=\"toggle\"] {\n        visibility: hidden;\n      }\n    </style>\n\n    <span id=\"level-spacer\"></span>\n    <span part=\"toggle\"></span>\n    <slot></slot>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-toggle';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Current level of the tree represented with a horizontal offset\n       * of the toggle button.\n       * @type {number}\n       */\n      level: {\n        type: Number,\n        value: 0,\n        observer: '_levelChanged'\n      },\n\n      /**\n       * Hides the toggle icon and disables toggling a tree sublevel.\n       * @type {boolean}\n       */\n      leaf: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Sublevel toggle state.\n       * @type {boolean}\n       */\n      expanded: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('click', e => this._onClick(e));\n  }\n\n  /** @private */\n  _onClick(e) {\n    if (this.leaf) {\n      return;\n    }\n    if (isFocusable(e.target)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.expanded = !this.expanded;\n  }\n\n  /** @private */\n  _levelChanged(level) {\n    const value = Number(level).toString();\n    this.style['---level'] = value;\n    // Async is to make DOM updates applied before evaluating the style\n    // update, required for polyfilled RTL support in MSIE and Edge.\n    this._debouncerUpdateLevel = Debouncer.debounce(\n      this._debouncerUpdateLevel,\n      microTask,\n      () => this.updateStyles({'---level': value})\n    );\n  }\n}\n\ncustomElements.define(GridTreeToggleElement.is, GridTreeToggleElement);\n\nexport { GridTreeToggleElement };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ScrollerElement } from './vaadin-grid-scroller.js';\nimport { A11yMixin } from './vaadin-grid-a11y-mixin.js';\nimport { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';\nimport { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';\nimport { ColumnResizingMixin } from './vaadin-grid-column-resizing-mixin.js';\nimport { DataProviderMixin } from './vaadin-grid-data-provider-mixin.js';\nimport { DynamicColumnsMixin } from './vaadin-grid-dynamic-columns-mixin.js';\nimport { EventContextMixin } from './vaadin-grid-event-context-mixin.js';\nimport { FilterMixin } from './vaadin-grid-filter-mixin.js';\nimport { RowDetailsMixin } from './vaadin-grid-row-details-mixin.js';\nimport { ScrollMixin } from './vaadin-grid-scroll-mixin.js';\nimport { SelectionMixin } from './vaadin-grid-selection-mixin.js';\nimport { SortMixin } from './vaadin-grid-sort-mixin.js';\nimport { StylingMixin } from './vaadin-grid-styling-mixin.js';\nimport { DragAndDropMixin } from './vaadin-grid-drag-and-drop-mixin.js';\nimport { KeyboardNavigationMixin } from './vaadin-grid-keyboard-navigation-mixin.js';\nimport { ColumnReorderingMixin } from './vaadin-grid-column-reordering-mixin.js';\nimport './vaadin-grid-column.js';\nimport './vaadin-grid-styles.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\n\nconst TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n *\n * `<vaadin-grid>` is a free, high quality data grid / data table Web Component. The content of the\n * the grid can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Quick Start\n *\n * Start with an assigning an array to the [`items`](#/elements/vaadin-grid#property-items) property to visualize your data.\n *\n * Use the [`<vaadin-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`\n * shorthand properties for the columns to define what gets rendered in the cells of the column.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column path=\"name.first\" header=\"First name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"name.last\" header=\"Last name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"email\"></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * For custom content `vaadin-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,\n * `renderer` and `footerRenderer`.\n *\n * Each of those renderer functions provides `root`, `column`, `model` arguments when applicable.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `column`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * Renderers are called on initialization of new column cells and each time the\n * related row model is updated. DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n * ```js\n * const grid = document.querySelector('vaadin-grid');\n * grid.items = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'},\n *               {'name': 'Ringo', 'surname': 'Starr', 'role': 'drums'}];\n *\n * const columns = grid.querySelectorAll('vaadin-grid-column');\n *\n * columns[0].headerRenderer = function(root) {\n *   root.textContent = 'Name';\n * };\n * columns[0].renderer = function(root, column, model) {\n *   root.textContent = model.item.name;\n * };\n *\n * columns[1].headerRenderer = function(root) {\n *   root.textContent = 'Surname';\n * };\n * columns[1].renderer = function(root, column, model) {\n *   root.textContent = model.item.surname;\n * };\n *\n * columns[2].headerRenderer = function(root) {\n *   root.textContent = 'Role';\n * };\n * columns[2].renderer = function(root, column, model) {\n *   root.textContent = model.item.role;\n * };\n * ```\n *\n * Alternatively, the content can be provided with Polymer's Templates:\n *\n * #### Example:\n * ```html\n * <vaadin-grid items='[{\"name\": \"John\", \"surname\": \"Lennon\", \"role\": \"singer\"},\n * {\"name\": \"Ringo\", \"surname\": \"Starr\", \"role\": \"drums\"}]'>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Name</template>\n *     <template>[[item.name]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Surname</template>\n *     <template>[[item.surname]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Role</template>\n *     <template>[[item.role]]</template>\n *   </vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * The following helper elements can be used for further customization:\n * - [`<vaadin-grid-column-group>`](#/elements/vaadin-grid-column-group)\n * - [`<vaadin-grid-filter>`](#/elements/vaadin-grid-filter)\n * - [`<vaadin-grid-sorter>`](#/elements/vaadin-grid-sorter)\n * - [`<vaadin-grid-selection-column>`](#/elements/vaadin-grid-selection-column)\n * - [`<vaadin-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)\n *\n * __Note that the helper elements must be explicitly imported.__\n * If you want to import everything at once you can use the `all-imports.html` bundle.\n *\n * A column template can be decorated with one the following class names to specify its purpose\n * - `header`: Marks a header template\n * - `footer`: Marks a footer template\n * - `row-details`: Marks a row details template\n *\n * The following built-in template variables can be bound to inside the column templates:\n * - `[[index]]`: Number representing the row index\n * - `[[item]]` and it's sub-properties: Data object (provided by a data provider / items array)\n * - `{{selected}}`: True if the item is selected (can be two-way bound)\n * - `{{detailsOpened}}`: True if the item has row details opened (can be two-way bound)\n * - `{{expanded}}`: True if the item has tree sublevel expanded (can be two-way bound)\n * - `[[level]]`: Number of the tree sublevel of the item, first level-items have 0\n *\n * ### Lazy Loading with Function Data Provider\n *\n * In addition to assigning an array to the items property, you can alternatively\n * provide the `<vaadin-grid>` data through the\n * [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) function property.\n * The `<vaadin-grid>` calls this function lazily, only when it needs more data\n * to be displayed.\n *\n * See the [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) in\n * the API reference below for the detailed data provider arguments description,\n * and the “Assigning Data” page in the demos.\n *\n * __Note that expanding the tree grid's item will trigger a call to the `dataProvider`.__\n *\n * __Also, note that when using function data providers, the total number of items\n * needs to be set manually. The total number of items can be returned\n * in the second argument of the data provider callback:__\n *\n * ```javascript\n * grid.dataProvider = function(params, callback) {\n *   var url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   var xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     var response = JSON.parse(xhr.responseText);\n *     callback(\n *       response.employees, // requested page of items\n *       response.totalSize  // total number of items\n *     );\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * __Alternatively, you can use the `size` property to set the total number of items:__\n *\n * ```javascript\n * grid.size = 200; // The total number of items\n * grid.dataProvider = function(params, callback) {\n *   var url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   var xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     var response = JSON.parse(xhr.responseText);\n *     callback(response.employees);\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `row` | Row in the internal table\n * `cell` | Cell in the internal table\n * `header-cell` | Header cell in the internal table\n * `body-cell` | Body cell in the internal table\n * `footer-cell` | Footer cell in the internal table\n * `details-cell` | Row details cell in the internal table\n * `resize-handle` | Handle for resizing the columns\n * `reorder-ghost` | Ghost element of the header cell being dragged\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `loading` | Set when the grid is loading data from data provider | :host\n * `interacting` | Keyboard navigation in interaction mode | :host\n * `navigating` | Keyboard navigation in navigation mode | :host\n * `overflow` | Set when rows are overflowing the grid viewport. Possible values: `top`, `bottom`, `left`, `right` | :host\n * `reordering` | Set when the grid's columns are being reordered | :host\n * `dragover` | Set when the grid (not a specific row) is dragged over | :host\n * `dragging-rows` : Set when grid rows are dragged  | :host\n * `reorder-status` | Reflects the status of a cell while columns are being reordered | cell\n * `frozen` | Frozen cell | cell\n * `last-frozen` | Last frozen cell | cell\n* * `first-column` | First visible cell on a row | cell\n * `last-column` | Last visible cell on a row | cell\n * `selected` | Selected row | row\n * `expanded` | Expanded row | row\n * `details-opened` | Row with details open | row\n * `loading` | Row that is waiting for data from data provider | row\n * `odd` | Odd row | row\n * `first` | The first body row | row\n * `dragstart` | Set for one frame when drag of a row is starting. The value is a number when multiple rows are dragged | row\n * `dragover` | Set when the row is dragged over | row\n * `drag-disabled` | Set to a row that isn't available for dragging | row\n * `drop-disabled` | Set to a row that can't be dropped on top of | row\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends ScrollerElement\n * @mixes ThemableMixin\n * @mixes A11yMixin\n * @mixes ActiveItemMixin\n * @mixes ArrayDataProviderMixin\n * @mixes ColumnResizingMixin\n * @mixes DataProviderMixin\n * @mixes DynamicColumnsMixin\n * @mixes FilterMixin\n * @mixes RowDetailsMixin\n * @mixes ScrollMixin\n * @mixes SelectionMixin\n * @mixes SortMixin\n * @mixes KeyboardNavigationMixin\n * @mixes ColumnReorderingMixin\n * @mixes EventContextMixin\n * @mixes StylingMixin\n * @mixes DragAndDropMixin\n * @demo demo/index.html\n */\nclass GridElement extends\n  ElementMixin(\n    ThemableMixin(\n      DataProviderMixin(\n        ArrayDataProviderMixin(\n          DynamicColumnsMixin(\n            ActiveItemMixin(\n              ScrollMixin(\n                SelectionMixin(\n                  SortMixin(\n                    RowDetailsMixin(\n                      KeyboardNavigationMixin(\n                        A11yMixin(\n                          FilterMixin(\n                            ColumnReorderingMixin(\n                              ColumnResizingMixin(\n                                EventContextMixin(\n                                  DragAndDropMixin(\n                                    StylingMixin(\n                                      ScrollerElement)))))))))))))))))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-grid-styles\"></style>\n\n    <div id=\"scroller\" safari\\$=\"[[_safari]]\" ios\\$=\"[[_ios]]\" ie\\$=\"[[_ie]]\" loading\\$=\"[[loading]]\" column-reordering-allowed\\$=\"[[columnReorderingAllowed]]\">\n\n      <table id=\"table\" role=\"grid\" aria-multiselectable=\"true\" tabindex=\"0\">\n        <caption id=\"sizer\" part=\"row\"></caption>\n        <thead id=\"header\" role=\"rowgroup\"></thead>\n        <tbody id=\"items\" role=\"rowgroup\"></tbody>\n        <tfoot id=\"footer\" role=\"rowgroup\"></tfoot>\n      </table>\n\n      <div part=\"reorder-ghost\"></div>\n    </div>\n\n    <!-- The template needs at least one slot or else shady doesn't distribute -->\n    <slot name=\"nodistribute\"></slot>\n\n    <div id=\"focusexit\" tabindex=\"0\"></div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid';\n  }\n\n  static get version() {\n    return '5.7.5';\n  }\n\n  static get observers() {\n    return [\n      '_columnTreeChanged(_columnTree, _columnTree.*)'\n    ];\n  }\n\n  static get properties() {\n    return {\n      /** @private */\n      _safari: {\n        type: Boolean,\n        value: /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n      },\n\n      /** @private */\n      _ios: {\n        type: Boolean,\n        value: (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)\n          || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)\n      },\n\n      /** @private */\n      _edge: {\n        type: Boolean,\n        value: typeof CSS !== 'undefined' && CSS.supports('(-ms-ime-align:auto)')\n      },\n\n      /** @private */\n      _ie: {\n        type: Boolean,\n        value: !!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/))\n      },\n\n      /** @private */\n      _firefox: {\n        type: Boolean,\n        value: navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n      },\n\n      /** @private */\n      _android: {\n        type: Boolean,\n        value: /android/i.test(navigator.userAgent)\n      },\n\n      /** @private */\n      _touchDevice: {\n        type: Boolean,\n        value: TOUCH_DEVICE\n      },\n\n      /**\n       * If true, the grid's height is defined by its rows.\n       *\n       * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n       * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n       * @attr {boolean} height-by-rows\n       * @type {boolean}\n       */\n      heightByRows: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_heightByRowsChanged'\n      },\n\n      /** @private */\n      _recalculateColumnWidthOnceLoadingFinished: {\n        type: Boolean,\n        value: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__isRTL = newValue === 'rtl';\n      this._updateScrollerMeasurements();\n    }\n  }\n\n  /** @private */\n  __hasRowsWithClientHeight() {\n    return !!Array.from(this.$.items.children).filter(row => row.clientHeight).length;\n  }\n\n  /** @protected */\n  __itemsReceived() {\n    if (this._recalculateColumnWidthOnceLoadingFinished\n      && !this._cache.isLoading()\n      && this.__hasRowsWithClientHeight()) {\n      this._recalculateColumnWidthOnceLoadingFinished = false;\n      this.recalculateColumnWidths();\n    }\n  }\n\n  /**\n   * @param {!Array<!GridColumnElement>} cols the columns to auto size based on their content width\n   * @private\n   */\n  _recalculateColumnWidths(cols) {\n    // Note: The `cols.forEach()` loops below could be implemented as a single loop but this has been\n    // split for performance reasons to batch these similar actions [write/read] together to avoid\n    // unnecessary layout trashing.\n\n    // [write] Set automatic width for all cells (breaks column alignment)\n    cols.forEach(col => {\n      col.width = 'auto';\n      col._origFlexGrow = col.flexGrow;\n      col.flexGrow = 0;\n    });\n    // [read] Measure max cell width in each column\n    cols.forEach(col => {\n      col._currentWidth = 0;\n      // Note: _allCells only contains cells which are currently rendered in DOM\n      col._allCells.forEach(c => {\n        // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n        const cellWidth = c.offsetWidth + 1;\n        col._currentWidth = Math.max(col._currentWidth, cellWidth);\n      });\n    });\n    // [write] Set column widths to fit widest measured content\n    cols.forEach(col => {\n      col.width = `${col._currentWidth}px`;\n      col.flexGrow = col._origFlexGrow;\n      col._currentWidth = undefined;\n      col._origFlexGrow = undefined;\n    });\n  }\n\n  /**\n   * Updates the `width` of all columns which have `autoWidth` set to `true`.\n   */\n  recalculateColumnWidths() {\n    if (!this._columnTree) {\n      return; // No columns\n    }\n    if (this._cache.isLoading()) {\n      this._recalculateColumnWidthOnceLoadingFinished = true;\n    } else {\n      const cols = this._getColumns().filter(col => !col.hidden && col.autoWidth);\n      this._recalculateColumnWidths(cols);\n    }\n  }\n\n  /** @private */\n  _createScrollerRows(count) {\n    const rows = [];\n    for (var i = 0; i < count; i++) {\n      const row = document.createElement('tr');\n      row.setAttribute('part', 'row');\n      row.setAttribute('role', 'row');\n      if (this._columnTree) {\n        this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n      }\n      rows.push(row);\n    }\n\n    if (this._columnTree) {\n      this._columnTree[this._columnTree.length - 1].forEach(c => c.notifyPath && c.notifyPath('_cells.*', c._cells));\n    }\n\n    beforeNextRender(this, () => {\n      this._updateFirstAndLastColumn();\n      this._resetKeyboardNavigation();\n    });\n    return rows;\n  }\n\n  /** @private */\n  _getRowTarget() {\n    return this.$.items;\n  }\n\n  /** @private */\n  _createCell(tagName) {\n    const contentId = this._contentIndex = this._contentIndex + 1 || 0;\n    const slotName = 'vaadin-grid-cell-content-' + contentId;\n\n    const cellContent = document.createElement('vaadin-grid-cell-content');\n    cellContent.setAttribute('slot', slotName);\n\n    const cell = document.createElement(tagName);\n    cell.id = slotName.replace('-content-', '-');\n    cell.setAttribute('tabindex', '-1');\n    cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n\n    cell.appendChild(slot);\n\n    cell._content = cellContent;\n\n    // With native Shadow DOM, mousedown on slotted element does not focus\n    // focusable slot wrapper, that is why cells are not focused with\n    // mousedown. Workaround: listen for mousedown and focus manually.\n    cellContent.addEventListener('mousedown', () => {\n      if (window.chrome) {\n        // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n        const mouseUpListener = () => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n          // If focus is in the cell content — respect it, do not change.\n          document.removeEventListener('mouseup', mouseUpListener, true);\n        };\n        document.addEventListener('mouseup', mouseUpListener, true);\n      } else {\n        // Focus on mouseup, on the other hand, removes selection on Safari.\n        // Watch out sync focus removal issue, only async focus works here.\n        setTimeout(() => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n        });\n      }\n    });\n\n    return cell;\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @param {!Array<!GridColumnElement>} columns\n   * @param {?string} section\n   * @param {boolean} isColumnRow\n   * @param {boolean} noNotify\n   * @protected\n   */\n  _updateRow(row, columns, section, isColumnRow, noNotify) {\n    section = section || 'body';\n\n    const contentsFragment = document.createDocumentFragment();\n\n    Array.from(row.children).forEach(cell => cell._vacant = true);\n    row.innerHTML = '';\n    if (row.id !== 'sizer') {\n      row.hidden = true;\n    }\n    columns\n      .filter(column => !column.hidden)\n      .forEach((column, index, cols) => {\n        let cell;\n\n        if (section === 'body') {\n        // Body\n          column._cells = column._cells || [];\n          cell = column._cells.filter(cell => cell._vacant)[0];\n          if (!cell) {\n            cell = this._createCell('td');\n            column._cells.push(cell);\n          }\n          cell.setAttribute('part', 'cell body-cell');\n          row.appendChild(cell);\n\n          if (index === cols.length - 1 && (this._rowDetailsTemplate || this.rowDetailsRenderer)) {\n          // Add details cell as last cell to body rows\n            this._detailsCells = this._detailsCells || [];\n            const detailsCell = this._detailsCells.filter(cell => cell._vacant)[0] || this._createCell('td');\n            if (this._detailsCells.indexOf(detailsCell) === -1) {\n              this._detailsCells.push(detailsCell);\n            }\n            if (!detailsCell._content.parentElement) {\n              contentsFragment.appendChild(detailsCell._content);\n            }\n            this._configureDetailsCell(detailsCell);\n            row.appendChild(detailsCell);\n            this._a11ySetRowDetailsCell(row, detailsCell);\n            detailsCell._vacant = false;\n          }\n\n          if (column.notifyPath && !noNotify) {\n            column.notifyPath('_cells.*', column._cells);\n          }\n        } else {\n        // Header & footer\n          const tagName = section === 'header' ? 'th' : 'td';\n          if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n            cell = column[`_${section}Cell`] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            column[`_${section}Cell`] = cell;\n          } else {\n            column._emptyCells = column._emptyCells || [];\n            cell = column._emptyCells.filter(cell => cell._vacant)[0] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            if (column._emptyCells.indexOf(cell) === -1) {\n              column._emptyCells.push(cell);\n            }\n          }\n          cell.setAttribute('part', `cell ${section}-cell`);\n          this.__updateHeaderFooterRowVisibility(row);\n        }\n\n        if (!cell._content.parentElement) {\n          contentsFragment.appendChild(cell._content);\n        }\n        cell._vacant = false;\n        cell._column = column;\n      });\n\n    // Might be empty if only cache was used\n    this.appendChild(contentsFragment);\n\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumnForRow(row);\n  }\n\n  /**\n   * @param {HTMLTableRowElement} row\n   * @protected\n   */\n  __updateHeaderFooterRowVisibility(row) {\n    if (!row) {\n      return;\n    }\n\n    const visibleRowCells = Array.from(row.children).filter(cell => {\n      const column = cell._column;\n      if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n        // The cell is an \"empty cell\"  -> doesn't block hiding the row\n        return false;\n      }\n      if (row.parentElement === this.$.header) {\n        if (column.headerRenderer || column._headerTemplate) {\n          // The cell is the header cell of a column that has a header renderer\n          // or a header template -> row should be visible\n          return true;\n        }\n        if (column.header === null) {\n          // The column header is explicilty set to null -> doesn't block hiding the row\n          return false;\n        }\n        if (column.path || column.header !== undefined) {\n          // The column has an explicit non-null header or a path that generates a header\n          // -> row should be visible\n          return true;\n        }\n      } else {\n        if (column.footerRenderer || column._footerTemplate) {\n          // The cell is the footer cell of a column that has a footer renderer\n          // or a footer template -> row should be visible\n          return true;\n        }\n      }\n    });\n\n    if (row.hidden !== !visibleRowCells.length) {\n      row.hidden = !visibleRowCells.length;\n      this.notifyResize();\n    }\n  }\n\n  /** @private */\n  _updateScrollerItem(row, index) {\n    this._preventScrollerRotatingCellFocus(row, index);\n\n    if (!this._columnTree) {\n      return;\n    }\n\n    this._toggleAttribute('first', index === 0, row);\n    this._toggleAttribute('odd', index % 2, row);\n    this._a11yUpdateRowRowindex(row, index);\n    this._getItem(index, row);\n  }\n\n  /** @private */\n  _columnTreeChanged(columnTree, splices) {\n    this._renderColumnTree(columnTree);\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {!Array<!GridColumnElement>} columnTree\n   * @protected\n   */\n  _renderColumnTree(columnTree) {\n    Array.from(this.$.items.children).forEach((row) => this._updateRow(row, columnTree[columnTree.length - 1], null, false, true));\n\n    while (this.$.header.children.length < columnTree.length) {\n      const headerRow = document.createElement('tr');\n      headerRow.setAttribute('part', 'row');\n      headerRow.setAttribute('role', 'row');\n      this.$.header.appendChild(headerRow);\n\n      const footerRow = document.createElement('tr');\n      footerRow.setAttribute('part', 'row');\n      footerRow.setAttribute('role', 'row');\n      this.$.footer.appendChild(footerRow);\n    }\n    while (this.$.header.children.length > columnTree.length) {\n      this.$.header.removeChild(this.$.header.firstElementChild);\n      this.$.footer.removeChild(this.$.footer.firstElementChild);\n    }\n\n    Array.from(this.$.header.children)\n      .forEach((headerRow, index) => this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1));\n\n    Array.from(this.$.footer.children)\n      .forEach((footerRow, index) => this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0));\n\n    // Sizer rows\n    this._updateRow(this.$.sizer, columnTree[columnTree.length - 1]);\n\n    this._resizeHandler();\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumn();\n    this._resetKeyboardNavigation();\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n    this.__updateFooterPositioning();\n  }\n\n  __updateFooterPositioning() {\n    if (this._firefox) {\n      // Sticky (or translated) footer in a flexbox host doesn't get included in\n      // the scroll height calculation on FF. This is a workaround for the issue.\n      this.$.items.style.paddingBottom = 0;\n      if (!this.heightByRows) {\n        this.$.items.style.paddingBottom = `${this.$.footer.offsetHeight}px`;\n      }\n    }\n\n    if (this._ios) {\n      const isOldIOS = !window.CSS.supports('position', 'sticky');\n      if (isOldIOS) {\n        // Due to a rendering bug, the sticky header may disappear on an older iOS (10-12) Safari\n        // if the grid is used inside of a flex box. This is a workaround for the issue.\n        this.$.table.style.height = '';\n        this.$.table.style.minHeight = '100%';\n        this.$.table.style.maxHeight = '100%';\n        setTimeout(() => this.$.table.style.height = `${this.$.scroller.offsetHeight}px`);\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {GridItem} item\n   * @protected\n   */\n  _updateItem(row, item) {\n    row._item = item;\n    const model = this.__getRowModel(row);\n\n    this._toggleAttribute('selected', model.selected, row);\n    this._a11yUpdateRowSelected(row, model.selected);\n    this._a11yUpdateRowLevel(row, model.level);\n    this._toggleAttribute('expanded', model.expanded, row);\n    if (this._rowDetailsTemplate || this.rowDetailsRenderer) {\n      this._toggleDetailsCell(row, item);\n    }\n    this._generateCellClassNames(row, model);\n    this._filterDragAndDrop(row, model);\n\n    Array.from(row.children).forEach(cell => {\n      if (cell._renderer) {\n        const owner = cell._column || this;\n        cell._renderer.call(owner, cell._content, owner, model);\n      } else if (cell._instance) {\n        cell._instance.__detailsOpened__ = model.detailsOpened;\n        cell._instance.__selected__ = model.selected;\n        cell._instance.__level__ = model.level;\n        cell._instance.__expanded__ = model.expanded;\n        cell._instance.setProperties(model);\n      }\n    });\n\n    this._debouncerUpdateHeights = Debouncer.debounce(this._debouncerUpdateHeights,\n      timeOut.after(1), () => {\n        this._updateMetrics();\n        this._positionItems();\n        this._updateScrollerSize();\n      }\n    );\n  }\n\n  /** @private */\n  _resizeHandler() {\n    this._updateDetailsCellHeights();\n    this._accessIronListAPI(super._resizeHandler, true);\n    this._updateScrollerMeasurements();\n    this.__updateFooterPositioning();\n  }\n\n  /** @private */\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n      this._render();\n      e.stopPropagation();\n      this.notifyResize();\n      this.__itemsReceived();\n\n      requestAnimationFrame(() => {\n        // This needs to be set programmatically in order to avoid an iOS 10 bug (disappearing grid)\n        this.$.table.style.webkitOverflowScrolling = 'touch';\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {boolean} bool\n   * @param {!Element} node\n   * @protected\n   */\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @return {!GridItemModel}\n   * @protected\n   */\n  __getRowModel(row) {\n    return {\n      index: row.index,\n      item: row._item,\n      level: this._getIndexLevel(row.index),\n      expanded: this._isExpanded(row._item),\n      selected: this._isSelected(row._item),\n      detailsOpened:\n        !!(this._rowDetailsTemplate || this.rowDetailsRenderer) && this._isDetailsOpened(row._item)\n    };\n  }\n\n  /**\n   * Manually invoke existing renderers for all the columns\n   * (header, footer and body cells) and opened row details.\n   */\n  render() {\n    if (this._columnTree) {\n      // header and footer renderers\n      this._columnTree.forEach(level => {\n        level.forEach(column => column._renderHeaderAndFooter());\n      });\n\n      // body and row details renderers\n      this._update();\n    }\n  }\n\n  /**\n   * Updates the computed metrics and positioning of internal grid parts\n   * (row/details cell positioning etc). Needs to be invoked whenever the sizing of grid\n   * content changes asynchronously to ensure consistent appearance (e.g. when a\n   * contained image whose bounds aren't known beforehand finishes loading).\n   */\n  notifyResize() {\n    super.notifyResize();\n  }\n\n  /** @private */\n  _heightByRowsChanged(value, oldValue) {\n    if (value || oldValue) {\n      this.notifyResize();\n    }\n  }\n\n  /** @protected */\n  __forceReflow() {\n    this._debouncerForceReflow = Debouncer.debounce(this._debouncerForceReflow,\n      animationFrame, () => {\n        this.$.scroller.style.overflow = 'hidden';\n        setTimeout(() => this.$.scroller.style.overflow = '');\n      }\n    );\n  }\n}\n\ncustomElements.define(GridElement.is, GridElement);\nexport { GridElement };\n","import './version.js';\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport '@polymer/polymer/lib/elements/dom-module.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"material-color-light\">\n  <template>\n    <style>\n      :host,\n      #host-fix {\n        /* Text colors */\n        --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n        --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n        --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n        /* Primary colors */\n        --material-primary-color: var(--primary-color, #6200ee);\n        --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n        --material-primary-text-color: var(--material-primary-color);\n\n        /* Error colors */\n        --material-error-color: var(--error-color, #b00020);\n        --material-error-text-color: var(--material-error-color);\n\n        /* Background colors */\n        --material-background-color: var(--light-theme-background-color, #fff);\n        --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n        --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n        /* Divider colors */\n        --material-divider-color: rgba(0, 0, 0, 0.12);\n\n        /* Undocumented internal properties (prefixed with three dashes) */\n\n        /* Text field tweaks */\n        --_material-text-field-input-line-background-color: initial;\n        --_material-text-field-input-line-opacity: initial;\n        --_material-text-field-input-line-hover-opacity: initial;\n        --_material-text-field-focused-label-opacity: initial;\n\n        /* Button tweaks */\n        --_material-button-raised-background-color: initial;\n        --_material-button-outline-color: initial;\n\n        /* Grid tweaks */\n        --_material-grid-row-hover-background-color: initial;\n\n        /* Split layout tweaks */\n        --_material-split-layout-splitter-background-color: initial;\n\n        background-color: var(--material-background-color);\n        color: var(--material-body-text-color);\n      }\n\n      [theme~=\"dark\"] {\n        /* Text colors */\n        --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n        --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n        --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n        /* Primary colors */\n        --material-primary-color: var(--light-primary-color, #7e3ff2);\n        --material-primary-text-color: #b794f6;\n\n        /* Error colors */\n        --material-error-color: var(--error-color, #de2839);\n        --material-error-text-color: var(--material-error-color);\n\n        /* Background colors */\n        --material-background-color: var(--dark-theme-background-color, #303030);\n        --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n        --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n        /* Divider colors */\n        --material-divider-color: rgba(255, 255, 255, 0.12);\n\n        /* Undocumented internal properties (prefixed with three dashes) */\n\n        /* Text field tweaks */\n        --_material-text-field-input-line-background-color: #fff;\n        --_material-text-field-input-line-opacity: 0.7;\n        --_material-text-field-input-line-hover-opacity: 1;\n        --_material-text-field-focused-label-opacity: 1;\n\n        /* Button tweaks */\n        --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n        --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n        /* Grid tweaks */\n        --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n        --_material-grid-row-selected-overlay-opacity: 0.16;\n\n        /* Split layout tweaks */\n        --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n        background-color: var(--material-background-color);\n        color: var(--material-body-text-color);\n      }\n\n      a {\n        color: inherit;\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"material-color-dark\">\n  <template>\n    <style>\n      :host,\n      #host-fix {\n        /* Text colors */\n        --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n        --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n        --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n        /* Primary colors */\n        --material-primary-color: var(--light-primary-color, #7e3ff2);\n        --material-primary-text-color: #b794f6;\n\n        /* Error colors */\n        --material-error-color: var(--error-color, #de2839);\n        --material-error-text-color: var(--material-error-color);\n\n        /* Background colors */\n        --material-background-color: var(--dark-theme-background-color, #303030);\n        --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n        --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n        /* Divider colors */\n        --material-divider-color: rgba(255, 255, 255, 0.12);\n\n        /* Undocumented internal properties (prefixed with three dashes) */\n\n        /* Text field tweaks */\n        --_material-text-field-input-line-background-color: #fff;\n        --_material-text-field-input-line-opacity: 0.7;\n        --_material-text-field-input-line-hover-opacity: 1;\n        --_material-text-field-focused-label-opacity: 1;\n\n        /* Button tweaks */\n        --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n        --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n        /* Grid tweaks */\n        --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n        --_material-grid-row-selected-overlay-opacity: 0.16;\n\n        /* Split layout tweaks */\n        --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n        background-color: var(--material-background-color);\n        color: var(--material-body-text-color);\n      }\n    </style>\n  </template>\n</dom-module><custom-style>\n  <style>\n    :root {\n      /* Text colors */\n      --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n      --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n      --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n      /* Primary colors */\n      --material-primary-color: var(--primary-color, #6200ee);\n      --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n      --material-primary-text-color: var(--material-primary-color);\n\n      /* Error colors */\n      --material-error-color: var(--error-color, #b00020);\n      --material-error-text-color: var(--material-error-color);\n\n      /* Background colors */\n      --material-background-color: var(--light-theme-background-color, #fff);\n      --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n      --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n      /* Divider colors */\n      --material-divider-color: rgba(0, 0, 0, 0.12);\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import '@polymer/polymer/lib/elements/custom-style.js';\nimport './version.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: 'material-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAjAAAsAAAAADZQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAARAAAAFZSk09oY21hcAAAAYgAAACNAAACNOuCXH5nbHlmAAACGAAABDwAAAXsdK8UGGhlYWQAAAZUAAAAMAAAADYX9T2IaGhlYQAABoQAAAAgAAAAJBGyCLpobXR4AAAGpAAAABQAAABAjXoAAGxvY2EAAAa4AAAAIgAAACIKMgjUbWF4cAAABtwAAAAfAAAAIAEeAFRuYW1lAAAG/AAAATQAAAJe3l764XBvc3QAAAgwAAAAjwAAAMqJEjDWeJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYOS4wTiBgZWBgYGfbQIDA2MAhGZpYChlymZgYGJgZWbACgLSXFMYHF4xvuJnv/CvgOEG+wXG6UBhRpAcAMyUDJN4nO2R2Q0DIQxEHwt7HzSSGlJQvlJkqqGJjYdJGbH0PPJgELKBEcjBIyiQ3iQUr3BT9zNb9wvP3lPkt3rfkZNy1KXnIXpLvDgxs7DGvZ2Dk4saxxP/OHr+/KqqCZo+08EgzUa7acVoym002lubDNLZIF0M0tUg3Yz22XaD9DD6XTsN0ssgrYb6BZEQJiUAAAB4nH1UbUhbVxg+77259yZMJbfko7DhbnJtrjYuWfNxsx9qBFu32ljHWqWO6VD6MW1G4uYPsfSDdQOHXOuPrtYfKytKJziYEJkQZLQ/BqHCpsUfghZX1jHBjBUWWqfes51zE1dloyfJyXvOed5znvO+z3sQINKEeb4WmRECBURZBAGEeU1fyOgPhliJlTT9geneVpTxD23/jPbinSAGRYgADGuMP8P4CILgGd9W1HRPXyDeiEEIL5pvCnH0MnqVeMhh2e4iP9ldAnbRVgpBV6AGwmLIB6xLdAnzpzPb+zOn1fdU8uVr8/9/3eVr+fEMacZg1+LGBmfLczKHuNuIQ8gCggUU9lP8/hDjN01pcBluk8sQK4/jOa6P4kCxEOI8p+kTzCkNq6Z1YukTGswVcLUFHNnOCeyaBvexqjGnuD4Nh3GYWIVYxLkV9FJ+PwqluwpxcqK+QGJidIyfDLkm0hnW8wXiziL09xskPma0Hx1CEbKPW+CRwFudDuR0SBEVRVSr4kGKh3UrPlA81kgNRFTJWQpOh1UoAYFnZZoC07dz6RRejx0/HgN7Kg0j6RTYY01NMbyeSs+NXR9+WB2NVj8cvg71z+2eG0zxMVwjmAksO53G3elpnKVOYJtOw430NNhiTRsb//HDacPmbPoE/uEC0OsbMRtn12jGLQwzCznIsWu4CHJ77vgKkl50RzkcDMti0DQ1939M8izPUSG8mPJmWSZDEkSaieivy7IqzKMSdABVoTcROsDLEj1N3RehuQLebjOiGQxEFF52Kx7FEw5FLKCGQ0bEZbegqEGJkuUZMh0MOB1Oh93G/7b4GOdy63i0veruJSwMmlcGN1vLvQdHOs8kzndOFxW3xhoqK8HUiX9SvRV09mLy91+eQdGfWTjXHv1R/xJfktwGqL2x+yx8/McoWD6AjcFnZYPc153nE2c6Ryq85Sl4zdsQay0u1jNwKHmRzh70qtl3u85i7clXOAsfwVW+0tvQ2Ooy9ERqYZsvQfuQQu5biPW/gS4oyUOFpFIdOaiMeKIiN+1tdBygKyGKMU09XV3CMy0tcHRpFbKrS3C0pQXPLK0+HejtqTt8uK6nF6w71sA79XXlFRXldfXjOwZf0tGGJ5eX8WRbR0cbNC8vQ3Nbx1bpXkf8hFqstMfVMNCuGiO6AhFYyRTjVjYHmFm06y3ykQGhKxn1YN3JJkmwTCfkfOWEjMqhyQOXyP+auJaXcVU0WkUkPTYzdutR5XzFRLL3Sn8ifsfn9/vuxBO5RPcJ/D0zyzUn9mqfCE78pve7QKgAox6v+05SLKXF0M7SQbiVIW+enaEkyod+djTnMoIdNqINInkByStyzd3dNXorNXT18v3oFxf6j7xlHNHP2YygR6u74noXTuJFo8QeTw5+3vh2MDDTZz154spnN/PcjXx8kvyw7gh+hJMwDDlc9A+3XcsFeJxjYGRgYADi5PtWjvH8Nl8ZuDkTgCIM16srKhH0v0zO++wXgFwOBiaQKAA6hAuJeJxjYGRgYL/wr4CBgcuKgeH/f877DEARFCAAAIewBYJ4nGNgYGDgTCAOc1lhigEAvMIGAwAAAAAAGAAwAGIAdgCKAJ4AwAEkATIBcAHoAlACXgKsAvYAAHicY2BkYGAQYPBgYGEAASYg5gJCBob/YD4DABFeAXMAeJx9kL1uwjAUhU8gUJVIVaWqnRgsVepSEX5G1BkkRgb2EBwIcuLIMUi8QR+kT9CH6NgH6VP0xHiBAVtyvvvdc50oAB7xgwDNCvDgzma1cMfqzG3Ss+eQ/Oq5gwhjz136D889vGPhOcITDrwhCO9p+vj03GL+y3Ob/ttzSP713MEL/jx30Q/guYdV0Pcc4S0wRWKlyRM1yFNd1ku5PajkSl5WK2nqXJdiHI8uG3NZSkOzEeuTqI/bibWZyIwuxEyXViqlRWX0XqY23llbTYfDzPs41QUKJLCQMMhJCgM+U2iUqLGk3/JfKHbMzeSt3sr5mqapBf9/jNHNiTl96XrnzIZTa5x41jjyiya0FhnrjBnNuwRmbrZJK25NU7nenialj7FzUxWmGHJnV/nYvb34BzHZcLZ4nG2MQQ6CMBREO0ARtSjuvASHqu1XCD+0+YKE20tD3DmLmbxk8lSm9tzV/zTIkKOARokDKhxxwhkGNS64osFNXaxIWFoflnGx4s2Oc0xQOcs0eivadeQGs/VHwtgyPaf6B9K/ukk7pnTj4IbKS4jJp2lziaGVWt+/7YPJ5xsUke1aCnGwvpxjGqW+tN8xfgA=) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n\n    html {\n      --material-icons-arrow-downward: \"\\\\ea01\";\n      --material-icons-arrow-upward: \"\\\\ea02\";\n      --material-icons-calendar: \"\\\\ea03\";\n      --material-icons-check: \"\\\\ea04\";\n      --material-icons-chevron-left: \"\\\\ea05\";\n      --material-icons-chevron-right: \"\\\\ea06\";\n      --material-icons-clear: \"\\\\ea07\";\n      --material-icons-clock: \"\\\\ea08\";\n      --material-icons-dropdown: \"\\\\ea09\";\n      --material-icons-error: \"\\\\ea0a\";\n      --material-icons-eye-disabled: \"\\\\ea0b\";\n      --material-icons-eye: \"\\\\ea0c\";\n      --material-icons-play: \"\\\\ea0d\";\n      --material-icons-reload: \"\\\\ea0e\";\n      --material-icons-upload: \"\\\\ea0f\";\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/* NOTICE: Generated with 'gulp icons' */\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n","class Material extends HTMLElement {\n  static get version() {\n    return '1.3.2';\n  }\n}\n\ncustomElements.define('vaadin-material-styles', Material);\n\nexport { Material };\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { timeOut, animationFrame } from '@polymer/polymer/lib/utils/async.js';\n\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"vaadin-text-field-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: inline-flex;\n        outline: none;\n      }\n\n      :host::before {\n        content: \"\\\\2003\";\n        width: 0;\n        display: inline-block;\n        /* Size and position this element on the same vertical position as the input-field element\n           to make vertical align for the host element work as expected */\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      .vaadin-text-field-container,\n      .vaadin-text-area-container {\n        display: flex;\n        flex-direction: column;\n        min-width: 100%;\n        max-width: 100%;\n        width: var(--vaadin-text-field-default-width, 12em);\n      }\n\n      [part=\"label\"]:empty {\n        display: none;\n      }\n\n      [part=\"input-field\"] {\n        display: flex;\n        align-items: center;\n        flex: auto;\n      }\n\n      .vaadin-text-field-container [part=\"input-field\"] {\n        flex-grow: 0;\n      }\n\n      /* Reset the native input styles */\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(input),\n      [part=\"input-field\"] ::slotted(textarea) {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        outline: none;\n        margin: 0;\n        padding: 0;\n        border: 0;\n        border-radius: 0;\n        min-width: 0;\n        font: inherit;\n        font-size: 1em;\n        line-height: normal;\n        color: inherit;\n        background-color: transparent;\n        /* Disable default invalid style in Firefox */\n        box-shadow: none;\n      }\n\n      [part=\"input-field\"] ::slotted(*) {\n        flex: none;\n      }\n\n      [part=\"value\"],\n      [part=\"input-field\"] ::slotted(input),\n      [part=\"input-field\"] ::slotted(textarea),\n      /* Slotted by vaadin-select-text-field */\n      [part=\"input-field\"] ::slotted([part=\"value\"]) {\n        flex: auto;\n        white-space: nowrap;\n        overflow: hidden;\n        width: 100%;\n        height: 100%;\n      }\n\n      [part=\"input-field\"] ::slotted(textarea) {\n        resize: none;\n      }\n\n      [part=\"value\"]::-ms-clear,\n      [part=\"input-field\"] ::slotted(input)::-ms-clear {\n        display: none;\n      }\n\n      [part=\"clear-button\"] {\n        cursor: default;\n      }\n\n      [part=\"clear-button\"]::before {\n        content: \"✕\";\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\nconst HOST_PROPS = {\n  default: ['list', 'autofocus', 'pattern', 'autocapitalize', 'autocorrect', 'maxlength',\n    'minlength', 'name', 'placeholder', 'autocomplete', 'title', 'disabled', 'readonly', 'required'],\n  accessible: ['invalid']\n};\n\nconst PROP_TYPE = {\n  DEFAULT: 'default',\n  ACCESSIBLE: 'accessible'\n};\n\n\n/**\n * @polymerMixin\n */\nexport const TextFieldMixin = subclass => class VaadinTextFieldMixin extends subclass {\n  static get properties() {\n    return {\n      /**\n       * Whether the value of the control can be automatically completed by the browser.\n       * List of available options at:\n       * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n       */\n      autocomplete: {\n        type: String\n      },\n\n      /**\n       * This is a property supported by Safari that is used to control whether\n       * autocorrection should be enabled when the user is entering/editing the text.\n       * Possible values are:\n       * on: Enable autocorrection.\n       * off: Disable autocorrection.\n       * @type {!TextFieldAutoCorrect | undefined}\n       */\n      autocorrect: {\n        type: String\n      },\n\n      /**\n       * This is a property supported by Safari and Chrome that is used to control whether\n       * autocapitalization should be enabled when the user is entering/editing the text.\n       * Possible values are:\n       * characters: Characters capitalization.\n       * words: Words capitalization.\n       * sentences: Sentences capitalization.\n       * none: No capitalization.\n       * @type {!TextFieldAutoCapitalize | undefined}\n       */\n      autocapitalize: {\n        type: String\n      },\n\n      /**\n       * Specify that the value should be automatically selected when the field gains focus.\n       * @type {boolean}\n       */\n      autoselect: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to display the clear icon which clears the input.\n       * @attr {boolean} clear-button-visible\n       * @type {boolean}\n       */\n      clearButtonVisible: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Error to show when the input value is invalid.\n       * @attr {string} error-message\n       * @type {string}\n       */\n      errorMessage: {\n        type: String,\n        value: '',\n        observer: '_errorMessageChanged'\n      },\n\n      /**\n       * Object with translated strings used for localization. Has\n       * the following structure and default values:\n       *\n       * ```\n       * {\n       *   // Translation of the clear icon button accessible label\n       *   clear: 'Clear'\n       * }\n       * ```\n       * @type {{clear: string}}\n       */\n      i18n: {\n        type: Object,\n        value: () => {\n          return {\n            clear: 'Clear'\n          };\n        }\n      },\n\n      /**\n       * String used for the label element.\n       * @type {string}\n       */\n      label: {\n        type: String,\n        value: '',\n        observer: '_labelChanged'\n      },\n\n      /**\n       * String used for the helper text.\n       * @attr {string} helper-text\n       * @type {string | null}\n       */\n      helperText: {\n        type: String,\n        value: '',\n        observer: '_helperTextChanged'\n      },\n\n      /**\n       * Maximum number of characters (in Unicode code points) that the user can enter.\n       */\n      maxlength: {\n        type: Number\n      },\n\n      /**\n       * Minimum number of characters (in Unicode code points) that the user can enter.\n       */\n      minlength: {\n        type: Number\n      },\n\n      /**\n       * The name of the control, which is submitted with the form data.\n       */\n      name: {\n        type: String\n      },\n\n      /**\n       * A hint to the user of what can be entered in the control.\n       */\n      placeholder: {\n        type: String\n      },\n\n      /**\n       * This attribute indicates that the user cannot modify the value of the control.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n\n      /**\n       * The initial value of the control.\n       * It can be used for two-way data binding.\n       * @type {string}\n       */\n      value: {\n        type: String,\n        value: '',\n        observer: '_valueChanged',\n        notify: true\n      },\n\n      /**\n       * This property is set to true when the control value is invalid.\n       * @type {boolean}\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n\n      /**\n       * Specifies that the text field has value.\n       * @attr {boolean} has-value\n       */\n      hasValue: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n\n      /**\n       * When set to true, user is prevented from typing a value that\n       * conflicts with the given `pattern`.\n       * @attr {boolean} prevent-invalid-input\n       */\n      preventInvalidInput: {\n        type: Boolean\n      },\n\n      /**\n       * A pattern matched against individual characters the user inputs.\n       * When set, the field will prevent:\n       * - `keyDown` events if the entered key doesn't match `/^_enabledCharPattern$/`\n       * - `paste` events if the pasted text doesn't match `/^_enabledCharPattern*$/`\n       * - `drop` events if the dropped text doesn't match `/^_enabledCharPattern*$/`\n       *\n       * For example, to enable entering only numbers and minus signs,\n       * `_enabledCharPattern = \"[\\\\d-]\"`\n       * @protected\n       */\n      _enabledCharPattern: String,\n\n      /** @private */\n      _labelId: String,\n\n      /** @private */\n      _helperTextId: String,\n\n      /** @private */\n      _errorId: String,\n\n      /** @private */\n      _inputId: String,\n\n      /** @private */\n      _hasSlottedHelper: Boolean\n    };\n  }\n\n  static get observers() {\n    return ['_stateChanged(disabled, readonly, clearButtonVisible, hasValue)',\n      '_hostPropsChanged(' + HOST_PROPS.default.join(', ') + ')',\n      '_hostAccessiblePropsChanged(' + HOST_PROPS.accessible.join(', ') + ')',\n      '_getActiveErrorId(invalid, errorMessage, _errorId, helperText, _helperTextId, _hasSlottedHelper)',\n      '_getActiveLabelId(label, _labelId, _inputId)',\n      '__observeOffsetHeight(errorMessage, invalid, label, helperText)',\n      '__enabledCharPatternChanged(_enabledCharPattern)'\n    ];\n  }\n\n  /**\n   * @return {HTMLElement | undefined}\n   * @protected\n   */\n  get focusElement() {\n    if (!this.shadowRoot) {\n      return;\n    }\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    if (slotted) {\n      return slotted;\n    }\n    return this.shadowRoot.querySelector('[part=\"value\"]');\n  }\n\n  /**\n   * @return {HTMLElement | undefined}}\n   * @protected\n   */\n  get inputElement() {\n    return this.focusElement;\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  get _slottedTagName() {\n    return 'input';\n  }\n\n  /** @protected */\n  _createConstraintsObserver() {\n    // This complex observer needs to be added dynamically here (instead of defining it above in the `get observers()`)\n    // so that it runs after complex observers of inheriting classes. Otherwise e.g. `_stepOrMinChanged()` observer of\n    // vaadin-number-field would run after this and the `min` and `step` properties would not yet be propagated to\n    // the `inputElement` when this runs.\n    this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern)');\n  }\n\n  /** @private */\n  _onInput(e) {\n    if (this.__preventInput) {\n      e.stopImmediatePropagation();\n      this.__preventInput = false;\n      return;\n    }\n\n    if (this.preventInvalidInput) {\n      const input = this.inputElement;\n      if (input.value.length > 0 && !this.checkValidity()) {\n        input.value = this.value || '';\n        // add input-prevented attribute for 200ms\n        this.setAttribute('input-prevented', '');\n        this._inputDebouncer = Debouncer.debounce(\n          this._inputDebouncer,\n          timeOut.after(200), () => {\n            this.removeAttribute('input-prevented');\n          });\n        return;\n      }\n    }\n\n    if (!e.__fromClearButton) {\n      this.__userInput = true;\n    }\n\n    this.value = e.target.value;\n    this.__userInput = false;\n  }\n\n  // NOTE(yuriy): Workaround needed for IE11 and Edge for proper displaying\n  // of the clear button instead of setting display property for it depending on state.\n  /** @private */\n  _stateChanged(disabled, readonly, clearButtonVisible, hasValue) {\n    if (!disabled &&\n        !readonly &&\n        clearButtonVisible &&\n        hasValue\n    ) {\n      this.$.clearButton.removeAttribute('hidden');\n    } else {\n      this.$.clearButton.setAttribute('hidden', true);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @protected\n   */\n  _onChange(e) {\n    if (this._valueClearing) {\n      return;\n    }\n\n    // In the Shadow DOM, the `change` event is not leaked into the\n    // ancestor tree, so we must do this manually.\n    const changeEvent = new CustomEvent('change', {\n      detail: {\n        sourceEvent: e\n      },\n      bubbles: e.bubbles,\n      cancelable: e.cancelable,\n    });\n    this.dispatchEvent(changeEvent);\n  }\n\n  /**\n   * @param {unknown} newVal\n   * @param {unknown} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    // setting initial value to empty string, skip validation\n    if (newVal === '' && oldVal === undefined) {\n      return;\n    }\n\n    if (newVal !== '' && newVal != null) {\n      this.hasValue = true;\n    } else {\n      this.hasValue = false;\n    }\n\n    if (this.__userInput) {\n      return;\n    } else if (newVal !== undefined) {\n      this.inputElement.value = newVal;\n    } else {\n      this.value = this.inputElement.value = '';\n    }\n\n    if (this.invalid) {\n      this.validate();\n    }\n  }\n\n  /** @private */\n  _labelChanged(label) {\n    this._setOrToggleAttribute('has-label', !!label, this);\n  }\n\n  /** @private */\n  _helperTextChanged(helperText) {\n    this._setOrToggleAttribute('has-helper', !!helperText, this);\n  }\n\n  /** @private */\n  _errorMessageChanged(errorMessage) {\n    this._setOrToggleAttribute('has-error-message', !!errorMessage, this);\n  }\n\n  /** @private */\n  _onHelperSlotChange() {\n    const slottedNodes = this.shadowRoot.querySelector(`[name=\"helper\"]`).assignedNodes({flatten: true});\n    // Only has slotted helper if not a text node\n    // Text nodes are added by the helperText prop and not the helper slot\n    // The filter is added due to shady DOM triggering this callback on helperText prop change\n    this._hasSlottedHelper = slottedNodes.filter(node => node.nodeType !== 3).length;\n\n    if (this._hasSlottedHelper) {\n      this.setAttribute('has-helper', 'slotted');\n    } else if (this.helperText === '' || this.helperText === null) {\n      this.removeAttribute('has-helper');\n    }\n  }\n\n  /** @private */\n  _onSlotChange() {\n    const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n\n    if (this.value) {\n      this.inputElement.value = this.value;\n      this.validate();\n    }\n\n    if (slotted && !this._slottedInput) {\n      this._validateSlottedValue(slotted);\n      this._addInputListeners(slotted);\n      this._addIEListeners(slotted);\n      this._slottedInput = slotted;\n    } else if (!slotted && this._slottedInput) {\n      this._removeInputListeners(this._slottedInput);\n      this._removeIEListeners(this._slottedInput);\n      this._slottedInput = undefined;\n    }\n\n    Object.keys(PROP_TYPE).map(key => PROP_TYPE[key]).forEach(type =>\n      this._propagateHostAttributes(HOST_PROPS[type].map(attr => this[attr]), type));\n  }\n\n  /** @private */\n  _hostPropsChanged(...attributesValues) {\n    this._propagateHostAttributes(attributesValues, PROP_TYPE.DEFAULT);\n  }\n\n  /** @private */\n  _hostAccessiblePropsChanged(...attributesValues) {\n    this._propagateHostAttributes(attributesValues, PROP_TYPE.ACCESSIBLE);\n  }\n\n  /** @private */\n  _validateSlottedValue(slotted) {\n    if (slotted.value !== this.value) {\n      console.warn('Please define value on the vaadin-text-field component!');\n      slotted.value = '';\n    }\n  }\n\n  /** @private */\n  _propagateHostAttributes(attributesValues, type) {\n    const input = this.inputElement;\n    const attributeNames = HOST_PROPS[type];\n\n    if (type === PROP_TYPE.ACCESSIBLE) {\n      attributeNames.forEach((attr, index) => {\n        this._setOrToggleAttribute(attr, attributesValues[index], input);\n        this._setOrToggleAttribute(`aria-${attr}`, attributesValues[index] ? 'true' : false, input);\n      });\n    } else {\n      attributeNames.forEach((attr, index) => {\n        this._setOrToggleAttribute(attr, attributesValues[index], input);\n      });\n    }\n  }\n\n  /** @private */\n  _setOrToggleAttribute(name, value, node) {\n    if (!name || !node) {\n      return;\n    }\n\n    if (value) {\n      node.setAttribute(name, (typeof value === 'boolean') ? '' : value);\n    } else {\n      node.removeAttribute(name);\n    }\n  }\n\n  /**\n   * @param {boolean | undefined} required\n   * @param {number | undefined} minlength\n   * @param {number | undefined} maxlength\n   * @param {string | undefined} maxlength\n   * @protected\n   */\n  _constraintsChanged(required, minlength, maxlength, pattern) {\n    if (!this.invalid) {\n      return;\n    }\n\n    if (!required && !minlength && !maxlength && !pattern) {\n      this.invalid = false;\n    } else {\n      this.validate();\n    }\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any)\n   * @return {boolean}\n   */\n  checkValidity() {\n    // Note (Yuriy): `__forceCheckValidity` is used in containing components (i.e. `vaadin-date-picker`) in order\n    // to force the checkValidity instead of returning the previous invalid state.\n    if (this.required || this.pattern || this.maxlength || this.minlength || this.__forceCheckValidity) {\n      return this.inputElement.checkValidity();\n    } else {\n      return !this.invalid;\n    }\n  }\n\n  /** @private */\n  _addInputListeners(node) {\n    node.addEventListener('input', this._boundOnInput);\n    node.addEventListener('change', this._boundOnChange);\n    node.addEventListener('blur', this._boundOnBlur);\n    node.addEventListener('focus', this._boundOnFocus);\n    node.addEventListener('paste', this._boundOnPaste);\n    node.addEventListener('drop', this._boundOnDrop);\n    node.addEventListener('beforeinput', this._boundOnBeforeInput);\n  }\n\n  /** @private */\n  _removeInputListeners(node) {\n    node.removeEventListener('input', this._boundOnInput);\n    node.removeEventListener('change', this._boundOnChange);\n    node.removeEventListener('blur', this._boundOnBlur);\n    node.removeEventListener('focus', this._boundOnFocus);\n    node.removeEventListener('paste', this._boundOnPaste);\n    node.removeEventListener('drop', this._boundOnDrop);\n    node.removeEventListener('beforeinput', this._boundOnBeforeInput);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._createConstraintsObserver();\n\n    this._boundOnInput = this._onInput.bind(this);\n    this._boundOnChange = this._onChange.bind(this);\n    this._boundOnBlur = this._onBlur.bind(this);\n    this._boundOnFocus = this._onFocus.bind(this);\n    this._boundOnPaste = this._onPaste.bind(this);\n    this._boundOnDrop = this._onDrop.bind(this);\n    this._boundOnBeforeInput = this._onBeforeInput.bind(this);\n\n    const defaultInput = this.shadowRoot.querySelector('[part=\"value\"]');\n    this._slottedInput = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n    this._addInputListeners(defaultInput);\n    this._addIEListeners(defaultInput);\n    if (this._slottedInput) {\n      this._addIEListeners(this._slottedInput);\n      this._addInputListeners(this._slottedInput);\n    }\n\n    this.shadowRoot.querySelector('[name=\"input\"], [name=\"textarea\"]')\n      .addEventListener('slotchange', this._onSlotChange.bind(this));\n\n    this._onHelperSlotChange();\n    this.shadowRoot.querySelector('[name=\"helper\"]').addEventListener('slotchange', this._onHelperSlotChange.bind(this));\n\n    if (!(window.ShadyCSS && window.ShadyCSS.nativeCss)) {\n      this.updateStyles();\n    }\n\n    this.$.clearButton.addEventListener('mousedown', () => this._valueClearing = true);\n    this.$.clearButton.addEventListener('mouseleave', () => this._valueClearing = false);\n    this.$.clearButton.addEventListener('click', this._onClearButtonClick.bind(this));\n    this.addEventListener('keydown', this._onKeyDown.bind(this));\n\n    var uniqueId = TextFieldMixin._uniqueId = 1 + TextFieldMixin._uniqueId || 0;\n    this._errorId = `${this.constructor.is}-error-${uniqueId}`;\n    this._labelId = `${this.constructor.is}-label-${uniqueId}`;\n    this._helperTextId = `${this.constructor.is}-helper-${uniqueId}`;\n    this._inputId = `${this.constructor.is}-input-${uniqueId}`;\n\n    // Lumo theme defines a max-height transition for the \"error-message\"\n    // part on invalid state change.\n    this.shadowRoot.querySelector('[part=\"error-message\"]')\n      .addEventListener('transitionend', () => {\n        this.__observeOffsetHeight();\n      });\n  }\n\n  /**\n   * Returns true if `value` is valid.\n   * `<iron-form>` uses this to check the validity for all its elements.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    return !(this.invalid = !this.checkValidity());\n  }\n\n  clear() {\n    this.value = '';\n  }\n\n  /** @private */\n  _onBlur() {\n    this.validate();\n  }\n\n  /** @private */\n  _onFocus() {\n    if (this.autoselect) {\n      this.inputElement.select();\n      // iOS 9 workaround: https://stackoverflow.com/a/7436574\n      setTimeout(() => {\n        try {\n          this.inputElement.setSelectionRange(0, 9999);\n        } catch (e) {\n          // The workaround may cause errors on different input types.\n          // Needs to be suppressed. See https://github.com/vaadin/flow/issues/6070\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _onClearButtonClick(e) {\n    e.preventDefault();\n    // NOTE(yuriy): This line won't affect focus on the host. Cannot be properly tested.\n    this.inputElement.focus();\n    this.clear();\n    this._valueClearing = false;\n    if (navigator.userAgent.match(/Trident/)) {\n      // Disable IE input\" event prevention here, we want the input event from\n      // below to propagate normally.\n      this.__preventInput = false;\n    }\n    const inputEvent = new Event('input', {bubbles: true, composed: true});\n    inputEvent.__fromClearButton = true;\n    const changeEvent = new Event('change', {bubbles: !this._slottedInput});\n    changeEvent.__fromClearButton = true;\n    this.inputElement.dispatchEvent(inputEvent);\n    this.inputElement.dispatchEvent(changeEvent);\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    if (e.keyCode === 27 && this.clearButtonVisible) {\n      const dispatchChange = !!this.value;\n      this.clear();\n      dispatchChange && this.inputElement.dispatchEvent(new Event('change', {bubbles: !this._slottedInput}));\n    }\n\n    if (this._enabledCharPattern && !this.__shouldAcceptKey(e)) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  __shouldAcceptKey(event) {\n    return (event.metaKey || event.ctrlKey)\n      || !event.key // allow typing anything if event.key is not supported\n      || event.key.length !== 1 // allow \"Backspace\", \"ArrowLeft\" etc.\n      || this.__enabledCharRegExp.test(event.key);\n  }\n\n  /** @private */\n  _onPaste(e) {\n    if (this._enabledCharPattern) {\n      const pastedText = (e.clipboardData || window.clipboardData).getData('text');\n      if (!this.__enabledTextRegExp.test(pastedText)) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /** @private */\n  _onDrop(e) {\n    if (this._enabledCharPattern) {\n      const draggedText = e.dataTransfer.getData('text');\n      if (!this.__enabledTextRegExp.test(draggedText)) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /** @private */\n  _onBeforeInput(e) {\n    // The `beforeinput` event covers all the cases for `_enabledCharPattern`: keyboard, pasting and dropping,\n    // but it is still experimental technology so we can't rely on it. It's used here just as an additional check,\n    // because it seems to be the only way to detect and prevent specific keys on mobile devices. See issue #429.\n    if (this._enabledCharPattern && e.data && !this.__enabledTextRegExp.test(e.data)) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  __enabledCharPatternChanged(_enabledCharPattern) {\n    this.__enabledCharRegExp = _enabledCharPattern && new RegExp('^' + _enabledCharPattern + '$');\n    this.__enabledTextRegExp = _enabledCharPattern && new RegExp('^' + _enabledCharPattern + '*$');\n  }\n\n  /** @private */\n  _addIEListeners(node) {\n    /* istanbul ignore if */\n    if (navigator.userAgent.match(/Trident/)) {\n      // IE11 dispatches `input` event in following cases:\n      // - focus or blur, when placeholder attribute is set\n      // - placeholder attribute value changed\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/101220/\n      this._shouldPreventInput = () => {\n        this.__preventInput = true;\n        requestAnimationFrame(() => {\n          this.__preventInput = false;\n        });\n      };\n      node.addEventListener('focusin', this._shouldPreventInput);\n      node.addEventListener('focusout', this._shouldPreventInput);\n      this._createPropertyObserver('placeholder', this._shouldPreventInput);\n    }\n  }\n\n  /** @private */\n  _removeIEListeners(node) {\n    /* istanbul ignore if */\n    if (navigator.userAgent.match(/Trident/)) {\n      node.removeEventListener('focusin', this._shouldPreventInput);\n      node.removeEventListener('focusout', this._shouldPreventInput);\n    }\n  }\n\n  /** @private */\n  _getActiveErrorId(invalid, errorMessage, errorId, helperText, helperTextId, hasSlottedHelper) {\n    const ids = [];\n    if (helperText || hasSlottedHelper) {\n      ids.push(helperTextId);\n    }\n    if (errorMessage && invalid) {\n      ids.push(errorId);\n    }\n    this._setOrToggleAttribute('aria-describedby', ids.join(' '), this.focusElement);\n  }\n\n  /** @private */\n  _getActiveLabelId(label, _labelId, _inputId) {\n    let ids = _inputId;\n    if (label) {\n      ids = `${_labelId} ${_inputId}`;\n    }\n    this.focusElement.setAttribute('aria-labelledby', ids);\n  }\n\n  /** @private */\n  _getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n    return (!(errorMessage && invalid ? errorId : undefined)).toString();\n  }\n\n  /** @private */\n  _dispatchIronResizeEventIfNeeded(sizePropertyName, value) {\n    const previousSizePropertyName = '__previous' + sizePropertyName;\n    if (this[previousSizePropertyName] !== undefined\n        && this[previousSizePropertyName] !== value) {\n      this.dispatchEvent(\n        new CustomEvent('iron-resize', {bubbles: true})\n      );\n    }\n\n    this[previousSizePropertyName] = value;\n  }\n\n  /** @private */\n  __observeOffsetHeight() {\n    this.__observeOffsetHeightDebouncer = Debouncer.debounce(\n      this.__observeOffsetHeightDebouncer,\n      animationFrame, () => {\n        this._dispatchIronResizeEventIfNeeded('Height', this.offsetHeight);\n      });\n  }\n\n  /**\n   * @param {string} prop\n   * @param {string} oldVal\n   * @param {string} newVal\n   * @protected\n   */\n  attributeChangedCallback(prop, oldVal, newVal) {\n    super.attributeChangedCallback(prop, oldVal, newVal);\n    // Needed until Edge has CSS Custom Properties (present in Edge Preview)\n    /* istanbul ignore if */\n    if (!(window.ShadyCSS && window.ShadyCSS.nativeCss) &&\n      /^(focused|focus-ring|invalid|disabled|placeholder|has-value)$/.test(prop)) {\n      this.updateStyles();\n    }\n\n    // Safari has an issue with repainting shadow root element styles when a host attribute changes.\n    // Need this workaround (toggle any inline css property on and off) until the issue gets fixed.\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    /* istanbul ignore if */\n    if (isSafari && this.root) {\n      const WEBKIT_PROPERTY = '-webkit-backface-visibility';\n      this.root.querySelectorAll('*').forEach(el => {\n        el.style[WEBKIT_PROPERTY] = 'visible';\n        el.style[WEBKIT_PROPERTY] = '';\n      });\n    }\n  }\n\n  // Workaround for https://github.com/Polymer/polymer/issues/5259\n  get __data() {\n    return this.__dataValue || {};\n  }\n\n  set __data(value) {\n    this.__dataValue = value;\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n\n  /**\n   * Fired when the value is changed by the user: on every typing keystroke,\n   * and the value is cleared using the clear button.\n   *\n   * @event input\n   */\n\n  /**\n   * Fired when the size of the element changes.\n   *\n   * @event iron-resize\n   */\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { TextFieldMixin } from './vaadin-text-field-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-text-field>` is a Web Component for text field control in forms.\n *\n * ```html\n * <vaadin-text-field label=\"First Name\">\n * </vaadin-text-field>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-field>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-field label=\"Email address\">\n *   <div slot=\"prefix\">Sent to:</div>\n *   <div slot=\"suffix\">@vaadin.com</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property | Description | Default\n * ----------------|-------------|-------------\n * `--vaadin-text-field-default-width` | Set the default width of the input field | `12em`\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `has-helper` | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message | :host\n * `invalid` | Set when the element is invalid | :host\n * `input-prevented` | Temporarily set when invalid input is prevented | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes TextFieldMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @demo demo/index.html\n */\nclass TextFieldElement extends\n  ElementMixin(\n    TextFieldMixin(\n      ControlStateMixin(\n        ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style include=\"vaadin-text-field-shared-styles\">\n      /* polymer-cli linter breaks with empty line */\n    </style>\n\n    <div class=\"vaadin-text-field-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\" id=\"[[_inputId]]\">\n\n        <slot name=\"prefix\"></slot>\n\n        <slot name=\"input\">\n          <input part=\"value\">\n        </slot>\n\n        <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label\\$=\"[[i18n.clear]]\"></div>\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"helper-text\" on-click=\"focus\" id=\"[[_helperTextId]]\">\n        <slot name=\"helper\">[[helperText]]</slot>\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-text-field';\n  }\n\n  static get version() {\n    return '2.8.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Identifies a list of pre-defined options to suggest to the user.\n       * The value must be the id of a <datalist> element in the same document.\n       */\n      list: {\n        type: String\n      },\n\n      /**\n       * A regular expression that the value is checked against.\n       * The pattern must match the entire value, not just some subset.\n       */\n      pattern: {\n        type: String\n      },\n\n      /**\n       * The text usually displayed in a tooltip popup when the mouse is over the field.\n       * @type {string}\n       */\n      title: {\n        type: String\n      }\n    };\n  }\n}\n\ncustomElements.define(TextFieldElement.is, TextFieldElement);\n\nexport { TextFieldElement };\n","import { DomModule } from '@polymer/polymer/lib/elements/dom-module.js';\nimport { ThemePropertyMixin } from './vaadin-theme-property-mixin.js';\n\n/**\n * @polymerMixin\n * @mixes ThemePropertyMixin\n */\nexport const ThemableMixin = superClass => class VaadinThemableMixin extends ThemePropertyMixin(superClass) {\n\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    const template = this.prototype._template;\n\n    const hasOwnTemplate = this.template && this.template.parentElement && this.template.parentElement.id === this.is;\n    const inheritedTemplate = Object.getPrototypeOf(this.prototype)._template;\n    if (inheritedTemplate && !hasOwnTemplate) {\n      // The element doesn't define its own template -> include the theme modules from the inherited template\n      Array.from(inheritedTemplate.content.querySelectorAll('style[include]')).forEach(s => {\n        this._includeStyle(s.getAttribute('include'), template);\n      });\n    }\n\n    this._includeMatchingThemes(template);\n  }\n\n  /** @private */\n  static _includeMatchingThemes(template) {\n    const domModule = DomModule;\n    const modules = domModule.prototype.modules;\n\n    let hasThemes = false;\n    const defaultModuleName = this.is + '-default-theme';\n\n    Object.keys(modules)\n      .sort((moduleNameA, moduleNameB) => {\n        const vaadinA = moduleNameA.indexOf('vaadin-') === 0;\n        const vaadinB = moduleNameB.indexOf('vaadin-') === 0;\n\n        const vaadinThemePrefixes = ['lumo-', 'material-'];\n        const vaadinThemeA = vaadinThemePrefixes.filter(prefix => moduleNameA.indexOf(prefix) === 0).length > 0;\n        const vaadinThemeB = vaadinThemePrefixes.filter(prefix => moduleNameB.indexOf(prefix) === 0).length > 0;\n\n        if (vaadinA !== vaadinB) {\n          // Include vaadin core styles first\n          return vaadinA ? -1 : 1;\n        } else if (vaadinThemeA !== vaadinThemeB) {\n          // Include vaadin theme styles after that\n          return vaadinThemeA ? -1 : 1;\n        } else {\n          // Lastly include custom styles so they override all vaadin styles\n          return 0;\n        }\n      })\n      .forEach(moduleName => {\n        if (moduleName !== defaultModuleName) {\n          const themeFor = modules[moduleName].getAttribute('theme-for');\n          if (themeFor) {\n            themeFor.split(' ').forEach(themeForToken => {\n              if (new RegExp('^' + themeForToken.split('*').join('.*') + '$').test(this.is)) {\n                hasThemes = true;\n                this._includeStyle(moduleName, template);\n              }\n            });\n          }\n        }\n      });\n\n    if (!hasThemes && modules[defaultModuleName]) {\n      // No theme modules found, include the default module if it exists\n      this._includeStyle(defaultModuleName, template);\n    }\n  }\n\n  /** @private */\n  static _includeStyle(moduleName, template) {\n    if (template && !template.content.querySelector(`style[include=\"${moduleName}\"]`)) {\n      const styleEl = document.createElement('style');\n      styleEl.setAttribute('include', moduleName);\n      template.content.appendChild(styleEl);\n    }\n  }\n\n};\n","/**\n * @polymerMixin\n */\nexport const ThemePropertyMixin = superClass => class VaadinThemePropertyMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Helper property with theme attribute value facilitating propagation\n       * in shadow DOM.\n       *\n       * Enables the component implementation to propagate the `theme`\n       * attribute value to the subcomponents in Shadow DOM by binding\n       * the subcomponent’s \"theme\" attribute to the `theme` property of\n       * the host.\n       *\n       * **NOTE:** Extending the mixin only provides the property for binding,\n       * and does not make the propagation alone.\n       *\n       * See [Theme Attribute and Subcomponents](https://github.com/vaadin/vaadin-themable-mixin/wiki/5.-Theme-Attribute-and-Subcomponents).\n       * page for more information.\n       *\n       * @protected\n       */\n      theme: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (name === 'theme') {\n      this._setTheme(newValue);\n    }\n  }\n};\n","/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n","export * from './vaadin-usage-statistics-collect.js';\n","export default \"<h1 class=\\\"avl-container-start\\\">{{ 'VizBoxStarterKit.WelcomeToTheAVLWebStarterKit' |  translate }}</h1>\\r\\n<p>{{ 'VizBoxStarterKit.AVLWebStarterKitIsApplicationExample' | translate }}</p>\\r\\n<p>{{ 'VizBoxStarterKit.VizBoxPlatformIsDesignedToBringYouUpToSpeed' | translate }}</p>\\r\\n\\r\\n<div\\r\\n fxLayout=\\\"row\\\"\\r\\n fxLayoutAlign=\\\"start stretch\\\"\\r\\n [fxLayoutGap]=\\\"selectedPet ? '10px' : '0px'\\\">\\r\\n\\r\\n <viz-pets\\r\\n   [fxFlex]=\\\"selectedPet ? 70 : 100\\\"\\r\\n   (selectedPetChanged)=\\\"selectedPet = $event\\\"></viz-pets>\\r\\n  \\r\\n <viz-pet-detail\\r\\n   [fxFlex]=\\\"selectedPet ? 30 : 0\\\"\\r\\n   [pet]=\\\"selectedPet\\\"></viz-pet-detail>\\r\\n</div>\\r\\n\";","export default \"<div style=\\\"margin-top: 56px;\\\">\\r\\n  <avl-card *ngIf=\\\"pet\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" fxFill>\\r\\n    <h1 slot=\\\"title\\\">{{ pet.name }}</h1>\\r\\n    <div slot=\\\"content\\\">\\r\\n      <div fxLayout=\\\"row\\\" class=\\\"property\\\">\\r\\n        <div fxFlex=\\\"20\\\" class=\\\"label\\\">{{ 'VizBoxStarterKit.Status' | translate }}</div>\\r\\n        <div fxFlex class=\\\"value\\\">{{ pet.status }}</div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" class=\\\"property\\\">\\r\\n        <div fxFlex=\\\"20\\\" class=\\\"label\\\">{{ 'VizBoxStarterKit.Tags' | translate }}</div>\\r\\n        <div fxFlex class=\\\"value\\\">\\r\\n          <ng-container *ngFor=\\\"let tag of pet.tags; let isLast = last\\\">\\r\\n            {{ tag.name }}{{ isLast ? '' : ', ' }}\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" class=\\\"property\\\">\\r\\n        <div fxFlex=\\\"20\\\" class=\\\"label\\\">{{ 'VizBoxStarterKit.Photos' | translate }}</div>\\r\\n        <div fxFlex class=\\\"value\\\">\\r\\n          <ng-container *ngFor=\\\"let photo of petPhotos\\\">\\r\\n            <img *ngIf=\\\"photo.visible; else loading\\\" [src]=\\\"photo.url\\\"  style=\\\"width: 200px;\\\"/>\\r\\n\\r\\n            <ng-template #loading>\\r\\n              <div class=\\\"photo-loading-indicator\\\">\\r\\n                {{ 'VizBoxStarterKit.Loading...' | translate }}\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </avl-card>\\r\\n</div>\";","export default \"<avl-dialog class=\\\"petDialog\\\" id=\\\"dialog\\\"\\r\\n  [(open)]=\\\"open\\\"\\r\\n  (openChange)=\\\"dialogOpen($event)\\\">\\r\\n\\r\\n  <ng-template #content>\\r\\n  <avl-dialog-header *ngIf=\\\"edit; else newPetBlock\\\">\\r\\n    {{ 'VizBoxStarterKit.EditPet' | translate }}\\r\\n  </avl-dialog-header>\\r\\n  <ng-template #newPetBlock>\\r\\n    <avl-dialog-header>\\r\\n      {{ 'VizBoxStarterKit.NewPet' | translate }}\\r\\n    </avl-dialog-header>\\r\\n  </ng-template>\\r\\n  <avl-dialog-content>\\r\\n  <form #petForm=\\\"ngForm\\\">\\r\\n    <avl-textfield label=\\\"{{ 'VizBoxStarterKit.Name' | translate }}\\\"\\r\\n      [(ngModel)]=\\\"dialogPet.name\\\"\\r\\n      name=\\\"name\\\"\\r\\n      #name=\\\"ngModel\\\" required></avl-textfield>\\r\\n\\r\\n    <avl-dropdown label=\\\"Status\\\" [items]=\\\"statusOptions\\\"\\r\\n      [(ngModel)]=\\\"dialogPet.status\\\"\\r\\n      name=\\\"status\\\"\\r\\n      #status=\\\"ngModel\\\" required>\\r\\n    </avl-dropdown>\\r\\n\\r\\n    <avl-upload accept=\\\".png,.jpg\\\" [target]=\\\"uploadPath\\\"\\r\\n      (uploadComplete)=\\\"onFileUploadComplete($event)\\\"\\r\\n      (uploadStart)=\\\"onFileUploadStarted($event)\\\"\\r\\n      (menuItemClicked)=\\\"onFileMenuItemClicked($event)\\\"\\r\\n      [(ngModel)]=\\\"uploadedFiles\\\" name=\\\"upload\\\"\\r\\n    ></avl-upload>\\r\\n  </form>\\r\\n</avl-dialog-content>\\r\\n      <avl-dialog-footer>\\r\\n        <avl-button class=\\\"cancelButton\\\" (click)=\\\"closeDialog()\\\">\\r\\n          {{ 'VizBoxStarterKit.Cancel' | translate }}\\r\\n        </avl-button>\\r\\n    \\r\\n        <avl-button\\r\\n          id=\\\"save-button\\\"\\r\\n          (click)=\\\"savePet(petForm.form.valid)\\\"\\r\\n          [disabled]=\\\"filesUploading || !petForm.form.valid\\\">\\r\\n          {{ 'VizBoxStarterKit.Save' | translate }}\\r\\n        </avl-button>\\r\\n      </avl-dialog-footer>\\r\\n</ng-template>\\r\\n</avl-dialog>\\r\\n\";","export default \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" fxFill>\\r\\n\\r\\n  <div class=\\\"action-bar\\\">\\r\\n    <h3 class=\\\"action-title\\\">{{ 'VizBoxStarterKit.PetsInStore' | translate }}</h3>\\r\\n    <div class=\\\"action-buttons\\\">\\r\\n      <avl-icon-button id=\\\"add-button\\\" (click)=\\\"addPet()\\\" icon=\\\"add\\\"></avl-icon-button>\\r\\n      <avl-icon-button id=\\\"edit-button\\\" (click)=\\\"editPet(selectedPet)\\\" [disabled]=\\\"!selectedPet\\\" icon=\\\"create\\\"></avl-icon-button>\\r\\n      <avl-icon-button id=\\\"delete-button\\\" (click)=\\\"deletePet()\\\" accent [disabled]=\\\"!selectedPet\\\" icon=\\\"delete\\\" class=\\\"action-secondary\\\"></avl-icon-button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <avl-datatable #petsTable single-select (selectedValueChange)=\\\"petSelectionChanged($event)\\\" [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n    [dataProvider]=\\\"petStoreProvider\\\" pagination page-size=\\\"6\\\" column-selector></avl-datatable>\\r\\n</div>\\r\\n\\r\\n<viz-pet-dialog [open]=\\\"addEditDialogOpen\\\" [edit]=\\\"isEditing\\\" [pet]=\\\"selectedPet\\\" (save)=\\\"savePet($event)\\\" (cancel)=\\\"addEditDialogOpen = false\\\"></viz-pet-dialog>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { IntroComponent } from './intro.component';\r\nimport { AuthGuard } from '../../core/guards/auth.guard';\r\n\r\nconst introRoutes: Routes = [{ path: '', component: IntroComponent, canActivate: [AuthGuard] }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(introRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IntroRoutingModule {}\r\n","export default \"avl-card{\\r\\n    display: block;\\r\\n}\\r\\n.card{\\r\\n    margin: 24px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnRyby9pbnRyby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW50cm8vaW50cm8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImF2bC1jYXJke1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLmNhcmR7XHJcbiAgICBtYXJnaW46IDI0cHg7XHJcbn0iXX0= */\";","import { Component } from '@angular/core';\r\n\r\nimport { Pet } from 'pet-store';\r\n\r\n@Component({\r\n  selector: 'viz-intro',\r\n  templateUrl: './intro.component.html',\r\n  styleUrls: ['./intro.component.css']\r\n})\r\nexport class IntroComponent {\r\n  selectedPet: Pet;\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { IntroComponent } from './intro.component';\r\nimport { IntroRoutingModule } from './intro-routing.module';\r\nimport { PetsComponent } from './pets/pets.component';\r\nimport { PetDialogComponent } from './pet-dialog/pet-dialog.component';\r\nimport { PetDetailComponent } from './pet-detail/pet-detail.component';\r\nimport { UPLOAD_SERVICE, UploadService } from '@avl-controls/ng-binders';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, FormsModule, IntroRoutingModule],\r\n  declarations: [IntroComponent, PetsComponent, PetDetailComponent, PetDialogComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  exports: [IntroRoutingModule],\r\n  providers: [\r\n    { provide: UPLOAD_SERVICE, useClass: UploadService }\r\n  ]\r\n})\r\nexport class IntroModule {}\r\n","export default \".property {\\r\\n margin-top: 10px;\\r\\n}\\r\\n\\r\\n.property > .label {\\r\\n  color: #9C9C9C;\\r\\n}\\r\\n\\r\\n.photo-loading-indicator {\\r\\n  background-color: #CCCCCC;\\r\\n  width: 200px;\\r\\n  height: 200px;\\r\\n  line-height: 200px;\\r\\n  text-align: center;\\r\\n  margin-bottom: 4px;\\r\\n}\\r\\n\\r\\nh1{\\r\\n  font-size: 24px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnRyby9wZXQtZGV0YWlsL3BldC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2ludHJvL3BldC1kZXRhaWwvcGV0LWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb3BlcnR5IHtcclxuIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5wcm9wZXJ0eSA+IC5sYWJlbCB7XHJcbiAgY29sb3I6ICM5QzlDOUM7XHJcbn1cclxuXHJcbi5waG90by1sb2FkaW5nLWluZGljYXRvciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0NDQ0NDQztcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxuICBsaW5lLWhlaWdodDogMjAwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDRweDtcclxufVxyXG5cclxuaDF7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG59XHJcbiJdfQ== */\";","import { Component, Input, OnChanges, SimpleChanges, Inject } from '@angular/core';\r\n\r\nimport { Pet } from 'pet-store';\r\nimport { PetPhoto } from './pet-photo';\r\nimport { UPLOAD_SERVICE } from '@avl-controls/ng-binders';\r\nimport { AvlUploadService } from '@avl-controls/interfaces';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nimport '@avl-controls/core/dist/avl-card/avl-card';\r\n\r\n@Component({\r\n  selector: 'viz-pet-detail',\r\n  templateUrl: './pet-detail.component.html',\r\n  styleUrls: ['./pet-detail.component.css']\r\n})\r\nexport class PetDetailComponent implements OnChanges {\r\n  @Input() pet: Pet;\r\n\r\n  petPhotos: PetPhoto[];\r\n\r\n  constructor(@Inject(UPLOAD_SERVICE) private uploadService: AvlUploadService, private sanitizer: DomSanitizer) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const pet = changes.pet;\r\n    if (pet && pet.currentValue && pet.currentValue.photoUrls) {\r\n      this.preloadPhotos();\r\n    }\r\n  }\r\n\r\n  private preloadPhotos() {\r\n    this.petPhotos = this.pet.photoUrls.map((url, i) => {\r\n      const nonCachedPhotoUrl = `${url}?${this.pet.id}${i}`;\r\n      const img = new Image();\r\n      img.src = nonCachedPhotoUrl;\r\n\r\n      let petImage = new PetPhoto(nonCachedPhotoUrl);\r\n      img.onload = () => {\r\n        petImage.visible = true;\r\n        URL.revokeObjectURL(petImage.url);\r\n      };\r\n      img.onerror = () => {\r\n        this.uploadService.downloadFile(url)\r\n          .then((data) => {\r\n            const url = URL.createObjectURL(data);\r\n            img.src = url;\r\n            petImage.url = <string>this.sanitizer.bypassSecurityTrustUrl(url);\r\n          });\r\n      };\r\n      return petImage;\r\n    });\r\n  }\r\n}\r\n","export class PetPhoto {\r\n  visible = false;\r\n  constructor(public url: string) {}\r\n}\r\n","export default \"avl-textfield {\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnRyby9wZXQtZGlhbG9nL3BldC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW50cm8vcGV0LWRpYWxvZy9wZXQtZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhdmwtdGV4dGZpZWxkIHtcclxuICB3aWR0aDogODAlO1xyXG59XHJcbiJdfQ== */\";","import { Component, Input, EventEmitter, Output, Inject } from '@angular/core';\r\nimport { Pet, BASE_PATH } from 'pet-store';\r\nimport { AvlFile } from '@avl-controls/interfaces';\r\nimport { AvlUploadMenuItemClickedEventDetail } from '@avl-controls/core/dist/avl-upload/avl-upload.api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport '@avl-controls/core/dist/avl-textfield/avl-textfield';\r\nimport '@avl-controls/core/dist/avl-dropdown/avl-dropdown';\r\nimport '@avl-controls/core/dist/avl-upload/avl-upload';\r\nimport '@avl-controls/core/dist/avl-button/avl-button';\r\n\r\n@Component({\r\n  selector: 'viz-pet-dialog',\r\n  templateUrl: './pet-dialog.component.html',\r\n  styleUrls: ['./pet-dialog.component.css']\r\n})\r\nexport class PetDialogComponent {\r\n  @Input() open = false;\r\n  @Input() edit = false;\r\n  @Input() pet: Pet;\r\n\r\n  @Output() cancel = new EventEmitter<void>();\r\n  @Output() save = new EventEmitter<Pet>();\r\n\r\n  statusOptions = this.getStatusOptions();\r\n  dialogPet = this.getNewPet();\r\n\r\n  uploadPath: string;\r\n\r\n  uploadedFiles: AvlFile[] = [];\r\n\r\n  constructor(private translateService: TranslateService, @Inject(BASE_PATH) basePath: string) {\r\n    this.uploadPath = `${basePath}/v2/Upload`;\r\n  }\r\n\r\n  private numFilesUploading = 0;\r\n\r\n  dialogOpen(open) {\r\n    if (open) {\r\n      this.dialogPet = this.edit ? Object.assign({}, this.pet) : this.getNewPet();\r\n      if(this.edit) {\r\n        this.uploadedFiles = this.dialogPet.photoUrls.map( (url, index) => {\r\n          const name = url.split('_', 2)[1] || `file_${index}.jpg`;\r\n          return {\r\n            name: name,\r\n            status: 'complete',\r\n            downloadUrl: url\r\n          } as AvlFile;\r\n        });\r\n      }\r\n    } else {\r\n      this.closeDialog();\r\n      this.uploadedFiles = [];\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.cancel.emit();\r\n    this.open = false;\r\n  }\r\n\r\n  public onFileUploadComplete(file: AvlFile) {\r\n    this.dialogPet.photoUrls.push(file.downloadUrl);\r\n    this.numFilesUploading -= 1;\r\n  }\r\n\r\n  public onFileMenuItemClicked(detail: AvlUploadMenuItemClickedEventDetail) {\r\n    const photoUrls = this.dialogPet.photoUrls;\r\n    if (detail.item.label === this.translateService.instant('VizBoxStarterKit.Remove')) {\r\n      const index = photoUrls.indexOf(detail.value.downloadUrl);\r\n      if (index !== -1) {\r\n        photoUrls.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  public onFileUploadStarted(file: AvlFile) {\r\n    this.numFilesUploading += 1;\r\n  }\r\n\r\n  public get filesUploading(): boolean {\r\n    return this.numFilesUploading > 0;\r\n  }\r\n\r\n  savePet(formValid: boolean) {\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    this.save.emit(this.dialogPet);\r\n    this.open = false;\r\n  }\r\n\r\n  private getNewPet(): Pet {\r\n    // Pet interface was generated from Swagger File\r\n    // -> create a Pet class otherwise.\r\n    return {\r\n      name: '',\r\n      status: this.statusOptions[0].value,\r\n      photoUrls: []\r\n    };\r\n  }\r\n\r\n  private getStatusOptions() {\r\n    // Status was generated from Swagger File as object/string\r\n    // -> create an enum otherwise.\r\n    return Object.keys(Pet.StatusEnum).map(key => {\r\n      const enumLabel = Pet.StatusEnum[key];\r\n      let label;\r\n      switch (enumLabel) {\r\n        case 'available':\r\n          label = this.translateService.instant('VizBoxStarterKit.Available');\r\n          break;\r\n        case 'pending':\r\n          label = this.translateService.instant('VizBoxStarterKit.Pending');\r\n          break;\r\n        case 'sold':\r\n          label = this.translateService.instant('VizBoxStarterKit.Sold');\r\n          break;\r\n      }\r\n      return { value: enumLabel, label: label };\r\n    });\r\n  }\r\n}\r\n","export default \".action-bar {\\r\\n  margin-top: 8px;\\r\\n  margin-bottom: 8px;\\r\\n  width: 100%;\\r\\n  vertical-align: bottom;\\r\\n}\\r\\n\\r\\n.action-title {\\r\\n  float: left;\\r\\n  text-align: left;\\r\\n  /* font-size: 24px; */\\r\\n  margin-top: 8px;\\r\\n  margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.action-buttons {\\r\\n  float: right;\\r\\n  text-align: left;\\r\\n  --avl-icon-button-color: var(--avl-secondary-color);\\r\\n}\\r\\n\\r\\n.action-secondary {\\r\\n  --avl-icon-button-color: var(--avl-secondary-color);\\r\\n}\\r\\n\\r\\navl-datatable {\\r\\n  height: 506px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnRyby9wZXRzL3BldHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLG1EQUFtRDtBQUNyRDs7QUFFQTtFQUNFLG1EQUFtRDtBQUNyRDs7QUFFQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW50cm8vcGV0cy9wZXRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uLWJhciB7XHJcbiAgbWFyZ2luLXRvcDogOHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDhweDtcclxuICB3aWR0aDogMTAwJTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG59XHJcblxyXG4uYWN0aW9uLXRpdGxlIHtcclxuICBmbG9hdDogbGVmdDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIC8qIGZvbnQtc2l6ZTogMjRweDsgKi9cclxuICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG59XHJcblxyXG4uYWN0aW9uLWJ1dHRvbnMge1xyXG4gIGZsb2F0OiByaWdodDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIC0tYXZsLWljb24tYnV0dG9uLWNvbG9yOiB2YXIoLS1hdmwtc2Vjb25kYXJ5LWNvbG9yKTtcclxufVxyXG5cclxuLmFjdGlvbi1zZWNvbmRhcnkge1xyXG4gIC0tYXZsLWljb24tYnV0dG9uLWNvbG9yOiB2YXIoLS1hdmwtc2Vjb25kYXJ5LWNvbG9yKTtcclxufVxyXG5cclxuYXZsLWRhdGF0YWJsZSB7XHJcbiAgaGVpZ2h0OiA1MDZweDtcclxufVxyXG4iXX0= */\";","import { Component, ViewChild, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  LeafColumn,\r\n  ColumnType,\r\n  Column\r\n} from '@avl-controls/datatable/dist/avl-datatable/column-definitions';\r\nimport {\r\n  AvlDatatable\r\n} from '@avl-controls/datatable/dist/avl-datatable/avl-datatable.api';\r\nimport { DataProvider, DataProviderResponse, TableDataRequestParams } from '@avl-controls/interfaces';\r\n\r\nimport { PetApiService, Pet, InlineResponse200 } from 'pet-store';\r\nimport { SortOrder } from './sort-order';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport '@avl-controls/core/dist/avl-icon-button/avl-icon-button';\r\nimport '@avl-controls/datatable/dist/avl-datatable/avl-datatable';\r\n\r\n@Component({\r\n  selector: 'viz-pets',\r\n  templateUrl: './pets.component.html',\r\n  styleUrls: ['./pets.component.css']\r\n})\r\nexport class PetsComponent {\r\n  @Output() selectedPetChanged = new EventEmitter<Pet>();\r\n\r\n  @ViewChild('petsTable') petsTableElement: ElementRef;\r\n\r\n  columnDefinitions: Column[] = [\r\n    new LeafColumn(\r\n      this.translateService.instant('VizBoxStarterKit.ID'), 'id', ColumnType.Text,\r\n        false, false, 1, undefined, undefined, undefined, undefined, undefined, true\r\n    ),\r\n    new LeafColumn(this.translateService.instant('VizBoxStarterKit.Name'), 'name', ColumnType.Text, true, true, 3, '40px'),\r\n    new LeafColumn(this.translateService.instant('VizBoxStarterKit.Status'), 'status', ColumnType.Text, true, false, 3, '40px'),\r\n    new LeafColumn(\r\n      this.translateService.instant('VizBoxStarterKit.Category'),\r\n      'category.name', ColumnType.Text, true, false, 3, '40px', undefined, undefined, undefined, undefined, true\r\n    )\r\n  ];\r\n  selectedPet: Pet;\r\n  isEditing = false;\r\n  addEditDialogOpen = false;\r\n\r\n  constructor(private petService: PetApiService, private translateService: TranslateService) {}\r\n\r\n  petStoreProvider: DataProvider = (params: TableDataRequestParams) => this.getPetStoreProvider(params);\r\n\r\n  petSelectionChanged(pet: Pet) {\r\n    this.selectedPetChanged.emit(pet);\r\n    this.selectedPet = pet;\r\n  }\r\n\r\n  addPet() {\r\n    this.addEditDialogOpen = true;\r\n    this.isEditing = false;\r\n  }\r\n\r\n  editPet(pet: Pet) {\r\n    this.selectedPet = pet;\r\n    this.isEditing = true;\r\n    this.addEditDialogOpen = true;\r\n  }\r\n\r\n  deletePet() {\r\n    const petsTable = this.petsTableElement.nativeElement as AvlDatatable;\r\n    this.petService.deletePet(this.selectedPet.id).subscribe(res => petsTable.clearCache());\r\n\r\n    delete this.selectedPet;\r\n    this.selectedPetChanged.emit(undefined);\r\n  }\r\n\r\n  savePet(pet: Pet) {\r\n    this.addEditDialogOpen = false;\r\n    this.selectedPetChanged.emit(pet);\r\n\r\n    const petsTable = this.petsTableElement.nativeElement as AvlDatatable;\r\n\r\n    if (this.isEditing) {\r\n      this.petService.updatePet(pet).subscribe(res => petsTable.clearCache());\r\n    } else {\r\n      this.petService.addPet(pet).subscribe(res => petsTable.clearCache());\r\n    }\r\n  }\r\n\r\n  private getPetStoreProvider(params: TableDataRequestParams) {\r\n    return new Promise<DataProviderResponse>((resolve, reject) => {\r\n      let observable: Observable<InlineResponse200>;\r\n\r\n      const sorting = params.sortOrders.find(f => f.path === 'name' || f.path === 'status');\r\n      let sortBy, sortOrder;\r\n      if (sorting) {\r\n        sortBy = sorting.path;\r\n        sortOrder = sorting.ascending ? SortOrder.Ascending : SortOrder.Descending;\r\n      }\r\n\r\n      const nameFilter = params.filters.get('name');\r\n      observable = this.petService.getPets(\r\n        nameFilter,\r\n        undefined,\r\n        undefined,\r\n        params.page * params.pageSize,\r\n        params.pageSize,\r\n        sortBy,\r\n        sortOrder\r\n      );\r\n\r\n      observable.subscribe(\r\n        response => {\r\n          setTimeout(() => {\r\n            resolve({ rows: response.result, totalRows: response.size });\r\n          }, 0);\r\n        },\r\n        error => this.handleError(error)\r\n      );\r\n    });\r\n  }\r\n\r\n  private handleError(error) {\r\n    const petsTable = this.petsTableElement.nativeElement as AvlDatatable;\r\n    petsTable.data = [{ name: this.translateService.instant('VizBoxStarterKit.ConnectionFailedToPetstoreServer') }];\r\n  }\r\n}\r\n","export enum SortOrder {\r\n  Ascending = 'asc',\r\n  Descending = 'desc'\r\n}\r\n","export * from './petApi.service';\r\nimport { PetApiService } from './petApi.service';\r\nexport const APIS = [PetApiService];\r\n","export * from './api/api';\r\nexport * from './model/models';\r\nexport * from './variables';\r\nexport * from './configuration';\r\nexport * from './api.module';\r\n","export * from './category';\r\nexport * from './inlineResponse200';\r\nexport * from './pet';\r\nexport * from './tag';\r\n","/**\r\n * Swagger Petstore\r\n * Swagger Petstore (ASP.NET Core 2.0)\r\n *\r\n * OpenAPI spec version: 1.0.0\r\n * Contact: apiteam@swagger.io\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\nimport { Category } from './category';\r\nimport { Tag } from './tag';\r\nimport { timestamp } from 'rxjs/operators';\r\n\r\n/**\r\n *\r\n */\r\nexport interface Pet {\r\n  /**\r\n   * Gets or Sets Id\r\n   */\r\n  id?: number;\r\n  /**\r\n   * Gets or Sets Category\r\n   */\r\n  category?: Category;\r\n  /**\r\n   * Gets or Sets Name\r\n   */\r\n  name: string;\r\n  /**\r\n   * Gets or Sets PhotoUrls\r\n   */\r\n  photoUrls: Array<string>;\r\n  /**\r\n   * Gets or Sets Tags\r\n   */\r\n  tags?: Array<Tag>;\r\n  /**\r\n   * pet status in the store\r\n   */\r\n  status?: Pet.StatusEnum;\r\n}\r\nexport namespace Pet {\r\n  export type StatusEnum = 'available' | 'pending' | 'sold';\r\n  export const StatusEnum = {\r\n    Available: 'available' as StatusEnum,\r\n    Pending: 'pending' as StatusEnum,\r\n    Sold: 'sold' as StatusEnum\r\n  };\r\n}\r\n"],"sourceRoot":"webpack:///"}